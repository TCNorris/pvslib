(asin (asin_TCC1 0
       (asin_TCC1-2 "" 3790092288
        ("" (skolem 1 ("x"))
         (("" (flatten) (("" (typepred "x") (("" (assert) nil nil)) nil))
           nil))
         nil)
        nil shostak
        (asin subtype "number_fields./((number_fields.-)(pi_def.pi), 2)"
              "real_abs_le_pi2"))
       (asin_TCC1-1 nil 3262199128
        ("" (skolem 1 ("x"))
         (("" (flatten)
           (("" (typepred "x")
             (("" (expand "abs")
               (("" (assert)
                 ((""
                   (lemma "le_times_le_pos"
                    ("nnx" "-x" "y" "1" "nnz" "-x" "w" "1"))
                   (("" (assert) nil nil)) nil))
                 nil))
               nil))
             nil))
           nil))
         nil)
        ((pi_bound name-judgement
          "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def nil)
         (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
          nil)
         (nzreal_div_nzreal_is_nzreal application-judgement "nzreal"
          real_types nil)
         (minus_odd_is_odd application-judgement "odd_int" integers nil)
         (real_le_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (number nonempty-type-decl nil numbers nil)
         (number_field_pred const-decl "[number -> boolean]" number_fields
          nil)
         (number_field nonempty-type-from-decl nil number_fields nil)
         (real_pred const-decl "[number_field -> boolean]" reals nil)
         (real nonempty-type-from-decl nil reals nil)
         (<= const-decl "bool" reals nil)
         (numfield nonempty-type-eq-decl nil number_fields nil)
         (- const-decl "[numfield -> numfield]" number_fields nil)
         (AND const-decl "[bool, bool -> bool]" booleans nil)
         (real_abs_le1 nonempty-type-eq-decl nil trig_types nil))
        shostak
        (asin subtype "number_fields./((number_fields.-)(pi_def.pi), 2)"
              "real_abs_le_pi2")))
      (asin_TCC2 0
       (asin_TCC2-2 "" 3790092288
        ("" (grind)
         (("" (lemma "sq_lt_abs" ("a" "-x!1" "b" "1")) (("" (grind) nil nil))
           nil))
         nil)
        nil shostak
        (asin subtype "(number_fields.-)(1, number_fields.*(asin.x, asin.x))"
              "nonneg_real"))
       (asin_TCC2-1 nil 3262199262
        ("" (grind)
         (("1" (lemma "sq_lt_abs" ("a" "-x!1" "b" "1"))
           (("1" (grind) nil nil)) nil)
          ("2" (rewrite "sq_rew")
           (("2" (lemma "sq_lt" ("nna" "x!1" "nnb" "1"))
             (("2" (grind) nil nil)) nil))
           nil))
         nil)
        ((minus_real_is_real application-judgement "real" reals nil)
         (sq_lt_abs formula-decl nil sq reals)
         (nzrat_abs_is_pos application-judgement "{r: posrat | r >= q}"
          real_defs nil)
         (nzint_abs_is_pos application-judgement "{j: posint | j >= i}"
          real_defs nil)
         (int_abs_is_nonneg application-judgement "{j: nonneg_int | j >= i}"
          real_defs nil)
         (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
              nil)
         (sq const-decl "nonneg_real" sq reals)
         (sq_nz_pos application-judgement "posreal" sq reals)
         (real_minus_real_is_real application-judgement "real" reals nil)
         (real_ge_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (real_le_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (number nonempty-type-decl nil numbers nil)
         (number_field_pred const-decl "[number -> boolean]" number_fields
          nil)
         (number_field nonempty-type-from-decl nil number_fields nil)
         (real_pred const-decl "[number_field -> boolean]" reals nil)
         (real nonempty-type-from-decl nil reals nil)
         (<= const-decl "bool" reals nil)
         (numfield nonempty-type-eq-decl nil number_fields nil)
         (- const-decl "[numfield -> numfield]" number_fields nil)
         (AND const-decl "[bool, bool -> bool]" booleans nil)
         (real_abs_le1 nonempty-type-eq-decl nil trig_types nil)
         (real_times_real_is_real application-judgement "real" reals nil))
        shostak
        (asin subtype "(number_fields.-)(1, number_fields.*(asin.x, asin.x))"
              "nonneg_real")))
      (asin_TCC3 0
       (asin_TCC3-2 "" 3790092289
        ("" (skolem 1 ("x"))
         (("" (flatten)
           (("" (typepred "x")
             (("" (case "x < 0")
               (("1" (assert)
                 (("1"
                   (lemma "lt_times_lt_pos1"
                    ("px" "-x" "y" "1" "nnz" "-x" "w" "1"))
                   (("1" (assert) nil nil)) nil))
                 nil)
                ("2" (assert)
                 (("2"
                   (lemma "lt_times_lt_pos1"
                    ("px" "x" "y" "1" "nnz" "x" "w" "1"))
                   (("2" (assert) nil nil)) nil))
                 nil))
               nil))
             nil))
           nil))
         nil)
        nil shostak
        (asin subtype
              "sqrt.sqrt((number_fields.-)(1, number_fields.*(asin.x, asin.x)))"
              "nznum"))
       (asin_TCC3-1 nil 3262199449
        ("" (skolem 1 ("x"))
         (("" (flatten)
           (("" (typepred "x")
             (("" (expand "abs")
               (("" (case "x < 0")
                 (("1" (assert)
                   (("1"
                     (lemma "lt_times_lt_pos1"
                      ("px" "-x" "y" "1" "nnz" "-x" "w" "1"))
                     (("1" (assert) nil nil)) nil))
                   nil)
                  ("2" (assert)
                   (("2"
                     (lemma "lt_times_lt_pos1"
                      ("px" "x" "y" "1" "nnz" "x" "w" "1"))
                     (("2" (assert) nil nil)) nil))
                   nil))
                 nil))
               nil))
             nil))
           nil))
         nil)
        ((< const-decl "bool" reals nil)
         (minus_real_is_real application-judgement "real" reals nil)
         (lt_times_lt_pos1 formula-decl nil real_props nil)
         (>= const-decl "bool" reals nil)
         (nonneg_real nonempty-type-eq-decl nil real_types nil)
         (> const-decl "bool" reals nil)
         (posreal nonempty-type-eq-decl nil real_types nil)
         (real_ge_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (real_gt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (real_le_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (real_minus_real_is_real application-judgement "real" reals nil)
         (boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (number nonempty-type-decl nil numbers nil)
         (number_field_pred const-decl "[number -> boolean]" number_fields
          nil)
         (number_field nonempty-type-from-decl nil number_fields nil)
         (real_pred const-decl "[number_field -> boolean]" reals nil)
         (real nonempty-type-from-decl nil reals nil)
         (<= const-decl "bool" reals nil)
         (numfield nonempty-type-eq-decl nil number_fields nil)
         (- const-decl "[numfield -> numfield]" number_fields nil)
         (AND const-decl "[bool, bool -> bool]" booleans nil)
         (real_abs_le1 nonempty-type-eq-decl nil trig_types nil)
         (real_times_real_is_real application-judgement "real" reals nil))
        shostak
        (asin subtype
              "sqrt.sqrt((number_fields.-)(1, number_fields.*(asin.x, asin.x)))"
              "nznum")))
      (asin_TCC4 0
       (asin_TCC4-2 "" 3790092289
        ("" (skolem 1 ("x"))
         (("" (flatten)
           (("" (typepred "x")
             (("" (assert)
               (("" (typepred "atan(x / sqrt(1 - x * x))")
                 (("" (assert) nil nil)) nil))
               nil))
             nil))
           nil))
         nil)
        nil shostak
        (asin subtype
              "atan.atan(number_fields./(asin.x, sqrt.sqrt((number_fields.-)(1, number_fields.*(asin.x, asin.x)))))"
              "real_abs_le_pi2"))
       (asin_TCC4-1 nil 3262199280
        ("" (skolem 1 ("x"))
         (("" (flatten)
           (("" (typepred "x")
             (("" (assert)
               (("" (typepred "atan(x / sqrt(1 - x * x))")
                 (("1" (assert) nil nil)
                  ("2" (lemma "sqrt_pos" ("px" "1-x*x"))
                   (("1" (assert) nil nil)
                    ("2" (hide 2)
                     (("2" (lemma "sq_lt_abs" ("a" "x" "b" "1"))
                       (("2" (grind) nil nil)) nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil))
           nil))
         nil)
        ((real_minus_real_is_real application-judgement "real" reals nil)
         (real_div_nzreal_is_real application-judgement "real" reals nil)
         (nzreal_div_nzreal_is_nzreal application-judgement "nzreal"
          real_types nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (real_le_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (posreal_div_posreal_is_posreal application-judgement "posreal"
          real_types nil)
         (real_ge_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (< const-decl "bool" reals nil)
         (/= const-decl "boolean" notequal nil)
         (nznum nonempty-type-eq-decl nil number_fields nil)
         (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
         (> const-decl "bool" reals nil)
         (= const-decl "[T, T -> boolean]" equalities nil)
         (cos const-decl "real" sincos_def nil)
         (pi const-decl "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}"
          pi_def nil)
         (real_abs_lt_pi2 nonempty-type-eq-decl nil trig_types nil)
         (tan_restrict const-decl "real" trig_basic nil)
         (atan const-decl "{x: real_abs_lt_pi2 | y = tan_restrict(x)}" atan
               nil)
         (nonneg_real nonempty-type-eq-decl nil real_types nil)
         (>= const-decl "bool" reals nil)
         (nnreal type-eq-decl nil real_types nil)
         (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
         (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (number nonempty-type-decl nil numbers nil)
         (number_field_pred const-decl "[number -> boolean]" number_fields
          nil)
         (number_field nonempty-type-from-decl nil number_fields nil)
         (real_pred const-decl "[number_field -> boolean]" reals nil)
         (real nonempty-type-from-decl nil reals nil)
         (<= const-decl "bool" reals nil)
         (numfield nonempty-type-eq-decl nil number_fields nil)
         (- const-decl "[numfield -> numfield]" number_fields nil)
         (AND const-decl "[bool, bool -> bool]" booleans nil)
         (real_abs_le1 nonempty-type-eq-decl nil trig_types nil)
         (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
          nil)
         (pi_bound name-judgement
          "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def nil)
         (real_times_real_is_real application-judgement "real" reals nil))
        shostak
        (asin subtype
              "atan.atan(number_fields./(asin.x, sqrt.sqrt((number_fields.-)(1, number_fields.*(asin.x, asin.x)))))"
              "real_abs_le_pi2")))
      (asin_TCC5 0
       (asin_TCC5-2 "" 3790092289
        ("" (skolem!)
         (("" (flatten) (("" (typepred "pi") (("" (assert) nil nil)) nil))
           nil))
         nil)
        nil shostak
        (asin subtype "number_fields./(pi_def.pi, 2)" "real_abs_le_pi2"))
       (asin_TCC5-1 nil 3262199369
        ("" (expand "abs")
         (("" (skolem!)
           (("" (flatten) (("" (typepred "pi") (("" (assert) nil nil)) nil))
             nil))
           nil))
         nil)
        ((minus_nzreal_is_nzreal application-judgement "nzreal" real_types
          nil)
         (nzreal_div_nzreal_is_nzreal application-judgement "nzreal"
          real_types nil)
         (minus_odd_is_odd application-judgement "odd_int" integers nil)
         (real_le_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (real_ge_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (posreal_div_posreal_is_posreal application-judgement "posreal"
          real_types nil)
         (cos_range application-judgement "real_abs_le1" sincos nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (real_gt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (pi_bound name-judgement
          "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def nil)
         (boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (number nonempty-type-decl nil numbers nil)
         (number_field_pred const-decl "[number -> boolean]" number_fields
          nil)
         (number_field nonempty-type-from-decl nil number_fields nil)
         (real_pred const-decl "[number_field -> boolean]" reals nil)
         (real nonempty-type-from-decl nil reals nil)
         (> const-decl "bool" reals nil)
         (AND const-decl "[bool, bool -> bool]" booleans nil)
         (< const-decl "bool" reals nil)
         (= const-decl "[T, T -> boolean]" equalities nil)
         (cos const-decl "real" sincos_def nil)
         (numfield nonempty-type-eq-decl nil number_fields nil)
         (/= const-decl "boolean" notequal nil)
         (nznum nonempty-type-eq-decl nil number_fields nil)
         (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
         (pi const-decl "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}"
          pi_def nil)
         (>= const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
         (nonneg_real nonempty-type-eq-decl nil real_types nil)
         (posreal nonempty-type-eq-decl nil real_types nil)
         (pi_lb_new const-decl "posreal" pi_def nil)
         (pi_ub_new const-decl "posreal" pi_def nil))
        shostak
        (asin subtype "number_fields./(pi_def.pi, 2)" "real_abs_le_pi2")))
      (asin_neg_restrict_TCC1 0
       (asin_neg_restrict_TCC1-2 "" 3790092289
        ("" (skolem!)
         (("" (typepred "nx!1")
           (("" (lemma "sq_le_abs" ("a" "-nx!1" "b" "1"))
             (("" (grind) nil nil)) nil))
           nil))
         nil)
        nil shostak
        (asin_neg_restrict subtype
         "(number_fields.-)(1, number_fields.*(asin.nx, asin.nx))"
         "nonneg_real"))
       (asin_neg_restrict_TCC1-1 nil 3262231650
        ("" (skolem!)
         (("" (typepred "nx!1")
           (("" (expand "abs")
             (("" (lemma "sq_le_abs" ("a" "-nx!1" "b" "1"))
               (("" (grind) nil nil)) nil))
             nil))
           nil))
         nil)
        ((< const-decl "bool" reals nil)
         (real_abs_le1 nonempty-type-eq-decl nil trig_types nil)
         (AND const-decl "[bool, bool -> bool]" booleans nil)
         (- const-decl "[numfield -> numfield]" number_fields nil)
         (numfield nonempty-type-eq-decl nil number_fields nil)
         (<= const-decl "bool" reals nil)
         (real nonempty-type-from-decl nil reals nil)
         (real_pred const-decl "[number_field -> boolean]" reals nil)
         (number_field nonempty-type-from-decl nil number_fields nil)
         (number_field_pred const-decl "[number -> boolean]" number_fields
          nil)
         (number nonempty-type-decl nil numbers nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (boolean nonempty-type-decl nil booleans nil)
         (real_le_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (real_times_real_is_real application-judgement "real" reals nil)
         (sq_nz_pos application-judgement "posreal" sq reals)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (int_abs_is_nonneg application-judgement "{j: nonneg_int | j >= i}"
          real_defs nil)
         (nzint_abs_is_pos application-judgement "{j: posint | j >= i}"
          real_defs nil)
         (nzrat_abs_is_pos application-judgement "{r: posrat | r >= q}"
          real_defs nil)
         (real_ge_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (real_minus_real_is_real application-judgement "real" reals nil)
         (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
              nil)
         (sq const-decl "nonneg_real" sq reals)
         (sq_le_abs formula-decl nil sq reals)
         (minus_real_is_real application-judgement "real" reals nil))
        shostak
        (asin_neg_restrict subtype
         "(number_fields.-)(1, number_fields.*(asin.nx, asin.nx))"
         "nonneg_real")))
      (asin_neg_restrict_TCC2 0
       (asin_neg_restrict_TCC2-1 nil 3262231879 ("" (grind) nil nil) nil
        shostak (asin_neg_restrict subtype "asin.nx" "nznum")))
      (asin_neg_restrict 0
       (asin_neg_restrict-1 nil 3262251992
        ("" (skolem 1 ("nx"))
         (("" (typepred "nx")
           (("" (expand "<=")
             (("" (expand "asin")
               (("" (split -1)
                 (("1" (assert)
                   (("1"
                     (lemma "both_sides_times_neg_lt1"
                      ("nz" "-1" "x" "nx" "y" "-1"))
                     (("1"
                       (lemma "lt_times_lt_neg1"
                        ("x" "-1" "ny" "nx" "z" "-1" "npw" "nx"))
                       (("1" (assert)
                         (("1" (lemma "sqrt_lt" ("nny" "0" "nnz" "1-nx*nx"))
                           (("1" (rewrite "sqrt_0" -1)
                             (("1"
                               (lemma "atan_inv_neg"
                                ("nx" "sqrt(1 - nx * nx) / nx"))
                               (("1"
                                 (lemma "div_div1"
                                  ("x" "1" "n0y" "sqrt(1-nx*nx)" "n0z" "nx"))
                                 (("1" (replace -1 -2)
                                   (("1" (assert) nil nil)) nil))
                                 nil)
                                ("2"
                                 (lemma "both_sides_div_neg_lt1"
                                  ("y" "0" "x" "sqrt(1-nx*nx)" "nz" "nx"))
                                 (("2" (assert) nil nil)) nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil)
                  ("2" (assert)
                   (("2" (case "nx = -1")
                     (("1" (replace -1)
                       (("1" (rewrite "sqrt_0")
                         (("1" (rewrite "atan_0") (("1" (assert) nil nil))
                           nil))
                         nil))
                       nil)
                      ("2" (assert) nil nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil))
           nil))
         nil)
        ((< const-decl "bool" reals nil)
         (real_abs_le1 nonempty-type-eq-decl nil trig_types nil)
         (AND const-decl "[bool, bool -> bool]" booleans nil)
         (- const-decl "[numfield -> numfield]" number_fields nil)
         (numfield nonempty-type-eq-decl nil number_fields nil)
         (<= const-decl "bool" reals nil)
         (real nonempty-type-from-decl nil reals nil)
         (real_pred const-decl "[number_field -> boolean]" reals nil)
         (number_field nonempty-type-from-decl nil number_fields nil)
         (number_field_pred const-decl "[number -> boolean]" number_fields
          nil)
         (number nonempty-type-decl nil numbers nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (boolean nonempty-type-decl nil booleans nil)
         (asin const-decl "real_abs_le_pi2" asin nil)
         (atan_0 formula-decl nil atan nil)
         (int_times_even_is_even application-judgement "even_int" integers
          nil)
         (nzreal_div_nzreal_is_nzreal application-judgement "nzreal"
          real_types nil)
         (real_minus_real_is_real application-judgement "real" reals nil)
         (real_div_nzreal_is_real application-judgement "real" reals nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (lt_times_lt_neg1 formula-decl nil real_props nil)
         (real_le_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (sqrt_lt formula-decl nil sqrt reals)
         (>= const-decl "bool" reals nil)
         (nonneg_real nonempty-type-eq-decl nil real_types nil)
         (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (real_ge_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (atan_inv_neg formula-decl nil atan nil)
         (/= const-decl "boolean" notequal nil)
         (nznum nonempty-type-eq-decl nil number_fields nil)
         (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
         (nnreal type-eq-decl nil real_types nil)
         (= const-decl "[T, T -> boolean]" equalities nil)
         (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
         (nonzero_real nonempty-type-eq-decl nil reals nil)
         (div_div1 formula-decl nil real_props nil)
         (both_sides_div_neg_lt1 formula-decl nil real_props nil)
         (sqrt_0 formula-decl nil sqrt reals)
         (odd_times_odd_is_odd application-judgement "odd_int" integers nil)
         (negint_times_negint_is_posint application-judgement "posint"
          integers nil)
         (negreal nonempty-type-eq-decl nil real_types nil)
         (nonpos_real nonempty-type-eq-decl nil real_types nil)
         (both_sides_times_neg_lt1 formula-decl nil real_props nil)
         (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
          nil)
         (pi_bound name-judgement
          "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def nil)
         (real_times_real_is_real application-judgement "real" reals nil))
        shostak))
      (asin_pos_restrict_TCC1 0
       (asin_pos_restrict_TCC1-2 "" 3790092292
        ("" (skosimp*)
         (("" (typepred "px!1")
           ((""
             (lemma "le_times_le_pos"
              ("nnx" "px!1" "y" "1" "nnz" "px!1" "w" "1"))
             (("" (assert) nil nil)) nil))
           nil))
         nil)
        nil shostak
        (asin_pos_restrict subtype
         "(number_fields.-)(1, number_fields.*(asin.px, asin.px))"
         "nonneg_real"))
       (asin_pos_restrict_TCC1-1 nil 3262251224
        ("" (skosimp*)
         (("" (typepred "px!1")
           (("" (expand "abs")
             ((""
               (lemma "le_times_le_pos"
                ("nnx" "px!1" "y" "1" "nnz" "px!1" "w" "1"))
               (("" (assert) nil nil)) nil))
             nil))
           nil))
         nil)
        ((< const-decl "bool" reals nil)
         (real_abs_le1 nonempty-type-eq-decl nil trig_types nil)
         (AND const-decl "[bool, bool -> bool]" booleans nil)
         (- const-decl "[numfield -> numfield]" number_fields nil)
         (numfield nonempty-type-eq-decl nil number_fields nil)
         (<= const-decl "bool" reals nil)
         (real nonempty-type-from-decl nil reals nil)
         (real_pred const-decl "[number_field -> boolean]" reals nil)
         (number_field nonempty-type-from-decl nil number_fields nil)
         (number_field_pred const-decl "[number -> boolean]" number_fields
          nil)
         (number nonempty-type-decl nil numbers nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (boolean nonempty-type-decl nil booleans nil)
         (real_times_real_is_real application-judgement "real" reals nil)
         (real_minus_real_is_real application-judgement "real" reals nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (minus_odd_is_odd application-judgement "odd_int" integers nil)
         (real_le_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (real_ge_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (le_times_le_pos formula-decl nil real_props nil)
         (>= const-decl "bool" reals nil)
         (nonneg_real nonempty-type-eq-decl nil real_types nil))
        shostak
        (asin_pos_restrict subtype
         "(number_fields.-)(1, number_fields.*(asin.px, asin.px))"
         "nonneg_real")))
      (asin_pos_restrict_TCC2 0
       (asin_pos_restrict_TCC2-1 nil 3262251224 ("" (grind) nil nil) nil
        shostak (asin_pos_restrict subtype "asin.px" "nznum")))
      (asin_pos_restrict 0
       (asin_pos_restrict-1 nil 3262251279
        ("" (skolem 1 ("px"))
         (("" (typepred "px")
           (("" (expand "<=" -2)
             (("" (split -2)
               (("1" (hide -2)
                 (("1" (expand "asin")
                   (("1" (assert)
                     (("1" (lemma "sq_nz_pos" ("nz" "px"))
                       (("1" (expand "sq")
                         (("1"
                           (lemma "lt_times_lt_pos1"
                            ("px" "px" "y" "1" "nnz" "px" "w" "1"))
                           (("1" (assert)
                             (("1"
                               (lemma "sqrt_lt" ("nny" "0" "nnz" "1-px*px"))
                               (("1" (rewrite "sqrt_0")
                                 (("1"
                                   (lemma "atan_inv"
                                    ("px" "sqrt(1 - px * px) / px"))
                                   (("1"
                                     (lemma "div_div1"
                                      ("x"
                                       "1"
                                       "n0y"
                                       "sqrt(1-px*px)"
                                       "n0z"
                                       "px"))
                                     (("1"
                                       (replace -1 -2)
                                       (("1" (assert) nil nil))
                                       nil))
                                     nil)
                                    ("2"
                                     (lemma "posreal_div_posreal_is_posreal"
                                      ("px" "sqrt(1-px*px)" "py" "px"))
                                     (("2" (assert) nil nil)) nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil)
                ("2" (expand "asin")
                 (("2" (replace -1)
                   (("2" (hide -1 -2)
                     (("2" (rewrite "sqrt_0")
                       (("2" (rewrite "atan_0") (("2" (assert) nil nil)) nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil))
           nil))
         nil)
        ((< const-decl "bool" reals nil)
         (real_abs_le1 nonempty-type-eq-decl nil trig_types nil)
         (AND const-decl "[bool, bool -> bool]" booleans nil)
         (- const-decl "[numfield -> numfield]" number_fields nil)
         (numfield nonempty-type-eq-decl nil number_fields nil)
         (<= const-decl "bool" reals nil)
         (real nonempty-type-from-decl nil reals nil)
         (real_pred const-decl "[number_field -> boolean]" reals nil)
         (number_field nonempty-type-from-decl nil number_fields nil)
         (number_field_pred const-decl "[number -> boolean]" number_fields
          nil)
         (number nonempty-type-decl nil numbers nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (boolean nonempty-type-decl nil booleans nil)
         (asin const-decl "real_abs_le_pi2" asin nil)
         (sq_nz_pos judgement-tcc nil sq reals)
         (/= const-decl "boolean" notequal nil)
         (nzreal nonempty-type-eq-decl nil reals nil)
         (lt_times_lt_pos1 formula-decl nil real_props nil)
         (>= const-decl "bool" reals nil)
         (nonneg_real nonempty-type-eq-decl nil real_types nil)
         (> const-decl "bool" reals nil)
         (posreal nonempty-type-eq-decl nil real_types nil)
         (real_ge_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (real_gt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (sqrt_lt formula-decl nil sqrt reals)
         (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (atan_inv formula-decl nil atan nil)
         (nznum nonempty-type-eq-decl nil number_fields nil)
         (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
         (nnreal type-eq-decl nil real_types nil)
         (= const-decl "[T, T -> boolean]" equalities nil)
         (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
         (nzreal_div_nzreal_is_nzreal application-judgement "nzreal"
          real_types nil)
         (nonzero_real nonempty-type-eq-decl nil reals nil)
         (div_div1 formula-decl nil real_props nil)
         (posreal_div_posreal_is_posreal judgement-tcc nil real_types nil)
         (sqrt_0 formula-decl nil sqrt reals)
         (real_le_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (sq const-decl "nonneg_real" sq reals)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (real_div_nzreal_is_real application-judgement "real" reals nil)
         (real_minus_real_is_real application-judgement "real" reals nil)
         (posreal_div_posreal_is_posreal application-judgement "posreal"
          real_types nil)
         (posint_times_posint_is_posint application-judgement "posint"
          integers nil)
         (odd_times_odd_is_odd application-judgement "odd_int" integers nil)
         (atan_0 formula-decl nil atan nil)
         (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
          nil)
         (pi_bound name-judgement
          "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def nil)
         (real_times_real_is_real application-judgement "real" reals nil))
        shostak))
      (asin_0 0
       (asin_0-1 nil 3262232045
        ("" (expand "asin")
         (("" (rewrite "sqrt_1") (("" (rewrite "atan_0") nil nil)) nil)) nil)
        ((sqrt_1 formula-decl nil sqrt reals)
         (atan_0 formula-decl nil atan nil)
         (asin const-decl "real_abs_le_pi2" asin nil)
         (sqrt_pos application-judgement "posreal" sqrt reals)
         (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
          nil)
         (pi_bound name-judgement
          "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def nil))
        shostak))
      (asin_sqrt_half_TCC1 0
       (asin_sqrt_half_TCC1-2 "" 3790092293
        ("" (typepred "sqrt(1/2)")
         (("" (assert)
           (("" (lemma "sqrt_le" ("nny" "1/2" "nnz" "1"))
             (("" (rewrite "sqrt_1") (("" (assert) nil nil)) nil)) nil))
           nil))
         nil)
        nil shostak
        (asin_sqrt_half subtype "sqrt.sqrt(number_fields./(1, 2))"
         "real_abs_le1"))
       (asin_sqrt_half_TCC1-1 nil 3263820156
        ("" (expand "abs")
         (("" (typepred "sqrt(1/2)")
           (("" (assert)
             (("" (lemma "sqrt_le" ("nny" "1/2" "nnz" "1"))
               (("" (rewrite "sqrt_1") (("" (assert) nil nil)) nil)) nil))
             nil))
           nil))
         nil)
        ((minus_odd_is_odd application-judgement "odd_int" integers nil)
         (real_le_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (real_gt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (posreal_times_posreal_is_posreal application-judgement "posreal"
          real_types nil)
         (real_ge_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (sqrt_1 formula-decl nil sqrt reals)
         (sqrt_le formula-decl nil sqrt reals)
         (posrat_div_posrat_is_posrat application-judgement "posrat" rationals
          nil)
         (sqrt_pos application-judgement "posreal" sqrt reals)
         (boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (number nonempty-type-decl nil numbers nil)
         (number_field_pred const-decl "[number -> boolean]" number_fields
          nil)
         (number_field nonempty-type-from-decl nil number_fields nil)
         (real_pred const-decl "[number_field -> boolean]" reals nil)
         (real nonempty-type-from-decl nil reals nil)
         (>= const-decl "bool" reals nil)
         (nonneg_real nonempty-type-eq-decl nil real_types nil)
         (nnreal type-eq-decl nil real_types nil)
         (= const-decl "[T, T -> boolean]" equalities nil)
         (numfield nonempty-type-eq-decl nil number_fields nil)
         (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
         (/= const-decl "boolean" notequal nil)
         (nznum nonempty-type-eq-decl nil number_fields nil)
         (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
         (> const-decl "bool" reals nil))
        shostak
        (asin_sqrt_half subtype "sqrt.sqrt(number_fields./(1, 2))"
         "real_abs_le1")))
      (asin_sqrt_half 0
       (asin_sqrt_half-1 nil 3263819956
        ("" (expand "asin")
         (("" (typepred "sqrt(1/2)")
           (("" (lemma "sqrt_lt" ("nny" "1/2" "nnz" "1"))
             (("" (rewrite "sqrt_1" -1)
               (("" (assert)
                 (("" (rewrite "sq_rew" 1)
                   (("" (rewrite "div_simp" 1)
                     (("" (rewrite "pi_value") (("" (assert) nil nil)) nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil))
           nil))
         nil)
        ((> const-decl "bool" reals nil)
         (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
         (nznum nonempty-type-eq-decl nil number_fields nil)
         (/= const-decl "boolean" notequal nil)
         (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
         (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (numfield nonempty-type-eq-decl nil number_fields nil)
         (= const-decl "[T, T -> boolean]" equalities nil)
         (nnreal type-eq-decl nil real_types nil)
         (nonneg_real nonempty-type-eq-decl nil real_types nil)
         (>= const-decl "bool" reals nil)
         (real nonempty-type-from-decl nil reals nil)
         (real_pred const-decl "[number_field -> boolean]" reals nil)
         (number_field nonempty-type-from-decl nil number_fields nil)
         (number_field_pred const-decl "[number -> boolean]" number_fields
          nil)
         (number nonempty-type-decl nil numbers nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (boolean nonempty-type-decl nil booleans nil)
         (posrat_div_posrat_is_posrat application-judgement "posrat" rationals
          nil)
         (sqrt_1 formula-decl nil sqrt reals)
         (sq_rew formula-decl nil sq reals)
         (sq_nz_pos application-judgement "posreal" sq reals)
         (sq_sqrt formula-decl nil sqrt reals)
         (pi_value formula-decl nil atan nil)
         (real_times_real_is_real application-judgement "real" reals nil)
         (real_div_nzreal_is_real application-judgement "real" reals nil)
         (div_simp formula-decl nil real_props nil)
         (nonzero_real nonempty-type-eq-decl nil reals nil)
         (real_ge_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (real_gt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (nzreal_div_nzreal_is_nzreal application-judgement "nzreal"
          real_types nil)
         (real_minus_real_is_real application-judgement "real" reals nil)
         (posreal_div_posreal_is_posreal application-judgement "posreal"
          real_types nil)
         (sqrt_lt formula-decl nil sqrt reals)
         (asin const-decl "real_abs_le_pi2" asin nil)
         (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
          nil)
         (pi_bound name-judgement
          "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def nil)
         (posreal_times_posreal_is_posreal application-judgement "posreal"
          real_types nil)
         (sqrt_pos application-judgement "posreal" sqrt reals))
        shostak))
      (asin_1 0
       (asin_1-1 nil 3262276037
        ("" (expand "asin") (("" (propax) nil nil)) nil)
        ((asin const-decl "real_abs_le_pi2" asin nil)
         (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
          nil)
         (pi_bound name-judgement
          "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def nil))
        shostak))
      (asin_neg_TCC1 0
       (asin_neg_TCC1-1 nil 3262231915 ("" (grind) nil nil) nil shostak
        (asin_neg subtype "(number_fields.-)(asin.x)" "real_abs_le1")))
      (asin_neg 0
       (asin_neg-2 "" 3790092294
        ("" (skolem 1 ("x"))
         (("" (expand "asin")
           (("" (case "x = -1")
             (("1" (assert) nil nil)
              ("2" (case "x = 1")
               (("1" (assert) nil nil)
                ("2" (case "-1 < x & x < 1")
                 (("1" (flatten -1)
                   (("1" (assert)
                     (("1" (lemma "atan_neg" ("x" "x / sqrt(1 - -x * -x)"))
                       (("1" (assert) nil nil)) nil))
                     nil))
                   nil)
                  ("2" (hide 4) (("2" (assert) nil nil)) nil))
                 nil))
               nil))
             nil))
           nil))
         nil)
        nil shostak)
       (asin_neg-1 nil 3262232085
        ("" (skolem 1 ("x"))
         (("" (expand "asin")
           (("" (case "x = -1")
             (("1" (assert) nil nil)
              ("2" (case "x = 1")
               (("1" (assert) nil nil)
                ("2" (case "-1 < x & x < 1")
                 (("1" (flatten -1)
                   (("1" (assert)
                     (("1" (lemma "atan_neg" ("x" "x / sqrt(1 - -x * -x)"))
                       (("1" (assert) nil nil)
                        ("2" (hide 4)
                         (("2" (lemma "asin_TCC3" ("x" "x"))
                           (("2" (assert) nil nil)) nil))
                         nil))
                       nil))
                     nil))
                   nil)
                  ("2" (hide 4)
                   (("2" (assert)
                     (("2" (typepred "x") (("2" (grind) nil nil)) nil)) nil))
                   nil))
                 nil))
               nil))
             nil))
           nil))
         nil)
        ((minus_real_is_real application-judgement "real" reals nil)
         (real_times_real_is_real application-judgement "real" reals nil)
         (pi_bound name-judgement
          "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def nil)
         (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
          nil)
         (asin const-decl "real_abs_le_pi2" asin nil)
         (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
         (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (nnreal type-eq-decl nil real_types nil)
         (>= const-decl "bool" reals nil)
         (nonneg_real nonempty-type-eq-decl nil real_types nil)
         (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
         (nznum nonempty-type-eq-decl nil number_fields nil)
         (/= const-decl "boolean" notequal nil)
         (atan_neg formula-decl nil atan nil)
         (real_ge_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (real_div_nzreal_is_real application-judgement "real" reals nil)
         (real_minus_real_is_real application-judgement "real" reals nil)
         (< const-decl "bool" reals nil)
         (nzreal_div_nzreal_is_nzreal application-judgement "nzreal"
          real_types nil)
         (posreal_div_posreal_is_posreal application-judgement "posreal"
          real_types nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (number nonempty-type-decl nil numbers nil)
         (boolean nonempty-type-decl nil booleans nil)
         (= const-decl "[T, T -> boolean]" equalities nil)
         (number_field_pred const-decl "[number -> boolean]" number_fields
          nil)
         (number_field nonempty-type-from-decl nil number_fields nil)
         (real_pred const-decl "[number_field -> boolean]" reals nil)
         (real nonempty-type-from-decl nil reals nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (AND const-decl "[bool, bool -> bool]" booleans nil)
         (<= const-decl "bool" reals nil)
         (numfield nonempty-type-eq-decl nil number_fields nil)
         (- const-decl "[numfield -> numfield]" number_fields nil)
         (real_abs_le1 nonempty-type-eq-decl nil trig_types nil))
        shostak))
      (asin_minus1 0
       (asin_minus1-1 nil 3262276084
        ("" (expand "asin") (("" (propax) nil nil)) nil)
        ((asin const-decl "real_abs_le_pi2" asin nil)
         (minus_odd_is_odd application-judgement "odd_int" integers nil)
         (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
          nil)
         (pi_bound name-judgement
          "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def nil))
        shostak))
      (asin_minus_sqrt_half_TCC1 0
       (asin_minus_sqrt_half_TCC1-2 "" 3790092294
        ("" (typepred "sqrt(1/2)")
         (("" (assert)
           (("" (lemma "sqrt_le" ("nny" "1/2" "nnz" "1"))
             (("" (rewrite "sqrt_1") (("" (assert) nil nil)) nil)) nil))
           nil))
         nil)
        nil shostak
        (asin_minus_sqrt_half subtype
         "(number_fields.-)(sqrt.sqrt(number_fields./(1, 2)))"
         "real_abs_le1"))
       (asin_minus_sqrt_half_TCC1-1 nil 3263821369
        ("" (expand "abs")
         (("" (typepred "sqrt(1/2)")
           (("" (assert)
             (("" (lemma "sqrt_le" ("nny" "1/2" "nnz" "1"))
               (("" (rewrite "sqrt_1") (("" (assert) nil nil)) nil)) nil))
             nil))
           nil))
         nil)
        ((minus_nzreal_is_nzreal application-judgement "nzreal" real_types
          nil)
         (minus_odd_is_odd application-judgement "odd_int" integers nil)
         (real_le_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (real_gt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (posreal_times_posreal_is_posreal application-judgement "posreal"
          real_types nil)
         (real_ge_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (sqrt_1 formula-decl nil sqrt reals)
         (sqrt_le formula-decl nil sqrt reals)
         (posrat_div_posrat_is_posrat application-judgement "posrat" rationals
          nil)
         (sqrt_pos application-judgement "posreal" sqrt reals)
         (boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (number nonempty-type-decl nil numbers nil)
         (number_field_pred const-decl "[number -> boolean]" number_fields
          nil)
         (number_field nonempty-type-from-decl nil number_fields nil)
         (real_pred const-decl "[number_field -> boolean]" reals nil)
         (real nonempty-type-from-decl nil reals nil)
         (>= const-decl "bool" reals nil)
         (nonneg_real nonempty-type-eq-decl nil real_types nil)
         (nnreal type-eq-decl nil real_types nil)
         (= const-decl "[T, T -> boolean]" equalities nil)
         (numfield nonempty-type-eq-decl nil number_fields nil)
         (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
         (/= const-decl "boolean" notequal nil)
         (nznum nonempty-type-eq-decl nil number_fields nil)
         (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
         (> const-decl "bool" reals nil))
        shostak
        (asin_minus_sqrt_half subtype
         "(number_fields.-)(sqrt.sqrt(number_fields./(1, 2)))"
         "real_abs_le1")))
      (asin_minus_sqrt_half 0
       (asin_minus_sqrt_half-2 "" 3790092294
        ("" (lemma "asin_sqrt_half")
         (("" (rewrite "asin_neg" 1) (("" (assert) nil nil)) nil)) nil)
        nil shostak)
       (asin_minus_sqrt_half-1 nil 3263819795
        ("" (lemma "asin_sqrt_half")
         (("" (rewrite "asin_neg" 1)
           (("1" (assert) nil nil)
            ("2" (hide-all-but 1)
             (("2" (expand "abs")
               (("2" (lemma "sqrt_le" ("nny" "1/2" "nnz" "1"))
                 (("2" (rewrite "sqrt_1") (("2" (assert) nil nil)) nil)) nil))
               nil))
             nil))
           nil))
         nil)
        ((posrat_div_posrat_is_posrat application-judgement "posrat" rationals
          nil)
         (sqrt_pos application-judgement "posreal" sqrt reals)
         (asin_neg formula-decl nil asin nil)
         (number nonempty-type-decl nil numbers nil)
         (boolean nonempty-type-decl nil booleans nil)
         (number_field_pred const-decl "[number -> boolean]" number_fields
          nil)
         (number_field nonempty-type-from-decl nil number_fields nil)
         (real_pred const-decl "[number_field -> boolean]" reals nil)
         (real nonempty-type-from-decl nil reals nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (AND const-decl "[bool, bool -> bool]" booleans nil)
         (<= const-decl "bool" reals nil)
         (numfield nonempty-type-eq-decl nil number_fields nil)
         (- const-decl "[numfield -> numfield]" number_fields nil)
         (real_abs_le1 nonempty-type-eq-decl nil trig_types nil)
         (nonneg_real nonempty-type-eq-decl nil real_types nil)
         (>= const-decl "bool" reals nil)
         (nnreal type-eq-decl nil real_types nil)
         (= const-decl "[T, T -> boolean]" equalities nil)
         (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
         (/= const-decl "boolean" notequal nil)
         (nznum nonempty-type-eq-decl nil number_fields nil)
         (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
         (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
          nil)
         (pi_bound name-judgement
          "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def nil)
         (minus_real_is_real application-judgement "real" reals nil)
         (posreal_div_posreal_is_posreal application-judgement "posreal"
          real_types nil)
         (nzreal_div_nzreal_is_nzreal application-judgement "nzreal"
          real_types nil)
         (asin_sqrt_half formula-decl nil asin nil))
        shostak))
      (asin_strict_increasing 0
       (asin_strict_increasing-2 "" 3790092296
        ("" (lemma "atan_strict_increasing")
         (("" (expand "strict_increasing?")
           (("" (skolem 1 ("x" "y"))
             (("" (flatten)
               (("" (expand "asin")
                 (("" (case "abs(x) <= 1")
                   (("1" (case "abs(y) <= 1")
                     (("1"
                       (case "FORALL (z:real): abs(z) < 1 => 0 < sqrt(1-z*z)")
                       (("1" (expand "<=" (-2 -3))
                         (("1" (split -3)
                           (("1" (inst-cp -2 "x")
                             (("1" (assert)
                               (("1" (case "y = -1")
                                 (("1" (hide 1)
                                   (("1" (lemma "trichotomy" ("x" "x"))
                                     (("1"
                                       (split -1)
                                       (("1" (assert) nil nil)
                                        ("2" (assert) nil nil)
                                        ("3"
                                         (expand "abs" -3)
                                         (("3" (assert) nil nil))
                                         nil))
                                       nil))
                                     nil))
                                   nil)
                                  ("2" (case "y < 1")
                                   (("1" (assert)
                                     (("1"
                                       (case "x= -1")
                                       (("1" (assert) nil nil)
                                        ("2"
                                         (inst -3 "y")
                                         (("2"
                                           (split -5)
                                           (("1"
                                             (assert)
                                             (("1"
                                               (inst
                                                -
                                                "x / sqrt(1 - x * x)"
                                                "y / sqrt(1 - y * y)")
                                               (("1"
                                                 (split -6)
                                                 (("1" (propax) nil nil)
                                                  ("2"
                                                   (hide 4)
                                                   (("2"
                                                     (lemma
                                                      "div_mult_pos_lt1"
                                                      ("z"
                                                       "x"
                                                       "py"
                                                       "sqrt(1-x*x)"
                                                       "x"
                                                       "y / sqrt(1 - y * y)"))
                                                     (("2"
                                                       (replace -1 1)
                                                       (("2"
                                                         (lemma
                                                          "div_mult_pos_lt2"
                                                          ("x"
                                                           "x"
                                                           "z"
                                                           "y*sqrt(1-x*x)"
                                                           "py"
                                                           "sqrt(1-y*y)"))
                                                         (("2"
                                                           (replace -1 1)
                                                           (("2"
                                                             (hide -1 -2)
                                                             (("2"
                                                               (lemma
                                                                "trichotomy"
                                                                ("x" "x"))
                                                               (("2"
                                                                 (split -1)
                                                                 (("1"
                                                                   (lemma
                                                                    "sq_lt"
                                                                    ("nna"
                                                                     "x * sqrt(1 - y * y)"
                                                                     "nnb"
                                                                     "y * sqrt(1 - x * x)"))
                                                                   (("1"
                                                                     (replace
                                                                      -1
                                                                      1
                                                                      rl)
                                                                     (("1"
                                                                       (rewrite
                                                                        "sq_times"
                                                                        1)
                                                                       (("1"
                                                                         (rewrite
                                                                          "sq_times"
                                                                          1)
                                                                         (("1"
                                                                           (expand
                                                                            "sq"
                                                                            1)
                                                                           (("1"
                                                                             (lemma
                                                                              "sq_lt"
                                                                              ("nna"
                                                                               "x"
                                                                               "nnb"
                                                                               "y"))
                                                                             (("1"
                                                                               (expand
                                                                                "sq"
                                                                                -1)
                                                                               (("1"
                                                                                 (assert)
                                                                                 nil
                                                                                 nil))
                                                                               nil)
                                                                              ("2"
                                                                               (assert)
                                                                               nil
                                                                               nil)
                                                                              ("3"
                                                                               (assert)
                                                                               nil
                                                                               nil))
                                                                             nil))
                                                                           nil))
                                                                         nil))
                                                                       nil))
                                                                     nil)
                                                                    ("2"
                                                                     (lemma
                                                                      "posreal_times_posreal_is_posreal"
                                                                      ("px"
                                                                       "y"
                                                                       "py"
                                                                       "sqrt(1-x*x)"))
                                                                     (("1"
                                                                       (assert)
                                                                       nil
                                                                       nil)
                                                                      ("2"
                                                                       (assert)
                                                                       nil
                                                                       nil))
                                                                     nil)
                                                                    ("3"
                                                                     (lemma
                                                                      "posreal_times_posreal_is_posreal"
                                                                      ("px"
                                                                       "x"
                                                                       "py"
                                                                       "sqrt(1-y*y)"))
                                                                     (("1"
                                                                       (assert)
                                                                       nil
                                                                       nil)
                                                                      ("2"
                                                                       (assert)
                                                                       nil
                                                                       nil))
                                                                     nil))
                                                                   nil)
                                                                  ("2"
                                                                   (replace
                                                                    -1)
                                                                   (("2"
                                                                     (rewrite
                                                                      "sqrt_1"
                                                                      1)
                                                                     (("2"
                                                                       (assert)
                                                                       nil
                                                                       nil))
                                                                     nil))
                                                                   nil)
                                                                  ("3"
                                                                   (case
                                                                    "y < 0")
                                                                   (("1"
                                                                     (lemma
                                                                      "both_sides_times_neg_lt1"
                                                                      ("nz"
                                                                       "-1"
                                                                       "y"
                                                                       "x * sqrt(1 - y * y)"
                                                                       "x"
                                                                       "y * sqrt(1 - x * x)"))
                                                                     (("1"
                                                                       (replace
                                                                        -1
                                                                        1
                                                                        rl)
                                                                       (("1"
                                                                         (lemma
                                                                          "sq_lt"
                                                                          ("nna"
                                                                           "(-1 *y) * sqrt(1 - x * x)"
                                                                           "nnb"
                                                                           "(-1*x) * sqrt(1 - y * y)"))
                                                                         (("1"
                                                                           (replace
                                                                            -1
                                                                            1
                                                                            rl)
                                                                           (("1"
                                                                             (rewrite
                                                                              "sq_times"
                                                                              1)
                                                                             (("1"
                                                                               (expand
                                                                                "sq"
                                                                                1
                                                                                1)
                                                                               (("1"
                                                                                 (rewrite
                                                                                  "sq_times"
                                                                                  1)
                                                                                 (("1"
                                                                                   (rewrite
                                                                                    "sq_times"
                                                                                    1)
                                                                                   (("1"
                                                                                     (expand
                                                                                      "sq"
                                                                                      1)
                                                                                     (("1"
                                                                                       (hide
                                                                                        -1
                                                                                        -2)
                                                                                       (("1"
                                                                                         (assert)
                                                                                         (("1"
                                                                                           (lemma
                                                                                            "sq_lt"
                                                                                            ("nna"
                                                                                             "-1*y"
                                                                                             "nnb"
                                                                                             "-1*x"))
                                                                                           (("1"
                                                                                             (expand
                                                                                              "sq"
                                                                                              -1)
                                                                                             (("1"
                                                                                               (propax)
                                                                                               nil
                                                                                               nil))
                                                                                             nil))
                                                                                           nil))
                                                                                         nil))
                                                                                       nil))
                                                                                     nil))
                                                                                   nil))
                                                                                 nil))
                                                                               nil))
                                                                             nil))
                                                                           nil)
                                                                          ("2"
                                                                           (lemma
                                                                            "posreal_times_posreal_is_posreal"
                                                                            ("px"
                                                                             "-1*x"
                                                                             "py"
                                                                             "sqrt(1-y*y)"))
                                                                           (("1"
                                                                             (assert)
                                                                             nil
                                                                             nil)
                                                                            ("2"
                                                                             (assert)
                                                                             nil
                                                                             nil))
                                                                           nil)
                                                                          ("3"
                                                                           (lemma
                                                                            "posreal_times_posreal_is_posreal"
                                                                            ("px"
                                                                             "-1*y"
                                                                             "py"
                                                                             "sqrt(1-x*x)"))
                                                                           (("1"
                                                                             (assert)
                                                                             nil
                                                                             nil)
                                                                            ("2"
                                                                             (assert)
                                                                             nil
                                                                             nil))
                                                                           nil))
                                                                         nil))
                                                                       nil))
                                                                     nil)
                                                                    ("2"
                                                                     (lemma
                                                                      "nnreal_times_nnreal_is_nnreal"
                                                                      ("nnx"
                                                                       "y"
                                                                       "nny"
                                                                       "sqrt(1 - x * x)"))
                                                                     (("1"
                                                                       (lemma
                                                                        "both_sides_times_pos_lt1"
                                                                        ("x"
                                                                         "x"
                                                                         "y"
                                                                         "0"
                                                                         "pz"
                                                                         "sqrt(1 - y * y)"))
                                                                       (("1"
                                                                         (assert)
                                                                         nil
                                                                         nil))
                                                                       nil)
                                                                      ("2"
                                                                       (assert)
                                                                       nil
                                                                       nil))
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil))
                                                 nil))
                                               nil))
                                             nil)
                                            ("2"
                                             (expand "abs" -1)
                                             (("2"
                                               (lemma "trichotomy" ("x" "y"))
                                               (("2"
                                                 (split -1)
                                                 (("1" (assert) nil nil)
                                                  ("2" (assert) nil nil)
                                                  ("3" (assert) nil nil))
                                                 nil))
                                               nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil))
                                     nil)
                                    ("2" (assert) nil nil))
                                   nil))
                                 nil))
                               nil))
                             nil)
                            ("2" (lemma "trichotomy" ("x" "x"))
                             (("2" (expand "abs" -2)
                               (("2" (split -1)
                                 (("1" (assert) nil nil)
                                  ("2" (assert) nil nil)
                                  ("3" (assert)
                                   (("3" (case "y <1")
                                     (("1" (assert) nil nil)
                                      ("2"
                                       (inst - "y")
                                       (("2"
                                         (split -4)
                                         (("1" (assert) nil nil)
                                          ("2"
                                           (typepred
                                            "atan(y / sqrt(1 - y * y))")
                                           (("1" (assert) nil nil)
                                            ("2" (assert) nil nil)
                                            ("3" (assert) nil nil))
                                           nil))
                                         nil))
                                       nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil)
                        ("2" (skosimp*)
                         (("2" (assert)
                           (("2" (hide 2)
                             (("2" (hide -2 -3 -4 -5)
                               (("2" (expand "abs")
                                 (("2" (lift-if)
                                   (("2" (ground)
                                     (("1"
                                       (mult-ineq -2 -2)
                                       (("1" (assert) nil nil))
                                       nil)
                                      ("2"
                                       (mult-ineq -1 -1)
                                       (("2" (assert) nil nil))
                                       nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil)
                        ("3" (skosimp*)
                         (("3" (assert)
                           (("3" (hide 2)
                             (("3" (hide -2 -3 -4 -5)
                               (("3" (grind)
                                 (("1" (mult-ineq -2 -2)
                                   (("1" (assert) nil nil)) nil)
                                  ("2" (mult-ineq -1 -1)
                                   (("2" (assert) nil nil)) nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil)
                      ("2" (hide-all-but 1)
                       (("2" (typepred "y") (("2" (grind) nil nil)) nil))
                       nil))
                     nil)
                    ("2" (hide-all-but 1)
                     (("2" (typepred "x") (("2" (grind) nil nil)) nil)) nil))
                   nil))
                 nil))
               nil))
             nil))
           nil))
         nil)
        nil shostak)
       (asin_strict_increasing-1 nil 3262232341
        ("" (lemma "atan_strict_increasing")
         (("" (expand "strict_increasing?")
           (("" (skolem 1 ("x" "y"))
             (("" (flatten)
               (("" (expand "asin")
                 (("" (case "abs(x) <= 1")
                   (("1" (case "abs(y) <= 1")
                     (("1"
                       (case "FORALL (z:real): abs(z) < 1 => 0 < sqrt(1-z*z)")
                       (("1" (expand "<=" (-2 -3))
                         (("1" (split -3)
                           (("1" (inst-cp -2 "x")
                             (("1" (assert)
                               (("1" (case "y = -1")
                                 (("1" (hide 1)
                                   (("1" (lemma "trichotomy" ("x" "x"))
                                     (("1"
                                       (split -1)
                                       (("1" (assert) nil nil)
                                        ("2" (assert) nil nil)
                                        ("3"
                                         (expand "abs" -3)
                                         (("3" (assert) nil nil))
                                         nil))
                                       nil))
                                     nil))
                                   nil)
                                  ("2" (case "y < 1")
                                   (("1" (assert)
                                     (("1"
                                       (case "x= -1")
                                       (("1" (assert) nil nil)
                                        ("2"
                                         (inst -3 "y")
                                         (("2"
                                           (split -5)
                                           (("1"
                                             (assert)
                                             (("1"
                                               (inst
                                                -
                                                "x / sqrt(1 - x * x)"
                                                "y / sqrt(1 - y * y)")
                                               (("1"
                                                 (split -6)
                                                 (("1" (propax) nil nil)
                                                  ("2"
                                                   (hide 4)
                                                   (("2"
                                                     (lemma
                                                      "div_mult_pos_lt1"
                                                      ("z"
                                                       "x"
                                                       "py"
                                                       "sqrt(1-x*x)"
                                                       "x"
                                                       "y / sqrt(1 - y * y)"))
                                                     (("2"
                                                       (replace -1 1)
                                                       (("2"
                                                         (lemma
                                                          "div_mult_pos_lt2"
                                                          ("x"
                                                           "x"
                                                           "z"
                                                           "y*sqrt(1-x*x)"
                                                           "py"
                                                           "sqrt(1-y*y)"))
                                                         (("2"
                                                           (replace -1 1)
                                                           (("2"
                                                             (hide -1 -2)
                                                             (("2"
                                                               (lemma
                                                                "trichotomy"
                                                                ("x" "x"))
                                                               (("2"
                                                                 (split -1)
                                                                 (("1"
                                                                   (lemma
                                                                    "sq_lt"
                                                                    ("nna"
                                                                     "x * sqrt(1 - y * y)"
                                                                     "nnb"
                                                                     "y * sqrt(1 - x * x)"))
                                                                   (("1"
                                                                     (replace
                                                                      -1
                                                                      1
                                                                      rl)
                                                                     (("1"
                                                                       (rewrite
                                                                        "sq_times"
                                                                        1)
                                                                       (("1"
                                                                         (rewrite
                                                                          "sq_times"
                                                                          1)
                                                                         (("1"
                                                                           (expand
                                                                            "sq"
                                                                            1)
                                                                           (("1"
                                                                             (lemma
                                                                              "sq_lt"
                                                                              ("nna"
                                                                               "x"
                                                                               "nnb"
                                                                               "y"))
                                                                             (("1"
                                                                               (expand
                                                                                "sq"
                                                                                -1)
                                                                               (("1"
                                                                                 (assert)
                                                                                 nil
                                                                                 nil))
                                                                               nil)
                                                                              ("2"
                                                                               (assert)
                                                                               nil
                                                                               nil)
                                                                              ("3"
                                                                               (assert)
                                                                               nil
                                                                               nil))
                                                                             nil))
                                                                           nil))
                                                                         nil))
                                                                       nil))
                                                                     nil)
                                                                    ("2"
                                                                     (lemma
                                                                      "posreal_times_posreal_is_posreal"
                                                                      ("px"
                                                                       "y"
                                                                       "py"
                                                                       "sqrt(1-x*x)"))
                                                                     (("1"
                                                                       (assert)
                                                                       nil
                                                                       nil)
                                                                      ("2"
                                                                       (assert)
                                                                       nil
                                                                       nil))
                                                                     nil)
                                                                    ("3"
                                                                     (lemma
                                                                      "posreal_times_posreal_is_posreal"
                                                                      ("px"
                                                                       "x"
                                                                       "py"
                                                                       "sqrt(1-y*y)"))
                                                                     (("1"
                                                                       (assert)
                                                                       nil
                                                                       nil)
                                                                      ("2"
                                                                       (assert)
                                                                       nil
                                                                       nil))
                                                                     nil))
                                                                   nil)
                                                                  ("2"
                                                                   (replace
                                                                    -1)
                                                                   (("2"
                                                                     (rewrite
                                                                      "sqrt_1"
                                                                      1)
                                                                     (("2"
                                                                       (assert)
                                                                       nil
                                                                       nil))
                                                                     nil))
                                                                   nil)
                                                                  ("3"
                                                                   (case
                                                                    "y < 0")
                                                                   (("1"
                                                                     (lemma
                                                                      "both_sides_times_neg_lt1"
                                                                      ("nz"
                                                                       "-1"
                                                                       "y"
                                                                       "x * sqrt(1 - y * y)"
                                                                       "x"
                                                                       "y * sqrt(1 - x * x)"))
                                                                     (("1"
                                                                       (replace
                                                                        -1
                                                                        1
                                                                        rl)
                                                                       (("1"
                                                                         (lemma
                                                                          "sq_lt"
                                                                          ("nna"
                                                                           "(-1 *y) * sqrt(1 - x * x)"
                                                                           "nnb"
                                                                           "(-1*x) * sqrt(1 - y * y)"))
                                                                         (("1"
                                                                           (replace
                                                                            -1
                                                                            1
                                                                            rl)
                                                                           (("1"
                                                                             (rewrite
                                                                              "sq_times"
                                                                              1)
                                                                             (("1"
                                                                               (expand
                                                                                "sq"
                                                                                1
                                                                                1)
                                                                               (("1"
                                                                                 (rewrite
                                                                                  "sq_times"
                                                                                  1)
                                                                                 (("1"
                                                                                   (rewrite
                                                                                    "sq_times"
                                                                                    1)
                                                                                   (("1"
                                                                                     (expand
                                                                                      "sq"
                                                                                      1)
                                                                                     (("1"
                                                                                       (hide
                                                                                        -1
                                                                                        -2)
                                                                                       (("1"
                                                                                         (assert)
                                                                                         (("1"
                                                                                           (lemma
                                                                                            "sq_lt"
                                                                                            ("nna"
                                                                                             "-1*y"
                                                                                             "nnb"
                                                                                             "-1*x"))
                                                                                           (("1"
                                                                                             (expand
                                                                                              "sq"
                                                                                              -1)
                                                                                             (("1"
                                                                                               (propax)
                                                                                               nil
                                                                                               nil))
                                                                                             nil))
                                                                                           nil))
                                                                                         nil))
                                                                                       nil))
                                                                                     nil))
                                                                                   nil))
                                                                                 nil))
                                                                               nil))
                                                                             nil))
                                                                           nil)
                                                                          ("2"
                                                                           (lemma
                                                                            "posreal_times_posreal_is_posreal"
                                                                            ("px"
                                                                             "-1*x"
                                                                             "py"
                                                                             "sqrt(1-y*y)"))
                                                                           (("1"
                                                                             (assert)
                                                                             nil
                                                                             nil)
                                                                            ("2"
                                                                             (assert)
                                                                             nil
                                                                             nil))
                                                                           nil)
                                                                          ("3"
                                                                           (lemma
                                                                            "posreal_times_posreal_is_posreal"
                                                                            ("px"
                                                                             "-1*y"
                                                                             "py"
                                                                             "sqrt(1-x*x)"))
                                                                           (("1"
                                                                             (assert)
                                                                             nil
                                                                             nil)
                                                                            ("2"
                                                                             (assert)
                                                                             nil
                                                                             nil))
                                                                           nil))
                                                                         nil))
                                                                       nil))
                                                                     nil)
                                                                    ("2"
                                                                     (lemma
                                                                      "nnreal_times_nnreal_is_nnreal"
                                                                      ("nnx"
                                                                       "y"
                                                                       "nny"
                                                                       "sqrt(1 - x * x)"))
                                                                     (("1"
                                                                       (lemma
                                                                        "both_sides_times_pos_lt1"
                                                                        ("x"
                                                                         "x"
                                                                         "y"
                                                                         "0"
                                                                         "pz"
                                                                         "sqrt(1 - y * y)"))
                                                                       (("1"
                                                                         (assert)
                                                                         nil
                                                                         nil))
                                                                       nil)
                                                                      ("2"
                                                                       (assert)
                                                                       nil
                                                                       nil))
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil))
                                                 nil))
                                               nil))
                                             nil)
                                            ("2"
                                             (expand "abs" -1)
                                             (("2"
                                               (lemma "trichotomy" ("x" "y"))
                                               (("2"
                                                 (split -1)
                                                 (("1" (assert) nil nil)
                                                  ("2" (assert) nil nil)
                                                  ("3" (assert) nil nil))
                                                 nil))
                                               nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil))
                                     nil)
                                    ("2" (assert) nil nil))
                                   nil))
                                 nil))
                               nil))
                             nil)
                            ("2" (lemma "trichotomy" ("x" "x"))
                             (("2" (expand "abs" -2)
                               (("2" (split -1)
                                 (("1" (assert) nil nil)
                                  ("2" (assert) nil nil)
                                  ("3" (assert)
                                   (("3" (case "y <1")
                                     (("1" (assert) nil nil)
                                      ("2"
                                       (inst - "y")
                                       (("2"
                                         (split -4)
                                         (("1" (assert) nil nil)
                                          ("2"
                                           (typepred
                                            "atan(y / sqrt(1 - y * y))")
                                           (("1" (assert) nil nil)
                                            ("2" (assert) nil nil)
                                            ("3" (assert) nil nil))
                                           nil))
                                         nil))
                                       nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil)
                        ("2" (skosimp*)
                         (("2" (assert)
                           (("2" (hide 2)
                             (("2" (hide -2 -3 -4 -5)
                               (("2" (expand "abs")
                                 (("2" (lift-if)
                                   (("2" (ground)
                                     (("1"
                                       (mult-ineq -2 -2)
                                       (("1" (assert) nil nil))
                                       nil)
                                      ("2"
                                       (mult-ineq -1 -1)
                                       (("2" (assert) nil nil))
                                       nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil)
                        ("3" (skosimp*)
                         (("3" (assert)
                           (("3" (assert)
                             (("3" (hide 2)
                               (("3" (hide -2 -3 -4 -5)
                                 (("3" (grind)
                                   (("1" (mult-ineq -2 -2)
                                     (("1" (assert) nil nil)) nil)
                                    ("2" (mult-ineq -1 -1)
                                     (("2" (assert) nil nil)) nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil)
                      ("2" (hide-all-but 1)
                       (("2" (typepred "y") (("2" (grind) nil nil)) nil))
                       nil))
                     nil)
                    ("2" (hide-all-but 1)
                     (("2" (typepred "x") (("2" (grind) nil nil)) nil)) nil))
                   nil))
                 nil))
               nil))
             nil))
           nil))
         nil)
        ((pi_bound name-judgement
          "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def nil)
         (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
          nil)
         (strict_increasing? const-decl "bool" real_fun_preds reals)
         (real_abs_le1 nonempty-type-eq-decl nil trig_types nil)
         (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
              nil)
         (- const-decl "[numfield -> numfield]" number_fields nil)
         (numfield nonempty-type-eq-decl nil number_fields nil)
         (AND const-decl "[bool, bool -> bool]" booleans nil)
         (nonneg_real nonempty-type-eq-decl nil real_types nil)
         (>= const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (real nonempty-type-from-decl nil reals nil)
         (real_pred const-decl "[number_field -> boolean]" reals nil)
         (number_field nonempty-type-from-decl nil number_fields nil)
         (number_field_pred const-decl "[number -> boolean]" number_fields
          nil)
         (boolean nonempty-type-decl nil booleans nil)
         (number nonempty-type-decl nil numbers nil)
         (real_minus_real_is_real application-judgement "real" reals nil)
         (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
         (< const-decl "bool" reals nil)
         (nnreal type-eq-decl nil real_types nil)
         (= const-decl "[T, T -> boolean]" equalities nil)
         (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
         (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (real_div_nzreal_is_real application-judgement "real" reals nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (real_ge_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
         (nznum nonempty-type-eq-decl nil number_fields nil)
         (/= const-decl "boolean" notequal nil)
         (sq_nz_pos application-judgement "posreal" sq reals)
         (negreal nonempty-type-eq-decl nil real_types nil)
         (nonpos_real nonempty-type-eq-decl nil real_types nil)
         (both_sides_times_neg_lt1 formula-decl nil real_props nil)
         (both_sides_times_pos_lt1 formula-decl nil real_props nil)
         (nnreal_times_nnreal_is_nnreal judgement-tcc nil real_types nil)
         (int_times_even_is_even application-judgement "even_int" integers
          nil)
         (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
          integers nil)
         (sqrt_1 formula-decl nil sqrt reals)
         (sq_lt formula-decl nil sq reals)
         (sq_times formula-decl nil sq reals)
         (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
          real_types nil)
         (sq_sqrt formula-decl nil sqrt reals)
         (sq const-decl "nonneg_real" sq reals)
         (posreal_times_posreal_is_posreal judgement-tcc nil real_types nil)
         (div_mult_pos_lt2 formula-decl nil real_props nil)
         (posreal nonempty-type-eq-decl nil real_types nil)
         (> const-decl "bool" reals nil)
         (div_mult_pos_lt1 formula-decl nil real_props nil)
         (minus_real_is_real application-judgement "real" reals nil)
         (posreal_div_posreal_is_posreal application-judgement "posreal"
          real_types nil)
         (real_gt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (trichotomy formula-decl nil real_axioms nil)
         (nzreal_div_nzreal_is_nzreal application-judgement "nzreal"
          real_types nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (cos const-decl "real" sincos_def nil)
         (pi const-decl "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}"
          pi_def nil)
         (real_abs_lt_pi2 nonempty-type-eq-decl nil trig_types nil)
         (tan_restrict const-decl "real" trig_basic nil)
         (atan const-decl "{x: real_abs_lt_pi2 | y = tan_restrict(x)}" atan
               nil)
         (real_le_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (posint_times_posint_is_posint application-judgement "posint"
          integers nil)
         (odd_times_odd_is_odd application-judgement "odd_int" integers nil)
         (lt_times_lt_any1 formula-decl nil extra_real_props nil)
         (asin const-decl "real_abs_le_pi2" asin nil)
         (real_times_real_is_real application-judgement "real" reals nil)
         (atan_strict_increasing formula-decl nil atan nil))
        shostak))
      (asin_bij 0
       (asin_bij-2 "" 3790092299
        ("" (expand "bijective?")
         (("" (split 1)
           (("1" (expand "injective?")
             (("1" (skolem 1 ("x" "y"))
               (("1" (flatten)
                 (("1" (lemma "asin_strict_increasing")
                   (("1" (expand "strict_increasing?")
                     (("1" (lemma "trich_lt" ("x" "x" "y" "y"))
                       (("1" (split -1)
                         (("1" (inst - "x" "y") (("1" (assert) nil nil)) nil)
                          ("2" (propax) nil nil)
                          ("3" (inst - "y" "x") (("3" (assert) nil nil)) nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil)
            ("2" (lemma "atan_bij")
             (("2" (expand "bijective?")
               (("2" (flatten)
                 (("2" (hide -1)
                   (("2" (expand "surjective?")
                     (("2" (skosimp*)
                       (("2" (expand "asin")
                         (("2" (case "abs(y!1) <= pi/2")
                           (("1" (expand "<=" -1)
                             (("1" (split -1)
                               (("1" (inst - "y!1")
                                 (("1" (skosimp*)
                                   (("1" (inst + "x!1/sqrt(1+x!1*x!1)")
                                     (("1"
                                       (lemma "sq_pos" ("a" "x!1"))
                                       (("1"
                                         (expand "sq" -1)
                                         (("1"
                                           (lemma
                                            "sqrt_pos"
                                            ("px" "1+x!1*x!1"))
                                           (("1"
                                             (case
                                              "abs(x!1 / sqrt(1 + x!1 * x!1)) < 1")
                                             (("1"
                                               (case
                                                "x!1 / sqrt(1 + x!1 * x!1) /= -1")
                                               (("1"
                                                 (assert)
                                                 (("1"
                                                   (case
                                                    "x!1 / sqrt(1 + x!1 * x!1) * (x!1 / sqrt(1 + x!1 * x!1)) = sq(x!1)/(1+sq(x!1))")
                                                   (("1"
                                                     (replace -1 1)
                                                     (("1"
                                                       (case
                                                        "sqrt(1 - sq(x!1) / (1 + sq(x!1))) = 1/sqrt(1+x!1*x!1)")
                                                       (("1"
                                                         (replace -1 1)
                                                         (("1"
                                                           (lemma
                                                            "div_div2"
                                                            ("x"
                                                             "x!1"
                                                             "n0y"
                                                             "sqrt(1 + x!1 * x!1)"
                                                             "n0z"
                                                             "1 / sqrt(1 + x!1 * x!1)"))
                                                           (("1"
                                                             (replace -1 1)
                                                             (("1"
                                                               (lemma
                                                                "sq_sqrt"
                                                                ("x"
                                                                 "sqrt(1 + x!1 * x!1)"))
                                                               (("1"
                                                                 (assert)
                                                                 nil
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil)
                                                        ("2"
                                                         (hide 2)
                                                         (("2"
                                                           (lemma
                                                            "minus_div1"
                                                            ("x"
                                                             "1"
                                                             "n0x"
                                                             "1"
                                                             "y"
                                                             "sq(x!1)"
                                                             "n0y"
                                                             "1+sq(x!1)"))
                                                           (("2"
                                                             (replace -1 1)
                                                             (("2"
                                                               (simplify 1)
                                                               (("2"
                                                                 (rewrite
                                                                  "sqrt_div"
                                                                  1)
                                                                 (("2"
                                                                   (expand
                                                                    "sq"
                                                                    1)
                                                                   (("2"
                                                                     (propax)
                                                                     nil
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil)
                                                        ("3"
                                                         (hide 2)
                                                         (("3"
                                                           (lemma
                                                            "div_mult_pos_le1"
                                                            ("z"
                                                             "sq(x!1)"
                                                             "py"
                                                             "1+sq(x!1)"
                                                             "x"
                                                             "1"))
                                                           (("3"
                                                             (assert)
                                                             nil
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil)
                                                    ("2"
                                                     (hide 2)
                                                     (("2"
                                                       (rewrite "sq_rew" 1)
                                                       (("2"
                                                         (rewrite "sq_rew" 1)
                                                         (("2"
                                                           (rewrite
                                                            "sq_div"
                                                            1)
                                                           nil
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil))
                                                 nil)
                                                ("2" (assert) nil nil))
                                               nil)
                                              ("2"
                                               (hide 2)
                                               (("2"
                                                 (rewrite "abs_div" 1)
                                                 (("2"
                                                   (expand "abs" 1 2)
                                                   (("2"
                                                     (lemma
                                                      "div_mult_pos_lt1"
                                                      ("z"
                                                       "abs(x!1)"
                                                       "py"
                                                       "sqrt(1 + x!1 * x!1)"
                                                       "x"
                                                       "			  1"))
                                                     (("1"
                                                       (replace -1 1)
                                                       (("1"
                                                         (lemma
                                                          "sq_lt"
                                                          ("nna"
                                                           "abs(x!1)"
                                                           "nnb"
                                                           "sqrt(1 + x!1 * x!1)"))
                                                         (("1"
                                                           (replace -1 1 rl)
                                                           (("1"
                                                             (rewrite
                                                              "sq_sqrt"
                                                              1)
                                                             (("1"
                                                               (expand
                                                                "abs"
                                                                1)
                                                               (("1"
                                                                 (case
                                                                  "x!1<0")
                                                                 (("1"
                                                                   (assert)
                                                                   (("1"
                                                                     (expand
                                                                      "sq"
                                                                      1)
                                                                     (("1"
                                                                       (assert)
                                                                       nil
                                                                       nil))
                                                                     nil))
                                                                   nil)
                                                                  ("2"
                                                                   (assert)
                                                                   (("2"
                                                                     (expand
                                                                      "sq")
                                                                     (("2"
                                                                       (assert)
                                                                       nil
                                                                       nil))
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil)
                                                      ("2" (propax) nil nil))
                                                     nil))
                                                   nil))
                                                 nil))
                                               nil)
                                              ("3" (assert) nil nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil)
                                      ("2"
                                       (hide -1 -2)
                                       (("2"
                                         (lemma "sq_pos" ("a" "x!1"))
                                         (("2"
                                           (expand "sq" -1)
                                           (("2"
                                             (lemma
                                              "sqrt_pos"
                                              ("px" "1+x!1*x!1"))
                                             (("2"
                                               (case
                                                "abs(x!1) / sqrt(1 + x!1 * x!1) < 1")
                                               (("1"
                                                 (cross-mult -1)
                                                 (("1"
                                                   (prop)
                                                   (("1"
                                                     (cross-mult 1)
                                                     nil
                                                     nil)
                                                    ("2"
                                                     (expand "abs")
                                                     (("2"
                                                       (lift-if)
                                                       (("2"
                                                         (ground)
                                                         (("1"
                                                           (cross-mult 1)
                                                           nil
                                                           nil)
                                                          ("2"
                                                           (hide 2)
                                                           (("2"
                                                             (lemma
                                                              "div_mult_pos_lt1"
                                                              ("z"
                                                               "abs(x!1)"
                                                               "py"
                                                               "sqrt(1 + x!1 * x!1)"
                                                               "x"
                                                               "			  1"))
                                                             (("2"
                                                               (lemma
                                                                "sq_lt"
                                                                ("nna"
                                                                 "abs(x!1)"
                                                                 "nnb"
                                                                 "sqrt(1 + x!1 * x!1)"))
                                                               (("2"
                                                                 (case
                                                                  "x!1<0")
                                                                 (("1"
                                                                   (propax)
                                                                   nil
                                                                   nil)
                                                                  ("2"
                                                                   (assert)
                                                                   (("2"
                                                                     (expand
                                                                      "sq")
                                                                     (("2"
                                                                       (lemma
                                                                        "sq_pos"
                                                                        ("a"
                                                                         "x!1"))
                                                                       (("2"
                                                                         (expand
                                                                          "sq"
                                                                          -1)
                                                                         (("2"
                                                                           (lemma
                                                                            "sqrt_pos"
                                                                            ("px"
                                                                             "1+x!1*x!1"))
                                                                           (("2"
                                                                             (hide
                                                                              2)
                                                                             (("2"
                                                                               (grind)
                                                                               nil
                                                                               nil))
                                                                             nil))
                                                                           nil))
                                                                         nil))
                                                                       nil))
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil))
                                                 nil)
                                                ("2"
                                                 (case "y!1<0")
                                                 (("1"
                                                   (hide 2)
                                                   (("1"
                                                     (field 1)
                                                     (("1"
                                                       (lemma "sq_lt")
                                                       (("1"
                                                         (inst
                                                          -
                                                          "abs(x!1) / sqrt(1 + x!1 * x!1)"
                                                          "1")
                                                         (("1"
                                                           (assert)
                                                           (("1"
                                                             (hide 2)
                                                             (("1"
                                                               (rewrite
                                                                "sq_div")
                                                               (("1"
                                                                 (cross-mult
                                                                  1)
                                                                 (("1"
                                                                   (rewrite
                                                                    "sq_rew")
                                                                   (("1"
                                                                     (assert)
                                                                     nil
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil)
                                                          ("2"
                                                           (hide 2)
                                                           (("2"
                                                             (flatten)
                                                             (("2"
                                                               (assert)
                                                               nil
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil)
                                                  ("2"
                                                   (assert)
                                                   (("2"
                                                     (hide 3)
                                                     (("2"
                                                       (hide -1 -2 1)
                                                       (("2"
                                                         (lemma "sq_lt")
                                                         (("2"
                                                           (inst
                                                            -
                                                            "abs(x!1) / sqrt(1 + x!1 * x!1)"
                                                            "1")
                                                           (("2"
                                                             (assert)
                                                             (("2"
                                                               (hide 2)
                                                               (("2"
                                                                 (rewrite
                                                                  "sq_div")
                                                                 (("2"
                                                                   (rewrite
                                                                    "sq_rew")
                                                                   (("2"
                                                                     (cross-mult
                                                                      1)
                                                                     nil
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil))
                                                 nil)
                                                ("3" (assert) nil nil))
                                               nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil)
                                      ("3"
                                       (flatten)
                                       (("3"
                                         (lemma "sqrt_eq_0")
                                         (("3"
                                           (inst - "1 +x!1*x!1")
                                           (("3"
                                             (replace -2)
                                             (("3"
                                               (hide -2 -3 -4)
                                               (("3"
                                                 (assert)
                                                 (("3"
                                                   (rewrite "sq_rew")
                                                   (("3" (assert) nil nil))
                                                   nil))
                                                 nil))
                                               nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil))
                                     nil))
                                   nil)
                                  ("2" (hide 2) (("2" (assert) nil nil)) nil))
                                 nil)
                                ("2" (expand "abs" -1)
                                 (("2" (case "y!1<0")
                                   (("1" (assert)
                                     (("1"
                                       (inst + "-1")
                                       (("1" (assert) nil nil))
                                       nil))
                                     nil)
                                    ("2" (assert)
                                     (("2"
                                       (inst + "1")
                                       (("2" (assert) nil nil))
                                       nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil)
                            ("2" (hide -1 2)
                             (("2" (typepred "y!1")
                               (("2" (expand "abs")
                                 (("2" (ground)
                                   (("2" (lift-if) (("2" (ground) nil nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil))
           nil))
         nil)
        nil shostak)
       (asin_bij-1 nil 3262233550
        ("" (expand "bijective?")
         (("" (split 1)
           (("1" (expand "injective?")
             (("1" (skolem 1 ("x" "y"))
               (("1" (flatten)
                 (("1" (lemma "asin_strict_increasing")
                   (("1" (expand "strict_increasing?")
                     (("1" (lemma "trich_lt" ("x" "x" "y" "y"))
                       (("1" (split -1)
                         (("1" (inst - "x" "y") (("1" (assert) nil nil)) nil)
                          ("2" (propax) nil nil)
                          ("3" (inst - "y" "x") (("3" (assert) nil nil)) nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil)
            ("2" (lemma "atan_bij")
             (("2" (expand "bijective?")
               (("2" (flatten)
                 (("2" (hide -1)
                   (("2" (expand "surjective?")
                     (("2" (skosimp*)
                       (("2" (expand "asin")
                         (("2" (case "abs(y!1) <= pi/2")
                           (("1" (expand "<=" -1)
                             (("1" (split -1)
                               (("1" (inst - "y!1")
                                 (("1" (skosimp*)
                                   (("1" (inst + "x!1/sqrt(1+x!1*x!1)")
                                     (("1"
                                       (lemma "sq_pos" ("a" "x!1"))
                                       (("1"
                                         (expand "sq" -1)
                                         (("1"
                                           (lemma
                                            "sqrt_pos"
                                            ("px" "1+x!1*x!1"))
                                           (("1"
                                             (case
                                              "abs(x!1 / sqrt(1 + x!1 * x!1)) < 1")
                                             (("1"
                                               (case
                                                "x!1 / sqrt(1 + x!1 * x!1) /= -1")
                                               (("1"
                                                 (assert)
                                                 (("1"
                                                   (case
                                                    "x!1 / sqrt(1 + x!1 * x!1) * (x!1 / sqrt(1 + x!1 * x!1)) = sq(x!1)/(1+sq(x!1))")
                                                   (("1"
                                                     (replace -1 1)
                                                     (("1"
                                                       (case
                                                        "sqrt(1 - sq(x!1) / (1 + sq(x!1))) = 1/sqrt(1+x!1*x!1)")
                                                       (("1"
                                                         (replace -1 1)
                                                         (("1"
                                                           (lemma
                                                            "div_div2"
                                                            ("x"
                                                             "x!1"
                                                             "n0y"
                                                             "sqrt(1 + x!1 * x!1)"
                                                             "n0z"
                                                             "1 / sqrt(1 + x!1 * x!1)"))
                                                           (("1"
                                                             (replace -1 1)
                                                             (("1"
                                                               (lemma
                                                                "sq_sqrt"
                                                                ("x"
                                                                 "sqrt(1 + x!1 * x!1)"))
                                                               (("1"
                                                                 (assert)
                                                                 nil
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil)
                                                        ("2"
                                                         (hide 2)
                                                         (("2"
                                                           (lemma
                                                            "minus_div1"
                                                            ("x"
                                                             "1"
                                                             "n0x"
                                                             "1"
                                                             "y"
                                                             "sq(x!1)"
                                                             "n0y"
                                                             "1+sq(x!1)"))
                                                           (("2"
                                                             (replace -1 1)
                                                             (("2"
                                                               (simplify 1)
                                                               (("2"
                                                                 (rewrite
                                                                  "sqrt_div"
                                                                  1)
                                                                 (("2"
                                                                   (expand
                                                                    "sq"
                                                                    1)
                                                                   (("2"
                                                                     (propax)
                                                                     nil
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil)
                                                        ("3"
                                                         (hide 2)
                                                         (("3"
                                                           (lemma
                                                            "div_mult_pos_le1"
                                                            ("z"
                                                             "sq(x!1)"
                                                             "py"
                                                             "1+sq(x!1)"
                                                             "x"
                                                             "1"))
                                                           (("3"
                                                             (assert)
                                                             nil
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil)
                                                    ("2"
                                                     (hide 2)
                                                     (("2"
                                                       (rewrite "sq_rew" 1)
                                                       (("2"
                                                         (rewrite "sq_rew" 1)
                                                         (("2"
                                                           (rewrite
                                                            "sq_div"
                                                            1)
                                                           nil
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil))
                                                 nil)
                                                ("2" (assert) nil nil))
                                               nil)
                                              ("2"
                                               (hide 2)
                                               (("2"
                                                 (rewrite "abs_div" 1)
                                                 (("2"
                                                   (expand "abs" 1 2)
                                                   (("2"
                                                     (lemma
                                                      "div_mult_pos_lt1"
                                                      ("z"
                                                       "abs(x!1)"
                                                       "py"
                                                       "sqrt(1 + x!1 * x!1)"
                                                       "x"
                                                       "			  1"))
                                                     (("1"
                                                       (replace -1 1)
                                                       (("1"
                                                         (lemma
                                                          "sq_lt"
                                                          ("nna"
                                                           "abs(x!1)"
                                                           "nnb"
                                                           "sqrt(1 + x!1 * x!1)"))
                                                         (("1"
                                                           (replace -1 1 rl)
                                                           (("1"
                                                             (rewrite
                                                              "sq_sqrt"
                                                              1)
                                                             (("1"
                                                               (expand
                                                                "abs"
                                                                1)
                                                               (("1"
                                                                 (case
                                                                  "x!1<0")
                                                                 (("1"
                                                                   (assert)
                                                                   (("1"
                                                                     (expand
                                                                      "sq"
                                                                      1)
                                                                     (("1"
                                                                       (assert)
                                                                       nil
                                                                       nil))
                                                                     nil))
                                                                   nil)
                                                                  ("2"
                                                                   (assert)
                                                                   (("2"
                                                                     (expand
                                                                      "sq")
                                                                     (("2"
                                                                       (assert)
                                                                       nil
                                                                       nil))
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil)
                                                      ("2" (propax) nil nil))
                                                     nil))
                                                   nil))
                                                 nil))
                                               nil)
                                              ("3" (assert) nil nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil)
                                      ("2"
                                       (hide -1 -2)
                                       (("2"
                                         (lemma "sq_pos" ("a" "x!1"))
                                         (("2"
                                           (expand "sq" -1)
                                           (("2"
                                             (lemma
                                              "sqrt_pos"
                                              ("px" "1+x!1*x!1"))
                                             (("2"
                                               (case
                                                "abs(x!1) / sqrt(1 + x!1 * x!1) < 1")
                                               (("1"
                                                 (cross-mult -1)
                                                 (("1"
                                                   (prop)
                                                   (("1"
                                                     (cross-mult 1)
                                                     nil
                                                     nil)
                                                    ("2"
                                                     (expand "abs")
                                                     (("2"
                                                       (lift-if)
                                                       (("2"
                                                         (ground)
                                                         (("1"
                                                           (cross-mult 1)
                                                           nil
                                                           nil)
                                                          ("2"
                                                           (hide 2)
                                                           (("2"
                                                             (lemma
                                                              "div_mult_pos_lt1"
                                                              ("z"
                                                               "abs(x!1)"
                                                               "py"
                                                               "sqrt(1 + x!1 * x!1)"
                                                               "x"
                                                               "			  1"))
                                                             (("2"
                                                               (lemma
                                                                "sq_lt"
                                                                ("nna"
                                                                 "abs(x!1)"
                                                                 "nnb"
                                                                 "sqrt(1 + x!1 * x!1)"))
                                                               (("2"
                                                                 (case
                                                                  "x!1<0")
                                                                 (("1"
                                                                   (propax)
                                                                   nil
                                                                   nil)
                                                                  ("2"
                                                                   (assert)
                                                                   (("2"
                                                                     (expand
                                                                      "sq")
                                                                     (("2"
                                                                       (lemma
                                                                        "sq_pos"
                                                                        ("a"
                                                                         "x!1"))
                                                                       (("2"
                                                                         (expand
                                                                          "sq"
                                                                          -1)
                                                                         (("2"
                                                                           (lemma
                                                                            "sqrt_pos"
                                                                            ("px"
                                                                             "1+x!1*x!1"))
                                                                           (("2"
                                                                             (hide
                                                                              2)
                                                                             (("2"
                                                                               (grind)
                                                                               nil
                                                                               nil))
                                                                             nil))
                                                                           nil))
                                                                         nil))
                                                                       nil))
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil))
                                                 nil)
                                                ("2"
                                                 (case "y!1<0")
                                                 (("1"
                                                   (hide 2)
                                                   (("1"
                                                     (field 1)
                                                     (("1"
                                                       (lemma "sq_lt")
                                                       (("1"
                                                         (inst
                                                          -
                                                          "abs(x!1) / sqrt(1 + x!1 * x!1)"
                                                          "1")
                                                         (("1"
                                                           (assert)
                                                           (("1"
                                                             (hide 2)
                                                             (("1"
                                                               (rewrite
                                                                "sq_div")
                                                               (("1"
                                                                 (cross-mult
                                                                  1)
                                                                 (("1"
                                                                   (rewrite
                                                                    "sq_rew")
                                                                   (("1"
                                                                     (assert)
                                                                     nil
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil)
                                                          ("2"
                                                           (hide 2)
                                                           (("2"
                                                             (flatten)
                                                             (("2"
                                                               (assert)
                                                               nil
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil)
                                                  ("2"
                                                   (assert)
                                                   (("2"
                                                     (hide 3)
                                                     (("2"
                                                       (hide -1 -2 1)
                                                       (("2"
                                                         (lemma "sq_lt")
                                                         (("2"
                                                           (inst
                                                            -
                                                            "abs(x!1) / sqrt(1 + x!1 * x!1)"
                                                            "1")
                                                           (("2"
                                                             (assert)
                                                             (("2"
                                                               (hide 2)
                                                               (("2"
                                                                 (rewrite
                                                                  "sq_div")
                                                                 (("2"
                                                                   (rewrite
                                                                    "sq_rew")
                                                                   (("2"
                                                                     (cross-mult
                                                                      1)
                                                                     nil
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil))
                                                 nil)
                                                ("3" (assert) nil nil))
                                               nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil)
                                      ("3"
                                       (flatten)
                                       (("3"
                                         (lemma "sqrt_eq_0")
                                         (("3"
                                           (inst - "1 +x!1*x!1")
                                           (("3"
                                             (replace -2)
                                             (("3"
                                               (hide -2 -3 -4)
                                               (("3"
                                                 (assert)
                                                 (("3"
                                                   (rewrite "sq_rew")
                                                   (("3" (assert) nil nil))
                                                   nil))
                                                 nil))
                                               nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil))
                                     nil))
                                   nil)
                                  ("2" (expand "pi" -1)
                                   (("2" (hide 2)
                                     (("2"
                                       (assert)
                                       (("2"
                                         (expand "pi")
                                         (("2" (propax) nil nil))
                                         nil))
                                       nil))
                                     nil))
                                   nil))
                                 nil)
                                ("2" (expand "abs" -1)
                                 (("2" (case "y!1<0")
                                   (("1" (assert)
                                     (("1"
                                       (inst + "-1")
                                       (("1" (assert) nil nil))
                                       nil))
                                     nil)
                                    ("2" (assert)
                                     (("2"
                                       (inst + "1")
                                       (("2" (assert) nil nil))
                                       nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil)
                            ("2" (hide -1 2)
                             (("2" (typepred "y!1")
                               (("2" (expand "abs")
                                 (("2" (ground)
                                   (("2" (lift-if) (("2" (ground) nil nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil))
           nil))
         nil)
        ((asin_strict_increasing formula-decl nil asin nil)
         (real_abs_le1 nonempty-type-eq-decl nil trig_types nil)
         (- const-decl "[numfield -> numfield]" number_fields nil)
         (numfield nonempty-type-eq-decl nil number_fields nil)
         (<= const-decl "bool" reals nil)
         (AND const-decl "[bool, bool -> bool]" booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (real nonempty-type-from-decl nil reals nil)
         (real_pred const-decl "[number_field -> boolean]" reals nil)
         (number_field nonempty-type-from-decl nil number_fields nil)
         (number_field_pred const-decl "[number -> boolean]" number_fields
          nil)
         (boolean nonempty-type-decl nil booleans nil)
         (number nonempty-type-decl nil numbers nil)
         (trich_lt formula-decl nil real_props nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (pi_bound name-judgement
          "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def nil)
         (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
          nil)
         (strict_increasing? const-decl "bool" real_fun_preds reals)
         (injective? const-decl "bool" functions nil)
         (real_abs_le_pi2 nonempty-type-eq-decl nil trig_types nil)
         (pi const-decl "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}"
          pi_def nil)
         (cos const-decl "real" sincos_def nil)
         (= const-decl "[T, T -> boolean]" equalities nil)
         (< const-decl "bool" reals nil) (> const-decl "bool" reals nil)
         (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
         (nznum nonempty-type-eq-decl nil number_fields nil)
         (/= const-decl "boolean" notequal nil)
         (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
              nil)
         (nonneg_real nonempty-type-eq-decl nil real_types nil)
         (>= const-decl "bool" reals nil)
         (posreal_div_posreal_is_posreal application-judgement "posreal"
          real_types nil)
         (sqrt_eq_0 formula-decl nil sqrt reals)
         (div_mult_pos_le2 formula-decl nil real_props nil)
         (sq_1 formula-decl nil sq reals)
         (both_sides_times_pos_ge1_imp formula-decl nil extra_real_props nil)
         (div_cancel2 formula-decl nil real_props nil)
         (TRUE const-decl "bool" booleans nil)
         (id const-decl "(bijective?[T, T])" identity nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (sq_pos formula-decl nil sq reals)
         (sqrt_pos judgement-tcc nil sqrt reals)
         (posreal nonempty-type-eq-decl nil real_types nil)
         (real_gt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (minus_real_is_real application-judgement "real" reals nil)
         (sq_abs formula-decl nil sq reals) (sq_lt formula-decl nil sq reals)
         (div_mult_pos_lt1 formula-decl nil real_props nil)
         (abs_div formula-decl nil real_props nil)
         (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
          real_types nil)
         (posreal_plus_nnreal_is_posreal application-judgement "posreal"
          real_types nil)
         (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (div_div2 formula-decl nil real_props nil)
         (nonzero_real nonempty-type-eq-decl nil reals nil)
         (sq_sqrt formula-decl nil sqrt reals)
         (minus_div1 formula-decl nil real_props nil)
         (posreal_times_posreal_is_posreal application-judgement "posreal"
          real_types nil)
         (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
          real_types nil)
         (sqrt_1 formula-decl nil sqrt reals)
         (sqrt_pos application-judgement "posreal" sqrt reals)
         (sqrt_div formula-decl nil sqrt reals)
         (posrat_div_posrat_is_posrat application-judgement "posrat" rationals
          nil)
         (div_mult_pos_le1 formula-decl nil real_props nil)
         (sq_rew formula-decl nil sq reals)
         (sq_nz_pos application-judgement "posreal" sq reals)
         (sq_div formula-decl nil sq reals)
         (real_minus_real_is_real application-judgement "real" reals nil)
         (sq const-decl "nonneg_real" sq reals)
         (x!1 skolem-const-decl "real" asin nil)
         (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
         (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (nnreal type-eq-decl nil real_types nil)
         (real_plus_real_is_real application-judgement "real" reals nil)
         (real_div_nzreal_is_real application-judgement "real" reals nil)
         (real_le_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (real_ge_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (real_abs_lt_pi2 nonempty-type-eq-decl nil trig_types nil)
         (y!1 skolem-const-decl "real_abs_le_pi2" asin nil)
         (nzreal_div_nzreal_is_nzreal application-judgement "nzreal"
          real_types nil)
         (asin const-decl "real_abs_le_pi2" asin nil)
         (real_times_real_is_real application-judgement "real" reals nil)
         (surjective? const-decl "bool" functions nil)
         (atan_bij formula-decl nil atan nil)
         (bijective? const-decl "bool" functions nil))
        shostak))
      (asin_derivable_TCC1 0
       (asin_derivable_TCC1-1 nil 3262783212 ("" (grind) nil nil) nil shostak
        (asin_derivable subtype "asin.x" "real_abs_le1")))
      (asin_derivable_TCC2 0
       (asin_derivable_TCC2-2 "" 3790092299
        ("" (lemma deriv_domain_open) (("" (inst - "-1" "1") nil nil)) nil)
        nil shostak
        (asin_derivable assuming
         "analysis@derivatives_def[real_abs_lt1].derivatives_def"
         "deriv_domain: ASSUMPTION deriv_domain_def[T].deriv_domain?"))
       (asin_derivable_TCC2-1 nil 3262782944
        ("" (lemma deriv_domain_open)
         (("" (inst - "-1" "1")
           (("" (expand "deriv_domain?") (("" (propax) nil nil)) nil)) nil))
         nil)
        ((minus_odd_is_odd application-judgement "odd_int" integers nil)
         (number nonempty-type-decl nil numbers nil)
         (boolean nonempty-type-decl nil booleans nil)
         (number_field_pred const-decl "[number -> boolean]" number_fields
          nil)
         (number_field nonempty-type-from-decl nil number_fields nil)
         (real_pred const-decl "[number_field -> boolean]" reals nil)
         (real nonempty-type-from-decl nil reals nil)
         (numfield nonempty-type-eq-decl nil number_fields nil)
         (- const-decl "[numfield -> numfield]" number_fields nil)
         (deriv_domain_open formula-decl nil deriv_domain analysis))
        shostak
        (asin_derivable assuming
         "analysis@derivatives_def[real_abs_lt1].derivatives_def"
         "deriv_domain: ASSUMPTION deriv_domain_def[T].deriv_domain?")))
      (asin_derivable_TCC3 0
       (asin_derivable_TCC3-1 nil 3262783234 ("" (assert) nil nil)
        ((noa_abs_lt1 formula-decl nil trig_types nil)) shostak
        (asin_derivable assuming
         "analysis@derivatives_def[real_abs_lt1].derivatives_def"
         "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?")))
      (asin_derivable 0
       (asin_derivable-4 "" 3790092302
        ("" (skolem 1 ("z"))
         (("" (expand "asin")
           ((""
             (lemma "extensionality"
              ("f" "(LAMBDA (x: real_abs_lt1):
                          IF x = -1 THEN -pi / 2
                          ELSIF x < 1 THEN atan(x / sqrt(1 - x * x))
                          ELSE pi / 2
                          ENDIF)" "g"
               "LAMBDA (x:real_abs_lt1): atan(x / sqrt(1 - x * x))"))
             (("1" (split -1)
               (("1" (hide -1)
                 (("1" (lemma "identity_derivable_fun[real_abs_lt1]")
                   (("1" (lemma "const_derivable_fun[real_abs_lt1]" ("b" "1"))
                     (("1" (expand "I")
                       (("1"
                         (lemma "prod_derivable_fun[real_abs_lt1]"
                          ("f1" "LAMBDA (x: real_abs_lt1): x" "f2"
                           "LAMBDA (x: real_abs_lt1): x"))
                         (("1" (assert)
                           (("1" (expand "*")
                             (("1"
                               (lemma "diff_derivable_fun[real_abs_lt1]"
                                ("f1" "LAMBDA (x: real_abs_lt1): 1" "f2"
                                 "LAMBDA (x_1: real_abs_lt1): x_1 * x_1"))
                               (("1" (assert)
                                 (("1" (expand "-")
                                   (("1" (lemma "sqrt_derivable_fun")
                                     (("1"
                                       (expand "restrict")
                                       (("1"
                                         (lemma
                                          "composition_derivable_fun[real_abs_lt1,posreal]"
                                          ("f"
                                           "LAMBDA (x_1: real_abs_lt1): 1 - x_1 * x_1"
                                           "g"
                                           "LAMBDA (s: posreal): sqrt(s)"))
                                         (("1"
                                           (assert)
                                           (("1"
                                             (expand "o")
                                             (("1"
                                               (lemma
                                                "div_derivable_fun[real_abs_lt1]"
                                                ("f"
                                                 "LAMBDA (x:real_abs_lt1): x"
                                                 "g"
                                                 "LAMBDA (x: real_abs_lt1): sqrt(1 - x * x)"))
                                               (("1"
                                                 (assert)
                                                 (("1"
                                                   (expand "/")
                                                   (("1"
                                                     (lemma "deriv_atan_fun")
                                                     (("1"
                                                       (flatten -1)
                                                       (("1"
                                                         (lemma
                                                          "composition_derivable_fun[real_abs_lt1,real]"
                                                          ("f"
                                                           "LAMBDA (x_1: real_abs_lt1): x_1 / sqrt(1 - x_1 * x_1)"
                                                           "g"
                                                           "atan"))
                                                         (("1"
                                                           (assert)
                                                           (("1"
                                                             (expand "o" -1)
                                                             (("1"
                                                               (expand
                                                                "derivable?"
                                                                -1)
                                                               (("1"
                                                                 (inst - "z")
                                                                 nil
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil))
                                                 nil))
                                               nil))
                                             nil))
                                           nil)
                                          ("2"
                                           (hide-all-but 1)
                                           (("2"
                                             (skosimp*)
                                             (("2"
                                               (typepred "x!1")
                                               (("2"
                                                 (mult-ineq -2 -2)
                                                 (("1" (assert) nil nil)
                                                  ("2" (grind) nil nil))
                                                 nil))
                                               nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil)
                ("2" (hide-all-but 1)
                 (("2" (skosimp*)
                   (("2" (typepred "x!1")
                     (("2" (case "x!1=-1")
                       (("1" (replace -1) (("1" (assert) nil nil)) nil)
                        ("2" (case "x!1<1")
                         (("1" (assert) nil nil) ("2" (propax) nil nil)) nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil)
              ("2" (hide-all-but 1)
               (("2" (skosimp*)
                 (("2" (typepred "x!1")
                   (("2" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
                     (("2" (expand "sq" -1)
                       (("2" (expand "abs" -1 2)
                         (("2" (lemma "sqrt_pos" ("px" "1-x!1*x!1"))
                           (("1" (mult-ineq -4 -4) (("1" (assert) nil nil))
                             nil)
                            ("2" (assert) (("2" (grind) nil nil)) nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil)
              ("3" (hide-all-but 1)
               (("3" (skosimp*)
                 (("3" (typepred "x!1")
                   (("3" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
                     (("3" (expand "sq")
                       (("3" (expand "abs" -1 2)
                         (("3" (assert)
                           (("3" (hide-all-but 1)
                             (("3" (typepred "x!1")
                               (("3" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
                                 (("3" (expand "sq")
                                   (("3" (assert)
                                     (("3"
                                       (hide-all-but 1)
                                       (("3"
                                         (typepred "x!1")
                                         (("3"
                                           (lemma
                                            "sq_lt_abs"
                                            ("a" "x!1" "b" "1"))
                                           (("3"
                                             (expand "abs" -1 2)
                                             (("3"
                                               (expand "sq")
                                               (("3" (grind) nil nil))
                                               nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil)
              ("4" (hide-all-but 1)
               (("4" (skosimp*)
                 (("4" (typepred "x!1")
                   (("4" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
                     (("4" (expand "sq")
                       (("4" (case-replace "abs(x!1) < 1")
                         (("1" (assert) nil nil) ("2" (grind) nil nil)) nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil)
              ("5" (hide-all-but 1)
               (("5" (skosimp*)
                 (("5" (typepred "x!1")
                   (("5" (mult-ineq -2 -2)
                     (("1" (assert) nil nil) ("2" (grind) nil nil)) nil))
                   nil))
                 nil))
               nil))
             nil))
           nil))
         nil)
        nil shostak)
       (asin_derivable-3 nil 3445346806
        ("" (skolem 1 ("z"))
         (("" (expand "asin")
           ((""
             (lemma "extensionality"
              ("f" "(LAMBDA (x: real_abs_lt1):
                          IF x = -1 THEN -pi / 2
                          ELSIF x < 1 THEN atan(x / sqrt(1 - x * x))
                          ELSE pi / 2
                          ENDIF)" "g"
               "LAMBDA (x:real_abs_lt1): atan(x / sqrt(1 - x * x))"))
             (("1" (split -1)
               (("1" (hide -1)
                 (("1" (lemma "identity_derivable_fun[real_abs_lt1]")
                   (("1" (lemma "const_derivable_fun[real_abs_lt1]" ("b" "1"))
                     (("1" (expand "I")
                       (("1"
                         (lemma "prod_derivable_fun[real_abs_lt1]"
                          ("f1" "LAMBDA (x: real_abs_lt1): x" "f2"
                           "LAMBDA (x: real_abs_lt1): x"))
                         (("1" (assert)
                           (("1" (expand "*")
                             (("1"
                               (lemma "diff_derivable_fun[real_abs_lt1]"
                                ("f1" "LAMBDA (x: real_abs_lt1): 1" "f2"
                                 "LAMBDA (x_1: real_abs_lt1): x_1 * x_1"))
                               (("1" (assert)
                                 (("1" (expand "-")
                                   (("1" (lemma "sqrt_derivable_fun")
                                     (("1"
                                       (expand "restrict")
                                       (("1"
                                         (lemma
                                          "composition_derivable_fun[real_abs_lt1,posreal]"
                                          ("f"
                                           "LAMBDA (x_1: real_abs_lt1): 1 - x_1 * x_1"
                                           "g"
                                           "LAMBDA (s: posreal): sqrt(s)"))
                                         (("1"
                                           (assert)
                                           (("1"
                                             (expand "o")
                                             (("1"
                                               (lemma
                                                "div_derivable_fun[real_abs_lt1]"
                                                ("f"
                                                 "LAMBDA (x:real_abs_lt1): x"
                                                 "g"
                                                 "LAMBDA (x: real_abs_lt1): sqrt(1 - x * x)"))
                                               (("1"
                                                 (assert)
                                                 (("1"
                                                   (expand "/")
                                                   (("1"
                                                     (lemma "deriv_atan_fun")
                                                     (("1"
                                                       (flatten -1)
                                                       (("1"
                                                         (lemma
                                                          "composition_derivable_fun[real_abs_lt1,real]"
                                                          ("f"
                                                           "LAMBDA (x_1: real_abs_lt1): x_1 / sqrt(1 - x_1 * x_1)"
                                                           "g"
                                                           "atan"))
                                                         (("1"
                                                           (assert)
                                                           (("1"
                                                             (expand "o" -1)
                                                             (("1"
                                                               (expand
                                                                "derivable?"
                                                                -1)
                                                               (("1"
                                                                 (inst - "z")
                                                                 nil
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil)
                                                          ("2"
                                                           (hide-all-but 1)
                                                           (("2"
                                                             (assert)
                                                             (("2"
                                                               (expand
                                                                "not_one_element?")
                                                               (("2"
                                                                 (skosimp*)
                                                                 (("2"
                                                                   (assert)
                                                                   (("2"
                                                                     (inst
                                                                      +
                                                                      "x!1+1")
                                                                     (("2"
                                                                       (assert)
                                                                       nil
                                                                       nil))
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil)
                                                          ("3"
                                                           (lemma
                                                            deriv_domain_real)
                                                           (("3"
                                                             (propax)
                                                             nil
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil))
                                                 nil))
                                               nil))
                                             nil))
                                           nil)
                                          ("2"
                                           (hide-all-but 1)
                                           (("2"
                                             (skosimp*)
                                             (("2"
                                               (typepred "x!1")
                                               (("2"
                                                 (mult-ineq -2 -2)
                                                 (("1" (assert) nil nil)
                                                  ("2" (grind) nil nil))
                                                 nil))
                                               nil))
                                             nil))
                                           nil)
                                          ("3"
                                           (hide-all-but 1)
                                           (("3"
                                             (assert)
                                             (("3"
                                               (expand "not_one_element?")
                                               (("3"
                                                 (skosimp*)
                                                 (("3"
                                                   (inst + "x!1+1")
                                                   (("3" (assert) nil nil))
                                                   nil))
                                                 nil))
                                               nil))
                                             nil))
                                           nil)
                                          ("4"
                                           (hide-all-but 1)
                                           (("4"
                                             (lemma deriv_domain_posreal)
                                             (("4" (propax) nil nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil)
                ("2" (hide-all-but 1)
                 (("2" (skosimp*)
                   (("2" (typepred "x!1")
                     (("2" (case "x!1=-1")
                       (("1" (replace -1) (("1" (assert) nil nil)) nil)
                        ("2" (case "x!1<1")
                         (("1" (assert) nil nil) ("2" (propax) nil nil)) nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil)
              ("2" (hide-all-but 1)
               (("2" (skosimp*)
                 (("2" (typepred "x!1")
                   (("2" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
                     (("2" (expand "sq" -1)
                       (("2" (expand "abs" -1 2)
                         (("2" (lemma "sqrt_pos" ("px" "1-x!1*x!1"))
                           (("1" (mult-ineq -4 -4) (("1" (assert) nil nil))
                             nil)
                            ("2" (assert) (("2" (grind) nil nil)) nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil)
              ("3" (hide-all-but 1)
               (("3" (skosimp*)
                 (("3" (typepred "x!1")
                   (("3" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
                     (("3" (expand "sq")
                       (("3" (expand "abs" -1 2)
                         (("3" (assert)
                           (("3" (hide-all-but 1)
                             (("3" (typepred "x!1")
                               (("3" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
                                 (("3" (expand "sq")
                                   (("3" (assert)
                                     (("3"
                                       (hide-all-but 1)
                                       (("3"
                                         (typepred "x!1")
                                         (("3"
                                           (lemma
                                            "sq_lt_abs"
                                            ("a" "x!1" "b" "1"))
                                           (("3"
                                             (expand "abs" -1 2)
                                             (("3"
                                               (expand "sq")
                                               (("3" (grind) nil nil))
                                               nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil)
              ("4" (hide-all-but 1)
               (("4" (skosimp*)
                 (("4" (typepred "x!1")
                   (("4" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
                     (("4" (expand "sq")
                       (("4" (case-replace "abs(x!1) < 1")
                         (("1" (assert) nil nil) ("2" (grind) nil nil)) nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil)
              ("5" (hide-all-but 1)
               (("5" (skosimp*)
                 (("5" (typepred "x!1")
                   (("5" (mult-ineq -2 -2)
                     (("1" (assert) nil nil) ("2" (grind) nil nil)) nil))
                   nil))
                 nil))
               nil))
             nil))
           nil))
         nil)
        ((real_times_real_is_real application-judgement "real" reals nil)
         (pi_bound name-judgement
          "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def nil)
         (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
          nil)
         (asin const-decl "real_abs_le_pi2" asin nil)
         (sq const-decl "nonneg_real" sq reals)
         (sqrt_pos judgement-tcc nil sqrt reals)
         (real_gt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (sq_lt_abs formula-decl nil sq reals)
         (identity_derivable_fun formula-decl nil derivatives analysis)
         (I const-decl "(bijective?[T, T])" identity nil)
         (diff_derivable_fun formula-decl nil derivatives analysis)
         (- const-decl "[T -> real]" real_fun_ops reals)
         (restrict const-decl "R" restrict nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
              nil)
         (nzrat_abs_is_pos application-judgement "{r: posrat | r >= q}"
          real_defs nil)
         (nzint_abs_is_pos application-judgement "{j: posint | j >= i}"
          real_defs nil)
         (int_abs_is_nonneg application-judgement "{j: nonneg_int | j >= i}"
          real_defs nil)
         (real_le_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (lt_times_lt_any1 formula-decl nil extra_real_props nil)
         (real_ge_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (odd_times_odd_is_odd application-judgement "odd_int" integers nil)
         (posint_times_posint_is_posint application-judgement "posint"
          integers nil)
         (sqrt_pos application-judgement "posreal" sqrt reals)
         (div_derivable_fun formula-decl nil derivatives analysis)
         (nzreal nonempty-type-eq-decl nil reals nil)
         (/ const-decl "[T -> real]" real_fun_ops reals)
         (real_plus_real_is_real application-judgement "real" reals nil)
         (derivable? const-decl "bool" derivatives analysis)
         (deriv_atan_fun formula-decl nil atan nil)
         (O const-decl "T3" function_props nil)
         (not_one_element? const-decl "bool" deriv_domain_def analysis)
         (deriv_domain? const-decl "bool" deriv_domain_def analysis)
         (posreal nonempty-type-eq-decl nil real_types nil)
         (composition_derivable_fun formula-decl nil chain_rule analysis)
         (sqrt_derivable_fun formula-decl nil sqrt_derivative analysis)
         (* const-decl "[T -> real]" real_fun_ops reals)
         (prod_derivable_fun formula-decl nil derivatives analysis)
         (const_derivable_fun formula-decl nil derivatives analysis)
         (posreal_div_posreal_is_posreal application-judgement "posreal"
          real_types nil)
         (nzreal_div_nzreal_is_nzreal application-judgement "nzreal"
          real_types nil)
         (real_minus_real_is_real application-judgement "real" reals nil)
         (real_div_nzreal_is_real application-judgement "real" reals nil)
         (extensionality formula-decl nil functions nil)
         (IF const-decl "[boolean, T, T -> T]" if_def nil)
         (= const-decl "[T, T -> boolean]" equalities nil)
         (/= const-decl "boolean" notequal nil)
         (nznum nonempty-type-eq-decl nil number_fields nil)
         (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
         (> const-decl "bool" reals nil)
         (cos const-decl "real" sincos_def nil)
         (pi const-decl "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}"
          pi_def nil)
         (real_abs_lt_pi2 nonempty-type-eq-decl nil trig_types nil)
         (tan_restrict const-decl "real" trig_basic nil)
         (atan const-decl "{x: real_abs_lt_pi2 | y = tan_restrict(x)}" atan
               nil)
         (nonneg_real nonempty-type-eq-decl nil real_types nil)
         (>= const-decl "bool" reals nil)
         (nnreal type-eq-decl nil real_types nil)
         (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
         (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (number nonempty-type-decl nil numbers nil)
         (boolean nonempty-type-decl nil booleans nil)
         (number_field_pred const-decl "[number -> boolean]" number_fields
          nil)
         (number_field nonempty-type-from-decl nil number_fields nil)
         (real_pred const-decl "[number_field -> boolean]" reals nil)
         (real nonempty-type-from-decl nil reals nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (AND const-decl "[bool, bool -> bool]" booleans nil)
         (< const-decl "bool" reals nil)
         (numfield nonempty-type-eq-decl nil number_fields nil)
         (- const-decl "[numfield -> numfield]" number_fields nil)
         (real_abs_lt1 nonempty-type-eq-decl nil trig_types nil))
        nil)
       (asin_derivable-2 nil 3352189213
        ("" (skolem 1 ("z"))
         (("" (expand "asin")
           ((""
             (lemma "extensionality"
              ("f" "(LAMBDA (x: real_abs_lt1):
                       IF x = -1 THEN -pi / 2
                       ELSIF x < 1 THEN atan(x / sqrt(1 - x * x))
                       ELSE pi / 2
                       ENDIF)" "g"
               "LAMBDA (x:real_abs_lt1): atan(x / sqrt(1 - x * x))"))
             (("1" (split -1)
               (("1" (hide -1)
                 (("1" (lemma "identity_derivable_fun[real_abs_lt1]")
                   (("1" (lemma "const_derivable_fun[real_abs_lt1]" ("b" "1"))
                     (("1" (expand "I")
                       (("1" (expand "const_fun")
                         (("1"
                           (lemma "prod_derivable_fun[real_abs_lt1]"
                            ("f1" "LAMBDA (x: real_abs_lt1): x" "f2"
                             "LAMBDA (x: real_abs_lt1): x"))
                           (("1" (assert)
                             (("1" (expand "*")
                               (("1"
                                 (lemma "diff_derivable_fun[real_abs_lt1]"
                                  ("f1" "LAMBDA (x: real_abs_lt1): 1" "f2"
                                   "LAMBDA (x_1: real_abs_lt1): x_1 * x_1"))
                                 (("1" (assert)
                                   (("1" (expand "-")
                                     (("1"
                                       (lemma "sqrt_derivable_fun")
                                       (("1"
                                         (expand "restrict")
                                         (("1"
                                           (lemma
                                            "composition_derivable_fun[real_abs_lt1,posreal]"
                                            ("f"
                                             "LAMBDA (x_1: real_abs_lt1): 1 - x_1 * x_1"
                                             "g"
                                             "LAMBDA (s: posreal): sqrt(s)"))
                                           (("1"
                                             (assert)
                                             (("1"
                                               (expand "o")
                                               (("1"
                                                 (lemma
                                                  "div_derivable_fun[real_abs_lt1]"
                                                  ("f"
                                                   "LAMBDA (x:real_abs_lt1): x"
                                                   "g"
                                                   "LAMBDA (x: real_abs_lt1): sqrt(1 - x * x)"))
                                                 (("1"
                                                   (assert)
                                                   (("1"
                                                     (expand "/")
                                                     (("1"
                                                       (lemma
                                                        "deriv_atan_fun")
                                                       (("1"
                                                         (flatten -1)
                                                         (("1"
                                                           (lemma
                                                            "composition_derivable_fun[real_abs_lt1,real]"
                                                            ("f"
                                                             "LAMBDA (x_1: real_abs_lt1): x_1 / sqrt(1 - x_1 * x_1)"
                                                             "g"
                                                             "atan"))
                                                           (("1"
                                                             (assert)
                                                             (("1"
                                                               (expand "o" -1)
                                                               (("1"
                                                                 (expand
                                                                  "derivable"
                                                                  -1)
                                                                 (("1"
                                                                   (inst
                                                                    -
                                                                    "z")
                                                                   nil
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil)
                                                            ("2"
                                                             (hide-all-but 1)
                                                             (("2"
                                                               (skosimp*)
                                                               (("2"
                                                                 (inst
                                                                  +
                                                                  "x!1+1")
                                                                 (("2"
                                                                   (assert)
                                                                   nil
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil))
                                                 nil))
                                               nil))
                                             nil)
                                            ("2"
                                             (hide-all-but 1)
                                             (("2"
                                               (skosimp*)
                                               (("2"
                                                 (typepred "x!1")
                                                 (("2"
                                                   (mult-ineq -2 -2)
                                                   (("1" (assert) nil nil)
                                                    ("2" (grind) nil nil))
                                                   nil))
                                                 nil))
                                               nil))
                                             nil)
                                            ("3"
                                             (hide-all-but 1)
                                             (("3"
                                               (skosimp*)
                                               (("3"
                                                 (inst + "x!1+1")
                                                 (("3" (assert) nil nil))
                                                 nil))
                                               nil))
                                             nil)
                                            ("4"
                                             (hide-all-but 1)
                                             (("4" (grind) nil nil))
                                             nil)
                                            ("5"
                                             (hide-all-but 1)
                                             (("5"
                                               (skosimp*)
                                               (("5"
                                                 (case "x!1=0")
                                                 (("1"
                                                   (inst + "1/2")
                                                   (("1" (assert) nil nil))
                                                   nil)
                                                  ("2"
                                                   (assert)
                                                   (("2"
                                                     (inst + "0")
                                                     (("2" (assert) nil nil))
                                                     nil))
                                                   nil))
                                                 nil))
                                               nil))
                                             nil)
                                            ("6"
                                             (assert)
                                             (("6"
                                               (hide-all-but 1)
                                               (("6" (grind) nil nil))
                                               nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil)
                ("2" (hide-all-but 1)
                 (("2" (skosimp*)
                   (("2" (typepred "x!1")
                     (("2" (case "x!1=-1")
                       (("1" (replace -1) (("1" (assert) nil nil)) nil)
                        ("2" (case "x!1<1")
                         (("1" (assert) nil nil) ("2" (propax) nil nil)) nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil)
              ("2" (hide-all-but 1)
               (("2" (skosimp*)
                 (("2" (typepred "x!1")
                   (("2" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
                     (("2" (expand "sq" -1)
                       (("2" (expand "abs" -1 2)
                         (("2" (lemma "sqrt_pos" ("px" "1-x!1*x!1"))
                           (("1" (mult-ineq -4 -4) (("1" (assert) nil nil))
                             nil)
                            ("2" (assert) (("2" (grind) nil nil)) nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil)
              ("3" (hide-all-but 1)
               (("3" (skosimp*)
                 (("3" (typepred "x!1")
                   (("3" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
                     (("3" (expand "sq")
                       (("3" (expand "abs" -1 2)
                         (("3" (assert)
                           (("3" (hide-all-but 1)
                             (("3" (typepred "x!1")
                               (("3" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
                                 (("3" (expand "sq")
                                   (("3" (assert)
                                     (("3"
                                       (hide-all-but 1)
                                       (("3"
                                         (typepred "x!1")
                                         (("3"
                                           (lemma
                                            "sq_lt_abs"
                                            ("a" "x!1" "b" "1"))
                                           (("3"
                                             (expand "abs" -1 2)
                                             (("3"
                                               (expand "sq")
                                               (("3" (grind) nil nil))
                                               nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil)
              ("4" (hide-all-but 1)
               (("4" (skosimp*)
                 (("4" (typepred "x!1")
                   (("4" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
                     (("4" (expand "sq")
                       (("4" (case-replace "abs(x!1) < 1")
                         (("1" (assert) nil nil) ("2" (grind) nil nil)) nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil)
              ("5" (hide-all-but 1)
               (("5" (skosimp*)
                 (("5" (typepred "x!1")
                   (("5" (mult-ineq -2 -2)
                     (("1" (assert) nil nil) ("2" (grind) nil nil)) nil))
                   nil))
                 nil))
               nil))
             nil))
           nil))
         nil)
        ((sq const-decl "nonneg_real" sq reals)
         (sqrt_pos judgement-tcc nil sqrt reals)
         (sq_lt_abs formula-decl nil sq reals)
         (identity_derivable_fun formula-decl nil derivatives analysis)
         (prod_derivable_fun formula-decl nil derivatives analysis)
         (sqrt_derivable_fun formula-decl nil sqrt_derivative analysis)
         (composition_derivable_fun formula-decl nil chain_rule analysis)
         (deriv_atan_fun formula-decl nil atan nil)
         (div_derivable_fun formula-decl nil derivatives analysis)
         (diff_derivable_fun formula-decl nil derivatives analysis)
         (const_fun const-decl "[T -> real]" real_fun_ops reals)
         (const_derivable_fun formula-decl nil derivatives analysis)
         (atan const-decl "{x: real_abs_lt_pi2 | y = tan_restrict(x)}" atan
               nil)
         (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals))
        nil)
       (asin_derivable-1 nil 3262868738
        ("" (skolem 1 ("z"))
         (("" (expand "asin")
           ((""
             (lemma "extensionality"
              ("f" "(LAMBDA (x: real_abs_lt1):
              IF x = -1 THEN -pi / 2
              ELSIF x < 1 THEN atan(x / sqrt(1 - x * x))
              ELSE pi / 2
              ENDIF)" "g"
               "LAMBDA (x:real_abs_lt1): atan(x / sqrt(1 - x * x))"))
             (("1" (split -1)
               (("1" (replace -1)
                 (("1" (hide -1)
                   (("1" (lemma "identity_derivable_fun[real_abs_lt1]")
                     (("1"
                       (lemma "const_derivable_fun[real_abs_lt1]" ("b" "1"))
                       (("1" (expand "I")
                         (("1" (expand "const_fun")
                           (("1"
                             (lemma "prod_derivable_fun"
                              ("f1" "LAMBDA (x: real_abs_lt1): x" "f2"
                               "LAMBDA (x: real_abs_lt1): x"))
                             (("1" (assert)
                               (("1" (expand "*")
                                 (("1"
                                   (lemma "diff_derivable_fun"
                                    ("f1" "LAMBDA (x: real_abs_lt1): 1" "f2"
                                     "LAMBDA (x_1: real_abs_lt1): x_1 * x_1"))
                                   (("1" (assert)
                                     (("1"
                                       (expand "-")
                                       (("1"
                                         (lemma "sqrt_derivable_fun")
                                         (("1"
                                           (expand "restrict")
                                           (("1"
                                             (lemma
                                              "composition_derivable_fun[real_abs_lt1,posreal]"
                                              ("f"
                                               "LAMBDA (x_1: real_abs_lt1): 1 - x_1 * x_1"
                                               "g"
                                               "LAMBDA (s: posreal): sqrt(s)"))
                                             (("1"
                                               (assert)
                                               (("1"
                                                 (expand "o")
                                                 (("1"
                                                   (lemma
                                                    "div_derivable_fun"
                                                    ("f"
                                                     "LAMBDA (x:real_abs_lt1): x"
                                                     "g"
                                                     "LAMBDA (x: real_abs_lt1): sqrt(1 - x * x)"))
                                                   (("1"
                                                     (assert)
                                                     (("1"
                                                       (expand "/")
                                                       (("1"
                                                         (lemma
                                                          "deriv_atan_fun")
                                                         (("1"
                                                           (flatten -1)
                                                           (("1"
                                                             (lemma
                                                              "composition_derivable_fun[real_abs_lt1,real]"
                                                              ("f"
                                                               "LAMBDA (x_1: real_abs_lt1): x_1 / sqrt(1 - x_1 * x_1)"
                                                               "g"
                                                               "atan"))
                                                             (("1"
                                                               (assert)
                                                               (("1"
                                                                 (expand
                                                                  "o"
                                                                  -1)
                                                                 (("1"
                                                                   (expand
                                                                    "derivable"
                                                                    -1)
                                                                   (("1"
                                                                     (inst
                                                                      -
                                                                      "z")
                                                                     nil
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil)
                                                              ("2"
                                                               (hide-all-but
                                                                1)
                                                               (("2"
                                                                 (skosimp*)
                                                                 (("2"
                                                                   (inst
                                                                    +
                                                                    "x!1+1")
                                                                   (("2"
                                                                     (assert)
                                                                     nil
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil))
                                                 nil))
                                               nil)
                                              ("2"
                                               (hide-all-but 1)
                                               (("2"
                                                 (skosimp*)
                                                 (("2"
                                                   (typepred "x!1")
                                                   (("2"
                                                     (lemma
                                                      "sq_lt_abs"
                                                      ("a" "x!1" "b" "1"))
                                                     (("2"
                                                       (expand "abs" -1 2)
                                                       (("2"
                                                         (expand "sq")
                                                         (("2"
                                                           (assert)
                                                           nil
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil))
                                                 nil))
                                               nil)
                                              ("3"
                                               (hide-all-but 1)
                                               (("3"
                                                 (skosimp*)
                                                 (("3"
                                                   (inst + "x!1+1")
                                                   (("3" (assert) nil nil))
                                                   nil))
                                                 nil))
                                               nil)
                                              ("4"
                                               (hide-all-but 1)
                                               (("4" (grind) nil nil))
                                               nil)
                                              ("5"
                                               (hide-all-but 1)
                                               (("5"
                                                 (skosimp*)
                                                 (("5"
                                                   (case "x!1=0")
                                                   (("1"
                                                     (inst + "1/2")
                                                     (("1" (assert) nil nil)
                                                      ("2"
                                                       (expand "abs")
                                                       (("2"
                                                         (assert)
                                                         nil
                                                         nil))
                                                       nil))
                                                     nil)
                                                    ("2"
                                                     (inst + "0")
                                                     (("1" (assert) nil nil)
                                                      ("2"
                                                       (expand "abs")
                                                       (("2"
                                                         (assert)
                                                         nil
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil))
                                                 nil))
                                               nil)
                                              ("6"
                                               (hide-all-but 1)
                                               (("6" (grind) nil nil))
                                               nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil)
                ("2" (hide-all-but 1)
                 (("2" (skosimp*)
                   (("2" (typepred "x!1")
                     (("2" (case "x!1=-1")
                       (("1" (replace -1)
                         (("1" (expand "abs") (("1" (assert) nil nil)) nil))
                         nil)
                        ("2" (case "x!1<1")
                         (("1" (assert) nil nil)
                          ("2" (expand "abs") (("2" (assert) nil nil)) nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil)
              ("2" (hide-all-but 1)
               (("2" (skosimp*)
                 (("2" (typepred "x!1")
                   (("2" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
                     (("2" (expand "sq" -1)
                       (("2" (expand "abs" -1 2)
                         (("2" (lemma "sqrt_pos" ("px" "1-x!1*x!1"))
                           (("1" (assert) nil nil) ("2" (assert) nil nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil)
              ("3" (hide-all-but 1)
               (("3" (skosimp*)
                 (("3" (typepred "x!1")
                   (("3" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
                     (("3" (expand "sq")
                       (("3" (expand "abs" -1 2) (("3" (assert) nil nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil)
              ("4" (hide-all-but 1)
               (("4" (skosimp*)
                 (("4" (typepred "x!1")
                   (("4" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
                     (("4" (expand "sq")
                       (("4" (expand "abs" -1 2)
                         (("4" (lemma "sqrt_pos" ("px" "1-x!1*x!1"))
                           (("1" (assert) nil nil) ("2" (assert) nil nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil)
              ("5" (hide-all-but 1)
               (("5" (skosimp*)
                 (("5" (typepred "x!1")
                   (("5" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
                     (("5" (expand "abs" -1 2)
                       (("5" (expand "sq") (("5" (assert) nil nil)) nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil))
           nil))
         nil)
        ((sqrt_pos judgement-tcc nil sqrt reals)
         (const_derivable_fun formula-decl nil derivatives analysis)
         (const_fun const-decl "[T -> real]" real_fun_ops reals)
         (diff_derivable_fun formula-decl nil derivatives analysis)
         (sq const-decl "nonneg_real" sq reals)
         (sq_lt_abs formula-decl nil sq reals)
         (div_derivable_fun formula-decl nil derivatives analysis)
         (deriv_atan_fun formula-decl nil atan nil)
         (composition_derivable_fun formula-decl nil chain_rule analysis)
         (sqrt_derivable_fun formula-decl nil sqrt_derivative analysis)
         (prod_derivable_fun formula-decl nil derivatives analysis)
         (identity_derivable_fun formula-decl nil derivatives analysis)
         (atan const-decl "{x: real_abs_lt_pi2 | y = tan_restrict(x)}" atan
               nil)
         (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals))
        shostak))
      (asin_derivable_fun 0
       (asin_derivable_fun-1 nil 3425654727
        ("" (expand "derivable?")
         (("" (lemma "asin_derivable") (("" (propax) nil nil)) nil)) nil)
        ((asin_derivable formula-decl nil asin nil)
         (derivable? const-decl "bool" derivatives analysis))
        nil))
      (deriv_asin_fun_TCC1 0
       (deriv_asin_fun_TCC1-2 nil 3425656962
        ("" (lemma "asin_derivable_fun") (("" (propax) nil nil)) nil)
        ((asin_derivable_fun formula-decl nil asin nil)) nil
        (deriv_asin_fun subtype
         "LAMBDA (x: trig_types.real_abs_lt1): asin.asin(x)"
         "deriv_fun[real_abs_lt1]"))
       (deriv_asin_fun_TCC1-1 nil 3262783379
        ("" (lemma "asin_derivable2") (("" (propax) nil nil)) nil) nil shostak
        (deriv_asin_fun subtype
         "LAMBDA (x: trig_types.real_abs_lt1): asin.asin(x)"
         "deriv_fun[real_abs_lt1]")))
      (deriv_asin_fun_TCC2 0
       (deriv_asin_fun_TCC2-1 nil 3262783401
        ("" (skosimp*)
         (("" (typepred "x!1")
           (("" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
             (("" (expand "abs" -1 2)
               (("" (expand "sq" -1 2)
                 (("" (assert)
                   (("" (expand "abs")
                     (("" (lift-if) (("" (ground) nil nil)) nil)) nil))
                   nil))
                 nil))
               nil))
             nil))
           nil))
         nil)
        ((real_abs_lt1 nonempty-type-eq-decl nil trig_types nil)
         (AND const-decl "[bool, bool -> bool]" booleans nil)
         (- const-decl "[numfield -> numfield]" number_fields nil)
         (numfield nonempty-type-eq-decl nil number_fields nil)
         (< const-decl "bool" reals nil)
         (real nonempty-type-from-decl nil reals nil)
         (real_pred const-decl "[number_field -> boolean]" reals nil)
         (number_field nonempty-type-from-decl nil number_fields nil)
         (number_field_pred const-decl "[number -> boolean]" number_fields
          nil)
         (number nonempty-type-decl nil numbers nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (boolean nonempty-type-decl nil booleans nil)
         (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
              nil)
         (real_minus_real_is_real application-judgement "real" reals nil)
         (real_ge_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (minus_odd_is_odd application-judgement "odd_int" integers nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (minus_real_is_real application-judgement "real" reals nil)
         (sq const-decl "nonneg_real" sq reals)
         (sq_lt_abs formula-decl nil sq reals))
        shostak
        (deriv_asin_fun subtype "(number_fields.-)(1, sq.sq(asin.x))"
         "nonneg_real")))
      (deriv_asin_fun_TCC3 0
       (deriv_asin_fun_TCC3-1 nil 3262784007
        ("" (skosimp*)
         (("" (typepred "x!1")
           (("" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
             (("" (expand "abs" -1 2)
               (("" (expand "sq" -1 2)
                 (("" (lemma "sqrt_pos" ("px" "1 - sq(x!1)"))
                   (("1" (assert) nil nil)
                    ("2" (assert)
                     (("2" (expand "abs")
                       (("2" (lift-if) (("2" (ground) nil nil)) nil)) nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil))
           nil))
         nil)
        ((real_abs_lt1 nonempty-type-eq-decl nil trig_types nil)
         (AND const-decl "[bool, bool -> bool]" booleans nil)
         (- const-decl "[numfield -> numfield]" number_fields nil)
         (numfield nonempty-type-eq-decl nil number_fields nil)
         (< const-decl "bool" reals nil)
         (real nonempty-type-from-decl nil reals nil)
         (real_pred const-decl "[number_field -> boolean]" reals nil)
         (number_field nonempty-type-from-decl nil number_fields nil)
         (number_field_pred const-decl "[number -> boolean]" number_fields
          nil)
         (number nonempty-type-decl nil numbers nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (boolean nonempty-type-decl nil booleans nil)
         (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
              nil)
         (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (posreal nonempty-type-eq-decl nil real_types nil)
         (> const-decl "bool" reals nil)
         (nonneg_real nonempty-type-eq-decl nil real_types nil)
         (>= const-decl "bool" reals nil)
         (sqrt_pos judgement-tcc nil sqrt reals)
         (real_minus_real_is_real application-judgement "real" reals nil)
         (real_ge_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (real_gt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (minus_real_is_real application-judgement "real" reals nil)
         (sq const-decl "nonneg_real" sq reals)
         (sq_lt_abs formula-decl nil sq reals))
        shostak
        (deriv_asin_fun subtype
         "sqrt.sqrt((number_fields.-)(1, sq.sq(asin.x)))" "nznum")))
      (deriv_asin_fun 0
       (deriv_asin_fun-3 "" 3790092307
        ("" (expand "asin")
         ((""
           (lemma "extensionality"
            ("f" "(LAMBDA (x: real_abs_lt1):
                   IF x = -1 THEN -pi / 2
                   ELSIF x < 1 THEN atan(x / sqrt(1 - x * x))
                   ELSE pi / 2
                   ENDIF)" "g"
             "LAMBDA (x: real_abs_lt1): atan(x / sqrt(1 - x * x))"))
           (("1" (split -1)
             (("1" (lemma "identity_derivable_fun[real_abs_lt1]")
               (("1" (lemma "deriv_id_fun[real_abs_lt1]")
                 (("1" (lemma "const_derivable_fun[real_abs_lt1]" ("b" "1"))
                   (("1" (lemma "deriv_const_fun[real_abs_lt1]" ("b" "1"))
                     (("1" (expand "I")
                       (("1"
                         (lemma "prod_derivable_fun[real_abs_lt1]"
                          ("f1" "LAMBDA (x: real_abs_lt1): x" "f2"
                           "LAMBDA (x: real_abs_lt1): x"))
                         (("1" (assert)
                           (("1" (expand "*" -1)
                             (("1"
                               (lemma "deriv_prod_fun[real_abs_lt1]"
                                ("ff1" "LAMBDA (x: real_abs_lt1): x" "ff2"
                                 "LAMBDA (x: real_abs_lt1): x"))
                               (("1" (replace -5 -1)
                                 (("1" (expand "*" -1)
                                   (("1" (expand "+")
                                     (("1"
                                       (lemma
                                        "diff_derivable_fun[real_abs_lt1]"
                                        ("f1"
                                         "LAMBDA (x: real_abs_lt1): 1"
                                         "f2"
                                         "LAMBDA (x_1: real_abs_lt1): x_1 * x_1"))
                                       (("1"
                                         (assert)
                                         (("1"
                                           (expand "-" -1)
                                           (("1"
                                             (lemma
                                              "deriv_diff_fun[real_abs_lt1]"
                                              ("ff1"
                                               "LAMBDA (x: real_abs_lt1): 1"
                                               "ff2"
                                               "LAMBDA (x_1: real_abs_lt1): x_1 * x_1"))
                                             (("1"
                                               (replace -3 -1)
                                               (("1"
                                                 (replace -5 -1)
                                                 (("1"
                                                   (expand "-" -1)
                                                   (("1"
                                                     (lemma
                                                      "sqrt_derivable_fun")
                                                     (("1"
                                                       (lemma
                                                        "deriv_sqrt_fun")
                                                       (("1"
                                                         (expand
                                                          "restrict"
                                                          (-1 -2))
                                                         (("1"
                                                           (lemma
                                                            "composition_derivable_fun[real_abs_lt1,posreal]"
                                                            ("g"
                                                             "LAMBDA (x: posreal): sqrt(x)"
                                                             "f"
                                                             "LAMBDA (x_1: real_abs_lt1): 1 - x_1 * x_1"))
                                                           (("1"
                                                             (replace -3 -1)
                                                             (("1"
                                                               (replace -5 -1)
                                                               (("1"
                                                                 (expand "o")
                                                                 (("1"
                                                                   (lemma
                                                                    "deriv_comp_fun[real_abs_lt1,posreal]"
                                                                    ("gg"
                                                                     "LAMBDA (x: posreal): sqrt(x)"
                                                                     "ff"
                                                                     "LAMBDA (x_1: real_abs_lt1): 1 - x_1 * x_1"))
                                                                   (("1"
                                                                     (expand
                                                                      "o"
                                                                      -1)
                                                                     (("1"
                                                                       (replace
                                                                        -3
                                                                        -1)
                                                                       (("1"
                                                                         (replace
                                                                          -5
                                                                          -1)
                                                                         (("1"
                                                                           (expand
                                                                            "*"
                                                                            -1)
                                                                           (("1"
                                                                             (lemma
                                                                              "div_derivable_fun[real_abs_lt1]"
                                                                              ("f"
                                                                               "LAMBDA (x: real_abs_lt1): x"
                                                                               "g"
                                                                               "LAMBDA (x_1: real_abs_lt1): sqrt(1 - x_1 * x_1)"))
                                                                             (("1"
                                                                               (assert)
                                                                               (("1"
                                                                                 (expand
                                                                                  "/"
                                                                                  -1)
                                                                                 (("1"
                                                                                   (lemma
                                                                                    "deriv_div_fun[real_abs_lt1]"
                                                                                    ("ff"
                                                                                     "LAMBDA (x: real_abs_lt1): x"
                                                                                     "gg"
                                                                                     "LAMBDA (x_1: real_abs_lt1): sqrt(1 - x_1 * x_1)"))
                                                                                   (("1"
                                                                                     (replace
                                                                                      -13
                                                                                      -1)
                                                                                     (("1"
                                                                                       (replace
                                                                                        -3
                                                                                        -1)
                                                                                       (("1"
                                                                                         (expand
                                                                                          "/"
                                                                                          -1)
                                                                                         (("1"
                                                                                           (expand
                                                                                            "*"
                                                                                            -1)
                                                                                           (("1"
                                                                                             (expand
                                                                                              "-"
                                                                                              -1)
                                                                                             (("1"
                                                                                               (lemma
                                                                                                "deriv_atan_fun")
                                                                                               (("1"
                                                                                                 (flatten
                                                                                                  -1)
                                                                                                 (("1"
                                                                                                   (lemma
                                                                                                    "composition_derivable_fun[real_abs_lt1,real]"
                                                                                                    ("f"
                                                                                                     "LAMBDA (x_1: real_abs_lt1): x_1 / sqrt(1 - x_1 * x_1)"
                                                                                                     "g"
                                                                                                     "atan"))
                                                                                                   (("1"
                                                                                                     (expand
                                                                                                      "o"
                                                                                                      -1)
                                                                                                     (("1"
                                                                                                       (assert)
                                                                                                       (("1"
                                                                                                         (lemma
                                                                                                          "deriv_comp_fun[real_abs_lt1,real]"
                                                                                                          ("ff"
                                                                                                           "LAMBDA (x_1: real_abs_lt1): x_1 / sqrt(1 - x_1 * x_1)"
                                                                                                           "gg"
                                                                                                           "atan"))
                                                                                                         (("1"
                                                                                                           (replace
                                                                                                            -4
                                                                                                            -1)
                                                                                                           (("1"
                                                                                                             (replace
                                                                                                              -5
                                                                                                              -1)
                                                                                                             (("1"
                                                                                                               (expand
                                                                                                                "o"
                                                                                                                -1)
                                                                                                               (("1"
                                                                                                                 (expand
                                                                                                                  "*"
                                                                                                                  -1)
                                                                                                                 (("1"
                                                                                                                   (replace
                                                                                                                    -1
                                                                                                                    1)
                                                                                                                   (("1"
                                                                                                                     (hide-all-but
                                                                                                                      1)
                                                                                                                     (("1"
                                                                                                                       (lemma
                                                                                                                        "extensionality"
                                                                                                                        ("f"
                                                                                                                         "(LAMBDA (x: real_abs_lt1):
                                   1 / (1 + x / sqrt(1 - x * x) * (x / sqrt(1 - x * x))) *
                                    ((sqrt(1 - x * x) + 2 * (x * x * (1 / (2 * sqrt(1 - x * x))))) /
                                      (sqrt(1 - x * x) * sqrt(1 - x * x))))"
                                                                                                                         "g"
                                                                                                                         "(LAMBDA (x: real_abs_lt1): 1 / sqrt(1 - sq(x)))"))
                                                                                                                       (("1"
                                                                                                                         (split
                                                                                                                          -1)
                                                                                                                         (("1"
                                                                                                                           (propax)
                                                                                                                           nil
                                                                                                                           nil)
                                                                                                                          ("2"
                                                                                                                           (hide
                                                                                                                            2)
                                                                                                                           (("2"
                                                                                                                             (skolem
                                                                                                                              1
                                                                                                                              ("z"))
                                                                                                                             (("2"
                                                                                                                               (typepred
                                                                                                                                "z")
                                                                                                                               (("2"
                                                                                                                                 (lemma
                                                                                                                                  "sq_lt_abs"
                                                                                                                                  ("a"
                                                                                                                                   "z"
                                                                                                                                   "b"
                                                                                                                                   "1"))
                                                                                                                                 (("2"
                                                                                                                                   (expand
                                                                                                                                    "abs"
                                                                                                                                    -1
                                                                                                                                    2)
                                                                                                                                   (("2"
                                                                                                                                     (expand
                                                                                                                                      "sq")
                                                                                                                                     (("2"
                                                                                                                                       (lemma
                                                                                                                                        "sqrt_pos"
                                                                                                                                        ("px"
                                                                                                                                         "1-z*z"))
                                                                                                                                       (("1"
                                                                                                                                         (lemma
                                                                                                                                          "sq_sqrt"
                                                                                                                                          ("x"
                                                                                                                                           "1-z*z"))
                                                                                                                                         (("1"
                                                                                                                                           (expand
                                                                                                                                            "sq")
                                                                                                                                           (("1"
                                                                                                                                             (assert)
                                                                                                                                             nil
                                                                                                                                             nil))
                                                                                                                                           nil))
                                                                                                                                         nil)
                                                                                                                                        ("2"
                                                                                                                                         (assert)
                                                                                                                                         nil
                                                                                                                                         nil))
                                                                                                                                       nil))
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil))
                                                                                                                           nil))
                                                                                                                         nil)
                                                                                                                        ("2"
                                                                                                                         (hide
                                                                                                                          2)
                                                                                                                         (("2"
                                                                                                                           (skolem
                                                                                                                            1
                                                                                                                            ("z"))
                                                                                                                           (("2"
                                                                                                                             (lemma
                                                                                                                              "sq_lt_abs"
                                                                                                                              ("a"
                                                                                                                               "z"
                                                                                                                               "b"
                                                                                                                               "1"))
                                                                                                                             (("2"
                                                                                                                               (expand
                                                                                                                                "sq")
                                                                                                                               (("2"
                                                                                                                                 (typepred
                                                                                                                                  "z")
                                                                                                                                 (("2"
                                                                                                                                   (lemma
                                                                                                                                    "sqrt_pos"
                                                                                                                                    ("px"
                                                                                                                                     "1-z*z"))
                                                                                                                                   (("1"
                                                                                                                                     (assert)
                                                                                                                                     nil
                                                                                                                                     nil)
                                                                                                                                    ("2"
                                                                                                                                     (assert)
                                                                                                                                     (("2"
                                                                                                                                       (grind)
                                                                                                                                       nil
                                                                                                                                       nil))
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil))
                                                                                                                           nil))
                                                                                                                         nil)
                                                                                                                        ("3"
                                                                                                                         (hide
                                                                                                                          2)
                                                                                                                         (("3"
                                                                                                                           (skolem
                                                                                                                            1
                                                                                                                            ("z"))
                                                                                                                           (("3"
                                                                                                                             (typepred
                                                                                                                              "z")
                                                                                                                             (("3"
                                                                                                                               (lemma
                                                                                                                                "sq_lt_abs"
                                                                                                                                ("a"
                                                                                                                                 "z"
                                                                                                                                 "b"
                                                                                                                                 "1"))
                                                                                                                               (("3"
                                                                                                                                 (expand
                                                                                                                                  "abs"
                                                                                                                                  -1
                                                                                                                                  2)
                                                                                                                                 (("3"
                                                                                                                                   (expand
                                                                                                                                    "sq")
                                                                                                                                   (("3"
                                                                                                                                     (assert)
                                                                                                                                     (("3"
                                                                                                                                       (grind)
                                                                                                                                       nil
                                                                                                                                       nil))
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil))
                                                                                                                           nil))
                                                                                                                         nil)
                                                                                                                        ("4"
                                                                                                                         (hide
                                                                                                                          2)
                                                                                                                         (("4"
                                                                                                                           (skolem
                                                                                                                            1
                                                                                                                            ("z"))
                                                                                                                           (("4"
                                                                                                                             (typepred
                                                                                                                              "z")
                                                                                                                             (("4"
                                                                                                                               (lemma
                                                                                                                                "sq_lt_abs"
                                                                                                                                ("a"
                                                                                                                                 "z"
                                                                                                                                 "b"
                                                                                                                                 "1"))
                                                                                                                               (("4"
                                                                                                                                 (expand
                                                                                                                                  "abs"
                                                                                                                                  -1
                                                                                                                                  2)
                                                                                                                                 (("4"
                                                                                                                                   (expand
                                                                                                                                    "sq")
                                                                                                                                   (("4"
                                                                                                                                     (lemma
                                                                                                                                      "sq_sqrt"
                                                                                                                                      ("x"
                                                                                                                                       "1-z*z"))
                                                                                                                                     (("4"
                                                                                                                                       (expand
                                                                                                                                        "sq")
                                                                                                                                       (("4"
                                                                                                                                         (assert)
                                                                                                                                         (("4"
                                                                                                                                           (grind)
                                                                                                                                           nil
                                                                                                                                           nil))
                                                                                                                                         nil))
                                                                                                                                       nil))
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil))
                                                                                                                           nil))
                                                                                                                         nil)
                                                                                                                        ("5"
                                                                                                                         (hide
                                                                                                                          2)
                                                                                                                         (("5"
                                                                                                                           (skolem
                                                                                                                            1
                                                                                                                            ("z"))
                                                                                                                           (("5"
                                                                                                                             (typepred
                                                                                                                              "z")
                                                                                                                             (("5"
                                                                                                                               (lemma
                                                                                                                                "sq_lt_abs"
                                                                                                                                ("a"
                                                                                                                                 "z"
                                                                                                                                 "b"
                                                                                                                                 "1"))
                                                                                                                               (("5"
                                                                                                                                 (expand
                                                                                                                                  "abs"
                                                                                                                                  -1
                                                                                                                                  2)
                                                                                                                                 (("5"
                                                                                                                                   (expand
                                                                                                                                    "sq")
                                                                                                                                   (("5"
                                                                                                                                     (lemma
                                                                                                                                      "sqrt_pos"
                                                                                                                                      ("px"
                                                                                                                                       "1-z*z"))
                                                                                                                                     (("1"
                                                                                                                                       (assert)
                                                                                                                                       nil
                                                                                                                                       nil)
                                                                                                                                      ("2"
                                                                                                                                       (assert)
                                                                                                                                       (("2"
                                                                                                                                         (grind)
                                                                                                                                         nil
                                                                                                                                         nil))
                                                                                                                                       nil))
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil))
                                                                                                                           nil))
                                                                                                                         nil)
                                                                                                                        ("6"
                                                                                                                         (hide
                                                                                                                          2)
                                                                                                                         (("6"
                                                                                                                           (skolem
                                                                                                                            1
                                                                                                                            ("z"))
                                                                                                                           (("6"
                                                                                                                             (typepred
                                                                                                                              "z")
                                                                                                                             (("6"
                                                                                                                               (lemma
                                                                                                                                "sq_lt_abs"
                                                                                                                                ("a"
                                                                                                                                 "z"
                                                                                                                                 "b"
                                                                                                                                 "1"))
                                                                                                                               (("6"
                                                                                                                                 (expand
                                                                                                                                  "abs"
                                                                                                                                  -1
                                                                                                                                  2)
                                                                                                                                 (("6"
                                                                                                                                   (expand
                                                                                                                                    "sq")
                                                                                                                                   (("6"
                                                                                                                                     (lemma
                                                                                                                                      "sqrt_pos"
                                                                                                                                      ("px"
                                                                                                                                       "1-z*z"))
                                                                                                                                     (("1"
                                                                                                                                       (lemma
                                                                                                                                        "sq_sqrt"
                                                                                                                                        ("x"
                                                                                                                                         "1-z*z"))
                                                                                                                                       (("1"
                                                                                                                                         (expand
                                                                                                                                          "sq"
                                                                                                                                          -1)
                                                                                                                                         (("1"
                                                                                                                                           (lemma
                                                                                                                                            "div_times"
                                                                                                                                            ("x"
                                                                                                                                             "z"
                                                                                                                                             "y"
                                                                                                                                             "z"
                                                                                                                                             "n0x"
                                                                                                                                             "sqrt(1 - z * z)"
                                                                                                                                             "n0y"
                                                                                                                                             "sqrt(1 - z * z)"))
                                                                                                                                           (("1"
                                                                                                                                             (replace
                                                                                                                                              -1
                                                                                                                                              1)
                                                                                                                                             (("1"
                                                                                                                                               (split
                                                                                                                                                -2)
                                                                                                                                               (("1"
                                                                                                                                                 (replace
                                                                                                                                                  -1)
                                                                                                                                                 (("1"
                                                                                                                                                   (lemma
                                                                                                                                                    "div_mult_pos_lt2"
                                                                                                                                                    ("x"
                                                                                                                                                     "-1"
                                                                                                                                                     "z"
                                                                                                                                                     "z*z"
                                                                                                                                                     "py"
                                                                                                                                                     "1-z*z"))
                                                                                                                                                   (("1"
                                                                                                                                                     (assert)
                                                                                                                                                     nil
                                                                                                                                                     nil))
                                                                                                                                                   nil))
                                                                                                                                                 nil)
                                                                                                                                                ("2"
                                                                                                                                                 (assert)
                                                                                                                                                 nil
                                                                                                                                                 nil))
                                                                                                                                               nil))
                                                                                                                                             nil)
                                                                                                                                            ("2"
                                                                                                                                             (assert)
                                                                                                                                             nil
                                                                                                                                             nil))
                                                                                                                                           nil))
                                                                                                                                         nil))
                                                                                                                                       nil)
                                                                                                                                      ("2"
                                                                                                                                       (assert)
                                                                                                                                       nil
                                                                                                                                       nil))
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil))
                                                                                                                           nil))
                                                                                                                         nil))
                                                                                                                       nil))
                                                                                                                     nil))
                                                                                                                   nil))
                                                                                                                 nil))
                                                                                                               nil))
                                                                                                             nil))
                                                                                                           nil))
                                                                                                         nil))
                                                                                                       nil))
                                                                                                     nil))
                                                                                                   nil))
                                                                                                 nil))
                                                                                               nil))
                                                                                             nil))
                                                                                           nil))
                                                                                         nil))
                                                                                       nil))
                                                                                     nil))
                                                                                   nil))
                                                                                 nil))
                                                                               nil))
                                                                             nil))
                                                                           nil))
                                                                         nil))
                                                                       nil))
                                                                     nil)
                                                                    ("2"
                                                                     (propax)
                                                                     nil
                                                                     nil)
                                                                    ("3"
                                                                     (propax)
                                                                     nil
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil)
                                                            ("2"
                                                             (hide-all-but 1)
                                                             (("2"
                                                               (skosimp*)
                                                               (("2"
                                                                 (typepred
                                                                  "x!1")
                                                                 (("2"
                                                                   (lemma
                                                                    "sq_lt_abs"
                                                                    ("a"
                                                                     "x!1"
                                                                     "b"
                                                                     "1"))
                                                                   (("2"
                                                                     (grind)
                                                                     nil
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil))
                                                 nil))
                                               nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil)
              ("2" (hide 2)
               (("2" (skosimp*)
                 (("2" (typepred "x!1")
                   (("2" (case "x!1 = -1")
                     (("1" (assert) nil nil)
                      ("2" (case "x!1<1")
                       (("1" (assert) nil nil) ("2" (propax) nil nil)) nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil)
            ("2" (hide 2)
             (("2" (skosimp*)
               (("2" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
                 (("2" (typepred "x!1")
                   (("2" (expand "sq")
                     (("2" (lemma "sqrt_pos" ("px" "1-x!1*x!1"))
                       (("1" (assert) nil nil)
                        ("2" (assert) (("2" (grind) nil nil)) nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil)
            ("3" (hide 2)
             (("3" (skosimp*)
               (("3" (typepred "x!1")
                 (("3" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
                   (("3" (grind) nil nil)) nil))
                 nil))
               nil))
             nil)
            ("4" (hide 2)
             (("4" (skosimp*)
               (("4" (case "abs(x!1) < 1")
                 (("1" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
                   (("1" (expand "abs" -1 2)
                     (("1" (expand "sq" -1)
                       (("1" (lemma "sqrt_pos" ("px" "1-x!1*x!1"))
                         (("1" (assert) nil nil) ("2" (assert) nil nil)) nil))
                       nil))
                     nil))
                   nil)
                  ("2" (typepred "x!1") (("2" (grind) nil nil)) nil))
                 nil))
               nil))
             nil)
            ("5" (hide 2)
             (("5" (skosimp*)
               (("5" (typepred "x!1")
                 (("5" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
                   (("5" (expand "abs" -1 2)
                     (("5" (expand "sq")
                       (("5" (assert) (("5" (grind) nil nil)) nil)) nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil))
           nil))
         nil)
        nil shostak)
       (deriv_asin_fun-2 nil 3352189359
        ("" (expand "asin")
         ((""
           (lemma "extensionality"
            ("f" "(LAMBDA (x: real_abs_lt1):
                   IF x = -1 THEN -pi / 2
                   ELSIF x < 1 THEN atan(x / sqrt(1 - x * x))
                   ELSE pi / 2
                   ENDIF)" "g"
             "LAMBDA (x: real_abs_lt1): atan(x / sqrt(1 - x * x))"))
           (("1" (split -1)
             (("1" (lemma "identity_derivable_fun[real_abs_lt1]")
               (("1" (lemma "deriv_id_fun[real_abs_lt1]")
                 (("1" (lemma "const_derivable_fun[real_abs_lt1]" ("b" "1"))
                   (("1" (lemma "deriv_const_fun[real_abs_lt1]" ("b" "1"))
                     (("1" (expand "I")
                       (("1"
                         (lemma "prod_derivable_fun[real_abs_lt1]"
                          ("f1" "LAMBDA (x: real_abs_lt1): x" "f2"
                           "LAMBDA (x: real_abs_lt1): x"))
                         (("1" (assert)
                           (("1" (expand "*" -1)
                             (("1"
                               (lemma "deriv_prod_fun[real_abs_lt1]"
                                ("ff1" "LAMBDA (x: real_abs_lt1): x" "ff2"
                                 "LAMBDA (x: real_abs_lt1): x"))
                               (("1" (replace -5 -1)
                                 (("1" (expand "*" -1)
                                   (("1" (expand "+")
                                     (("1"
                                       (lemma
                                        "diff_derivable_fun[real_abs_lt1]"
                                        ("f1"
                                         "LAMBDA (x: real_abs_lt1): 1"
                                         "f2"
                                         "LAMBDA (x_1: real_abs_lt1): x_1 * x_1"))
                                       (("1"
                                         (assert)
                                         (("1"
                                           (expand "-" -1)
                                           (("1"
                                             (lemma
                                              "deriv_diff_fun[real_abs_lt1]"
                                              ("ff1"
                                               "LAMBDA (x: real_abs_lt1): 1"
                                               "ff2"
                                               "LAMBDA (x_1: real_abs_lt1): x_1 * x_1"))
                                             (("1"
                                               (replace -3 -1)
                                               (("1"
                                                 (replace -5 -1)
                                                 (("1"
                                                   (expand "-" -1)
                                                   (("1"
                                                     (lemma
                                                      "sqrt_derivable_fun")
                                                     (("1"
                                                       (lemma
                                                        "deriv_sqrt_fun")
                                                       (("1"
                                                         (expand
                                                          "restrict"
                                                          (-1 -2))
                                                         (("1"
                                                           (lemma
                                                            "composition_derivable_fun[real_abs_lt1,posreal]"
                                                            ("g"
                                                             "LAMBDA (x: posreal): sqrt(x)"
                                                             "f"
                                                             "LAMBDA (x_1: real_abs_lt1): 1 - x_1 * x_1"))
                                                           (("1"
                                                             (replace -3 -1)
                                                             (("1"
                                                               (replace -5 -1)
                                                               (("1"
                                                                 (expand "o")
                                                                 (("1"
                                                                   (lemma
                                                                    "deriv_comp_fun[real_abs_lt1,posreal]"
                                                                    ("gg"
                                                                     "LAMBDA (x: posreal): sqrt(x)"
                                                                     "ff"
                                                                     "LAMBDA (x_1: real_abs_lt1): 1 - x_1 * x_1"))
                                                                   (("1"
                                                                     (expand
                                                                      "o"
                                                                      -1)
                                                                     (("1"
                                                                       (replace
                                                                        -3
                                                                        -1)
                                                                       (("1"
                                                                         (replace
                                                                          -5
                                                                          -1)
                                                                         (("1"
                                                                           (expand
                                                                            "*"
                                                                            -1)
                                                                           (("1"
                                                                             (lemma
                                                                              "div_derivable_fun[real_abs_lt1]"
                                                                              ("f"
                                                                               "LAMBDA (x: real_abs_lt1): x"
                                                                               "g"
                                                                               "LAMBDA (x_1: real_abs_lt1): sqrt(1 - x_1 * x_1)"))
                                                                             (("1"
                                                                               (assert)
                                                                               (("1"
                                                                                 (expand
                                                                                  "/"
                                                                                  -1)
                                                                                 (("1"
                                                                                   (lemma
                                                                                    "deriv_div_fun[real_abs_lt1]"
                                                                                    ("ff"
                                                                                     "LAMBDA (x: real_abs_lt1): x"
                                                                                     "gg"
                                                                                     "LAMBDA (x_1: real_abs_lt1): sqrt(1 - x_1 * x_1)"))
                                                                                   (("1"
                                                                                     (replace
                                                                                      -13
                                                                                      -1)
                                                                                     (("1"
                                                                                       (replace
                                                                                        -3
                                                                                        -1)
                                                                                       (("1"
                                                                                         (expand
                                                                                          "/"
                                                                                          -1)
                                                                                         (("1"
                                                                                           (expand
                                                                                            "*"
                                                                                            -1)
                                                                                           (("1"
                                                                                             (expand
                                                                                              "-"
                                                                                              -1)
                                                                                             (("1"
                                                                                               (lemma
                                                                                                "deriv_atan_fun")
                                                                                               (("1"
                                                                                                 (flatten
                                                                                                  -1)
                                                                                                 (("1"
                                                                                                   (lemma
                                                                                                    "composition_derivable_fun[real_abs_lt1,real]"
                                                                                                    ("f"
                                                                                                     "LAMBDA (x_1: real_abs_lt1): x_1 / sqrt(1 - x_1 * x_1)"
                                                                                                     "g"
                                                                                                     "atan"))
                                                                                                   (("1"
                                                                                                     (expand
                                                                                                      "o"
                                                                                                      -1)
                                                                                                     (("1"
                                                                                                       (assert)
                                                                                                       (("1"
                                                                                                         (lemma
                                                                                                          "deriv_comp_fun[real_abs_lt1,real]"
                                                                                                          ("ff"
                                                                                                           "LAMBDA (x_1: real_abs_lt1): x_1 / sqrt(1 - x_1 * x_1)"
                                                                                                           "gg"
                                                                                                           "atan"))
                                                                                                         (("1"
                                                                                                           (replace
                                                                                                            -4
                                                                                                            -1)
                                                                                                           (("1"
                                                                                                             (replace
                                                                                                              -5
                                                                                                              -1)
                                                                                                             (("1"
                                                                                                               (expand
                                                                                                                "o"
                                                                                                                -1)
                                                                                                               (("1"
                                                                                                                 (expand
                                                                                                                  "*"
                                                                                                                  -1)
                                                                                                                 (("1"
                                                                                                                   (replace
                                                                                                                    -1
                                                                                                                    1)
                                                                                                                   (("1"
                                                                                                                     (hide-all-but
                                                                                                                      1)
                                                                                                                     (("1"
                                                                                                                       (lemma
                                                                                                                        "extensionality"
                                                                                                                        ("f"
                                                                                                                         "(LAMBDA (x: real_abs_lt1):
                                   1 / (1 + x / sqrt(1 - x * x) * (x / sqrt(1 - x * x))) *
                                    ((sqrt(1 - x * x) + 2 * (x * x * (1 / (2 * sqrt(1 - x * x))))) /
                                      (sqrt(1 - x * x) * sqrt(1 - x * x))))"
                                                                                                                         "g"
                                                                                                                         "(LAMBDA (x: real_abs_lt1): 1 / sqrt(1 - sq(x)))"))
                                                                                                                       (("1"
                                                                                                                         (split
                                                                                                                          -1)
                                                                                                                         (("1"
                                                                                                                           (propax)
                                                                                                                           nil
                                                                                                                           nil)
                                                                                                                          ("2"
                                                                                                                           (hide
                                                                                                                            2)
                                                                                                                           (("2"
                                                                                                                             (skolem
                                                                                                                              1
                                                                                                                              ("z"))
                                                                                                                             (("2"
                                                                                                                               (typepred
                                                                                                                                "z")
                                                                                                                               (("2"
                                                                                                                                 (lemma
                                                                                                                                  "sq_lt_abs"
                                                                                                                                  ("a"
                                                                                                                                   "z"
                                                                                                                                   "b"
                                                                                                                                   "1"))
                                                                                                                                 (("2"
                                                                                                                                   (expand
                                                                                                                                    "abs"
                                                                                                                                    -1
                                                                                                                                    2)
                                                                                                                                   (("2"
                                                                                                                                     (expand
                                                                                                                                      "sq")
                                                                                                                                     (("2"
                                                                                                                                       (lemma
                                                                                                                                        "sqrt_pos"
                                                                                                                                        ("px"
                                                                                                                                         "1-z*z"))
                                                                                                                                       (("1"
                                                                                                                                         (lemma
                                                                                                                                          "sq_sqrt"
                                                                                                                                          ("x"
                                                                                                                                           "1-z*z"))
                                                                                                                                         (("1"
                                                                                                                                           (expand
                                                                                                                                            "sq")
                                                                                                                                           (("1"
                                                                                                                                             (assert)
                                                                                                                                             nil
                                                                                                                                             nil))
                                                                                                                                           nil))
                                                                                                                                         nil)
                                                                                                                                        ("2"
                                                                                                                                         (assert)
                                                                                                                                         nil
                                                                                                                                         nil))
                                                                                                                                       nil))
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil))
                                                                                                                           nil))
                                                                                                                         nil)
                                                                                                                        ("2"
                                                                                                                         (hide
                                                                                                                          2)
                                                                                                                         (("2"
                                                                                                                           (skolem
                                                                                                                            1
                                                                                                                            ("z"))
                                                                                                                           (("2"
                                                                                                                             (lemma
                                                                                                                              "sq_lt_abs"
                                                                                                                              ("a"
                                                                                                                               "z"
                                                                                                                               "b"
                                                                                                                               "1"))
                                                                                                                             (("2"
                                                                                                                               (expand
                                                                                                                                "sq")
                                                                                                                               (("2"
                                                                                                                                 (typepred
                                                                                                                                  "z")
                                                                                                                                 (("2"
                                                                                                                                   (lemma
                                                                                                                                    "sqrt_pos"
                                                                                                                                    ("px"
                                                                                                                                     "1-z*z"))
                                                                                                                                   (("1"
                                                                                                                                     (assert)
                                                                                                                                     nil
                                                                                                                                     nil)
                                                                                                                                    ("2"
                                                                                                                                     (assert)
                                                                                                                                     (("2"
                                                                                                                                       (grind)
                                                                                                                                       nil
                                                                                                                                       nil))
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil))
                                                                                                                           nil))
                                                                                                                         nil)
                                                                                                                        ("3"
                                                                                                                         (hide
                                                                                                                          2)
                                                                                                                         (("3"
                                                                                                                           (skolem
                                                                                                                            1
                                                                                                                            ("z"))
                                                                                                                           (("3"
                                                                                                                             (typepred
                                                                                                                              "z")
                                                                                                                             (("3"
                                                                                                                               (lemma
                                                                                                                                "sq_lt_abs"
                                                                                                                                ("a"
                                                                                                                                 "z"
                                                                                                                                 "b"
                                                                                                                                 "1"))
                                                                                                                               (("3"
                                                                                                                                 (expand
                                                                                                                                  "abs"
                                                                                                                                  -1
                                                                                                                                  2)
                                                                                                                                 (("3"
                                                                                                                                   (expand
                                                                                                                                    "sq")
                                                                                                                                   (("3"
                                                                                                                                     (assert)
                                                                                                                                     (("3"
                                                                                                                                       (grind)
                                                                                                                                       nil
                                                                                                                                       nil))
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil))
                                                                                                                           nil))
                                                                                                                         nil)
                                                                                                                        ("4"
                                                                                                                         (hide
                                                                                                                          2)
                                                                                                                         (("4"
                                                                                                                           (skolem
                                                                                                                            1
                                                                                                                            ("z"))
                                                                                                                           (("4"
                                                                                                                             (typepred
                                                                                                                              "z")
                                                                                                                             (("4"
                                                                                                                               (lemma
                                                                                                                                "sq_lt_abs"
                                                                                                                                ("a"
                                                                                                                                 "z"
                                                                                                                                 "b"
                                                                                                                                 "1"))
                                                                                                                               (("4"
                                                                                                                                 (expand
                                                                                                                                  "abs"
                                                                                                                                  -1
                                                                                                                                  2)
                                                                                                                                 (("4"
                                                                                                                                   (expand
                                                                                                                                    "sq")
                                                                                                                                   (("4"
                                                                                                                                     (lemma
                                                                                                                                      "sq_sqrt"
                                                                                                                                      ("x"
                                                                                                                                       "1-z*z"))
                                                                                                                                     (("4"
                                                                                                                                       (expand
                                                                                                                                        "sq")
                                                                                                                                       (("4"
                                                                                                                                         (assert)
                                                                                                                                         (("4"
                                                                                                                                           (grind)
                                                                                                                                           nil
                                                                                                                                           nil))
                                                                                                                                         nil))
                                                                                                                                       nil))
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil))
                                                                                                                           nil))
                                                                                                                         nil)
                                                                                                                        ("5"
                                                                                                                         (hide
                                                                                                                          2)
                                                                                                                         (("5"
                                                                                                                           (skolem
                                                                                                                            1
                                                                                                                            ("z"))
                                                                                                                           (("5"
                                                                                                                             (typepred
                                                                                                                              "z")
                                                                                                                             (("5"
                                                                                                                               (lemma
                                                                                                                                "sq_lt_abs"
                                                                                                                                ("a"
                                                                                                                                 "z"
                                                                                                                                 "b"
                                                                                                                                 "1"))
                                                                                                                               (("5"
                                                                                                                                 (expand
                                                                                                                                  "abs"
                                                                                                                                  -1
                                                                                                                                  2)
                                                                                                                                 (("5"
                                                                                                                                   (expand
                                                                                                                                    "sq")
                                                                                                                                   (("5"
                                                                                                                                     (lemma
                                                                                                                                      "sqrt_pos"
                                                                                                                                      ("px"
                                                                                                                                       "1-z*z"))
                                                                                                                                     (("1"
                                                                                                                                       (assert)
                                                                                                                                       nil
                                                                                                                                       nil)
                                                                                                                                      ("2"
                                                                                                                                       (assert)
                                                                                                                                       (("2"
                                                                                                                                         (grind)
                                                                                                                                         nil
                                                                                                                                         nil))
                                                                                                                                       nil))
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil))
                                                                                                                           nil))
                                                                                                                         nil)
                                                                                                                        ("6"
                                                                                                                         (hide
                                                                                                                          2)
                                                                                                                         (("6"
                                                                                                                           (skolem
                                                                                                                            1
                                                                                                                            ("z"))
                                                                                                                           (("6"
                                                                                                                             (typepred
                                                                                                                              "z")
                                                                                                                             (("6"
                                                                                                                               (lemma
                                                                                                                                "sq_lt_abs"
                                                                                                                                ("a"
                                                                                                                                 "z"
                                                                                                                                 "b"
                                                                                                                                 "1"))
                                                                                                                               (("6"
                                                                                                                                 (expand
                                                                                                                                  "abs"
                                                                                                                                  -1
                                                                                                                                  2)
                                                                                                                                 (("6"
                                                                                                                                   (expand
                                                                                                                                    "sq")
                                                                                                                                   (("6"
                                                                                                                                     (lemma
                                                                                                                                      "sqrt_pos"
                                                                                                                                      ("px"
                                                                                                                                       "1-z*z"))
                                                                                                                                     (("1"
                                                                                                                                       (lemma
                                                                                                                                        "sq_sqrt"
                                                                                                                                        ("x"
                                                                                                                                         "1-z*z"))
                                                                                                                                       (("1"
                                                                                                                                         (expand
                                                                                                                                          "sq"
                                                                                                                                          -1)
                                                                                                                                         (("1"
                                                                                                                                           (lemma
                                                                                                                                            "div_times"
                                                                                                                                            ("x"
                                                                                                                                             "z"
                                                                                                                                             "y"
                                                                                                                                             "z"
                                                                                                                                             "n0x"
                                                                                                                                             "sqrt(1 - z * z)"
                                                                                                                                             "n0y"
                                                                                                                                             "sqrt(1 - z * z)"))
                                                                                                                                           (("1"
                                                                                                                                             (replace
                                                                                                                                              -1
                                                                                                                                              1)
                                                                                                                                             (("1"
                                                                                                                                               (split
                                                                                                                                                -2)
                                                                                                                                               (("1"
                                                                                                                                                 (replace
                                                                                                                                                  -1)
                                                                                                                                                 (("1"
                                                                                                                                                   (lemma
                                                                                                                                                    "div_mult_pos_lt2"
                                                                                                                                                    ("x"
                                                                                                                                                     "-1"
                                                                                                                                                     "z"
                                                                                                                                                     "z*z"
                                                                                                                                                     "py"
                                                                                                                                                     "1-z*z"))
                                                                                                                                                   (("1"
                                                                                                                                                     (assert)
                                                                                                                                                     nil
                                                                                                                                                     nil))
                                                                                                                                                   nil))
                                                                                                                                                 nil)
                                                                                                                                                ("2"
                                                                                                                                                 (assert)
                                                                                                                                                 nil
                                                                                                                                                 nil))
                                                                                                                                               nil))
                                                                                                                                             nil)
                                                                                                                                            ("2"
                                                                                                                                             (assert)
                                                                                                                                             nil
                                                                                                                                             nil))
                                                                                                                                           nil))
                                                                                                                                         nil))
                                                                                                                                       nil)
                                                                                                                                      ("2"
                                                                                                                                       (assert)
                                                                                                                                       nil
                                                                                                                                       nil))
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil))
                                                                                                                           nil))
                                                                                                                         nil))
                                                                                                                       nil))
                                                                                                                     nil))
                                                                                                                   nil))
                                                                                                                 nil))
                                                                                                               nil))
                                                                                                             nil))
                                                                                                           nil))
                                                                                                         nil))
                                                                                                       nil))
                                                                                                     nil)
                                                                                                    ("2"
                                                                                                     (hide-all-but
                                                                                                      1)
                                                                                                     (("2"
                                                                                                       (expand
                                                                                                        "not_one_element?")
                                                                                                       (("2"
                                                                                                         (skosimp*)
                                                                                                         (("2"
                                                                                                           (inst
                                                                                                            +
                                                                                                            "x!1+1")
                                                                                                           (("2"
                                                                                                             (assert)
                                                                                                             nil
                                                                                                             nil))
                                                                                                           nil))
                                                                                                         nil))
                                                                                                       nil))
                                                                                                     nil)
                                                                                                    ("3"
                                                                                                     (lemma
                                                                                                      deriv_domain_real)
                                                                                                     (("3"
                                                                                                       (propax)
                                                                                                       nil
                                                                                                       nil))
                                                                                                     nil))
                                                                                                   nil))
                                                                                                 nil))
                                                                                               nil))
                                                                                             nil))
                                                                                           nil))
                                                                                         nil))
                                                                                       nil))
                                                                                     nil))
                                                                                   nil))
                                                                                 nil))
                                                                               nil))
                                                                             nil))
                                                                           nil))
                                                                         nil))
                                                                       nil))
                                                                     nil)
                                                                    ("2"
                                                                     (propax)
                                                                     nil
                                                                     nil)
                                                                    ("3"
                                                                     (propax)
                                                                     nil
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil)
                                                            ("2"
                                                             (hide-all-but 1)
                                                             (("2"
                                                               (skosimp*)
                                                               (("2"
                                                                 (typepred
                                                                  "x!1")
                                                                 (("2"
                                                                   (lemma
                                                                    "sq_lt_abs"
                                                                    ("a"
                                                                     "x!1"
                                                                     "b"
                                                                     "1"))
                                                                   (("2"
                                                                     (grind)
                                                                     nil
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil)
                                                            ("3"
                                                             (hide-all-but 1)
                                                             (("3"
                                                               (assert)
                                                               (("3"
                                                                 (expand
                                                                  "not_one_element?")
                                                                 (("3"
                                                                   (skosimp*)
                                                                   (("3"
                                                                     (inst
                                                                      +
                                                                      "x!1+1")
                                                                     (("3"
                                                                       (assert)
                                                                       nil
                                                                       nil))
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil)
                                                            ("4"
                                                             (hide-all-but 1)
                                                             (("4"
                                                               (lemma
                                                                deriv_domain_posreal)
                                                               (("4"
                                                                 (propax)
                                                                 nil
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil))
                                                 nil))
                                               nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil)
              ("2" (hide 2)
               (("2" (skosimp*)
                 (("2" (typepred "x!1")
                   (("2" (case "x!1 = -1")
                     (("1" (assert) nil nil)
                      ("2" (case "x!1<1")
                       (("1" (assert) nil nil) ("2" (propax) nil nil)) nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil)
            ("2" (hide 2)
             (("2" (skosimp*)
               (("2" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
                 (("2" (typepred "x!1")
                   (("2" (expand "sq")
                     (("2" (lemma "sqrt_pos" ("px" "1-x!1*x!1"))
                       (("1" (assert) nil nil)
                        ("2" (assert) (("2" (grind) nil nil)) nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil)
            ("3" (hide 2)
             (("3" (skosimp*)
               (("3" (typepred "x!1")
                 (("3" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
                   (("3" (grind) nil nil)) nil))
                 nil))
               nil))
             nil)
            ("4" (hide 2)
             (("4" (skosimp*)
               (("4" (case "abs(x!1) < 1")
                 (("1" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
                   (("1" (expand "abs" -1 2)
                     (("1" (expand "sq" -1)
                       (("1" (lemma "sqrt_pos" ("px" "1-x!1*x!1"))
                         (("1" (assert) nil nil) ("2" (assert) nil nil)) nil))
                       nil))
                     nil))
                   nil)
                  ("2" (typepred "x!1") (("2" (grind) nil nil)) nil))
                 nil))
               nil))
             nil)
            ("5" (hide 2)
             (("5" (skosimp*)
               (("5" (typepred "x!1")
                 (("5" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
                   (("5" (expand "abs" -1 2)
                     (("5" (expand "sq")
                       (("5" (assert) (("5" (grind) nil nil)) nil)) nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil))
           nil))
         nil)
        ((real_abs_lt1 nonempty-type-eq-decl nil trig_types nil)
         (- const-decl "[numfield -> numfield]" number_fields nil)
         (numfield nonempty-type-eq-decl nil number_fields nil)
         (< const-decl "bool" reals nil)
         (AND const-decl "[bool, bool -> bool]" booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (real nonempty-type-from-decl nil reals nil)
         (real_pred const-decl "[number_field -> boolean]" reals nil)
         (number_field nonempty-type-from-decl nil number_fields nil)
         (number_field_pred const-decl "[number -> boolean]" number_fields
          nil)
         (boolean nonempty-type-decl nil booleans nil)
         (number nonempty-type-decl nil numbers nil)
         (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
         (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (nnreal type-eq-decl nil real_types nil)
         (>= const-decl "bool" reals nil)
         (nonneg_real nonempty-type-eq-decl nil real_types nil)
         (atan const-decl "{x: real_abs_lt_pi2 | y = tan_restrict(x)}" atan
               nil)
         (tan_restrict const-decl "real" trig_basic nil)
         (real_abs_lt_pi2 nonempty-type-eq-decl nil trig_types nil)
         (pi const-decl "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}"
          pi_def nil)
         (cos const-decl "real" sincos_def nil)
         (> const-decl "bool" reals nil)
         (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
         (nznum nonempty-type-eq-decl nil number_fields nil)
         (/= const-decl "boolean" notequal nil)
         (= const-decl "[T, T -> boolean]" equalities nil)
         (IF const-decl "[boolean, T, T -> T]" if_def nil)
         (extensionality formula-decl nil functions nil)
         (real_div_nzreal_is_real application-judgement "real" reals nil)
         (real_minus_real_is_real application-judgement "real" reals nil)
         (nzreal_div_nzreal_is_nzreal application-judgement "nzreal"
          real_types nil)
         (posreal_div_posreal_is_posreal application-judgement "posreal"
          real_types nil)
         (identity_derivable_fun formula-decl nil derivatives analysis)
         (const_derivable_fun formula-decl nil derivatives analysis)
         (I const-decl "(bijective?[T, T])" identity nil)
         (deriv_prod_fun formula-decl nil derivatives analysis)
         (derivable? const-decl "bool" derivatives analysis)
         (deriv_fun type-eq-decl nil derivatives analysis)
         (diff_derivable_fun formula-decl nil derivatives analysis)
         (- const-decl "[T -> real]" real_fun_ops reals)
         (deriv_sqrt_fun formula-decl nil sqrt_derivative analysis)
         (composition_derivable_fun formula-decl nil chain_rule analysis)
         (posreal nonempty-type-eq-decl nil real_types nil)
         (deriv_domain? const-decl "bool" deriv_domain_def analysis)
         (not_one_element? const-decl "bool" deriv_domain_def analysis)
         (deriv_comp_fun formula-decl nil chain_rule analysis)
         (sqrt_pos application-judgement "posreal" sqrt reals)
         (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
          real_types nil)
         (posreal_times_posreal_is_posreal application-judgement "posreal"
          real_types nil)
         (deriv_div_fun formula-decl nil derivatives analysis)
         (nz_deriv_fun type-eq-decl nil derivatives analysis)
         (deriv_atan_fun formula-decl nil atan nil)
         (real_plus_real_is_real application-judgement "real" reals nil)
         (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (sq const-decl "nonneg_real" sq reals)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
              nil)
         (sqrt_pos judgement-tcc nil sqrt reals)
         (real_ge_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (real_gt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (sq_sqrt formula-decl nil sqrt reals)
         (sq_lt_abs formula-decl nil sq reals)
         (int_abs_is_nonneg application-judgement "{j: nonneg_int | j >= i}"
          real_defs nil)
         (nzint_abs_is_pos application-judgement "{j: posint | j >= i}"
          real_defs nil)
         (nzrat_abs_is_pos application-judgement "{r: posrat | r >= q}"
          real_defs nil)
         (div_times formula-decl nil real_props nil)
         (nonzero_real nonempty-type-eq-decl nil reals nil)
         (div_mult_pos_lt2 formula-decl nil real_props nil)
         (/ const-decl "[T -> real]" real_fun_ops reals)
         (nzreal nonempty-type-eq-decl nil reals nil)
         (div_derivable_fun formula-decl nil derivatives analysis)
         (O const-decl "T3" function_props nil)
         (sq_nz_pos application-judgement "posreal" sq reals)
         (restrict const-decl "R" restrict nil)
         (sqrt_derivable_fun formula-decl nil sqrt_derivative analysis)
         (deriv_diff_fun formula-decl nil derivatives analysis)
         (+ const-decl "[T -> real]" real_fun_ops reals)
         (* const-decl "[T -> real]" real_fun_ops reals)
         (prod_derivable_fun formula-decl nil derivatives analysis)
         (deriv_const_fun formula-decl nil derivatives analysis)
         (deriv_id_fun formula-decl nil derivatives analysis)
         (asin const-decl "real_abs_le_pi2" asin nil)
         (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
          nil)
         (pi_bound name-judgement
          "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def nil)
         (real_times_real_is_real application-judgement "real" reals nil))
        nil)
       (deriv_asin_fun-1 nil 3262784313
        ("" (expand "asin")
         ((""
           (lemma "extensionality"
            ("f" "(LAMBDA (x: real_abs_lt1):
             IF x = -1 THEN -pi / 2
             ELSIF x < 1 THEN atan(x / sqrt(1 - x * x))
             ELSE pi / 2
             ENDIF)" "g"
             "LAMBDA (x: real_abs_lt1): atan(x / sqrt(1 - x * x))"))
           (("1" (split -1)
             (("1" (replace -1 1)
               (("1" (lemma "identity_derivable_fun[real_abs_lt1]")
                 (("1" (lemma "deriv_id_fun[real_abs_lt1]")
                   (("1" (lemma "const_derivable_fun[real_abs_lt1]" ("b" "1"))
                     (("1" (lemma "deriv_const_fun[real_abs_lt1]" ("b" "1"))
                       (("1" (expand "I")
                         (("1" (expand "const_fun")
                           (("1"
                             (lemma "prod_derivable_fun"
                              ("f1" "LAMBDA (x: real_abs_lt1): x" "f2"
                               "LAMBDA (x: real_abs_lt1): x"))
                             (("1" (assert)
                               (("1" (expand "*" -1)
                                 (("1"
                                   (lemma "deriv_prod_fun"
                                    ("ff1" "LAMBDA (x: real_abs_lt1): x" "ff2"
                                     "LAMBDA (x: real_abs_lt1): x"))
                                   (("1" (replace -5 -1)
                                     (("1"
                                       (expand "*" -1)
                                       (("1"
                                         (expand "+")
                                         (("1"
                                           (lemma
                                            "diff_derivable_fun"
                                            ("f1"
                                             "LAMBDA (x: real_abs_lt1): 1"
                                             "f2"
                                             "LAMBDA (x_1: real_abs_lt1): x_1 * x_1"))
                                           (("1"
                                             (assert)
                                             (("1"
                                               (expand "-" -1)
                                               (("1"
                                                 (lemma
                                                  "deriv_diff_fun"
                                                  ("ff1"
                                                   "LAMBDA (x: real_abs_lt1): 1"
                                                   "ff2"
                                                   "LAMBDA (x_1: real_abs_lt1): x_1 * x_1"))
                                                 (("1"
                                                   (replace -3 -1)
                                                   (("1"
                                                     (replace -5 -1)
                                                     (("1"
                                                       (expand "-" -1)
                                                       (("1"
                                                         (lemma
                                                          "sqrt_derivable_fun")
                                                         (("1"
                                                           (lemma
                                                            "deriv_sqrt_fun")
                                                           (("1"
                                                             (expand
                                                              "restrict"
                                                              (-1 -2))
                                                             (("1"
                                                               (lemma
                                                                "composition_derivable_fun[real_abs_lt1,posreal]"
                                                                ("g"
                                                                 "LAMBDA (x: posreal): sqrt(x)"
                                                                 "f"
                                                                 "LAMBDA (x_1: real_abs_lt1): 1 - x_1 * x_1"))
                                                               (("1"
                                                                 (replace
                                                                  -3
                                                                  -1)
                                                                 (("1"
                                                                   (replace
                                                                    -5
                                                                    -1)
                                                                   (("1"
                                                                     (expand
                                                                      "o")
                                                                     (("1"
                                                                       (lemma
                                                                        "deriv_comp_fun[real_abs_lt1,posreal]"
                                                                        ("gg"
                                                                         "LAMBDA (x: posreal): sqrt(x)"
                                                                         "ff"
                                                                         "LAMBDA (x_1: real_abs_lt1): 1 - x_1 * x_1"))
                                                                       (("1"
                                                                         (expand
                                                                          "o"
                                                                          -1)
                                                                         (("1"
                                                                           (replace
                                                                            -3
                                                                            -1)
                                                                           (("1"
                                                                             (replace
                                                                              -5
                                                                              -1)
                                                                             (("1"
                                                                               (expand
                                                                                "*"
                                                                                -1)
                                                                               (("1"
                                                                                 (lemma
                                                                                  "div_derivable_fun"
                                                                                  ("f"
                                                                                   "LAMBDA (x: real_abs_lt1): x"
                                                                                   "g"
                                                                                   "LAMBDA (x_1: real_abs_lt1): sqrt(1 - x_1 * x_1)"))
                                                                                 (("1"
                                                                                   (assert)
                                                                                   (("1"
                                                                                     (expand
                                                                                      "/"
                                                                                      -1)
                                                                                     (("1"
                                                                                       (lemma
                                                                                        "deriv_div_fun"
                                                                                        ("ff"
                                                                                         "LAMBDA (x: real_abs_lt1): x"
                                                                                         "gg"
                                                                                         "LAMBDA (x_1: real_abs_lt1): sqrt(1 - x_1 * x_1)"))
                                                                                       (("1"
                                                                                         (replace
                                                                                          -13
                                                                                          -1)
                                                                                         (("1"
                                                                                           (replace
                                                                                            -3
                                                                                            -1)
                                                                                           (("1"
                                                                                             (expand
                                                                                              "/"
                                                                                              -1)
                                                                                             (("1"
                                                                                               (expand
                                                                                                "*"
                                                                                                -1)
                                                                                               (("1"
                                                                                                 (expand
                                                                                                  "-"
                                                                                                  -1)
                                                                                                 (("1"
                                                                                                   (lemma
                                                                                                    "deriv_atan_fun")
                                                                                                   (("1"
                                                                                                     (flatten
                                                                                                      -1)
                                                                                                     (("1"
                                                                                                       (lemma
                                                                                                        "composition_derivable_fun[real_abs_lt1,real]"
                                                                                                        ("f"
                                                                                                         "LAMBDA (x_1: real_abs_lt1): x_1 / sqrt(1 - x_1 * x_1)"
                                                                                                         "g"
                                                                                                         "atan"))
                                                                                                       (("1"
                                                                                                         (expand
                                                                                                          "o"
                                                                                                          -1)
                                                                                                         (("1"
                                                                                                           (assert)
                                                                                                           (("1"
                                                                                                             (lemma
                                                                                                              "deriv_comp_fun[real_abs_lt1,real]"
                                                                                                              ("ff"
                                                                                                               "LAMBDA (x_1: real_abs_lt1): x_1 / sqrt(1 - x_1 * x_1)"
                                                                                                               "gg"
                                                                                                               "atan"))
                                                                                                             (("1"
                                                                                                               (replace
                                                                                                                -4
                                                                                                                -1)
                                                                                                               (("1"
                                                                                                                 (replace
                                                                                                                  -5
                                                                                                                  -1)
                                                                                                                 (("1"
                                                                                                                   (expand
                                                                                                                    "o"
                                                                                                                    -1)
                                                                                                                   (("1"
                                                                                                                     (expand
                                                                                                                      "*"
                                                                                                                      -1)
                                                                                                                     (("1"
                                                                                                                       (replace
                                                                                                                        -1
                                                                                                                        1)
                                                                                                                       (("1"
                                                                                                                         (hide-all-but
                                                                                                                          1)
                                                                                                                         (("1"
                                                                                                                           (lemma
                                                                                                                            "extensionality"
                                                                                                                            ("f"
                                                                                                                             "(LAMBDA (x: real_abs_lt1):
         1 / (1 + x / sqrt(1 - x * x) * (x / sqrt(1 - x * x))) *
          ((sqrt(1 - x * x) + 2 * (x * x * (1 / (2 * sqrt(1 - x * x))))) /
            (sqrt(1 - x * x) * sqrt(1 - x * x))))"
                                                                                                                             "g"
                                                                                                                             "(LAMBDA (x: real_abs_lt1): 1 / sqrt(1 - sq(x)))"))
                                                                                                                           (("1"
                                                                                                                             (split
                                                                                                                              -1)
                                                                                                                             (("1"
                                                                                                                               (propax)
                                                                                                                               nil
                                                                                                                               nil)
                                                                                                                              ("2"
                                                                                                                               (hide
                                                                                                                                2)
                                                                                                                               (("2"
                                                                                                                                 (skolem
                                                                                                                                  1
                                                                                                                                  ("z"))
                                                                                                                                 (("2"
                                                                                                                                   (typepred
                                                                                                                                    "z")
                                                                                                                                   (("2"
                                                                                                                                     (lemma
                                                                                                                                      "sq_lt_abs"
                                                                                                                                      ("a"
                                                                                                                                       "z"
                                                                                                                                       "b"
                                                                                                                                       "1"))
                                                                                                                                     (("2"
                                                                                                                                       (expand
                                                                                                                                        "abs"
                                                                                                                                        -1
                                                                                                                                        2)
                                                                                                                                       (("2"
                                                                                                                                         (expand
                                                                                                                                          "sq")
                                                                                                                                         (("2"
                                                                                                                                           (lemma
                                                                                                                                            "sqrt_pos"
                                                                                                                                            ("px"
                                                                                                                                             "1-z*z"))
                                                                                                                                           (("1"
                                                                                                                                             (lemma
                                                                                                                                              "sq_sqrt"
                                                                                                                                              ("x"
                                                                                                                                               "1-z*z"))
                                                                                                                                             (("1"
                                                                                                                                               (expand
                                                                                                                                                "sq")
                                                                                                                                               (("1"
                                                                                                                                                 (assert)
                                                                                                                                                 nil
                                                                                                                                                 nil))
                                                                                                                                               nil))
                                                                                                                                             nil)
                                                                                                                                            ("2"
                                                                                                                                             (assert)
                                                                                                                                             nil
                                                                                                                                             nil))
                                                                                                                                           nil))
                                                                                                                                         nil))
                                                                                                                                       nil))
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil)
                                                                                                                            ("2"
                                                                                                                             (hide
                                                                                                                              2)
                                                                                                                             (("2"
                                                                                                                               (skolem
                                                                                                                                1
                                                                                                                                ("z"))
                                                                                                                               (("2"
                                                                                                                                 (lemma
                                                                                                                                  "sq_lt_abs"
                                                                                                                                  ("a"
                                                                                                                                   "z"
                                                                                                                                   "b"
                                                                                                                                   "1"))
                                                                                                                                 (("2"
                                                                                                                                   (expand
                                                                                                                                    "sq")
                                                                                                                                   (("2"
                                                                                                                                     (typepred
                                                                                                                                      "z")
                                                                                                                                     (("2"
                                                                                                                                       (expand
                                                                                                                                        "abs"
                                                                                                                                        -2
                                                                                                                                        2)
                                                                                                                                       (("2"
                                                                                                                                         (lemma
                                                                                                                                          "sqrt_pos"
                                                                                                                                          ("px"
                                                                                                                                           "1-z*z"))
                                                                                                                                         (("1"
                                                                                                                                           (assert)
                                                                                                                                           nil
                                                                                                                                           nil)
                                                                                                                                          ("2"
                                                                                                                                           (assert)
                                                                                                                                           nil
                                                                                                                                           nil))
                                                                                                                                         nil))
                                                                                                                                       nil))
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil)
                                                                                                                            ("3"
                                                                                                                             (hide
                                                                                                                              2)
                                                                                                                             (("3"
                                                                                                                               (skolem
                                                                                                                                1
                                                                                                                                ("z"))
                                                                                                                               (("3"
                                                                                                                                 (typepred
                                                                                                                                  "z")
                                                                                                                                 (("3"
                                                                                                                                   (lemma
                                                                                                                                    "sq_lt_abs"
                                                                                                                                    ("a"
                                                                                                                                     "z"
                                                                                                                                     "b"
                                                                                                                                     "1"))
                                                                                                                                   (("3"
                                                                                                                                     (expand
                                                                                                                                      "abs"
                                                                                                                                      -1
                                                                                                                                      2)
                                                                                                                                     (("3"
                                                                                                                                       (expand
                                                                                                                                        "sq")
                                                                                                                                       (("3"
                                                                                                                                         (assert)
                                                                                                                                         nil
                                                                                                                                         nil))
                                                                                                                                       nil))
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil)
                                                                                                                            ("4"
                                                                                                                             (hide
                                                                                                                              2)
                                                                                                                             (("4"
                                                                                                                               (skolem
                                                                                                                                1
                                                                                                                                ("z"))
                                                                                                                               (("4"
                                                                                                                                 (typepred
                                                                                                                                  "z")
                                                                                                                                 (("4"
                                                                                                                                   (lemma
                                                                                                                                    "sq_lt_abs"
                                                                                                                                    ("a"
                                                                                                                                     "z"
                                                                                                                                     "b"
                                                                                                                                     "1"))
                                                                                                                                   (("4"
                                                                                                                                     (expand
                                                                                                                                      "abs"
                                                                                                                                      -1
                                                                                                                                      2)
                                                                                                                                     (("4"
                                                                                                                                       (expand
                                                                                                                                        "sq")
                                                                                                                                       (("4"
                                                                                                                                         (lemma
                                                                                                                                          "sq_sqrt"
                                                                                                                                          ("x"
                                                                                                                                           "1-z*z"))
                                                                                                                                         (("4"
                                                                                                                                           (expand
                                                                                                                                            "sq")
                                                                                                                                           (("4"
                                                                                                                                             (assert)
                                                                                                                                             nil
                                                                                                                                             nil))
                                                                                                                                           nil))
                                                                                                                                         nil))
                                                                                                                                       nil))
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil)
                                                                                                                            ("5"
                                                                                                                             (hide
                                                                                                                              2)
                                                                                                                             (("5"
                                                                                                                               (skolem
                                                                                                                                1
                                                                                                                                ("z"))
                                                                                                                               (("5"
                                                                                                                                 (typepred
                                                                                                                                  "z")
                                                                                                                                 (("5"
                                                                                                                                   (lemma
                                                                                                                                    "sq_lt_abs"
                                                                                                                                    ("a"
                                                                                                                                     "z"
                                                                                                                                     "b"
                                                                                                                                     "1"))
                                                                                                                                   (("5"
                                                                                                                                     (expand
                                                                                                                                      "abs"
                                                                                                                                      -1
                                                                                                                                      2)
                                                                                                                                     (("5"
                                                                                                                                       (expand
                                                                                                                                        "sq")
                                                                                                                                       (("5"
                                                                                                                                         (lemma
                                                                                                                                          "sqrt_pos"
                                                                                                                                          ("px"
                                                                                                                                           "1-z*z"))
                                                                                                                                         (("1"
                                                                                                                                           (assert)
                                                                                                                                           nil
                                                                                                                                           nil)
                                                                                                                                          ("2"
                                                                                                                                           (assert)
                                                                                                                                           nil
                                                                                                                                           nil))
                                                                                                                                         nil))
                                                                                                                                       nil))
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil)
                                                                                                                            ("6"
                                                                                                                             (hide
                                                                                                                              2)
                                                                                                                             (("6"
                                                                                                                               (skolem
                                                                                                                                1
                                                                                                                                ("z"))
                                                                                                                               (("6"
                                                                                                                                 (typepred
                                                                                                                                  "z")
                                                                                                                                 (("6"
                                                                                                                                   (lemma
                                                                                                                                    "sq_lt_abs"
                                                                                                                                    ("a"
                                                                                                                                     "z"
                                                                                                                                     "b"
                                                                                                                                     "1"))
                                                                                                                                   (("6"
                                                                                                                                     (expand
                                                                                                                                      "abs"
                                                                                                                                      -1
                                                                                                                                      2)
                                                                                                                                     (("6"
                                                                                                                                       (expand
                                                                                                                                        "sq")
                                                                                                                                       (("6"
                                                                                                                                         (lemma
                                                                                                                                          "sqrt_pos"
                                                                                                                                          ("px"
                                                                                                                                           "1-z*z"))
                                                                                                                                         (("1"
                                                                                                                                           (lemma
                                                                                                                                            "sq_sqrt"
                                                                                                                                            ("x"
                                                                                                                                             "1-z*z"))
                                                                                                                                           (("1"
                                                                                                                                             (expand
                                                                                                                                              "sq"
                                                                                                                                              -1)
                                                                                                                                             (("1"
                                                                                                                                               (lemma
                                                                                                                                                "div_times"
                                                                                                                                                ("x"
                                                                                                                                                 "z"
                                                                                                                                                 "y"
                                                                                                                                                 "z"
                                                                                                                                                 "n0x"
                                                                                                                                                 "sqrt(1 - z * z)"
                                                                                                                                                 "n0y"
                                                                                                                                                 "sqrt(1 - z * z)"))
                                                                                                                                               (("1"
                                                                                                                                                 (replace
                                                                                                                                                  -1
                                                                                                                                                  1)
                                                                                                                                                 (("1"
                                                                                                                                                   (split
                                                                                                                                                    -2)
                                                                                                                                                   (("1"
                                                                                                                                                     (replace
                                                                                                                                                      -1)
                                                                                                                                                     (("1"
                                                                                                                                                       (lemma
                                                                                                                                                        "div_mult_pos_lt2"
                                                                                                                                                        ("x"
                                                                                                                                                         "-1"
                                                                                                                                                         "z"
                                                                                                                                                         "z*z"
                                                                                                                                                         "py"
                                                                                                                                                         "1-z*z"))
                                                                                                                                                       (("1"
                                                                                                                                                         (assert)
                                                                                                                                                         nil
                                                                                                                                                         nil))
                                                                                                                                                       nil))
                                                                                                                                                     nil)
                                                                                                                                                    ("2"
                                                                                                                                                     (assert)
                                                                                                                                                     nil
                                                                                                                                                     nil))
                                                                                                                                                   nil))
                                                                                                                                                 nil)
                                                                                                                                                ("2"
                                                                                                                                                 (assert)
                                                                                                                                                 nil
                                                                                                                                                 nil))
                                                                                                                                               nil))
                                                                                                                                             nil))
                                                                                                                                           nil)
                                                                                                                                          ("2"
                                                                                                                                           (assert)
                                                                                                                                           nil
                                                                                                                                           nil))
                                                                                                                                         nil))
                                                                                                                                       nil))
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil))
                                                                                                                           nil))
                                                                                                                         nil))
                                                                                                                       nil))
                                                                                                                     nil))
                                                                                                                   nil))
                                                                                                                 nil))
                                                                                                               nil))
                                                                                                             nil))
                                                                                                           nil))
                                                                                                         nil)
                                                                                                        ("2"
                                                                                                         (skosimp*)
                                                                                                         (("2"
                                                                                                           (inst
                                                                                                            +
                                                                                                            "x!1+1")
                                                                                                           (("2"
                                                                                                             (assert)
                                                                                                             nil
                                                                                                             nil))
                                                                                                           nil))
                                                                                                         nil))
                                                                                                       nil))
                                                                                                     nil))
                                                                                                   nil))
                                                                                                 nil))
                                                                                               nil))
                                                                                             nil))
                                                                                           nil))
                                                                                         nil))
                                                                                       nil))
                                                                                     nil))
                                                                                   nil))
                                                                                 nil))
                                                                               nil))
                                                                             nil))
                                                                           nil))
                                                                         nil)
                                                                        ("2"
                                                                         (propax)
                                                                         nil
                                                                         nil)
                                                                        ("3"
                                                                         (propax)
                                                                         nil
                                                                         nil))
                                                                       nil))
                                                                     nil))
                                                                   nil))
                                                                 nil)
                                                                ("2"
                                                                 (hide-all-but
                                                                  1)
                                                                 (("2"
                                                                   (skosimp*)
                                                                   (("2"
                                                                     (typepred
                                                                      "x!1")
                                                                     (("2"
                                                                       (lemma
                                                                        "sq_lt_abs"
                                                                        ("a"
                                                                         "x!1"
                                                                         "b"
                                                                         "1"))
                                                                       (("2"
                                                                         (grind)
                                                                         nil
                                                                         nil))
                                                                       nil))
                                                                     nil))
                                                                   nil))
                                                                 nil)
                                                                ("3"
                                                                 (hide-all-but
                                                                  1)
                                                                 (("3"
                                                                   (skosimp*)
                                                                   (("3"
                                                                     (inst
                                                                      +
                                                                      "x!1+1")
                                                                     (("3"
                                                                       (assert)
                                                                       nil
                                                                       nil))
                                                                     nil))
                                                                   nil))
                                                                 nil)
                                                                ("4"
                                                                 (hide-all-but
                                                                  1)
                                                                 (("4"
                                                                   (grind)
                                                                   nil
                                                                   nil))
                                                                 nil)
                                                                ("5"
                                                                 (hide-all-but
                                                                  1)
                                                                 (("5"
                                                                   (skosimp*)
                                                                   (("5"
                                                                     (typepred
                                                                      "x!1")
                                                                     (("5"
                                                                       (case
                                                                        "x!1=0")
                                                                       (("1"
                                                                         (inst
                                                                          +
                                                                          "1/2")
                                                                         (("1"
                                                                           (assert)
                                                                           nil
                                                                           nil)
                                                                          ("2"
                                                                           (grind)
                                                                           nil
                                                                           nil))
                                                                         nil)
                                                                        ("2"
                                                                         (inst
                                                                          +
                                                                          "0")
                                                                         (("1"
                                                                           (assert)
                                                                           nil
                                                                           nil)
                                                                          ("2"
                                                                           (grind)
                                                                           nil
                                                                           nil))
                                                                         nil))
                                                                       nil))
                                                                     nil))
                                                                   nil))
                                                                 nil)
                                                                ("6"
                                                                 (hide-all-but
                                                                  1)
                                                                 (("6"
                                                                   (grind)
                                                                   nil
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil))
                                                 nil))
                                               nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil)
              ("2" (hide 2)
               (("2" (skosimp*)
                 (("2" (typepred "x!1")
                   (("2" (expand "abs")
                     (("2" (case "x!1 = -1")
                       (("1" (assert) nil nil)
                        ("2" (case "x!1<1")
                         (("1" (assert) nil nil) ("2" (assert) nil nil)) nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil)
            ("2" (hide 2)
             (("2" (skosimp*)
               (("2" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
                 (("2" (typepred "x!1")
                   (("2" (expand "abs" -2 2)
                     (("2" (expand "sq")
                       (("2" (lemma "sqrt_pos" ("px" "1-x!1*x!1"))
                         (("1" (assert) nil nil) ("2" (assert) nil nil)) nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil)
            ("3" (hide 2)
             (("3" (skosimp*)
               (("3" (typepred "x!1")
                 (("3" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
                   (("3" (grind) nil nil)) nil))
                 nil))
               nil))
             nil)
            ("4" (hide 2)
             (("4" (skosimp*)
               (("4" (case "abs(x!1) < 1")
                 (("1" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
                   (("1" (expand "abs" -1 2)
                     (("1" (expand "sq" -1)
                       (("1" (lemma "sqrt_pos" ("px" "1-x!1*x!1"))
                         (("1" (assert) nil nil) ("2" (assert) nil nil)) nil))
                       nil))
                     nil))
                   nil)
                  ("2" (hide -2)
                   (("2" (typepred "x!1") (("2" (propax) nil nil)) nil)) nil))
                 nil))
               nil))
             nil)
            ("5" (hide 2)
             (("5" (skosimp*)
               (("5" (typepred "x!1")
                 (("5" (lemma "sq_lt_abs" ("a" "x!1" "b" "1"))
                   (("5" (expand "abs" -1 2)
                     (("5" (expand "sq") (("5" (assert) nil nil)) nil)) nil))
                   nil))
                 nil))
               nil))
             nil))
           nil))
         nil)
        ((sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
         (atan const-decl "{x: real_abs_lt_pi2 | y = tan_restrict(x)}" atan
               nil)
         (deriv_id_fun formula-decl nil derivatives analysis)
         (deriv_const_fun formula-decl nil derivatives analysis)
         (const_fun const-decl "[T -> real]" real_fun_ops reals)
         (deriv_prod_fun formula-decl nil derivatives analysis)
         (deriv_fun type-eq-decl nil derivatives analysis)
         (diff_derivable_fun formula-decl nil derivatives analysis)
         (deriv_sqrt_fun formula-decl nil sqrt_derivative analysis)
         (composition_derivable_fun formula-decl nil chain_rule analysis)
         (deriv_comp_fun formula-decl nil chain_rule analysis)
         (deriv_div_fun formula-decl nil derivatives analysis)
         (nz_deriv_fun type-eq-decl nil derivatives analysis)
         (deriv_atan_fun formula-decl nil atan nil)
         (sq const-decl "nonneg_real" sq reals)
         (sqrt_pos judgement-tcc nil sqrt reals)
         (sq_sqrt formula-decl nil sqrt reals)
         (sq_lt_abs formula-decl nil sq reals)
         (div_derivable_fun formula-decl nil derivatives analysis)
         (sqrt_derivable_fun formula-decl nil sqrt_derivative analysis)
         (deriv_diff_fun formula-decl nil derivatives analysis)
         (prod_derivable_fun formula-decl nil derivatives analysis)
         (const_derivable_fun formula-decl nil derivatives analysis)
         (identity_derivable_fun formula-decl nil derivatives analysis))
        shostak))
      (asin_pos_bnds_TCC1 0
       (asin_pos_bnds_TCC1-2 "" 3790092307
        ("" (skosimp*)
         (("" (typepred "px!1")
           (("" (assert)
             ((""
               (lemma "posreal_times_posreal_is_posreal"
                ("px" "px!1" "py" "px!1"))
               (("" (case "px!1 = 1")
                 (("1" (replace -1) (("1" (assert) nil nil)) nil)
                  ("2"
                   (lemma "posreal_div_posreal_is_posreal"
                    ("px" "px!1 * px!1" "py" "6"))
                   (("2"
                     (lemma "both_sides_minus_lt2"
                      ("z" "1" "y" "0" "x" "px!1*px!1/6"))
                     (("2" (expand ">" -2)
                       (("2" (replace -2 -1)
                         (("2" (flatten -1)
                           (("2"
                             (lemma "lt_times_lt_pos1"
                              ("px" "px!1" "y" "1" "nnz" "1 - px!1 * px!1 / 6"
                               "w" "1"))
                             (("1" (assert) nil nil)
                              ("2" (assert)
                               (("2"
                                 (lemma "posreal_div_posreal_is_posreal"
                                  ("px" "px!1 - px!1 * px!1 / 6 * px!1" "py"
                                   "px!1"))
                                 (("2"
                                   (lemma "minus_div2"
                                    ("x" "px!1" "y" "px!1*px!1/6*px!1" "n0x"
                                     "px!1"))
                                   (("2" (replace -1 -2 rl)
                                     (("2"
                                       (hide -1)
                                       (("2"
                                         (rewrite "div_simp" -1)
                                         (("2"
                                           (case
                                            "px!1 * px!1 / 6 * px!1 / px!1 = px!1 * px!1 / 6")
                                           (("1"
                                             (replace -1)
                                             (("1" (assert) nil nil))
                                             nil)
                                            ("2"
                                             (hide 2 4)
                                             (("2" (assert) nil nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil))
           nil))
         nil)
        nil shostak
        (asin_pos_bnds subtype
         "number_fields.*(asin.px, ((number_fields.-)(1, number_fields./(number_fields.*(asin.px, asin.px), 6))))"
         "real_abs_le1"))
       (asin_pos_bnds_TCC1-1 nil 3263659929
        ("" (skosimp*)
         (("" (typepred "px!1")
           (("" (expand "abs" -1)
             (("" (expand "abs" 1)
               (("" (assert)
                 ((""
                   (lemma "posreal_times_posreal_is_posreal"
                    ("px" "px!1" "py" "px!1"))
                   (("" (case "px!1 = 1")
                     (("1" (replace -1) (("1" (assert) nil nil)) nil)
                      ("2"
                       (lemma "posreal_div_posreal_is_posreal"
                        ("px" "px!1 * px!1" "py" "6"))
                       (("2"
                         (lemma "both_sides_minus_lt2"
                          ("z" "1" "y" "0" "x" "px!1*px!1/6"))
                         (("2" (expand ">" -2)
                           (("2" (replace -2 -1)
                             (("2" (flatten -1)
                               (("2"
                                 (lemma "lt_times_lt_pos1"
                                  ("px" "px!1" "y" "1" "nnz"
                                   "1 - px!1 * px!1 / 6" "w" "1"))
                                 (("1" (assert) nil nil)
                                  ("2" (assert)
                                   (("2"
                                     (lemma "posreal_div_posreal_is_posreal"
                                      ("px"
                                       "px!1 - px!1 * px!1 / 6 * px!1"
                                       "py"
                                       "px!1"))
                                     (("2"
                                       (lemma
                                        "minus_div2"
                                        ("x"
                                         "px!1"
                                         "y"
                                         "px!1*px!1/6*px!1"
                                         "n0x"
                                         "px!1"))
                                       (("2"
                                         (replace -1 -2 rl)
                                         (("2"
                                           (hide -1)
                                           (("2"
                                             (rewrite "div_simp" -1)
                                             (("2"
                                               (case
                                                "px!1 * px!1 / 6 * px!1 / px!1 = px!1 * px!1 / 6")
                                               (("1"
                                                 (replace -1)
                                                 (("1" (assert) nil nil))
                                                 nil)
                                                ("2"
                                                 (hide 2 4)
                                                 (("2" (assert) nil nil))
                                                 nil))
                                               nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil))
           nil))
         nil)
        ((< const-decl "bool" reals nil)
         (real_abs_le1 nonempty-type-eq-decl nil trig_types nil)
         (AND const-decl "[bool, bool -> bool]" booleans nil)
         (- const-decl "[numfield -> numfield]" number_fields nil)
         (numfield nonempty-type-eq-decl nil number_fields nil)
         (<= const-decl "bool" reals nil)
         (real nonempty-type-from-decl nil reals nil)
         (real_pred const-decl "[number_field -> boolean]" reals nil)
         (number_field nonempty-type-from-decl nil number_fields nil)
         (number_field_pred const-decl "[number -> boolean]" number_fields
          nil)
         (number nonempty-type-decl nil numbers nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (boolean nonempty-type-decl nil booleans nil)
         (posreal_times_posreal_is_posreal judgement-tcc nil real_types nil)
         (>= const-decl "bool" reals nil)
         (nonneg_real nonempty-type-eq-decl nil real_types nil)
         (> const-decl "bool" reals nil)
         (posreal nonempty-type-eq-decl nil real_types nil)
         (real_ge_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (posreal_div_posreal_is_posreal judgement-tcc nil real_types nil)
         (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (minus_div2 formula-decl nil real_props nil)
         (nonzero_real nonempty-type-eq-decl nil reals nil)
         (div_simp formula-decl nil real_props nil)
         (odd_minus_even_is_odd application-judgement "odd_int" integers nil)
         (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (lt_times_lt_pos1 formula-decl nil real_props nil)
         (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
         (nznum nonempty-type-eq-decl nil number_fields nil)
         (/= const-decl "boolean" notequal nil)
         (both_sides_minus_lt2 formula-decl nil real_props nil)
         (= const-decl "[T, T -> boolean]" equalities nil)
         (real_le_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (minus_odd_is_odd application-judgement "odd_int" integers nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (real_gt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (real_times_real_is_real application-judgement "real" reals nil)
         (real_minus_real_is_real application-judgement "real" reals nil)
         (real_div_nzreal_is_real application-judgement "real" reals nil)
         (pi_bound name-judgement
          "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def nil)
         (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
          nil))
        shostak
        (asin_pos_bnds subtype
         "number_fields.*(asin.px, ((number_fields.-)(1, number_fields./(number_fields.*(asin.px, asin.px), 6))))"
         "real_abs_le1")))
      (asin_pos_bnds 0
       (asin_pos_bnds-5 "" 3790092316
        ("" (skosimp*)
         (("" (split)
           (("1" (lemma "asin_derivable_fun")
             (("1" (lemma "deriv_asin_fun")
               (("1" (lemma "identity_derivable_fun[real_abs_lt1]")
                 (("1" (lemma "deriv_id_fun[real_abs_lt1]")
                   (("1" (expand "I")
                     (("1"
                       (lemma "diff_derivable_fun[real_abs_lt1]"
                        ("f1" "LAMBDA (x: real_abs_lt1): asin(x)" "f2"
                         "LAMBDA (x: real_abs_lt1): x"))
                       (("1" (assert)
                         (("1" (expand "-")
                           (("1"
                             (lemma "deriv_diff_fun[real_abs_lt1]"
                              ("ff1" "LAMBDA (x: real_abs_lt1): asin(x)" "ff2"
                               "LAMBDA (x: real_abs_lt1): x"))
                             (("1" (replace -5 -1)
                               (("1" (replace -3 -1)
                                 (("1" (expand "-")
                                   (("1" (typepred "px!1")
                                     (("1"
                                       (hide -1)
                                       (("1"
                                         (expand "<=" -1)
                                         (("1"
                                           (split -1)
                                           (("1"
                                             (lemma
                                              "minimum_derivative[{x:nnreal| x < 1}]"
                                              ("g"
                                               "LAMBDA (x_1:{x:nnreal| x < 1} ): asin(x_1) - x_1"
                                               "x"
                                               "0"
                                               "y1"
                                               "px!1"))
                                             (("1"
                                               (split -1)
                                               (("1"
                                                 (simplify -1)
                                                 (("1"
                                                   (rewrite "asin_0")
                                                   (("1" (assert) nil nil))
                                                   nil))
                                                 nil)
                                                ("2"
                                                 (lemma
                                                  "restrict2_deriv[{x: nnreal | x < 1},real_abs_lt1]"
                                                  ("f"
                                                   "LAMBDA (x_1: real_abs_lt1): asin(x_1) - x_1"
                                                   "a"
                                                   "0"))
                                                 (("1"
                                                   (replace -4 -1)
                                                   (("1"
                                                     (simplify -1)
                                                     (("1"
                                                       (expand "restrict2" -1)
                                                       (("1"
                                                         (replace -1 1 rl)
                                                         (("1"
                                                           (expand "sq" 1)
                                                           (("1"
                                                             (rewrite
                                                              "sqrt_1")
                                                             (("1"
                                                               (assert)
                                                               nil
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil)
                                                  ("2" (propax) nil nil)
                                                  ("3"
                                                   (skosimp*)
                                                   (("3"
                                                     (inst + "x!1")
                                                     nil
                                                     nil))
                                                   nil))
                                                 nil)
                                                ("3" (assert) nil nil)
                                                ("4"
                                                 (skosimp*)
                                                 (("4"
                                                   (typepred "y!1")
                                                   (("4"
                                                     (expand ">=" -1)
                                                     (("4"
                                                       (expand "<=" -1)
                                                       (("4"
                                                         (split -1)
                                                         (("1"
                                                           (lemma
                                                            "restrict2_deriv[{x: nnreal | x < 1},real_abs_lt1]"
                                                            ("f"
                                                             "LAMBDA (x_1: real_abs_lt1): asin(x_1) - x_1"
                                                             "a"
                                                             "y!1"))
                                                           (("1"
                                                             (replace -6 -1)
                                                             (("1"
                                                               (simplify -1)
                                                               (("1"
                                                                 (expand
                                                                  "restrict2"
                                                                  -1)
                                                                 (("1"
                                                                   (replace
                                                                    -1
                                                                    2
                                                                    rl)
                                                                   (("1"
                                                                     (hide
                                                                      -1
                                                                      -6
                                                                      3
                                                                      1
                                                                      -7
                                                                      -8
                                                                      -9
                                                                      -10
                                                                      -11)
                                                                     (("1"
                                                                       (lemma
                                                                        "sq_lt"
                                                                        ("nna"
                                                                         "0"
                                                                         "nnb"
                                                                         "y!1"))
                                                                       (("1"
                                                                         (lemma
                                                                          "sq_lt"
                                                                          ("nna"
                                                                           "y!1"
                                                                           "nnb"
                                                                           "1"))
                                                                         (("1"
                                                                           (expand
                                                                            "sq"
                                                                            -1
                                                                            2)
                                                                           (("1"
                                                                             (expand
                                                                              "sq"
                                                                              -2
                                                                              1)
                                                                             (("1"
                                                                               (assert)
                                                                               (("1"
                                                                                 (lemma
                                                                                  "sqrt_pos"
                                                                                  ("px"
                                                                                   "1-sq(y!1)"))
                                                                                 (("1"
                                                                                   (lemma
                                                                                    "div_mult_pos_gt2"
                                                                                    ("z"
                                                                                     "1"
                                                                                     "py"
                                                                                     "sqrt(1-sq(y!1))"
                                                                                     "x"
                                                                                     "1"))
                                                                                   (("1"
                                                                                     (lemma
                                                                                      "sqrt_lt"
                                                                                      ("nny"
                                                                                       "1-sq(y!1)"
                                                                                       "nnz"
                                                                                       "1"))
                                                                                     (("1"
                                                                                       (rewrite
                                                                                        "sqrt_1")
                                                                                       (("1"
                                                                                         (assert)
                                                                                         (("1"
                                                                                           (lemma
                                                                                            "posreal_times_posreal_is_posreal"
                                                                                            ("px"
                                                                                             "1 / sqrt(1 - sq(y!1))-1"
                                                                                             "py"
                                                                                             "y!1"))
                                                                                           (("1"
                                                                                             (assert)
                                                                                             nil
                                                                                             nil))
                                                                                           nil))
                                                                                         nil))
                                                                                       nil))
                                                                                     nil))
                                                                                   nil))
                                                                                 nil))
                                                                               nil))
                                                                             nil))
                                                                           nil))
                                                                         nil))
                                                                       nil))
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil)
                                                            ("2"
                                                             (propax)
                                                             nil
                                                             nil)
                                                            ("3"
                                                             (skosimp*)
                                                             (("3"
                                                               (inst + "x!1")
                                                               nil
                                                               nil))
                                                             nil))
                                                           nil)
                                                          ("2"
                                                           (assert)
                                                           nil
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil))
                                                 nil))
                                               nil)
                                              ("2" (propax) nil nil)
                                              ("3"
                                               (lemma
                                                "restrict2_derivable[{x: nnreal | x < 1},real_abs_lt1]"
                                                ("f"
                                                 "LAMBDA (x_1: real_abs_lt1): asin(x_1) - x_1"))
                                               (("1"
                                                 (expand "restrict2" -1)
                                                 (("1" (propax) nil nil))
                                                 nil)
                                                ("2" (propax) nil nil)
                                                ("3"
                                                 (skosimp*)
                                                 (("3"
                                                   (typepred "x!1")
                                                   (("3"
                                                     (inst + "x!1")
                                                     nil
                                                     nil))
                                                   nil))
                                                 nil))
                                               nil)
                                              ("4"
                                               (hide-all-but 1)
                                               (("4"
                                                 (expand "connected?")
                                                 (("4"
                                                   (skosimp*)
                                                   (("4" (assert) nil nil))
                                                   nil))
                                                 nil))
                                               nil))
                                             nil)
                                            ("2"
                                             (replace -1)
                                             (("2"
                                               (rewrite "asin_1")
                                               (("2"
                                                 (lemma "pi_bnds")
                                                 (("2"
                                                   (flatten)
                                                   (("2" (assert) nil nil))
                                                   nil))
                                                 nil))
                                               nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil)
            ("2" (flatten)
             (("2" (case "px!1 < sqrt(6)")
               (("1" (typepred "px!1")
                 (("1" (lemma "identity_derivable_fun[{x:nnreal| x <= 1}]")
                   (("1" (lemma "deriv_id_fun[{x:nnreal| x <= 1}]")
                     (("1" (expand "I")
                       (("1"
                         (lemma "const_derivable_fun[{x:nnreal| x <= 1}]"
                          ("b" "1"))
                         (("1"
                           (lemma "deriv_const_fun[{x:nnreal| x <= 1}]"
                            ("b" "1"))
                           (("1"
                             (lemma "prod_derivable_fun[{x:nnreal| x <= 1}]"
                              ("f1" "LAMBDA (x: {x: nnreal | x <= 1}): x" "f2"
                               "LAMBDA (x: {x: nnreal | x <= 1}): x"))
                             (("1" (assert)
                               (("1" (expand "*" -1)
                                 (("1"
                                   (lemma "deriv_prod_fun[{x:nnreal| x <= 1}]"
                                    ("ff1"
                                     "LAMBDA (x: {x: nnreal | x <= 1}): x"
                                     "ff2"
                                     "LAMBDA (x: {x: nnreal | x <= 1}): x"))
                                   (("1" (replace -5 -1)
                                     (("1"
                                       (expand "*")
                                       (("1"
                                         (expand "+")
                                         (("1"
                                           (lemma
                                            "scal_derivable_fun[{x:nnreal| x <= 1}]"
                                            ("f"
                                             "LAMBDA (x_1: {x: nnreal | x <= 1}): x_1 * x_1"
                                             "b"
                                             "1/6"))
                                           (("1"
                                             (assert)
                                             (("1"
                                               (expand "*")
                                               (("1"
                                                 (lemma
                                                  "deriv_scal_fun[{x:nnreal| x <= 1}]"
                                                  ("ff"
                                                   "LAMBDA (x_1: {x: nnreal | x <= 1}): x_1 * x_1"
                                                   "b"
                                                   "1/6"))
                                                 (("1"
                                                   (replace -3 -1)
                                                   (("1"
                                                     (expand "*" -1)
                                                     (("1"
                                                       (lemma
                                                        "diff_derivable_fun[{x:nnreal| x <= 1}]"
                                                        ("f1"
                                                         "LAMBDA (x: {x: nnreal | x <= 1}): 1"
                                                         "f2"
                                                         "LAMBDA (x: {x: nnreal | x <= 1}): 1 / 6 * (x * x)"))
                                                       (("1"
                                                         (assert)
                                                         (("1"
                                                           (expand "-")
                                                           (("1"
                                                             (lemma
                                                              "deriv_diff_fun[{x:nnreal| x <= 1}]"
                                                              ("ff1"
                                                               "LAMBDA (x: {x: nnreal | x <= 1}): 1"
                                                               "ff2"
                                                               "LAMBDA (x: {x: nnreal | x <= 1}): 1 / 6 * (x * x)"))
                                                             (("1"
                                                               (replace -7 -1)
                                                               (("1"
                                                                 (replace
                                                                  -3
                                                                  -1)
                                                                 (("1"
                                                                   (expand
                                                                    "-")
                                                                   (("1"
                                                                     (lemma
                                                                      "prod_derivable_fun[{x:nnreal| x <= 1}]"
                                                                      ("f1"
                                                                       "LAMBDA (x: {x: nnreal | x <= 1}): x"
                                                                       "f2"
                                                                       "LAMBDA (x_1: {x: nnreal | x <= 1}): 1 - 1 / 6 * (x_1 * x_1)"))
                                                                     (("1"
                                                                       (assert)
                                                                       (("1"
                                                                         (expand
                                                                          "*")
                                                                         (("1"
                                                                           (lemma
                                                                            "deriv_prod_fun[{x:nnreal| x <= 1}]"
                                                                            ("ff1"
                                                                             "LAMBDA (x: {x: nnreal | x <= 1}): x"
                                                                             "ff2"
                                                                             "LAMBDA (x_1: {x: nnreal | x <= 1}): 1 - 1 / 6 * (x_1 * x_1)"))
                                                                           (("1"
                                                                             (replace
                                                                              -3
                                                                              -1)
                                                                             (("1"
                                                                               (replace
                                                                                -11
                                                                                -1)
                                                                               (("1"
                                                                                 (expand
                                                                                  "*")
                                                                                 (("1"
                                                                                   (expand
                                                                                    "+")
                                                                                   (("1"
                                                                                     (lemma
                                                                                      "asin_derivable_fun")
                                                                                     (("1"
                                                                                       (lemma
                                                                                        "deriv_asin_fun")
                                                                                       (("1"
                                                                                         (tccs-step
                                                                                          (lemma
                                                                                           "composition_derivable_fun[{x: nnreal | x <= 1},real_abs_lt1]"
                                                                                           ("f"
                                                                                            "LAMBDA (x_1: {x: nnreal | x <= 1}): x_1 - x_1 * x_1 * x_1 * (1 / 6)"
                                                                                            "g"
                                                                                            "LAMBDA (x: real_abs_lt1): asin(x)"))
                                                                                          :label
                                                                                          "TCC"
                                                                                          :hide?
                                                                                          t)
                                                                                         (("1"
                                                                                           (assert)
                                                                                           (("1"
                                                                                             (expand
                                                                                              "o")
                                                                                             (("1"
                                                                                               (lemma
                                                                                                "deriv_comp_fun[{x: nnreal | x <= 1},real_abs_lt1]"
                                                                                                ("ff"
                                                                                                 "LAMBDA (x_1: {x: nnreal | x <= 1}): x_1 - x_1 * x_1 * x_1 * (1 / 6)"
                                                                                                 "gg"
                                                                                                 "LAMBDA (x: real_abs_lt1): asin(x)"))
                                                                                               (("1"
                                                                                                 (replace
                                                                                                  -3
                                                                                                  -1)
                                                                                                 (("1"
                                                                                                   (replace
                                                                                                    -5
                                                                                                    -1)
                                                                                                   (("1"
                                                                                                     (expand
                                                                                                      "o")
                                                                                                     (("1"
                                                                                                       (expand
                                                                                                        "*")
                                                                                                       (("1"
                                                                                                         (lemma
                                                                                                          "diff_derivable_fun[{x:nnreal| x <= 1}]"
                                                                                                          ("f1"
                                                                                                           "LAMBDA (x: {x: nnreal | x <= 1}): x"
                                                                                                           "f2"
                                                                                                           "LAMBDA (x_1: {x: nnreal | x <= 1}): asin(x_1 - x_1 * x_1 * x_1 * (1 / 6))"))
                                                                                                         (("1"
                                                                                                           (expand
                                                                                                            "-")
                                                                                                           (("1"
                                                                                                             (assert)
                                                                                                             (("1"
                                                                                                               (lemma
                                                                                                                "deriv_diff_fun[{x:nnreal| x <= 1}]"
                                                                                                                ("ff1"
                                                                                                                 "LAMBDA (x: {x: nnreal | x <= 1}): x"
                                                                                                                 "ff2"
                                                                                                                 "LAMBDA (x_1: {x: nnreal | x <= 1}): asin(x_1 - x_1 * x_1 * x_1 * (1 / 6))"))
                                                                                                               (("1"
                                                                                                                 (replace
                                                                                                                  -3
                                                                                                                  -1)
                                                                                                                 (("1"
                                                                                                                   (replace
                                                                                                                    -17
                                                                                                                    -1)
                                                                                                                   (("1"
                                                                                                                     (expand
                                                                                                                      "-")
                                                                                                                     (("1"
                                                                                                                       (lemma
                                                                                                                        "minimum_derivative[{x: nnreal | x <= 1}]"
                                                                                                                        ("g"
                                                                                                                         "LAMBDA (x_1: {x: nnreal | x <= 1}): x_1 - asin(x_1 - x_1 * x_1 * x_1 * (1 / 6))"
                                                                                                                         "x"
                                                                                                                         "0"
                                                                                                                         "y1"
                                                                                                                         "px!1"))
                                                                                                                       (("1"
                                                                                                                         (split
                                                                                                                          -1)
                                                                                                                         (("1"
                                                                                                                           (simplify
                                                                                                                            -1)
                                                                                                                           (("1"
                                                                                                                             (assert)
                                                                                                                             (("1"
                                                                                                                               (rewrite
                                                                                                                                "asin_0")
                                                                                                                               (("1"
                                                                                                                                 (assert)
                                                                                                                                 nil
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil))
                                                                                                                           nil)
                                                                                                                          ("2"
                                                                                                                           (hide
                                                                                                                            2)
                                                                                                                           (("2"
                                                                                                                             (replace
                                                                                                                              -1
                                                                                                                              1)
                                                                                                                             (("2"
                                                                                                                               (simplify
                                                                                                                                1)
                                                                                                                               (("2"
                                                                                                                                 (rewrite
                                                                                                                                  "sq_0")
                                                                                                                                 (("2"
                                                                                                                                   (rewrite
                                                                                                                                    "sqrt_1")
                                                                                                                                   (("2"
                                                                                                                                     (assert)
                                                                                                                                     nil
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil))
                                                                                                                           nil)
                                                                                                                          ("3"
                                                                                                                           (assert)
                                                                                                                           nil
                                                                                                                           nil)
                                                                                                                          ("4"
                                                                                                                           (replace
                                                                                                                            -1
                                                                                                                            1)
                                                                                                                           (("4"
                                                                                                                             (hide-all-but
                                                                                                                              1)
                                                                                                                             (("4"
                                                                                                                               (skosimp*)
                                                                                                                               (("4"
                                                                                                                                 (typepred
                                                                                                                                  "y!1")
                                                                                                                                 (("4"
                                                                                                                                   (expand
                                                                                                                                    ">="
                                                                                                                                    -1)
                                                                                                                                   (("4"
                                                                                                                                     (expand
                                                                                                                                      "<="
                                                                                                                                      -1)
                                                                                                                                     (("4"
                                                                                                                                       (split
                                                                                                                                        -1)
                                                                                                                                       (("1"
                                                                                                                                         (hide
                                                                                                                                          1)
                                                                                                                                         (("1"
                                                                                                                                           (name
                                                                                                                                            "AP"
                                                                                                                                            "y!1 - y!1 * y!1 * y!1 * (1 / 6)")
                                                                                                                                           (("1"
                                                                                                                                             (replace
                                                                                                                                              -1)
                                                                                                                                             (("1"
                                                                                                                                               (lemma
                                                                                                                                                "sq_le"
                                                                                                                                                ("nna"
                                                                                                                                                 "y!1"
                                                                                                                                                 "nnb"
                                                                                                                                                 "1"))
                                                                                                                                               (("1"
                                                                                                                                                 (expand
                                                                                                                                                  "sq"
                                                                                                                                                  -1)
                                                                                                                                                 (("1"
                                                                                                                                                   (lemma
                                                                                                                                                    "posreal_times_posreal_is_posreal"
                                                                                                                                                    ("px"
                                                                                                                                                     "y!1"
                                                                                                                                                     "py"
                                                                                                                                                     "1-y!1 * y!1 / 6"))
                                                                                                                                                   (("1"
                                                                                                                                                     (expand
                                                                                                                                                      "<="
                                                                                                                                                      -5)
                                                                                                                                                     (("1"
                                                                                                                                                       (split
                                                                                                                                                        -5)
                                                                                                                                                       (("1"
                                                                                                                                                         (lemma
                                                                                                                                                          "sq_lt"
                                                                                                                                                          ("nna"
                                                                                                                                                           "y!1"
                                                                                                                                                           "nnb"
                                                                                                                                                           "1"))
                                                                                                                                                         (("1"
                                                                                                                                                           (rewrite
                                                                                                                                                            "sq_rew")
                                                                                                                                                           (("1"
                                                                                                                                                             (rewrite
                                                                                                                                                              "sq_1")
                                                                                                                                                             (("1"
                                                                                                                                                               (flatten
                                                                                                                                                                -1)
                                                                                                                                                               (("1"
                                                                                                                                                                 (replace
                                                                                                                                                                  -3
                                                                                                                                                                  -2)
                                                                                                                                                                 (("1"
                                                                                                                                                                   (hide
                                                                                                                                                                    -1)
                                                                                                                                                                   (("1"
                                                                                                                                                                     (hide
                                                                                                                                                                      -4)
                                                                                                                                                                     (("1"
                                                                                                                                                                       (lemma
                                                                                                                                                                        "lt_times_lt_pos1"
                                                                                                                                                                        ("px"
                                                                                                                                                                         "y!1"
                                                                                                                                                                         "y"
                                                                                                                                                                         "1"
                                                                                                                                                                         "nnz"
                                                                                                                                                                         "1 - sq(y!1) / 6"
                                                                                                                                                                         "w"
                                                                                                                                                                         "1"))
                                                                                                                                                                       (("1"
                                                                                                                                                                         (split
                                                                                                                                                                          -1)
                                                                                                                                                                         (("1"
                                                                                                                                                                           (replace
                                                                                                                                                                            -5)
                                                                                                                                                                           (("1"
                                                                                                                                                                             (lemma
                                                                                                                                                                              "sq_lt"
                                                                                                                                                                              ("nna"
                                                                                                                                                                               "AP"
                                                                                                                                                                               "nnb"
                                                                                                                                                                               "1"))
                                                                                                                                                                             (("1"
                                                                                                                                                                               (expand
                                                                                                                                                                                "sq"
                                                                                                                                                                                -1)
                                                                                                                                                                               (("1"
                                                                                                                                                                                 (assert)
                                                                                                                                                                                 (("1"
                                                                                                                                                                                   (rewrite
                                                                                                                                                                                    "sq_rew"
                                                                                                                                                                                    -1)
                                                                                                                                                                                   (("1"
                                                                                                                                                                                     (lemma
                                                                                                                                                                                      "sq_lt"
                                                                                                                                                                                      ("nna"
                                                                                                                                                                                       "0"
                                                                                                                                                                                       "nnb"
                                                                                                                                                                                       "AP"))
                                                                                                                                                                                     (("1"
                                                                                                                                                                                       (rewrite
                                                                                                                                                                                        "sq_0")
                                                                                                                                                                                       (("1"
                                                                                                                                                                                         (assert)
                                                                                                                                                                                         (("1"
                                                                                                                                                                                           (case
                                                                                                                                                                                            "1-sq(AP) > 0")
                                                                                                                                                                                           (("1"
                                                                                                                                                                                             (lemma
                                                                                                                                                                                              "sqrt_lt"
                                                                                                                                                                                              ("nny"
                                                                                                                                                                                               "0"
                                                                                                                                                                                               "nnz"
                                                                                                                                                                                               "1-sq(AP)"))
                                                                                                                                                                                             (("1"
                                                                                                                                                                                               (rewrite
                                                                                                                                                                                                "sqrt_0")
                                                                                                                                                                                               (("1"
                                                                                                                                                                                                 (flatten
                                                                                                                                                                                                  -1)
                                                                                                                                                                                                 (("1"
                                                                                                                                                                                                   (expand
                                                                                                                                                                                                    ">"
                                                                                                                                                                                                    -3)
                                                                                                                                                                                                   (("1"
                                                                                                                                                                                                     (replace
                                                                                                                                                                                                      -3
                                                                                                                                                                                                      -2)
                                                                                                                                                                                                     (("1"
                                                                                                                                                                                                       (hide
                                                                                                                                                                                                        -1)
                                                                                                                                                                                                       (("1"
                                                                                                                                                                                                         (lemma
                                                                                                                                                                                                          "posreal_times_posreal_is_posreal"
                                                                                                                                                                                                          ("px"
                                                                                                                                                                                                           "(sq(y!1)/2-1)/sqrt(1 - sq(AP))+1"
                                                                                                                                                                                                           "py"
                                                                                                                                                                                                           "y!1"))
                                                                                                                                                                                                         (("1"
                                                                                                                                                                                                           (assert)
                                                                                                                                                                                                           nil
                                                                                                                                                                                                           nil)
                                                                                                                                                                                                          ("2"
                                                                                                                                                                                                           (hide
                                                                                                                                                                                                            2)
                                                                                                                                                                                                           (("2"
                                                                                                                                                                                                             (case
                                                                                                                                                                                                              "1-sq(y!1)/2 > 0")
                                                                                                                                                                                                             (("1"
                                                                                                                                                                                                               (lemma
                                                                                                                                                                                                                "div_mult_pos_lt1"
                                                                                                                                                                                                                ("x"
                                                                                                                                                                                                                 "1"
                                                                                                                                                                                                                 "z"
                                                                                                                                                                                                                 "1 - sq(y!1) / 2"
                                                                                                                                                                                                                 "py"
                                                                                                                                                                                                                 "sqrt(1 - sq(AP))"))
                                                                                                                                                                                                               (("1"
                                                                                                                                                                                                                 (lemma
                                                                                                                                                                                                                  "sq_lt"
                                                                                                                                                                                                                  ("nna"
                                                                                                                                                                                                                   "1 - sq(y!1) / 2"
                                                                                                                                                                                                                   "nnb"
                                                                                                                                                                                                                   "sqrt(1 - sq(AP))"))
                                                                                                                                                                                                                 (("1"
                                                                                                                                                                                                                   (rewrite
                                                                                                                                                                                                                    "sq_sqrt"
                                                                                                                                                                                                                    -1)
                                                                                                                                                                                                                   (("1"
                                                                                                                                                                                                                     (case
                                                                                                                                                                                                                      "sq(1 - sq(y!1) / 2) < 1 - sq(AP)")
                                                                                                                                                                                                                     (("1"
                                                                                                                                                                                                                       (assert)
                                                                                                                                                                                                                       nil
                                                                                                                                                                                                                       nil)
                                                                                                                                                                                                                      ("2"
                                                                                                                                                                                                                       (hide
                                                                                                                                                                                                                        2
                                                                                                                                                                                                                        -1
                                                                                                                                                                                                                        -2)
                                                                                                                                                                                                                       (("2"
                                                                                                                                                                                                                         (expand
                                                                                                                                                                                                                          "AP"
                                                                                                                                                                                                                          1)
                                                                                                                                                                                                                         (("2"
                                                                                                                                                                                                                           (expand
                                                                                                                                                                                                                            "sq"
                                                                                                                                                                                                                            1
                                                                                                                                                                                                                            1)
                                                                                                                                                                                                                           (("2"
                                                                                                                                                                                                                             (simplify
                                                                                                                                                                                                                              1)
                                                                                                                                                                                                                             (("2"
                                                                                                                                                                                                                               (expand
                                                                                                                                                                                                                                "sq"
                                                                                                                                                                                                                                1)
                                                                                                                                                                                                                               (("2"
                                                                                                                                                                                                                                 (lemma
                                                                                                                                                                                                                                  "div_cancel1"
                                                                                                                                                                                                                                  ("x"
                                                                                                                                                                                                                                   "y!1*y!1"
                                                                                                                                                                                                                                   "n0z"
                                                                                                                                                                                                                                   "2"))
                                                                                                                                                                                                                                 (("2"
                                                                                                                                                                                                                                   (replace
                                                                                                                                                                                                                                    -1
                                                                                                                                                                                                                                    1)
                                                                                                                                                                                                                                   (("2"
                                                                                                                                                                                                                                     (lemma
                                                                                                                                                                                                                                      "both_sides_minus_lt1"
                                                                                                                                                                                                                                      ("x"
                                                                                                                                                                                                                                       "1 + y!1 * y!1 / 2 * (y!1 * y!1 / 2) - y!1 * y!1"
                                                                                                                                                                                                                                       "y"
                                                                                                                                                                                                                                       "1 - (1 / 6) * (1 / 6) * y!1 * y!1 * y!1 * y!1 * y!1 * y!1 -
                                                                                                                                                                                                                                                                     y!1 * y!1
                                                                                                                                                                                                                                                                     + (1 / 3) * y!1 * y!1 * y!1 * y!1"
                                                                                                                                                                                                                                       "z"
                                                                                                                                                                                                                                       "1-y!1*y!1"))
                                                                                                                                                                                                                                     (("2"
                                                                                                                                                                                                                                       (replace
                                                                                                                                                                                                                                        -1
                                                                                                                                                                                                                                        1
                                                                                                                                                                                                                                        rl)
                                                                                                                                                                                                                                       (("2"
                                                                                                                                                                                                                                         (simplify
                                                                                                                                                                                                                                          1)
                                                                                                                                                                                                                                         (("2"
                                                                                                                                                                                                                                           (hide
                                                                                                                                                                                                                                            -1)
                                                                                                                                                                                                                                           (("2"
                                                                                                                                                                                                                                             (lemma
                                                                                                                                                                                                                                              "both_sides_times_pos_lt1"
                                                                                                                                                                                                                                              ("x"
                                                                                                                                                                                                                                               "1/4"
                                                                                                                                                                                                                                               "y"
                                                                                                                                                                                                                                               "1/3-y!1*y!1/36"
                                                                                                                                                                                                                                               "pz"
                                                                                                                                                                                                                                               "y!1 * y!1 * y!1 * y!1"))
                                                                                                                                                                                                                                             (("1"
                                                                                                                                                                                                                                               (replace
                                                                                                                                                                                                                                                -1
                                                                                                                                                                                                                                                1)
                                                                                                                                                                                                                                               (("1"
                                                                                                                                                                                                                                                 (hide
                                                                                                                                                                                                                                                  -1
                                                                                                                                                                                                                                                  -2)
                                                                                                                                                                                                                                                 (("1"
                                                                                                                                                                                                                                                   (case
                                                                                                                                                                                                                                                    "y!1 * y!1 / 36 < 1/12")
                                                                                                                                                                                                                                                   (("1"
                                                                                                                                                                                                                                                     (assert)
                                                                                                                                                                                                                                                     nil
                                                                                                                                                                                                                                                     nil)
                                                                                                                                                                                                                                                    ("2"
                                                                                                                                                                                                                                                     (hide
                                                                                                                                                                                                                                                      2)
                                                                                                                                                                                                                                                     (("2"
                                                                                                                                                                                                                                                       (expand
                                                                                                                                                                                                                                                        "sq"
                                                                                                                                                                                                                                                        -7)
                                                                                                                                                                                                                                                       (("2"
                                                                                                                                                                                                                                                         (assert)
                                                                                                                                                                                                                                                         nil
                                                                                                                                                                                                                                                         nil))
                                                                                                                                                                                                                                                       nil))
                                                                                                                                                                                                                                                     nil))
                                                                                                                                                                                                                                                   nil))
                                                                                                                                                                                                                                                 nil))
                                                                                                                                                                                                                                               nil)
                                                                                                                                                                                                                                              ("2"
                                                                                                                                                                                                                                               (hide
                                                                                                                                                                                                                                                2)
                                                                                                                                                                                                                                               (("2"
                                                                                                                                                                                                                                                 (lemma
                                                                                                                                                                                                                                                  "sq_lt"
                                                                                                                                                                                                                                                  ("nna"
                                                                                                                                                                                                                                                   "0"
                                                                                                                                                                                                                                                   "nnb"
                                                                                                                                                                                                                                                   "sq(y!1)"))
                                                                                                                                                                                                                                                 (("2"
                                                                                                                                                                                                                                                   (rewrite
                                                                                                                                                                                                                                                    "sq_0")
                                                                                                                                                                                                                                                   (("2"
                                                                                                                                                                                                                                                     (assert)
                                                                                                                                                                                                                                                     (("2"
                                                                                                                                                                                                                                                       (expand
                                                                                                                                                                                                                                                        "sq"
                                                                                                                                                                                                                                                        -1)
                                                                                                                                                                                                                                                       (("2"
                                                                                                                                                                                                                                                         (assert)
                                                                                                                                                                                                                                                         nil
                                                                                                                                                                                                                                                         nil))
                                                                                                                                                                                                                                                       nil))
                                                                                                                                                                                                                                                     nil))
                                                                                                                                                                                                                                                   nil))
                                                                                                                                                                                                                                                 nil))
                                                                                                                                                                                                                                               nil))
                                                                                                                                                                                                                                             nil))
                                                                                                                                                                                                                                           nil))
                                                                                                                                                                                                                                         nil))
                                                                                                                                                                                                                                       nil))
                                                                                                                                                                                                                                     nil))
                                                                                                                                                                                                                                   nil))
                                                                                                                                                                                                                                 nil))
                                                                                                                                                                                                                               nil))
                                                                                                                                                                                                                             nil))
                                                                                                                                                                                                                           nil))
                                                                                                                                                                                                                         nil))
                                                                                                                                                                                                                       nil))
                                                                                                                                                                                                                     nil))
                                                                                                                                                                                                                   nil))
                                                                                                                                                                                                                 nil))
                                                                                                                                                                                                               nil)
                                                                                                                                                                                                              ("2"
                                                                                                                                                                                                               (hide
                                                                                                                                                                                                                2)
                                                                                                                                                                                                               (("2"
                                                                                                                                                                                                                 (assert)
                                                                                                                                                                                                                 nil
                                                                                                                                                                                                                 nil))
                                                                                                                                                                                                               nil))
                                                                                                                                                                                                             nil))
                                                                                                                                                                                                           nil))
                                                                                                                                                                                                         nil))
                                                                                                                                                                                                       nil))
                                                                                                                                                                                                     nil))
                                                                                                                                                                                                   nil))
                                                                                                                                                                                                 nil))
                                                                                                                                                                                               nil))
                                                                                                                                                                                             nil)
                                                                                                                                                                                            ("2"
                                                                                                                                                                                             (assert)
                                                                                                                                                                                             nil
                                                                                                                                                                                             nil))
                                                                                                                                                                                           nil))
                                                                                                                                                                                         nil))
                                                                                                                                                                                       nil))
                                                                                                                                                                                     nil))
                                                                                                                                                                                   nil))
                                                                                                                                                                                 nil))
                                                                                                                                                                               nil)
                                                                                                                                                                              ("2"
                                                                                                                                                                               (assert)
                                                                                                                                                                               nil
                                                                                                                                                                               nil))
                                                                                                                                                                             nil))
                                                                                                                                                                           nil)
                                                                                                                                                                          ("2"
                                                                                                                                                                           (assert)
                                                                                                                                                                           nil
                                                                                                                                                                           nil)
                                                                                                                                                                          ("3"
                                                                                                                                                                           (hide
                                                                                                                                                                            2)
                                                                                                                                                                           (("3"
                                                                                                                                                                             (assert)
                                                                                                                                                                             (("3"
                                                                                                                                                                               (lemma
                                                                                                                                                                                "sq_lt"
                                                                                                                                                                                ("nna"
                                                                                                                                                                                 "0"
                                                                                                                                                                                 "nnb"
                                                                                                                                                                                 "y!1"))
                                                                                                                                                                               (("3"
                                                                                                                                                                                 (rewrite
                                                                                                                                                                                  "sq_0")
                                                                                                                                                                                 (("3"
                                                                                                                                                                                   (assert)
                                                                                                                                                                                   nil
                                                                                                                                                                                   nil))
                                                                                                                                                                                 nil))
                                                                                                                                                                               nil))
                                                                                                                                                                             nil))
                                                                                                                                                                           nil))
                                                                                                                                                                         nil)
                                                                                                                                                                        ("2"
                                                                                                                                                                         (lemma
                                                                                                                                                                          "sq_lt"
                                                                                                                                                                          ("nna"
                                                                                                                                                                           "0"
                                                                                                                                                                           "nnb"
                                                                                                                                                                           "y!1"))
                                                                                                                                                                         (("2"
                                                                                                                                                                           (rewrite
                                                                                                                                                                            "sq_0")
                                                                                                                                                                           (("2"
                                                                                                                                                                             (assert)
                                                                                                                                                                             nil
                                                                                                                                                                             nil))
                                                                                                                                                                           nil))
                                                                                                                                                                         nil))
                                                                                                                                                                       nil))
                                                                                                                                                                     nil))
                                                                                                                                                                   nil))
                                                                                                                                                                 nil))
                                                                                                                                                               nil))
                                                                                                                                                             nil))
                                                                                                                                                           nil))
                                                                                                                                                         nil)
                                                                                                                                                        ("2"
                                                                                                                                                         (replace
                                                                                                                                                          -1)
                                                                                                                                                         (("2"
                                                                                                                                                           (replace
                                                                                                                                                            -4
                                                                                                                                                            1
                                                                                                                                                            rl)
                                                                                                                                                           (("2"
                                                                                                                                                             (simplify
                                                                                                                                                              1)
                                                                                                                                                             (("2"
                                                                                                                                                               (hide-all-but
                                                                                                                                                                1)
                                                                                                                                                               (("2"
                                                                                                                                                                 (expand
                                                                                                                                                                  "sq")
                                                                                                                                                                 (("2"
                                                                                                                                                                   (assert)
                                                                                                                                                                   (("2"
                                                                                                                                                                     (name-replace
                                                                                                                                                                      "K1"
                                                                                                                                                                      "2 * (1 / 6) - (1 / 6) * (1 / 6)")
                                                                                                                                                                     (("2"
                                                                                                                                                                       (lemma
                                                                                                                                                                        "div_mult_pos_gt1"
                                                                                                                                                                        ("x"
                                                                                                                                                                         "1"
                                                                                                                                                                         "z"
                                                                                                                                                                         "1/2"
                                                                                                                                                                         "py"
                                                                                                                                                                         "sqrt(K1)"))
                                                                                                                                                                       (("1"
                                                                                                                                                                         (rewrite
                                                                                                                                                                          "div_div2"
                                                                                                                                                                          -1)
                                                                                                                                                                         (("1"
                                                                                                                                                                           (assert)
                                                                                                                                                                           (("1"
                                                                                                                                                                             (lemma
                                                                                                                                                                              "sq_gt"
                                                                                                                                                                              ("nna"
                                                                                                                                                                               "sqrt(K1)"
                                                                                                                                                                               "nnb"
                                                                                                                                                                               "1/2"))
                                                                                                                                                                             (("1"
                                                                                                                                                                               (rewrite
                                                                                                                                                                                "sq_sqrt"
                                                                                                                                                                                -1)
                                                                                                                                                                               (("1"
                                                                                                                                                                                 (expand
                                                                                                                                                                                  "sq"
                                                                                                                                                                                  -1)
                                                                                                                                                                                 (("1"
                                                                                                                                                                                   (propax)
                                                                                                                                                                                   nil
                                                                                                                                                                                   nil))
                                                                                                                                                                                 nil))
                                                                                                                                                                               nil))
                                                                                                                                                                             nil))
                                                                                                                                                                           nil))
                                                                                                                                                                         nil)
                                                                                                                                                                        ("2"
                                                                                                                                                                         (lemma
                                                                                                                                                                          "sqrt_lt"
                                                                                                                                                                          ("nny"
                                                                                                                                                                           "0"
                                                                                                                                                                           "nnz"
                                                                                                                                                                           "2 * (1 / 6) - (1 / 6) * (1 / 6)"))
                                                                                                                                                                         (("2"
                                                                                                                                                                           (rewrite
                                                                                                                                                                            "sqrt_0")
                                                                                                                                                                           (("2"
                                                                                                                                                                             (expand
                                                                                                                                                                              "K1")
                                                                                                                                                                             (("2"
                                                                                                                                                                               (hide
                                                                                                                                                                                2)
                                                                                                                                                                               (("2"
                                                                                                                                                                                 (assert)
                                                                                                                                                                                 nil
                                                                                                                                                                                 nil))
                                                                                                                                                                               nil))
                                                                                                                                                                             nil))
                                                                                                                                                                           nil))
                                                                                                                                                                         nil)
                                                                                                                                                                        ("3"
                                                                                                                                                                         (hide
                                                                                                                                                                          2)
                                                                                                                                                                         (("3"
                                                                                                                                                                           (expand
                                                                                                                                                                            "K1")
                                                                                                                                                                           (("3"
                                                                                                                                                                             (assert)
                                                                                                                                                                             nil
                                                                                                                                                                             nil))
                                                                                                                                                                           nil))
                                                                                                                                                                         nil))
                                                                                                                                                                       nil))
                                                                                                                                                                     nil))
                                                                                                                                                                   nil))
                                                                                                                                                                 nil))
                                                                                                                                                               nil))
                                                                                                                                                             nil))
                                                                                                                                                           nil))
                                                                                                                                                         nil))
                                                                                                                                                       nil))
                                                                                                                                                     nil)
                                                                                                                                                    ("2"
                                                                                                                                                     (hide
                                                                                                                                                      2)
                                                                                                                                                     (("2"
                                                                                                                                                       (lemma
                                                                                                                                                        "posreal_times_posreal_is_posreal"
                                                                                                                                                        ("px"
                                                                                                                                                         "y!1"
                                                                                                                                                         "py"
                                                                                                                                                         "y!1"))
                                                                                                                                                       (("1"
                                                                                                                                                         (assert)
                                                                                                                                                         nil
                                                                                                                                                         nil)
                                                                                                                                                        ("2"
                                                                                                                                                         (assert)
                                                                                                                                                         nil
                                                                                                                                                         nil))
                                                                                                                                                       nil))
                                                                                                                                                     nil)
                                                                                                                                                    ("3"
                                                                                                                                                     (assert)
                                                                                                                                                     nil
                                                                                                                                                     nil))
                                                                                                                                                   nil))
                                                                                                                                                 nil))
                                                                                                                                               nil))
                                                                                                                                             nil))
                                                                                                                                           nil))
                                                                                                                                         nil)
                                                                                                                                        ("2"
                                                                                                                                         (assert)
                                                                                                                                         nil
                                                                                                                                         nil))
                                                                                                                                       nil))
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil))
                                                                                                                           nil))
                                                                                                                         nil)
                                                                                                                        ("2"
                                                                                                                         (hide-all-but
                                                                                                                          1)
                                                                                                                         (("2"
                                                                                                                           (reveal
                                                                                                                            "TCC")
                                                                                                                           (("2"
                                                                                                                             (skeep)
                                                                                                                             (("2"
                                                                                                                               (inst?)
                                                                                                                               (("2"
                                                                                                                                 (flatten)
                                                                                                                                 (("2"
                                                                                                                                   (assert)
                                                                                                                                   nil
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil))
                                                                                                                           nil))
                                                                                                                         nil)
                                                                                                                        ("3"
                                                                                                                         (hide-all-but
                                                                                                                          1)
                                                                                                                         (("3"
                                                                                                                           (assert)
                                                                                                                           (("3"
                                                                                                                             (expand
                                                                                                                              "connected?")
                                                                                                                             (("3"
                                                                                                                               (skosimp*)
                                                                                                                               (("3"
                                                                                                                                 (assert)
                                                                                                                                 nil
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil))
                                                                                                                           nil))
                                                                                                                         nil))
                                                                                                                       nil))
                                                                                                                     nil))
                                                                                                                   nil))
                                                                                                                 nil)
                                                                                                                ("2"
                                                                                                                 (hide-all-but
                                                                                                                  1)
                                                                                                                 (("2"
                                                                                                                   (reveal
                                                                                                                    "TCC")
                                                                                                                   (("2"
                                                                                                                     (skeep)
                                                                                                                     (("2"
                                                                                                                       (inst?
                                                                                                                        -1)
                                                                                                                       (("2"
                                                                                                                         (flatten)
                                                                                                                         (("2"
                                                                                                                           (assert)
                                                                                                                           nil
                                                                                                                           nil))
                                                                                                                         nil))
                                                                                                                       nil))
                                                                                                                     nil))
                                                                                                                   nil))
                                                                                                                 nil))
                                                                                                               nil))
                                                                                                             nil))
                                                                                                           nil)
                                                                                                          ("2"
                                                                                                           (hide-all-but
                                                                                                            1)
                                                                                                           (("2"
                                                                                                             (reveal
                                                                                                              "TCC")
                                                                                                             (("2"
                                                                                                               (skeep)
                                                                                                               (("2"
                                                                                                                 (inst?
                                                                                                                  -1)
                                                                                                                 (("2"
                                                                                                                   (flatten)
                                                                                                                   (("2"
                                                                                                                     (assert)
                                                                                                                     nil
                                                                                                                     nil))
                                                                                                                   nil))
                                                                                                                 nil))
                                                                                                               nil))
                                                                                                             nil))
                                                                                                           nil))
                                                                                                         nil))
                                                                                                       nil))
                                                                                                     nil))
                                                                                                   nil))
                                                                                                 nil)
                                                                                                ("2"
                                                                                                 (hide-all-but
                                                                                                  1)
                                                                                                 (("2"
                                                                                                   (reveal
                                                                                                    "TCC")
                                                                                                   (("2"
                                                                                                     (propax)
                                                                                                     nil
                                                                                                     nil))
                                                                                                   nil))
                                                                                                 nil))
                                                                                               nil))
                                                                                             nil))
                                                                                           nil)
                                                                                          ("2"
                                                                                           (hide-all-but
                                                                                            1)
                                                                                           (("2"
                                                                                             (skosimp*)
                                                                                             (("2"
                                                                                               (typepred
                                                                                                "x!1")
                                                                                               (("2"
                                                                                                 (expand
                                                                                                  ">=")
                                                                                                 (("2"
                                                                                                   (expand
                                                                                                    "<="
                                                                                                    -1)
                                                                                                   (("2"
                                                                                                     (split
                                                                                                      -1)
                                                                                                     (("1"
                                                                                                       (lemma
                                                                                                        "posreal_times_posreal_is_posreal"
                                                                                                        ("px"
                                                                                                         "x!1"
                                                                                                         "py"
                                                                                                         "x!1"))
                                                                                                       (("1"
                                                                                                         (lemma
                                                                                                          "posreal_times_posreal_is_posreal"
                                                                                                          ("px"
                                                                                                           "x!1"
                                                                                                           "py"
                                                                                                           "x!1*x!1"))
                                                                                                         (("1"
                                                                                                           (lemma
                                                                                                            "posreal_div_posreal_is_posreal"
                                                                                                            ("px"
                                                                                                             "x!1*x!1*x!1"
                                                                                                             "py"
                                                                                                             "6"))
                                                                                                           (("1"
                                                                                                             (lemma
                                                                                                              "lt_minus_lt1"
                                                                                                              ("x"
                                                                                                               "x!1"
                                                                                                               "y"
                                                                                                               "1"
                                                                                                               "w"
                                                                                                               "0"
                                                                                                               "z"
                                                                                                               "x!1 * x!1 * x!1 / 6"))
                                                                                                             (("1"
                                                                                                               (split
                                                                                                                -1)
                                                                                                               (("1"
                                                                                                                 (lemma
                                                                                                                  "sq_le"
                                                                                                                  ("nna"
                                                                                                                   "x!1"
                                                                                                                   "nnb"
                                                                                                                   "1"))
                                                                                                                 (("1"
                                                                                                                   (expand
                                                                                                                    "sq")
                                                                                                                   (("1"
                                                                                                                     (lemma
                                                                                                                      "posreal_times_posreal_is_posreal"
                                                                                                                      ("px"
                                                                                                                       "1-x!1*x!1/6"
                                                                                                                       "py"
                                                                                                                       "x!1"))
                                                                                                                     (("1"
                                                                                                                       (assert)
                                                                                                                       nil
                                                                                                                       nil)
                                                                                                                      ("2"
                                                                                                                       (hide
                                                                                                                        2)
                                                                                                                       (("2"
                                                                                                                         (assert)
                                                                                                                         nil
                                                                                                                         nil))
                                                                                                                       nil))
                                                                                                                     nil))
                                                                                                                   nil))
                                                                                                                 nil)
                                                                                                                ("2"
                                                                                                                 (propax)
                                                                                                                 nil
                                                                                                                 nil)
                                                                                                                ("3"
                                                                                                                 (assert)
                                                                                                                 nil
                                                                                                                 nil))
                                                                                                               nil))
                                                                                                             nil)
                                                                                                            ("2"
                                                                                                             (assert)
                                                                                                             nil
                                                                                                             nil))
                                                                                                           nil)
                                                                                                          ("2"
                                                                                                           (propax)
                                                                                                           nil
                                                                                                           nil))
                                                                                                         nil)
                                                                                                        ("2"
                                                                                                         (assert)
                                                                                                         nil
                                                                                                         nil))
                                                                                                       nil)
                                                                                                      ("2"
                                                                                                       (assert)
                                                                                                       nil
                                                                                                       nil))
                                                                                                     nil))
                                                                                                   nil))
                                                                                                 nil))
                                                                                               nil))
                                                                                             nil))
                                                                                           nil))
                                                                                         nil))
                                                                                       nil))
                                                                                     nil))
                                                                                   nil))
                                                                                 nil))
                                                                               nil))
                                                                             nil))
                                                                           nil))
                                                                         nil))
                                                                       nil))
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil))
                                                 nil))
                                               nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil)
                    ("2" (expand "not_one_element?")
                     (("2" (skosimp*)
                       (("2" (inst-cp + "1/2")
                         (("2" (inst-cp + "1/4") (("2" (assert) nil nil))
                           nil))
                         nil))
                       nil))
                     nil)
                    ("3" (lemma "deriv_domain_closed")
                     (("3" (inst - "0" "1")
                       (("3" (assert)
                         (("3" (expand "deriv_domain?")
                           (("3" (skosimp*)
                             (("3" (inst - "e!1" "x!1")
                               (("3" (skosimp*) (("3" (inst + "y!1") nil nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil)
                ("2" (hide 2)
                 (("2" (lemma "sq_le" ("nnb" "px!1" "nna" "sqrt(6)"))
                   (("2" (flatten)
                     (("2" (rewrite "sq_sqrt")
                       (("2" (assert)
                         (("2" (hide -1)
                           (("2" (typepred "px!1")
                             (("2" (assert)
                               (("2" (lemma "sq_le" ("nna" "px!1" "nnb" "1"))
                                 (("2" (rewrite "sq_1")
                                   (("2" (assert) nil nil)) nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil))
           nil))
         nil)
        nil shostak)
       (asin_pos_bnds-3 nil 3425656930
        ("" (skosimp*)
         (("" (split)
           (("1" (lemma "asin_derivable_fun")
             (("1" (lemma "deriv_asin_fun")
               (("1" (lemma "identity_derivable_fun[real_abs_lt1]")
                 (("1" (lemma "deriv_id_fun[real_abs_lt1]")
                   (("1" (expand "I")
                     (("1"
                       (lemma "diff_derivable_fun[real_abs_lt1]"
                        ("f1" "LAMBDA (x: real_abs_lt1): asin(x)" "f2"
                         "LAMBDA (x: real_abs_lt1): x"))
                       (("1" (assert)
                         (("1" (expand "-")
                           (("1"
                             (lemma "deriv_diff_fun[real_abs_lt1]"
                              ("ff1" "LAMBDA (x: real_abs_lt1): asin(x)" "ff2"
                               "LAMBDA (x: real_abs_lt1): x"))
                             (("1" (replace -5 -1)
                               (("1" (replace -3 -1)
                                 (("1" (expand "-")
                                   (("1" (typepred "px!1")
                                     (("1"
                                       (hide -1)
                                       (("1"
                                         (expand "<=" -1)
                                         (("1"
                                           (split -1)
                                           (("1"
                                             (lemma
                                              "minimum_derivative[{x:nnreal| x < 1}]"
                                              ("g"
                                               "LAMBDA (x_1:{x:nnreal| x < 1} ): asin(x_1) - x_1"
                                               "x"
                                               "0"
                                               "y1"
                                               "px!1"))
                                             (("1"
                                               (split -1)
                                               (("1"
                                                 (simplify -1)
                                                 (("1"
                                                   (rewrite "asin_0")
                                                   (("1" (assert) nil nil))
                                                   nil))
                                                 nil)
                                                ("2"
                                                 (lemma
                                                  "restrict2_deriv[{x: nnreal | x < 1},real_abs_lt1]"
                                                  ("f"
                                                   "LAMBDA (x_1: real_abs_lt1): asin(x_1) - x_1"
                                                   "a"
                                                   "0"))
                                                 (("1"
                                                   (replace -4 -1)
                                                   (("1"
                                                     (simplify -1)
                                                     (("1"
                                                       (expand "restrict2" -1)
                                                       (("1"
                                                         (replace -1 1 rl)
                                                         (("1"
                                                           (expand "sq" 1)
                                                           (("1"
                                                             (rewrite
                                                              "sqrt_1")
                                                             (("1"
                                                               (assert)
                                                               nil
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil)
                                                  ("2" (propax) nil nil)
                                                  ("3"
                                                   (skosimp*)
                                                   (("3"
                                                     (inst + "x!1")
                                                     nil
                                                     nil))
                                                   nil))
                                                 nil)
                                                ("3" (assert) nil nil)
                                                ("4"
                                                 (skosimp*)
                                                 (("4"
                                                   (typepred "y!1")
                                                   (("4"
                                                     (expand ">=" -1)
                                                     (("4"
                                                       (expand "<=" -1)
                                                       (("4"
                                                         (split -1)
                                                         (("1"
                                                           (lemma
                                                            "restrict2_deriv[{x: nnreal | x < 1},real_abs_lt1]"
                                                            ("f"
                                                             "LAMBDA (x_1: real_abs_lt1): asin(x_1) - x_1"
                                                             "a"
                                                             "y!1"))
                                                           (("1"
                                                             (replace -6 -1)
                                                             (("1"
                                                               (simplify -1)
                                                               (("1"
                                                                 (expand
                                                                  "restrict2"
                                                                  -1)
                                                                 (("1"
                                                                   (replace
                                                                    -1
                                                                    2
                                                                    rl)
                                                                   (("1"
                                                                     (hide
                                                                      -1
                                                                      -6
                                                                      3
                                                                      1
                                                                      -7
                                                                      -8
                                                                      -9
                                                                      -10
                                                                      -11)
                                                                     (("1"
                                                                       (lemma
                                                                        "sq_lt"
                                                                        ("nna"
                                                                         "0"
                                                                         "nnb"
                                                                         "y!1"))
                                                                       (("1"
                                                                         (lemma
                                                                          "sq_lt"
                                                                          ("nna"
                                                                           "y!1"
                                                                           "nnb"
                                                                           "1"))
                                                                         (("1"
                                                                           (expand
                                                                            "sq"
                                                                            -1
                                                                            2)
                                                                           (("1"
                                                                             (expand
                                                                              "sq"
                                                                              -2
                                                                              1)
                                                                             (("1"
                                                                               (assert)
                                                                               (("1"
                                                                                 (lemma
                                                                                  "sqrt_pos"
                                                                                  ("px"
                                                                                   "1-sq(y!1)"))
                                                                                 (("1"
                                                                                   (lemma
                                                                                    "div_mult_pos_gt2"
                                                                                    ("z"
                                                                                     "1"
                                                                                     "py"
                                                                                     "sqrt(1-sq(y!1))"
                                                                                     "x"
                                                                                     "1"))
                                                                                   (("1"
                                                                                     (lemma
                                                                                      "sqrt_lt"
                                                                                      ("nny"
                                                                                       "1-sq(y!1)"
                                                                                       "nnz"
                                                                                       "1"))
                                                                                     (("1"
                                                                                       (rewrite
                                                                                        "sqrt_1")
                                                                                       (("1"
                                                                                         (assert)
                                                                                         (("1"
                                                                                           (lemma
                                                                                            "posreal_times_posreal_is_posreal"
                                                                                            ("px"
                                                                                             "1 / sqrt(1 - sq(y!1))-1"
                                                                                             "py"
                                                                                             "y!1"))
                                                                                           (("1"
                                                                                             (assert)
                                                                                             nil
                                                                                             nil))
                                                                                           nil))
                                                                                         nil))
                                                                                       nil))
                                                                                     nil))
                                                                                   nil))
                                                                                 nil))
                                                                               nil))
                                                                             nil))
                                                                           nil))
                                                                         nil))
                                                                       nil))
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil)
                                                            ("2"
                                                             (propax)
                                                             nil
                                                             nil)
                                                            ("3"
                                                             (skosimp*)
                                                             (("3"
                                                               (inst + "x!1")
                                                               nil
                                                               nil))
                                                             nil))
                                                           nil)
                                                          ("2"
                                                           (assert)
                                                           nil
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil))
                                                 nil))
                                               nil)
                                              ("2" (propax) nil nil)
                                              ("3"
                                               (lemma
                                                "restrict2_derivable[{x: nnreal | x < 1},real_abs_lt1]"
                                                ("f"
                                                 "LAMBDA (x_1: real_abs_lt1): asin(x_1) - x_1"))
                                               (("1"
                                                 (expand "restrict2" -1)
                                                 (("1" (propax) nil nil))
                                                 nil)
                                                ("2" (propax) nil nil)
                                                ("3"
                                                 (skosimp*)
                                                 (("3"
                                                   (typepred "x!1")
                                                   (("3"
                                                     (inst + "x!1")
                                                     nil
                                                     nil))
                                                   nil))
                                                 nil))
                                               nil)
                                              ("4"
                                               (hide-all-but 1)
                                               (("4"
                                                 (expand "connected?")
                                                 (("4"
                                                   (skosimp*)
                                                   (("4" (assert) nil nil))
                                                   nil))
                                                 nil))
                                               nil))
                                             nil)
                                            ("2"
                                             (replace -1)
                                             (("2"
                                               (rewrite "asin_1")
                                               (("2"
                                                 (lemma "pi_bnds")
                                                 (("2"
                                                   (flatten)
                                                   (("2" (assert) nil nil))
                                                   nil))
                                                 nil))
                                               nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil)
            ("2" (flatten)
             (("2" (case "px!1 < sqrt(6)")
               (("1" (typepred "px!1")
                 (("1" (lemma "identity_derivable_fun[{x:nnreal| x <= 1}]")
                   (("1" (lemma "deriv_id_fun[{x:nnreal| x <= 1}]")
                     (("1" (expand "I")
                       (("1"
                         (lemma "const_derivable_fun[{x:nnreal| x <= 1}]"
                          ("b" "1"))
                         (("1"
                           (lemma "deriv_const_fun[{x:nnreal| x <= 1}]"
                            ("b" "1"))
                           (("1"
                             (lemma "prod_derivable_fun[{x:nnreal| x <= 1}]"
                              ("f1" "LAMBDA (x: {x: nnreal | x <= 1}): x" "f2"
                               "LAMBDA (x: {x: nnreal | x <= 1}): x"))
                             (("1" (assert)
                               (("1" (expand "*" -1)
                                 (("1"
                                   (lemma "deriv_prod_fun[{x:nnreal| x <= 1}]"
                                    ("ff1"
                                     "LAMBDA (x: {x: nnreal | x <= 1}): x"
                                     "ff2"
                                     "LAMBDA (x: {x: nnreal | x <= 1}): x"))
                                   (("1" (replace -5 -1)
                                     (("1"
                                       (expand "*")
                                       (("1"
                                         (expand "+")
                                         (("1"
                                           (lemma
                                            "scal_derivable_fun[{x:nnreal| x <= 1}]"
                                            ("f"
                                             "LAMBDA (x_1: {x: nnreal | x <= 1}): x_1 * x_1"
                                             "b"
                                             "1/6"))
                                           (("1"
                                             (assert)
                                             (("1"
                                               (expand "*")
                                               (("1"
                                                 (lemma
                                                  "deriv_scal_fun[{x:nnreal| x <= 1}]"
                                                  ("ff"
                                                   "LAMBDA (x_1: {x: nnreal | x <= 1}): x_1 * x_1"
                                                   "b"
                                                   "1/6"))
                                                 (("1"
                                                   (replace -3 -1)
                                                   (("1"
                                                     (expand "*" -1)
                                                     (("1"
                                                       (lemma
                                                        "diff_derivable_fun[{x:nnreal| x <= 1}]"
                                                        ("f1"
                                                         "LAMBDA (x: {x: nnreal | x <= 1}): 1"
                                                         "f2"
                                                         "LAMBDA (x: {x: nnreal | x <= 1}): 1 / 6 * (x * x)"))
                                                       (("1"
                                                         (assert)
                                                         (("1"
                                                           (expand "-")
                                                           (("1"
                                                             (lemma
                                                              "deriv_diff_fun[{x:nnreal| x <= 1}]"
                                                              ("ff1"
                                                               "LAMBDA (x: {x: nnreal | x <= 1}): 1"
                                                               "ff2"
                                                               "LAMBDA (x: {x: nnreal | x <= 1}): 1 / 6 * (x * x)"))
                                                             (("1"
                                                               (replace -7 -1)
                                                               (("1"
                                                                 (replace
                                                                  -3
                                                                  -1)
                                                                 (("1"
                                                                   (expand
                                                                    "-")
                                                                   (("1"
                                                                     (lemma
                                                                      "prod_derivable_fun[{x:nnreal| x <= 1}]"
                                                                      ("f1"
                                                                       "LAMBDA (x: {x: nnreal | x <= 1}): x"
                                                                       "f2"
                                                                       "LAMBDA (x_1: {x: nnreal | x <= 1}): 1 - 1 / 6 * (x_1 * x_1)"))
                                                                     (("1"
                                                                       (assert)
                                                                       (("1"
                                                                         (expand
                                                                          "*")
                                                                         (("1"
                                                                           (lemma
                                                                            "deriv_prod_fun[{x:nnreal| x <= 1}]"
                                                                            ("ff1"
                                                                             "LAMBDA (x: {x: nnreal | x <= 1}): x"
                                                                             "ff2"
                                                                             "LAMBDA (x_1: {x: nnreal | x <= 1}): 1 - 1 / 6 * (x_1 * x_1)"))
                                                                           (("1"
                                                                             (replace
                                                                              -3
                                                                              -1)
                                                                             (("1"
                                                                               (replace
                                                                                -11
                                                                                -1)
                                                                               (("1"
                                                                                 (expand
                                                                                  "*")
                                                                                 (("1"
                                                                                   (expand
                                                                                    "+")
                                                                                   (("1"
                                                                                     (lemma
                                                                                      "asin_derivable_fun")
                                                                                     (("1"
                                                                                       (lemma
                                                                                        "deriv_asin_fun")
                                                                                       (("1"
                                                                                         (tccs-step
                                                                                          (lemma
                                                                                           "composition_derivable_fun[{x: nnreal | x <= 1},real_abs_lt1]"
                                                                                           ("f"
                                                                                            "LAMBDA (x_1: {x: nnreal | x <= 1}): x_1 - x_1 * x_1 * x_1 * (1 / 6)"
                                                                                            "g"
                                                                                            "LAMBDA (x: real_abs_lt1): asin(x)"))
                                                                                          :label
                                                                                          "TCC"
                                                                                          :hide?
                                                                                          t)
                                                                                         (("1"
                                                                                           (assert)
                                                                                           (("1"
                                                                                             (expand
                                                                                              "o")
                                                                                             (("1"
                                                                                               (lemma
                                                                                                "deriv_comp_fun[{x: nnreal | x <= 1},real_abs_lt1]"
                                                                                                ("ff"
                                                                                                 "LAMBDA (x_1: {x: nnreal | x <= 1}): x_1 - x_1 * x_1 * x_1 * (1 / 6)"
                                                                                                 "gg"
                                                                                                 "LAMBDA (x: real_abs_lt1): asin(x)"))
                                                                                               (("1"
                                                                                                 (replace
                                                                                                  -3
                                                                                                  -1)
                                                                                                 (("1"
                                                                                                   (replace
                                                                                                    -5
                                                                                                    -1)
                                                                                                   (("1"
                                                                                                     (expand
                                                                                                      "o")
                                                                                                     (("1"
                                                                                                       (expand
                                                                                                        "*")
                                                                                                       (("1"
                                                                                                         (lemma
                                                                                                          "diff_derivable_fun[{x:nnreal| x <= 1}]"
                                                                                                          ("f1"
                                                                                                           "LAMBDA (x: {x: nnreal | x <= 1}): x"
                                                                                                           "f2"
                                                                                                           "LAMBDA (x_1: {x: nnreal | x <= 1}): asin(x_1 - x_1 * x_1 * x_1 * (1 / 6))"))
                                                                                                         (("1"
                                                                                                           (expand
                                                                                                            "-")
                                                                                                           (("1"
                                                                                                             (assert)
                                                                                                             (("1"
                                                                                                               (lemma
                                                                                                                "deriv_diff_fun[{x:nnreal| x <= 1}]"
                                                                                                                ("ff1"
                                                                                                                 "LAMBDA (x: {x: nnreal | x <= 1}): x"
                                                                                                                 "ff2"
                                                                                                                 "LAMBDA (x_1: {x: nnreal | x <= 1}): asin(x_1 - x_1 * x_1 * x_1 * (1 / 6))"))
                                                                                                               (("1"
                                                                                                                 (replace
                                                                                                                  -3
                                                                                                                  -1)
                                                                                                                 (("1"
                                                                                                                   (replace
                                                                                                                    -17
                                                                                                                    -1)
                                                                                                                   (("1"
                                                                                                                     (expand
                                                                                                                      "-")
                                                                                                                     (("1"
                                                                                                                       (lemma
                                                                                                                        "minimum_derivative[{x: nnreal | x <= 1}]"
                                                                                                                        ("g"
                                                                                                                         "LAMBDA (x_1: {x: nnreal | x <= 1}): x_1 - asin(x_1 - x_1 * x_1 * x_1 * (1 / 6))"
                                                                                                                         "x"
                                                                                                                         "0"
                                                                                                                         "y1"
                                                                                                                         "px!1"))
                                                                                                                       (("1"
                                                                                                                         (split
                                                                                                                          -1)
                                                                                                                         (("1"
                                                                                                                           (simplify
                                                                                                                            -1)
                                                                                                                           (("1"
                                                                                                                             (assert)
                                                                                                                             (("1"
                                                                                                                               (rewrite
                                                                                                                                "asin_0")
                                                                                                                               (("1"
                                                                                                                                 (assert)
                                                                                                                                 nil
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil))
                                                                                                                           nil)
                                                                                                                          ("2"
                                                                                                                           (hide
                                                                                                                            2)
                                                                                                                           (("2"
                                                                                                                             (replace
                                                                                                                              -1
                                                                                                                              1)
                                                                                                                             (("2"
                                                                                                                               (simplify
                                                                                                                                1)
                                                                                                                               (("2"
                                                                                                                                 (rewrite
                                                                                                                                  "sq_0")
                                                                                                                                 (("2"
                                                                                                                                   (rewrite
                                                                                                                                    "sqrt_1")
                                                                                                                                   (("2"
                                                                                                                                     (assert)
                                                                                                                                     nil
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil))
                                                                                                                           nil)
                                                                                                                          ("3"
                                                                                                                           (assert)
                                                                                                                           nil
                                                                                                                           nil)
                                                                                                                          ("4"
                                                                                                                           (replace
                                                                                                                            -1
                                                                                                                            1)
                                                                                                                           (("4"
                                                                                                                             (hide-all-but
                                                                                                                              1)
                                                                                                                             (("4"
                                                                                                                               (skosimp*)
                                                                                                                               (("4"
                                                                                                                                 (typepred
                                                                                                                                  "y!1")
                                                                                                                                 (("4"
                                                                                                                                   (expand
                                                                                                                                    ">="
                                                                                                                                    -1)
                                                                                                                                   (("4"
                                                                                                                                     (expand
                                                                                                                                      "<="
                                                                                                                                      -1)
                                                                                                                                     (("4"
                                                                                                                                       (split
                                                                                                                                        -1)
                                                                                                                                       (("1"
                                                                                                                                         (hide
                                                                                                                                          1)
                                                                                                                                         (("1"
                                                                                                                                           (name
                                                                                                                                            "AP"
                                                                                                                                            "y!1 - y!1 * y!1 * y!1 * (1 / 6)")
                                                                                                                                           (("1"
                                                                                                                                             (replace
                                                                                                                                              -1)
                                                                                                                                             (("1"
                                                                                                                                               (lemma
                                                                                                                                                "sq_le"
                                                                                                                                                ("nna"
                                                                                                                                                 "y!1"
                                                                                                                                                 "nnb"
                                                                                                                                                 "1"))
                                                                                                                                               (("1"
                                                                                                                                                 (expand
                                                                                                                                                  "sq"
                                                                                                                                                  -1)
                                                                                                                                                 (("1"
                                                                                                                                                   (lemma
                                                                                                                                                    "posreal_times_posreal_is_posreal"
                                                                                                                                                    ("px"
                                                                                                                                                     "y!1"
                                                                                                                                                     "py"
                                                                                                                                                     "1-y!1 * y!1 / 6"))
                                                                                                                                                   (("1"
                                                                                                                                                     (expand
                                                                                                                                                      "<="
                                                                                                                                                      -5)
                                                                                                                                                     (("1"
                                                                                                                                                       (split
                                                                                                                                                        -5)
                                                                                                                                                       (("1"
                                                                                                                                                         (lemma
                                                                                                                                                          "sq_lt"
                                                                                                                                                          ("nna"
                                                                                                                                                           "y!1"
                                                                                                                                                           "nnb"
                                                                                                                                                           "1"))
                                                                                                                                                         (("1"
                                                                                                                                                           (rewrite
                                                                                                                                                            "sq_rew")
                                                                                                                                                           (("1"
                                                                                                                                                             (rewrite
                                                                                                                                                              "sq_1")
                                                                                                                                                             (("1"
                                                                                                                                                               (flatten
                                                                                                                                                                -1)
                                                                                                                                                               (("1"
                                                                                                                                                                 (replace
                                                                                                                                                                  -3
                                                                                                                                                                  -2)
                                                                                                                                                                 (("1"
                                                                                                                                                                   (hide
                                                                                                                                                                    -1)
                                                                                                                                                                   (("1"
                                                                                                                                                                     (hide
                                                                                                                                                                      -4)
                                                                                                                                                                     (("1"
                                                                                                                                                                       (lemma
                                                                                                                                                                        "lt_times_lt_pos1"
                                                                                                                                                                        ("px"
                                                                                                                                                                         "y!1"
                                                                                                                                                                         "y"
                                                                                                                                                                         "1"
                                                                                                                                                                         "nnz"
                                                                                                                                                                         "1 - sq(y!1) / 6"
                                                                                                                                                                         "w"
                                                                                                                                                                         "1"))
                                                                                                                                                                       (("1"
                                                                                                                                                                         (split
                                                                                                                                                                          -1)
                                                                                                                                                                         (("1"
                                                                                                                                                                           (replace
                                                                                                                                                                            -5)
                                                                                                                                                                           (("1"
                                                                                                                                                                             (lemma
                                                                                                                                                                              "sq_lt"
                                                                                                                                                                              ("nna"
                                                                                                                                                                               "AP"
                                                                                                                                                                               "nnb"
                                                                                                                                                                               "1"))
                                                                                                                                                                             (("1"
                                                                                                                                                                               (expand
                                                                                                                                                                                "sq"
                                                                                                                                                                                -1)
                                                                                                                                                                               (("1"
                                                                                                                                                                                 (assert)
                                                                                                                                                                                 (("1"
                                                                                                                                                                                   (rewrite
                                                                                                                                                                                    "sq_rew"
                                                                                                                                                                                    -1)
                                                                                                                                                                                   (("1"
                                                                                                                                                                                     (lemma
                                                                                                                                                                                      "sq_lt"
                                                                                                                                                                                      ("nna"
                                                                                                                                                                                       "0"
                                                                                                                                                                                       "nnb"
                                                                                                                                                                                       "AP"))
                                                                                                                                                                                     (("1"
                                                                                                                                                                                       (rewrite
                                                                                                                                                                                        "sq_0")
                                                                                                                                                                                       (("1"
                                                                                                                                                                                         (assert)
                                                                                                                                                                                         (("1"
                                                                                                                                                                                           (case
                                                                                                                                                                                            "1-sq(AP) > 0")
                                                                                                                                                                                           (("1"
                                                                                                                                                                                             (lemma
                                                                                                                                                                                              "sqrt_lt"
                                                                                                                                                                                              ("nny"
                                                                                                                                                                                               "0"
                                                                                                                                                                                               "nnz"
                                                                                                                                                                                               "1-sq(AP)"))
                                                                                                                                                                                             (("1"
                                                                                                                                                                                               (rewrite
                                                                                                                                                                                                "sqrt_0")
                                                                                                                                                                                               (("1"
                                                                                                                                                                                                 (flatten
                                                                                                                                                                                                  -1)
                                                                                                                                                                                                 (("1"
                                                                                                                                                                                                   (expand
                                                                                                                                                                                                    ">"
                                                                                                                                                                                                    -3)
                                                                                                                                                                                                   (("1"
                                                                                                                                                                                                     (replace
                                                                                                                                                                                                      -3
                                                                                                                                                                                                      -2)
                                                                                                                                                                                                     (("1"
                                                                                                                                                                                                       (hide
                                                                                                                                                                                                        -1)
                                                                                                                                                                                                       (("1"
                                                                                                                                                                                                         (lemma
                                                                                                                                                                                                          "posreal_times_posreal_is_posreal"
                                                                                                                                                                                                          ("px"
                                                                                                                                                                                                           "(sq(y!1)/2-1)/sqrt(1 - sq(AP))+1"
                                                                                                                                                                                                           "py"
                                                                                                                                                                                                           "y!1"))
                                                                                                                                                                                                         (("1"
                                                                                                                                                                                                           (assert)
                                                                                                                                                                                                           nil
                                                                                                                                                                                                           nil)
                                                                                                                                                                                                          ("2"
                                                                                                                                                                                                           (hide
                                                                                                                                                                                                            2)
                                                                                                                                                                                                           (("2"
                                                                                                                                                                                                             (case
                                                                                                                                                                                                              "1-sq(y!1)/2 > 0")
                                                                                                                                                                                                             (("1"
                                                                                                                                                                                                               (lemma
                                                                                                                                                                                                                "div_mult_pos_lt1"
                                                                                                                                                                                                                ("x"
                                                                                                                                                                                                                 "1"
                                                                                                                                                                                                                 "z"
                                                                                                                                                                                                                 "1 - sq(y!1) / 2"
                                                                                                                                                                                                                 "py"
                                                                                                                                                                                                                 "sqrt(1 - sq(AP))"))
                                                                                                                                                                                                               (("1"
                                                                                                                                                                                                                 (lemma
                                                                                                                                                                                                                  "sq_lt"
                                                                                                                                                                                                                  ("nna"
                                                                                                                                                                                                                   "1 - sq(y!1) / 2"
                                                                                                                                                                                                                   "nnb"
                                                                                                                                                                                                                   "sqrt(1 - sq(AP))"))
                                                                                                                                                                                                                 (("1"
                                                                                                                                                                                                                   (rewrite
                                                                                                                                                                                                                    "sq_sqrt"
                                                                                                                                                                                                                    -1)
                                                                                                                                                                                                                   (("1"
                                                                                                                                                                                                                     (case
                                                                                                                                                                                                                      "sq(1 - sq(y!1) / 2) < 1 - sq(AP)")
                                                                                                                                                                                                                     (("1"
                                                                                                                                                                                                                       (assert)
                                                                                                                                                                                                                       nil
                                                                                                                                                                                                                       nil)
                                                                                                                                                                                                                      ("2"
                                                                                                                                                                                                                       (hide
                                                                                                                                                                                                                        2
                                                                                                                                                                                                                        -1
                                                                                                                                                                                                                        -2)
                                                                                                                                                                                                                       (("2"
                                                                                                                                                                                                                         (expand
                                                                                                                                                                                                                          "AP"
                                                                                                                                                                                                                          1)
                                                                                                                                                                                                                         (("2"
                                                                                                                                                                                                                           (expand
                                                                                                                                                                                                                            "sq"
                                                                                                                                                                                                                            1
                                                                                                                                                                                                                            1)
                                                                                                                                                                                                                           (("2"
                                                                                                                                                                                                                             (simplify
                                                                                                                                                                                                                              1)
                                                                                                                                                                                                                             (("2"
                                                                                                                                                                                                                               (expand
                                                                                                                                                                                                                                "sq"
                                                                                                                                                                                                                                1)
                                                                                                                                                                                                                               (("2"
                                                                                                                                                                                                                                 (lemma
                                                                                                                                                                                                                                  "div_cancel1"
                                                                                                                                                                                                                                  ("x"
                                                                                                                                                                                                                                   "y!1*y!1"
                                                                                                                                                                                                                                   "n0z"
                                                                                                                                                                                                                                   "2"))
                                                                                                                                                                                                                                 (("2"
                                                                                                                                                                                                                                   (replace
                                                                                                                                                                                                                                    -1
                                                                                                                                                                                                                                    1)
                                                                                                                                                                                                                                   (("2"
                                                                                                                                                                                                                                     (lemma
                                                                                                                                                                                                                                      "both_sides_minus_lt1"
                                                                                                                                                                                                                                      ("x"
                                                                                                                                                                                                                                       "1 + y!1 * y!1 / 2 * (y!1 * y!1 / 2) - y!1 * y!1"
                                                                                                                                                                                                                                       "y"
                                                                                                                                                                                                                                       "1 - (1 / 6) * (1 / 6) * y!1 * y!1 * y!1 * y!1 * y!1 * y!1 -
                                                                                                                                                                                                                                                                     y!1 * y!1
                                                                                                                                                                                                                                                                     + (1 / 3) * y!1 * y!1 * y!1 * y!1"
                                                                                                                                                                                                                                       "z"
                                                                                                                                                                                                                                       "1-y!1*y!1"))
                                                                                                                                                                                                                                     (("2"
                                                                                                                                                                                                                                       (replace
                                                                                                                                                                                                                                        -1
                                                                                                                                                                                                                                        1
                                                                                                                                                                                                                                        rl)
                                                                                                                                                                                                                                       (("2"
                                                                                                                                                                                                                                         (simplify
                                                                                                                                                                                                                                          1)
                                                                                                                                                                                                                                         (("2"
                                                                                                                                                                                                                                           (hide
                                                                                                                                                                                                                                            -1)
                                                                                                                                                                                                                                           (("2"
                                                                                                                                                                                                                                             (lemma
                                                                                                                                                                                                                                              "both_sides_times_pos_lt1"
                                                                                                                                                                                                                                              ("x"
                                                                                                                                                                                                                                               "1/4"
                                                                                                                                                                                                                                               "y"
                                                                                                                                                                                                                                               "1/3-y!1*y!1/36"
                                                                                                                                                                                                                                               "pz"
                                                                                                                                                                                                                                               "y!1 * y!1 * y!1 * y!1"))
                                                                                                                                                                                                                                             (("1"
                                                                                                                                                                                                                                               (replace
                                                                                                                                                                                                                                                -1
                                                                                                                                                                                                                                                1)
                                                                                                                                                                                                                                               (("1"
                                                                                                                                                                                                                                                 (hide
                                                                                                                                                                                                                                                  -1
                                                                                                                                                                                                                                                  -2)
                                                                                                                                                                                                                                                 (("1"
                                                                                                                                                                                                                                                   (case
                                                                                                                                                                                                                                                    "y!1 * y!1 / 36 < 1/12")
                                                                                                                                                                                                                                                   (("1"
                                                                                                                                                                                                                                                     (assert)
                                                                                                                                                                                                                                                     nil
                                                                                                                                                                                                                                                     nil)
                                                                                                                                                                                                                                                    ("2"
                                                                                                                                                                                                                                                     (hide
                                                                                                                                                                                                                                                      2)
                                                                                                                                                                                                                                                     (("2"
                                                                                                                                                                                                                                                       (expand
                                                                                                                                                                                                                                                        "sq"
                                                                                                                                                                                                                                                        -7)
                                                                                                                                                                                                                                                       (("2"
                                                                                                                                                                                                                                                         (assert)
                                                                                                                                                                                                                                                         nil
                                                                                                                                                                                                                                                         nil))
                                                                                                                                                                                                                                                       nil))
                                                                                                                                                                                                                                                     nil))
                                                                                                                                                                                                                                                   nil))
                                                                                                                                                                                                                                                 nil))
                                                                                                                                                                                                                                               nil)
                                                                                                                                                                                                                                              ("2"
                                                                                                                                                                                                                                               (hide
                                                                                                                                                                                                                                                2)
                                                                                                                                                                                                                                               (("2"
                                                                                                                                                                                                                                                 (lemma
                                                                                                                                                                                                                                                  "sq_lt"
                                                                                                                                                                                                                                                  ("nna"
                                                                                                                                                                                                                                                   "0"
                                                                                                                                                                                                                                                   "nnb"
                                                                                                                                                                                                                                                   "sq(y!1)"))
                                                                                                                                                                                                                                                 (("2"
                                                                                                                                                                                                                                                   (rewrite
                                                                                                                                                                                                                                                    "sq_0")
                                                                                                                                                                                                                                                   (("2"
                                                                                                                                                                                                                                                     (assert)
                                                                                                                                                                                                                                                     (("2"
                                                                                                                                                                                                                                                       (expand
                                                                                                                                                                                                                                                        "sq"
                                                                                                                                                                                                                                                        -1)
                                                                                                                                                                                                                                                       (("2"
                                                                                                                                                                                                                                                         (assert)
                                                                                                                                                                                                                                                         nil
                                                                                                                                                                                                                                                         nil))
                                                                                                                                                                                                                                                       nil))
                                                                                                                                                                                                                                                     nil))
                                                                                                                                                                                                                                                   nil))
                                                                                                                                                                                                                                                 nil))
                                                                                                                                                                                                                                               nil))
                                                                                                                                                                                                                                             nil))
                                                                                                                                                                                                                                           nil))
                                                                                                                                                                                                                                         nil))
                                                                                                                                                                                                                                       nil))
                                                                                                                                                                                                                                     nil))
                                                                                                                                                                                                                                   nil))
                                                                                                                                                                                                                                 nil))
                                                                                                                                                                                                                               nil))
                                                                                                                                                                                                                             nil))
                                                                                                                                                                                                                           nil))
                                                                                                                                                                                                                         nil))
                                                                                                                                                                                                                       nil))
                                                                                                                                                                                                                     nil))
                                                                                                                                                                                                                   nil))
                                                                                                                                                                                                                 nil))
                                                                                                                                                                                                               nil)
                                                                                                                                                                                                              ("2"
                                                                                                                                                                                                               (hide
                                                                                                                                                                                                                2)
                                                                                                                                                                                                               (("2"
                                                                                                                                                                                                                 (assert)
                                                                                                                                                                                                                 nil
                                                                                                                                                                                                                 nil))
                                                                                                                                                                                                               nil))
                                                                                                                                                                                                             nil))
                                                                                                                                                                                                           nil))
                                                                                                                                                                                                         nil))
                                                                                                                                                                                                       nil))
                                                                                                                                                                                                     nil))
                                                                                                                                                                                                   nil))
                                                                                                                                                                                                 nil))
                                                                                                                                                                                               nil))
                                                                                                                                                                                             nil)
                                                                                                                                                                                            ("2"
                                                                                                                                                                                             (assert)
                                                                                                                                                                                             nil
                                                                                                                                                                                             nil))
                                                                                                                                                                                           nil))
                                                                                                                                                                                         nil))
                                                                                                                                                                                       nil))
                                                                                                                                                                                     nil))
                                                                                                                                                                                   nil))
                                                                                                                                                                                 nil))
                                                                                                                                                                               nil)
                                                                                                                                                                              ("2"
                                                                                                                                                                               (assert)
                                                                                                                                                                               nil
                                                                                                                                                                               nil))
                                                                                                                                                                             nil))
                                                                                                                                                                           nil)
                                                                                                                                                                          ("2"
                                                                                                                                                                           (assert)
                                                                                                                                                                           nil
                                                                                                                                                                           nil)
                                                                                                                                                                          ("3"
                                                                                                                                                                           (hide
                                                                                                                                                                            2)
                                                                                                                                                                           (("3"
                                                                                                                                                                             (assert)
                                                                                                                                                                             (("3"
                                                                                                                                                                               (lemma
                                                                                                                                                                                "sq_lt"
                                                                                                                                                                                ("nna"
                                                                                                                                                                                 "0"
                                                                                                                                                                                 "nnb"
                                                                                                                                                                                 "y!1"))
                                                                                                                                                                               (("3"
                                                                                                                                                                                 (rewrite
                                                                                                                                                                                  "sq_0")
                                                                                                                                                                                 (("3"
                                                                                                                                                                                   (assert)
                                                                                                                                                                                   nil
                                                                                                                                                                                   nil))
                                                                                                                                                                                 nil))
                                                                                                                                                                               nil))
                                                                                                                                                                             nil))
                                                                                                                                                                           nil))
                                                                                                                                                                         nil)
                                                                                                                                                                        ("2"
                                                                                                                                                                         (lemma
                                                                                                                                                                          "sq_lt"
                                                                                                                                                                          ("nna"
                                                                                                                                                                           "0"
                                                                                                                                                                           "nnb"
                                                                                                                                                                           "y!1"))
                                                                                                                                                                         (("2"
                                                                                                                                                                           (rewrite
                                                                                                                                                                            "sq_0")
                                                                                                                                                                           (("2"
                                                                                                                                                                             (assert)
                                                                                                                                                                             nil
                                                                                                                                                                             nil))
                                                                                                                                                                           nil))
                                                                                                                                                                         nil))
                                                                                                                                                                       nil))
                                                                                                                                                                     nil))
                                                                                                                                                                   nil))
                                                                                                                                                                 nil))
                                                                                                                                                               nil))
                                                                                                                                                             nil))
                                                                                                                                                           nil))
                                                                                                                                                         nil)
                                                                                                                                                        ("2"
                                                                                                                                                         (replace
                                                                                                                                                          -1)
                                                                                                                                                         (("2"
                                                                                                                                                           (replace
                                                                                                                                                            -4
                                                                                                                                                            1
                                                                                                                                                            rl)
                                                                                                                                                           (("2"
                                                                                                                                                             (simplify
                                                                                                                                                              1)
                                                                                                                                                             (("2"
                                                                                                                                                               (hide-all-but
                                                                                                                                                                1)
                                                                                                                                                               (("2"
                                                                                                                                                                 (expand
                                                                                                                                                                  "sq")
                                                                                                                                                                 (("2"
                                                                                                                                                                   (assert)
                                                                                                                                                                   (("2"
                                                                                                                                                                     (name-replace
                                                                                                                                                                      "K1"
                                                                                                                                                                      "2 * (1 / 6) - (1 / 6) * (1 / 6)")
                                                                                                                                                                     (("2"
                                                                                                                                                                       (lemma
                                                                                                                                                                        "div_mult_pos_gt1"
                                                                                                                                                                        ("x"
                                                                                                                                                                         "1"
                                                                                                                                                                         "z"
                                                                                                                                                                         "1/2"
                                                                                                                                                                         "py"
                                                                                                                                                                         "sqrt(K1)"))
                                                                                                                                                                       (("1"
                                                                                                                                                                         (rewrite
                                                                                                                                                                          "div_div2"
                                                                                                                                                                          -1)
                                                                                                                                                                         (("1"
                                                                                                                                                                           (assert)
                                                                                                                                                                           (("1"
                                                                                                                                                                             (lemma
                                                                                                                                                                              "sq_gt"
                                                                                                                                                                              ("nna"
                                                                                                                                                                               "sqrt(K1)"
                                                                                                                                                                               "nnb"
                                                                                                                                                                               "1/2"))
                                                                                                                                                                             (("1"
                                                                                                                                                                               (rewrite
                                                                                                                                                                                "sq_sqrt"
                                                                                                                                                                                -1)
                                                                                                                                                                               (("1"
                                                                                                                                                                                 (expand
                                                                                                                                                                                  "sq"
                                                                                                                                                                                  -1)
                                                                                                                                                                                 (("1"
                                                                                                                                                                                   (expand
                                                                                                                                                                                    "K1")
                                                                                                                                                                                   (("1"
                                                                                                                                                                                     (assert)
                                                                                                                                                                                     nil
                                                                                                                                                                                     nil))
                                                                                                                                                                                   nil))
                                                                                                                                                                                 nil))
                                                                                                                                                                               nil))
                                                                                                                                                                             nil))
                                                                                                                                                                           nil))
                                                                                                                                                                         nil)
                                                                                                                                                                        ("2"
                                                                                                                                                                         (lemma
                                                                                                                                                                          "sqrt_lt"
                                                                                                                                                                          ("nny"
                                                                                                                                                                           "0"
                                                                                                                                                                           "nnz"
                                                                                                                                                                           "2 * (1 / 6) - (1 / 6) * (1 / 6)"))
                                                                                                                                                                         (("2"
                                                                                                                                                                           (rewrite
                                                                                                                                                                            "sqrt_0")
                                                                                                                                                                           (("2"
                                                                                                                                                                             (expand
                                                                                                                                                                              "K1")
                                                                                                                                                                             (("2"
                                                                                                                                                                               (hide
                                                                                                                                                                                2)
                                                                                                                                                                               (("2"
                                                                                                                                                                                 (assert)
                                                                                                                                                                                 nil
                                                                                                                                                                                 nil))
                                                                                                                                                                               nil))
                                                                                                                                                                             nil))
                                                                                                                                                                           nil))
                                                                                                                                                                         nil)
                                                                                                                                                                        ("3"
                                                                                                                                                                         (hide
                                                                                                                                                                          2)
                                                                                                                                                                         (("3"
                                                                                                                                                                           (expand
                                                                                                                                                                            "K1")
                                                                                                                                                                           (("3"
                                                                                                                                                                             (assert)
                                                                                                                                                                             nil
                                                                                                                                                                             nil))
                                                                                                                                                                           nil))
                                                                                                                                                                         nil))
                                                                                                                                                                       nil))
                                                                                                                                                                     nil))
                                                                                                                                                                   nil))
                                                                                                                                                                 nil))
                                                                                                                                                               nil))
                                                                                                                                                             nil))
                                                                                                                                                           nil))
                                                                                                                                                         nil))
                                                                                                                                                       nil))
                                                                                                                                                     nil)
                                                                                                                                                    ("2"
                                                                                                                                                     (hide
                                                                                                                                                      2)
                                                                                                                                                     (("2"
                                                                                                                                                       (lemma
                                                                                                                                                        "posreal_times_posreal_is_posreal"
                                                                                                                                                        ("px"
                                                                                                                                                         "y!1"
                                                                                                                                                         "py"
                                                                                                                                                         "y!1"))
                                                                                                                                                       (("1"
                                                                                                                                                         (assert)
                                                                                                                                                         nil
                                                                                                                                                         nil)
                                                                                                                                                        ("2"
                                                                                                                                                         (assert)
                                                                                                                                                         nil
                                                                                                                                                         nil))
                                                                                                                                                       nil))
                                                                                                                                                     nil)
                                                                                                                                                    ("3"
                                                                                                                                                     (assert)
                                                                                                                                                     nil
                                                                                                                                                     nil))
                                                                                                                                                   nil))
                                                                                                                                                 nil))
                                                                                                                                               nil))
                                                                                                                                             nil))
                                                                                                                                           nil))
                                                                                                                                         nil)
                                                                                                                                        ("2"
                                                                                                                                         (assert)
                                                                                                                                         nil
                                                                                                                                         nil))
                                                                                                                                       nil))
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil))
                                                                                                                           nil))
                                                                                                                         nil)
                                                                                                                        ("2"
                                                                                                                         (hide-all-but
                                                                                                                          1)
                                                                                                                         (("2"
                                                                                                                           (reveal
                                                                                                                            "TCC")
                                                                                                                           (("2"
                                                                                                                             (skeep)
                                                                                                                             (("2"
                                                                                                                               (inst?)
                                                                                                                               (("2"
                                                                                                                                 (flatten)
                                                                                                                                 (("2"
                                                                                                                                   (assert)
                                                                                                                                   nil
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil))
                                                                                                                           nil))
                                                                                                                         nil)
                                                                                                                        ("3"
                                                                                                                         (hide-all-but
                                                                                                                          1)
                                                                                                                         (("3"
                                                                                                                           (assert)
                                                                                                                           (("3"
                                                                                                                             (expand
                                                                                                                              "connected?")
                                                                                                                             (("3"
                                                                                                                               (skosimp*)
                                                                                                                               (("3"
                                                                                                                                 (assert)
                                                                                                                                 nil
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil))
                                                                                                                           nil))
                                                                                                                         nil))
                                                                                                                       nil))
                                                                                                                     nil))
                                                                                                                   nil))
                                                                                                                 nil)
                                                                                                                ("2"
                                                                                                                 (hide-all-but
                                                                                                                  1)
                                                                                                                 (("2"
                                                                                                                   (reveal
                                                                                                                    "TCC")
                                                                                                                   (("2"
                                                                                                                     (skeep)
                                                                                                                     (("2"
                                                                                                                       (inst?
                                                                                                                        -1)
                                                                                                                       (("2"
                                                                                                                         (flatten)
                                                                                                                         (("2"
                                                                                                                           (assert)
                                                                                                                           nil
                                                                                                                           nil))
                                                                                                                         nil))
                                                                                                                       nil))
                                                                                                                     nil))
                                                                                                                   nil))
                                                                                                                 nil))
                                                                                                               nil))
                                                                                                             nil))
                                                                                                           nil)
                                                                                                          ("2"
                                                                                                           (hide-all-but
                                                                                                            1)
                                                                                                           (("2"
                                                                                                             (reveal
                                                                                                              "TCC")
                                                                                                             (("2"
                                                                                                               (skeep)
                                                                                                               (("2"
                                                                                                                 (inst?
                                                                                                                  -1)
                                                                                                                 (("2"
                                                                                                                   (flatten)
                                                                                                                   (("2"
                                                                                                                     (assert)
                                                                                                                     nil
                                                                                                                     nil))
                                                                                                                   nil))
                                                                                                                 nil))
                                                                                                               nil))
                                                                                                             nil))
                                                                                                           nil))
                                                                                                         nil))
                                                                                                       nil))
                                                                                                     nil))
                                                                                                   nil))
                                                                                                 nil)
                                                                                                ("2"
                                                                                                 (hide-all-but
                                                                                                  1)
                                                                                                 (("2"
                                                                                                   (reveal
                                                                                                    "TCC")
                                                                                                   (("2"
                                                                                                     (skeep)
                                                                                                     (("2"
                                                                                                       (inst?
                                                                                                        -1)
                                                                                                       (("2"
                                                                                                         (flatten)
                                                                                                         (("2"
                                                                                                           (assert)
                                                                                                           nil
                                                                                                           nil))
                                                                                                         nil))
                                                                                                       nil))
                                                                                                     nil))
                                                                                                   nil))
                                                                                                 nil))
                                                                                               nil))
                                                                                             nil))
                                                                                           nil)
                                                                                          ("2"
                                                                                           (hide-all-but
                                                                                            1)
                                                                                           (("2"
                                                                                             (skosimp*)
                                                                                             (("2"
                                                                                               (typepred
                                                                                                "x!1")
                                                                                               (("2"
                                                                                                 (expand
                                                                                                  ">=")
                                                                                                 (("2"
                                                                                                   (expand
                                                                                                    "<="
                                                                                                    -1)
                                                                                                   (("2"
                                                                                                     (split
                                                                                                      -1)
                                                                                                     (("1"
                                                                                                       (lemma
                                                                                                        "posreal_times_posreal_is_posreal"
                                                                                                        ("px"
                                                                                                         "x!1"
                                                                                                         "py"
                                                                                                         "x!1"))
                                                                                                       (("1"
                                                                                                         (lemma
                                                                                                          "posreal_times_posreal_is_posreal"
                                                                                                          ("px"
                                                                                                           "x!1"
                                                                                                           "py"
                                                                                                           "x!1*x!1"))
                                                                                                         (("1"
                                                                                                           (lemma
                                                                                                            "posreal_div_posreal_is_posreal"
                                                                                                            ("px"
                                                                                                             "x!1*x!1*x!1"
                                                                                                             "py"
                                                                                                             "6"))
                                                                                                           (("1"
                                                                                                             (lemma
                                                                                                              "lt_minus_lt1"
                                                                                                              ("x"
                                                                                                               "x!1"
                                                                                                               "y"
                                                                                                               "1"
                                                                                                               "w"
                                                                                                               "0"
                                                                                                               "z"
                                                                                                               "x!1 * x!1 * x!1 / 6"))
                                                                                                             (("1"
                                                                                                               (split
                                                                                                                -1)
                                                                                                               (("1"
                                                                                                                 (lemma
                                                                                                                  "sq_le"
                                                                                                                  ("nna"
                                                                                                                   "x!1"
                                                                                                                   "nnb"
                                                                                                                   "1"))
                                                                                                                 (("1"
                                                                                                                   (expand
                                                                                                                    "sq")
                                                                                                                   (("1"
                                                                                                                     (lemma
                                                                                                                      "posreal_times_posreal_is_posreal"
                                                                                                                      ("px"
                                                                                                                       "1-x!1*x!1/6"
                                                                                                                       "py"
                                                                                                                       "x!1"))
                                                                                                                     (("1"
                                                                                                                       (assert)
                                                                                                                       nil
                                                                                                                       nil)
                                                                                                                      ("2"
                                                                                                                       (hide
                                                                                                                        2)
                                                                                                                       (("2"
                                                                                                                         (assert)
                                                                                                                         nil
                                                                                                                         nil))
                                                                                                                       nil))
                                                                                                                     nil))
                                                                                                                   nil))
                                                                                                                 nil)
                                                                                                                ("2"
                                                                                                                 (propax)
                                                                                                                 nil
                                                                                                                 nil)
                                                                                                                ("3"
                                                                                                                 (assert)
                                                                                                                 nil
                                                                                                                 nil))
                                                                                                               nil))
                                                                                                             nil)
                                                                                                            ("2"
                                                                                                             (assert)
                                                                                                             nil
                                                                                                             nil))
                                                                                                           nil)
                                                                                                          ("2"
                                                                                                           (propax)
                                                                                                           nil
                                                                                                           nil))
                                                                                                         nil)
                                                                                                        ("2"
                                                                                                         (assert)
                                                                                                         nil
                                                                                                         nil))
                                                                                                       nil)
                                                                                                      ("2"
                                                                                                       (assert)
                                                                                                       nil
                                                                                                       nil))
                                                                                                     nil))
                                                                                                   nil))
                                                                                                 nil))
                                                                                               nil))
                                                                                             nil))
                                                                                           nil))
                                                                                         nil))
                                                                                       nil))
                                                                                     nil))
                                                                                   nil))
                                                                                 nil))
                                                                               nil))
                                                                             nil))
                                                                           nil))
                                                                         nil))
                                                                       nil))
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil))
                                                 nil))
                                               nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil)
                    ("2" (expand "not_one_element?")
                     (("2" (skosimp*)
                       (("2" (inst-cp + "1/2")
                         (("2" (inst-cp + "1/4") (("2" (assert) nil nil))
                           nil))
                         nil))
                       nil))
                     nil)
                    ("3" (lemma "deriv_domain_closed")
                     (("3" (inst - "0" "1")
                       (("3" (assert)
                         (("3" (expand "deriv_domain?")
                           (("3" (skosimp*)
                             (("3" (inst - "e!1" "x!1")
                               (("3" (skosimp*) (("3" (inst + "y!1") nil nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil)
                ("2" (hide 2)
                 (("2" (lemma "sq_le" ("nnb" "px!1" "nna" "sqrt(6)"))
                   (("2" (flatten)
                     (("2" (rewrite "sq_sqrt")
                       (("2" (assert)
                         (("2" (hide -1)
                           (("2" (typepred "px!1")
                             (("2" (assert)
                               (("2" (lemma "sq_le" ("nna" "px!1" "nnb" "1"))
                                 (("2" (rewrite "sq_1")
                                   (("2" (assert) nil nil)) nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil))
           nil))
         nil)
        ((deriv_asin_fun formula-decl nil asin nil)
         (deriv_id_fun formula-decl nil derivatives analysis)
         (asin const-decl "real_abs_le_pi2" asin nil)
         (real_abs_le_pi2 nonempty-type-eq-decl nil trig_types nil)
         (pi const-decl "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}"
          pi_def nil)
         (cos const-decl "real" sincos_def nil)
         (= const-decl "[T, T -> boolean]" equalities nil)
         (> const-decl "bool" reals nil)
         (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
         (nznum nonempty-type-eq-decl nil number_fields nil)
         (/= const-decl "boolean" notequal nil)
         (real_abs_le1 nonempty-type-eq-decl nil trig_types nil)
         (<= const-decl "bool" reals nil)
         (diff_derivable_fun formula-decl nil derivatives analysis)
         (- const-decl "[T -> real]" real_fun_ops reals)
         (real_le_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (restrict2_derivable formula-decl nil restrict2_deriv analysis)
         (asin_0 formula-decl nil asin nil)
         (restrict2 const-decl "[T1 -> real]" restrict2_deriv analysis)
         (sqrt_pos application-judgement "posreal" sqrt reals)
         (sq const-decl "nonneg_real" sq reals)
         (sq_0 formula-decl nil sq reals)
         (posrat_div_posrat_is_posrat application-judgement "posrat" rationals
          nil)
         (rat_minus_rat_is_rat application-judgement "rat" rationals nil)
         (posreal_div_posreal_is_posreal application-judgement "posreal"
          real_types nil)
         (sqrt_1 formula-decl nil sqrt reals)
         (deriv_domain? const-decl "bool" deriv_domain_def analysis)
         (restrict2_deriv formula-decl nil restrict2_deriv analysis)
         (sq_lt formula-decl nil sq reals)
         (nonneg_real nonempty-type-eq-decl nil real_types nil)
         (real_times_real_is_real application-judgement "real" reals nil)
         (real_gt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (div_mult_pos_gt2 formula-decl nil extra_real_props nil)
         (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
         (posreal_times_posreal_is_posreal judgement-tcc nil real_types nil)
         (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
          real_types nil)
         (sqrt_lt formula-decl nil sqrt reals)
         (posreal nonempty-type-eq-decl nil real_types nil)
         (sqrt_pos judgement-tcc nil sqrt reals)
         (not_one_element? const-decl "bool" deriv_domain_def analysis)
         (connected? const-decl "bool" deriv_domain_def analysis)
         (real_ge_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (nnreal type-eq-decl nil real_types nil)
         (>= const-decl "bool" reals nil)
         (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (minimum_derivative formula-decl nil derivative_props analysis)
         (real_minus_real_is_real application-judgement "real" reals nil)
         (asin_1 formula-decl nil asin nil)
         (pi_bnds formula-decl nil atan nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (deriv_fun type-eq-decl nil derivatives analysis)
         (derivable? const-decl "bool" derivatives analysis)
         (deriv_diff_fun formula-decl nil derivatives analysis)
         (nzreal_div_nzreal_is_nzreal application-judgement "nzreal"
          real_types nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (pi_bound name-judgement
          "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def nil)
         (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
          nil)
         (I const-decl "(bijective?[T, T])" identity nil)
         (identity_derivable_fun formula-decl nil derivatives analysis)
         (number nonempty-type-decl nil numbers nil)
         (boolean nonempty-type-decl nil booleans nil)
         (number_field_pred const-decl "[number -> boolean]" number_fields
          nil)
         (number_field nonempty-type-from-decl nil number_fields nil)
         (real_pred const-decl "[number_field -> boolean]" reals nil)
         (real nonempty-type-from-decl nil reals nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (AND const-decl "[bool, bool -> bool]" booleans nil)
         (< const-decl "bool" reals nil)
         (numfield nonempty-type-eq-decl nil number_fields nil)
         (- const-decl "[numfield -> numfield]" number_fields nil)
         (real_abs_lt1 nonempty-type-eq-decl nil trig_types nil)
         (asin_derivable_fun formula-decl nil asin nil)
         (deriv_const_fun formula-decl nil derivatives analysis)
         (real_div_nzreal_is_real application-judgement "real" reals nil)
         (deriv_prod_fun formula-decl nil derivatives analysis)
         (scal_derivable_fun formula-decl nil derivatives analysis)
         (* const-decl "[T -> real]" real_fun_ops reals)
         (posreal_div_posreal_is_posreal judgement-tcc nil real_types nil)
         (odd_minus_even_is_odd application-judgement "odd_int" integers nil)
         (lt_minus_lt1 formula-decl nil real_props nil)
         (deriv_comp_fun formula-decl nil chain_rule analysis)
         (sq_le formula-decl nil sq reals)
         (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
          real_types nil)
         (sq_rew formula-decl nil sq reals)
         (lt_times_lt_pos1 formula-decl nil real_props nil)
         (sqrt_0 formula-decl nil sqrt reals)
         (div_mult_pos_lt1 formula-decl nil real_props nil)
         (sq_sqrt formula-decl nil sqrt reals)
         (posreal_plus_nnreal_is_posreal application-judgement "posreal"
          real_types nil)
         (posrat_times_posrat_is_posrat application-judgement "posrat"
          rationals nil)
         (minus_nzrat_is_nzrat application-judgement "nzrat" rationals nil)
         (both_sides_times_pos_lt1 formula-decl nil real_props nil)
         (both_sides_minus_lt1 formula-decl nil real_props nil)
         (nonzero_real nonempty-type-eq-decl nil reals nil)
         (div_cancel1 formula-decl nil real_props nil)
         (AP skolem-const-decl "real" asin nil)
         (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (odd_times_odd_is_odd application-judgement "odd_int" integers nil)
         (posint_times_posint_is_posint application-judgement "posint"
          integers nil)
         (sq_1 formula-decl nil sq reals)
         (nzreal_times_nzreal_is_nzreal application-judgement "nzreal"
          real_types nil)
         (sq_nz_pos application-judgement "posreal" sq reals)
         (posreal_times_posreal_is_posreal application-judgement "posreal"
          real_types nil)
         (div_mult_pos_gt1 formula-decl nil extra_real_props nil)
         (sq_gt formula-decl nil sq reals)
         (div_div2 formula-decl nil real_props nil)
         (K1 skolem-const-decl "rat" asin nil)
         (rational_pred const-decl "[real -> boolean]" rationals nil)
         (rat nonempty-type-eq-decl nil rationals nil)
         (minus_odd_is_odd application-judgement "odd_int" integers nil)
         (nnrat_times_nnrat_is_nnrat application-judgement "nonneg_rat"
          rationals nil)
         (int_times_even_is_even application-judgement "even_int" integers
          nil)
         (real_plus_real_is_real application-judgement "real" reals nil)
         (O const-decl "T3" function_props nil)
         (composition_derivable_fun formula-decl nil chain_rule analysis)
         (deriv_domain_abs_lt1 formula-decl nil trig_types nil)
         (noa_abs_lt1 formula-decl nil trig_types nil)
         (bijective? const-decl "bool" functions nil)
         (id const-decl "(bijective?[T, T])" identity nil)
         (TRUE const-decl "bool" booleans nil)
         (deriv_scal_fun formula-decl nil derivatives analysis)
         (+ const-decl "[T -> real]" real_fun_ops reals)
         (* const-decl "[T -> real]" real_fun_ops reals)
         (prod_derivable_fun formula-decl nil derivatives analysis)
         (const_derivable_fun formula-decl nil derivatives analysis)
         (closed_interval type-eq-decl nil intervals_real reals)
         (nzreal nonempty-type-eq-decl nil reals nil)
         (deriv_domain_closed formula-decl nil deriv_domain analysis))
        nil)
       (asin_pos_bnds-2 nil 3425656889
        (";;; Proof asin_pos_bnds-1 for formula asin.asin_pos_bnds" (skosimp*)
         ((";;; Proof asin_pos_bnds-1 for formula asin.asin_pos_bnds" (split)
           (("1" (lemma "asin_derivable_fun")
             (("1" (lemma "deriv_asin_fun")
               (("1" (lemma "identity_derivable_fun[real_abs_lt1]")
                 (("1" (lemma "deriv_id_fun[real_abs_lt1]")
                   (("1" (expand "I")
                     (("1" (expand "const_fun")
                       (("1"
                         (lemma "diff_derivable_fun[real_abs_lt1]"
                          ("f1" "LAMBDA (x: real_abs_lt1): asin(x)" "f2"
                           "LAMBDA (x: real_abs_lt1): x"))
                         (("1" (assert)
                           (("1" (expand "-")
                             (("1"
                               (lemma "deriv_diff_fun[real_abs_lt1]"
                                ("ff1" "LAMBDA (x: real_abs_lt1): asin(x)"
                                 "ff2" "LAMBDA (x: real_abs_lt1): x"))
                               (("1" (replace -5 -1)
                                 (("1" (replace -3 -1)
                                   (("1" (expand "-")
                                     (("1"
                                       (typepred "px!1")
                                       (("1"
                                         (hide -1)
                                         (("1"
                                           (expand "<=" -1)
                                           (("1"
                                             (split -1)
                                             (("1"
                                               (lemma
                                                "minimum_derivative[{x:nnreal| x < 1}]"
                                                ("g"
                                                 "LAMBDA (x_1:{x:nnreal| x < 1} ): asin(x_1) - x_1"
                                                 "x"
                                                 "0"
                                                 "y1"
                                                 "px!1"))
                                               (("1"
                                                 (split -1)
                                                 (("1"
                                                   (simplify -1)
                                                   (("1"
                                                     (rewrite "asin_0")
                                                     (("1" (assert) nil)))))
                                                  ("2"
                                                   (lemma
                                                    "restrict2_deriv[{x: nnreal | x < 1},real_abs_lt1]"
                                                    ("f"
                                                     "LAMBDA (x_1: real_abs_lt1): asin(x_1) - x_1"
                                                     "a"
                                                     "0"))
                                                   (("1"
                                                     (replace -4 -1)
                                                     (("1"
                                                       (simplify -1)
                                                       (("1"
                                                         (expand
                                                          "restrict2"
                                                          -1)
                                                         (("1"
                                                           (replace -1 1 rl)
                                                           (("1"
                                                             (expand "sq" 1)
                                                             (("1"
                                                               (rewrite
                                                                "sqrt_1")
                                                               (("1"
                                                                 (assert)
                                                                 nil)))))))))))))
                                                    ("2" (propax) nil)
                                                    ("3"
                                                     (skosimp*)
                                                     (("3"
                                                       (inst + "x!1")
                                                       nil)))
                                                    ("4"
                                                     (assert)
                                                     (("4"
                                                       (skosimp*)
                                                       (("4"
                                                         (case "x!1=0")
                                                         (("1"
                                                           (inst + "px!1")
                                                           (("1"
                                                             (assert)
                                                             nil)))
                                                          ("2"
                                                           (inst + "0")
                                                           (("2"
                                                             (assert)
                                                             nil)))))))))
                                                    ("5"
                                                     (assert)
                                                     (("5"
                                                       (hide-all-but 1)
                                                       (("5"
                                                         (grind)
                                                         nil)))))))
                                                  ("3" (assert) nil)
                                                  ("4"
                                                   (skosimp*)
                                                   (("4"
                                                     (typepred "y!1")
                                                     (("4"
                                                       (expand ">=" -1)
                                                       (("4"
                                                         (expand "<=" -1)
                                                         (("4"
                                                           (split -1)
                                                           (("1"
                                                             (lemma
                                                              "restrict2_deriv[{x: nnreal | x < 1},real_abs_lt1]"
                                                              ("f"
                                                               "LAMBDA (x_1: real_abs_lt1): asin(x_1) - x_1"
                                                               "a"
                                                               "y!1"))
                                                             (("1"
                                                               (replace -6 -1)
                                                               (("1"
                                                                 (simplify -1)
                                                                 (("1"
                                                                   (expand
                                                                    "restrict2"
                                                                    -1)
                                                                   (("1"
                                                                     (replace
                                                                      -1
                                                                      2
                                                                      rl)
                                                                     (("1"
                                                                       (hide
                                                                        -1
                                                                        -6
                                                                        3
                                                                        1
                                                                        -7
                                                                        -8
                                                                        -9
                                                                        -10
                                                                        -11)
                                                                       (("1"
                                                                         (lemma
                                                                          "sq_lt"
                                                                          ("nna"
                                                                           "0"
                                                                           "nnb"
                                                                           "y!1"))
                                                                         (("1"
                                                                           (lemma
                                                                            "sq_lt"
                                                                            ("nna"
                                                                             "y!1"
                                                                             "nnb"
                                                                             "1"))
                                                                           (("1"
                                                                             (expand
                                                                              "sq"
                                                                              -1
                                                                              2)
                                                                             (("1"
                                                                               (expand
                                                                                "sq"
                                                                                -2
                                                                                1)
                                                                               (("1"
                                                                                 (assert)
                                                                                 (("1"
                                                                                   (lemma
                                                                                    "sqrt_pos"
                                                                                    ("px"
                                                                                     "1-sq(y!1)"))
                                                                                   (("1"
                                                                                     (lemma
                                                                                      "div_mult_pos_gt2"
                                                                                      ("z"
                                                                                       "1"
                                                                                       "py"
                                                                                       "sqrt(1-sq(y!1))"
                                                                                       "x"
                                                                                       "1"))
                                                                                     (("1"
                                                                                       (lemma
                                                                                        "sqrt_lt"
                                                                                        ("nny"
                                                                                         "1-sq(y!1)"
                                                                                         "nnz"
                                                                                         "1"))
                                                                                       (("1"
                                                                                         (rewrite
                                                                                          "sqrt_1")
                                                                                         (("1"
                                                                                           (assert)
                                                                                           (("1"
                                                                                             (lemma
                                                                                              "posreal_times_posreal_is_posreal"
                                                                                              ("px"
                                                                                               "1 / sqrt(1 - sq(y!1))-1"
                                                                                               "py"
                                                                                               "y!1"))
                                                                                             (("1"
                                                                                               (assert)
                                                                                               nil)))))))))))))))))))))))))))))))))
                                                              ("2"
                                                               (propax)
                                                               nil)
                                                              ("3"
                                                               (skosimp*)
                                                               (("3"
                                                                 (inst
                                                                  +
                                                                  "x!1")
                                                                 nil)))
                                                              ("4"
                                                               (assert)
                                                               (("4"
                                                                 (skosimp*)
                                                                 (("4"
                                                                   (case
                                                                    "x!1 = 0")
                                                                   (("1"
                                                                     (inst
                                                                      +
                                                                      "1/2")
                                                                     (("1"
                                                                       (assert)
                                                                       nil)))
                                                                    ("2"
                                                                     (assert)
                                                                     (("2"
                                                                       (inst
                                                                        +
                                                                        "0")
                                                                       (("2"
                                                                         (assert)
                                                                         nil)))))))))))
                                                              ("5"
                                                               (assert)
                                                               (("5"
                                                                 (hide-all-but
                                                                  1)
                                                                 (("5"
                                                                   (grind)
                                                                   nil)))))))
                                                            ("2"
                                                             (assert)
                                                             nil)))))))))))))
                                                ("2" (propax) nil)
                                                ("3"
                                                 (lemma
                                                  "restrict2_derivable[{x: nnreal | x < 1},real_abs_lt1]"
                                                  ("f"
                                                   "LAMBDA (x_1: real_abs_lt1): asin(x_1) - x_1"))
                                                 (("1"
                                                   (expand "restrict2" -1)
                                                   (("1" (propax) nil)))
                                                  ("2" (propax) nil)
                                                  ("3"
                                                   (skosimp*)
                                                   (("3"
                                                     (typepred "x!1")
                                                     (("3"
                                                       (inst + "x!1")
                                                       nil)))))
                                                  ("4"
                                                   (skosimp*)
                                                   (("4"
                                                     (case "x!1=0")
                                                     (("1"
                                                       (inst + "1/2")
                                                       (("1" (assert) nil)))
                                                      ("2"
                                                       (assert)
                                                       (("2"
                                                         (inst + "0")
                                                         (("2"
                                                           (assert)
                                                           nil)))))))))
                                                  ("5"
                                                   (assert)
                                                   (("5"
                                                     (skosimp*)
                                                     (("5"
                                                       (case "x!1=0")
                                                       (("1"
                                                         (inst + "1/2")
                                                         (("1" (assert) nil)))
                                                        ("2"
                                                         (inst + "0")
                                                         (("2"
                                                           (assert)
                                                           nil)))))))))
                                                  ("6"
                                                   (hide-all-but 1)
                                                   (("6" (grind) nil)))
                                                  ("7"
                                                   (hide-all-but 1)
                                                   (("7" (grind) nil)))))
                                                ("4"
                                                 (hide-all-but 1)
                                                 (("4"
                                                   (skosimp*)
                                                   (("4"
                                                     (case "x!1=0")
                                                     (("1"
                                                       (inst + "1/2")
                                                       (("1" (assert) nil)))
                                                      ("2"
                                                       (inst + "0")
                                                       (("2"
                                                         (assert)
                                                         nil)))))))))
                                                ("5"
                                                 (hide-all-but 1)
                                                 (("5" (grind) nil)))))
                                              ("2"
                                               (replace -1)
                                               (("2"
                                                 (rewrite "asin_1")
                                                 (("2"
                                                   (lemma "pi_bnds")
                                                   (("2"
                                                     (flatten)
                                                     (("2"
                                                       (assert)
                                                       nil)))))))))))))))))))))))))))))))))))))))))))
            ("2" (flatten)
             (("2" (case "px!1 < sqrt(6)")
               (("1" (typepred "px!1")
                 (("1" (lemma "identity_derivable_fun[{x:nnreal| x <= 1}]")
                   (("1" (lemma "deriv_id_fun[{x:nnreal| x <= 1}]")
                     (("1" (expand "I")
                       (("1"
                         (lemma "const_derivable_fun[{x:nnreal| x <= 1}]"
                          ("b" "1"))
                         (("1"
                           (lemma "deriv_const_fun[{x:nnreal| x <= 1}]"
                            ("b" "1"))
                           (("1" (expand "const_fun")
                             (("1"
                               (lemma "prod_derivable_fun[{x:nnreal| x <= 1}]"
                                ("f1" "LAMBDA (x: {x: nnreal | x <= 1}): x"
                                 "f2" "LAMBDA (x: {x: nnreal | x <= 1}): x"))
                               (("1" (assert)
                                 (("1" (expand "*" -1)
                                   (("1"
                                     (lemma
                                      "deriv_prod_fun[{x:nnreal| x <= 1}]"
                                      ("ff1"
                                       "LAMBDA (x: {x: nnreal | x <= 1}): x"
                                       "ff2"
                                       "LAMBDA (x: {x: nnreal | x <= 1}): x"))
                                     (("1"
                                       (replace -5 -1)
                                       (("1"
                                         (expand "*")
                                         (("1"
                                           (expand "+")
                                           (("1"
                                             (lemma
                                              "scal_derivable_fun[{x:nnreal| x <= 1}]"
                                              ("f"
                                               "LAMBDA (x_1: {x: nnreal | x <= 1}): x_1 * x_1"
                                               "b"
                                               "1/6"))
                                             (("1"
                                               (assert)
                                               (("1"
                                                 (expand "*")
                                                 (("1"
                                                   (lemma
                                                    "deriv_scal_fun[{x:nnreal| x <= 1}]"
                                                    ("ff"
                                                     "LAMBDA (x_1: {x: nnreal | x <= 1}): x_1 * x_1"
                                                     "b"
                                                     "1/6"))
                                                   (("1"
                                                     (replace -3 -1)
                                                     (("1"
                                                       (expand "*" -1)
                                                       (("1"
                                                         (lemma
                                                          "diff_derivable_fun[{x:nnreal| x <= 1}]"
                                                          ("f1"
                                                           "LAMBDA (x: {x: nnreal | x <= 1}): 1"
                                                           "f2"
                                                           "LAMBDA (x: {x: nnreal | x <= 1}): 1 / 6 * (x * x)"))
                                                         (("1"
                                                           (assert)
                                                           (("1"
                                                             (expand "-")
                                                             (("1"
                                                               (lemma
                                                                "deriv_diff_fun[{x:nnreal| x <= 1}]"
                                                                ("ff1"
                                                                 "LAMBDA (x: {x: nnreal | x <= 1}): 1"
                                                                 "ff2"
                                                                 "LAMBDA (x: {x: nnreal | x <= 1}): 1 / 6 * (x * x)"))
                                                               (("1"
                                                                 (replace
                                                                  -7
                                                                  -1)
                                                                 (("1"
                                                                   (replace
                                                                    -3
                                                                    -1)
                                                                   (("1"
                                                                     (expand
                                                                      "-")
                                                                     (("1"
                                                                       (lemma
                                                                        "prod_derivable_fun[{x:nnreal| x <= 1}]"
                                                                        ("f1"
                                                                         "LAMBDA (x: {x: nnreal | x <= 1}): x"
                                                                         "f2"
                                                                         "LAMBDA (x_1: {x: nnreal | x <= 1}): 1 - 1 / 6 * (x_1 * x_1)"))
                                                                       (("1"
                                                                         (assert)
                                                                         (("1"
                                                                           (expand
                                                                            "*")
                                                                           (("1"
                                                                             (lemma
                                                                              "deriv_prod_fun[{x:nnreal| x <= 1}]"
                                                                              ("ff1"
                                                                               "LAMBDA (x: {x: nnreal | x <= 1}): x"
                                                                               "ff2"
                                                                               "LAMBDA (x_1: {x: nnreal | x <= 1}): 1 - 1 / 6 * (x_1 * x_1)"))
                                                                             (("1"
                                                                               (replace
                                                                                -3
                                                                                -1)
                                                                               (("1"
                                                                                 (replace
                                                                                  -11
                                                                                  -1)
                                                                                 (("1"
                                                                                   (expand
                                                                                    "*")
                                                                                   (("1"
                                                                                     (expand
                                                                                      "+")
                                                                                     (("1"
                                                                                       (lemma
                                                                                        "asin_derivable2")
                                                                                       (("1"
                                                                                         (lemma
                                                                                          "deriv_asin_fun")
                                                                                         (("1"
                                                                                           (lemma
                                                                                            "composition_derivable_fun[{x: nnreal | x <= 1},real_abs_lt1]"
                                                                                            ("f"
                                                                                             "LAMBDA (x_1: {x: nnreal | x <= 1}): x_1 - x_1 * x_1 * x_1 * (1 / 6)"
                                                                                             "g"
                                                                                             "LAMBDA (x: real_abs_lt1): asin(x)"))
                                                                                           (("1"
                                                                                             (assert)
                                                                                             (("1"
                                                                                               (expand
                                                                                                "o")
                                                                                               (("1"
                                                                                                 (lemma
                                                                                                  "deriv_comp_fun[{x: nnreal | x <= 1},real_abs_lt1]"
                                                                                                  ("ff"
                                                                                                   "LAMBDA (x_1: {x: nnreal | x <= 1}): x_1 - x_1 * x_1 * x_1 * (1 / 6)"
                                                                                                   "gg"
                                                                                                   "LAMBDA (x: real_abs_lt1): asin(x)"))
                                                                                                 (("1"
                                                                                                   (replace
                                                                                                    -3
                                                                                                    -1)
                                                                                                   (("1"
                                                                                                     (replace
                                                                                                      -5
                                                                                                      -1)
                                                                                                     (("1"
                                                                                                       (expand
                                                                                                        "o")
                                                                                                       (("1"
                                                                                                         (expand
                                                                                                          "*")
                                                                                                         (("1"
                                                                                                           (lemma
                                                                                                            "diff_derivable_fun[{x:nnreal| x <= 1}]"
                                                                                                            ("f1"
                                                                                                             "LAMBDA (x: {x: nnreal | x <= 1}): x"
                                                                                                             "f2"
                                                                                                             "LAMBDA (x_1: {x: nnreal | x <= 1}): asin(x_1 - x_1 * x_1 * x_1 * (1 / 6))"))
                                                                                                           (("1"
                                                                                                             (expand
                                                                                                              "-")
                                                                                                             (("1"
                                                                                                               (assert)
                                                                                                               (("1"
                                                                                                                 (lemma
                                                                                                                  "deriv_diff_fun[{x:nnreal| x <= 1}]"
                                                                                                                  ("ff1"
                                                                                                                   "LAMBDA (x: {x: nnreal | x <= 1}): x"
                                                                                                                   "ff2"
                                                                                                                   "LAMBDA (x_1: {x: nnreal | x <= 1}): asin(x_1 - x_1 * x_1 * x_1 * (1 / 6))"))
                                                                                                                 (("1"
                                                                                                                   (replace
                                                                                                                    -3
                                                                                                                    -1)
                                                                                                                   (("1"
                                                                                                                     (replace
                                                                                                                      -17
                                                                                                                      -1)
                                                                                                                     (("1"
                                                                                                                       (expand
                                                                                                                        "-")
                                                                                                                       (("1"
                                                                                                                         (lemma
                                                                                                                          "minimum_derivative[{x: nnreal | x <= 1}]"
                                                                                                                          ("g"
                                                                                                                           "LAMBDA (x_1: {x: nnreal | x <= 1}): x_1 - asin(x_1 - x_1 * x_1 * x_1 * (1 / 6))"
                                                                                                                           "x"
                                                                                                                           "0"
                                                                                                                           "y1"
                                                                                                                           "px!1"))
                                                                                                                         (("1"
                                                                                                                           (split
                                                                                                                            -1)
                                                                                                                           (("1"
                                                                                                                             (simplify
                                                                                                                              -1)
                                                                                                                             (("1"
                                                                                                                               (assert)
                                                                                                                               (("1"
                                                                                                                                 (rewrite
                                                                                                                                  "asin_0")
                                                                                                                                 (("1"
                                                                                                                                   (assert)
                                                                                                                                   nil)))))))
                                                                                                                            ("2"
                                                                                                                             (hide
                                                                                                                              2)
                                                                                                                             (("2"
                                                                                                                               (replace
                                                                                                                                -1
                                                                                                                                1)
                                                                                                                               (("2"
                                                                                                                                 (simplify
                                                                                                                                  1)
                                                                                                                                 (("2"
                                                                                                                                   (rewrite
                                                                                                                                    "sq_0")
                                                                                                                                   (("2"
                                                                                                                                     (rewrite
                                                                                                                                      "sqrt_1")
                                                                                                                                     (("2"
                                                                                                                                       (assert)
                                                                                                                                       nil)))))))))))
                                                                                                                            ("3"
                                                                                                                             (assert)
                                                                                                                             nil)
                                                                                                                            ("4"
                                                                                                                             (replace
                                                                                                                              -1
                                                                                                                              1)
                                                                                                                             (("4"
                                                                                                                               (hide-all-but
                                                                                                                                1)
                                                                                                                               (("4"
                                                                                                                                 (skosimp*)
                                                                                                                                 (("4"
                                                                                                                                   (typepred
                                                                                                                                    "y!1")
                                                                                                                                   (("4"
                                                                                                                                     (expand
                                                                                                                                      ">="
                                                                                                                                      -1)
                                                                                                                                     (("4"
                                                                                                                                       (expand
                                                                                                                                        "<="
                                                                                                                                        -1)
                                                                                                                                       (("4"
                                                                                                                                         (split
                                                                                                                                          -1)
                                                                                                                                         (("1"
                                                                                                                                           (hide
                                                                                                                                            1)
                                                                                                                                           (("1"
                                                                                                                                             (name
                                                                                                                                              "AP"
                                                                                                                                              "y!1 - y!1 * y!1 * y!1 * (1 / 6)")
                                                                                                                                             (("1"
                                                                                                                                               (replace
                                                                                                                                                -1)
                                                                                                                                               (("1"
                                                                                                                                                 (lemma
                                                                                                                                                  "sq_le"
                                                                                                                                                  ("nna"
                                                                                                                                                   "y!1"
                                                                                                                                                   "nnb"
                                                                                                                                                   "1"))
                                                                                                                                                 (("1"
                                                                                                                                                   (expand
                                                                                                                                                    "sq"
                                                                                                                                                    -1)
                                                                                                                                                   (("1"
                                                                                                                                                     (lemma
                                                                                                                                                      "posreal_times_posreal_is_posreal"
                                                                                                                                                      ("px"
                                                                                                                                                       "y!1"
                                                                                                                                                       "py"
                                                                                                                                                       "1-y!1 * y!1 / 6"))
                                                                                                                                                     (("1"
                                                                                                                                                       (expand
                                                                                                                                                        "<="
                                                                                                                                                        -5)
                                                                                                                                                       (("1"
                                                                                                                                                         (split
                                                                                                                                                          -5)
                                                                                                                                                         (("1"
                                                                                                                                                           (lemma
                                                                                                                                                            "sq_lt"
                                                                                                                                                            ("nna"
                                                                                                                                                             "y!1"
                                                                                                                                                             "nnb"
                                                                                                                                                             "1"))
                                                                                                                                                           (("1"
                                                                                                                                                             (rewrite
                                                                                                                                                              "sq_rew")
                                                                                                                                                             (("1"
                                                                                                                                                               (rewrite
                                                                                                                                                                "sq_1")
                                                                                                                                                               (("1"
                                                                                                                                                                 (flatten
                                                                                                                                                                  -1)
                                                                                                                                                                 (("1"
                                                                                                                                                                   (replace
                                                                                                                                                                    -3
                                                                                                                                                                    -2)
                                                                                                                                                                   (("1"
                                                                                                                                                                     (hide
                                                                                                                                                                      -1)
                                                                                                                                                                     (("1"
                                                                                                                                                                       (hide
                                                                                                                                                                        -4)
                                                                                                                                                                       (("1"
                                                                                                                                                                         (lemma
                                                                                                                                                                          "lt_times_lt_pos1"
                                                                                                                                                                          ("px"
                                                                                                                                                                           "y!1"
                                                                                                                                                                           "y"
                                                                                                                                                                           "1"
                                                                                                                                                                           "nnz"
                                                                                                                                                                           "1 - sq(y!1) / 6"
                                                                                                                                                                           "w"
                                                                                                                                                                           "1"))
                                                                                                                                                                         (("1"
                                                                                                                                                                           (split
                                                                                                                                                                            -1)
                                                                                                                                                                           (("1"
                                                                                                                                                                             (replace
                                                                                                                                                                              -5)
                                                                                                                                                                             (("1"
                                                                                                                                                                               (lemma
                                                                                                                                                                                "sq_lt"
                                                                                                                                                                                ("nna"
                                                                                                                                                                                 "AP"
                                                                                                                                                                                 "nnb"
                                                                                                                                                                                 "1"))
                                                                                                                                                                               (("1"
                                                                                                                                                                                 (expand
                                                                                                                                                                                  "sq"
                                                                                                                                                                                  -1)
                                                                                                                                                                                 (("1"
                                                                                                                                                                                   (assert)
                                                                                                                                                                                   (("1"
                                                                                                                                                                                     (rewrite
                                                                                                                                                                                      "sq_rew"
                                                                                                                                                                                      -1)
                                                                                                                                                                                     (("1"
                                                                                                                                                                                       (lemma
                                                                                                                                                                                        "sq_lt"
                                                                                                                                                                                        ("nna"
                                                                                                                                                                                         "0"
                                                                                                                                                                                         "nnb"
                                                                                                                                                                                         "AP"))
                                                                                                                                                                                       (("1"
                                                                                                                                                                                         (rewrite
                                                                                                                                                                                          "sq_0")
                                                                                                                                                                                         (("1"
                                                                                                                                                                                           (assert)
                                                                                                                                                                                           (("1"
                                                                                                                                                                                             (case
                                                                                                                                                                                              "1-sq(AP) > 0")
                                                                                                                                                                                             (("1"
                                                                                                                                                                                               (lemma
                                                                                                                                                                                                "sqrt_lt"
                                                                                                                                                                                                ("nny"
                                                                                                                                                                                                 "0"
                                                                                                                                                                                                 "nnz"
                                                                                                                                                                                                 "1-sq(AP)"))
                                                                                                                                                                                               (("1"
                                                                                                                                                                                                 (rewrite
                                                                                                                                                                                                  "sqrt_0")
                                                                                                                                                                                                 (("1"
                                                                                                                                                                                                   (flatten
                                                                                                                                                                                                    -1)
                                                                                                                                                                                                   (("1"
                                                                                                                                                                                                     (expand
                                                                                                                                                                                                      ">"
                                                                                                                                                                                                      -3)
                                                                                                                                                                                                     (("1"
                                                                                                                                                                                                       (replace
                                                                                                                                                                                                        -3
                                                                                                                                                                                                        -2)
                                                                                                                                                                                                       (("1"
                                                                                                                                                                                                         (hide
                                                                                                                                                                                                          -1)
                                                                                                                                                                                                         (("1"
                                                                                                                                                                                                           (lemma
                                                                                                                                                                                                            "posreal_times_posreal_is_posreal"
                                                                                                                                                                                                            ("px"
                                                                                                                                                                                                             "(sq(y!1)/2-1)/sqrt(1 - sq(AP))+1"
                                                                                                                                                                                                             "py"
                                                                                                                                                                                                             "y!1"))
                                                                                                                                                                                                           (("1"
                                                                                                                                                                                                             (assert)
                                                                                                                                                                                                             nil)
                                                                                                                                                                                                            ("2"
                                                                                                                                                                                                             (hide
                                                                                                                                                                                                              2)
                                                                                                                                                                                                             (("2"
                                                                                                                                                                                                               (case
                                                                                                                                                                                                                "1-sq(y!1)/2 > 0")
                                                                                                                                                                                                               (("1"
                                                                                                                                                                                                                 (lemma
                                                                                                                                                                                                                  "div_mult_pos_lt1"
                                                                                                                                                                                                                  ("x"
                                                                                                                                                                                                                   "1"
                                                                                                                                                                                                                   "z"
                                                                                                                                                                                                                   "1 - sq(y!1) / 2"
                                                                                                                                                                                                                   "py"
                                                                                                                                                                                                                   "sqrt(1 - sq(AP))"))
                                                                                                                                                                                                                 (("1"
                                                                                                                                                                                                                   (lemma
                                                                                                                                                                                                                    "sq_lt"
                                                                                                                                                                                                                    ("nna"
                                                                                                                                                                                                                     "1 - sq(y!1) / 2"
                                                                                                                                                                                                                     "nnb"
                                                                                                                                                                                                                     "sqrt(1 - sq(AP))"))
                                                                                                                                                                                                                   (("1"
                                                                                                                                                                                                                     (rewrite
                                                                                                                                                                                                                      "sq_sqrt"
                                                                                                                                                                                                                      -1)
                                                                                                                                                                                                                     (("1"
                                                                                                                                                                                                                       (case
                                                                                                                                                                                                                        "sq(1 - sq(y!1) / 2) < 1 - sq(AP)")
                                                                                                                                                                                                                       (("1"
                                                                                                                                                                                                                         (assert)
                                                                                                                                                                                                                         nil)
                                                                                                                                                                                                                        ("2"
                                                                                                                                                                                                                         (hide
                                                                                                                                                                                                                          2
                                                                                                                                                                                                                          -1
                                                                                                                                                                                                                          -2)
                                                                                                                                                                                                                         (("2"
                                                                                                                                                                                                                           (expand
                                                                                                                                                                                                                            "AP"
                                                                                                                                                                                                                            1)
                                                                                                                                                                                                                           (("2"
                                                                                                                                                                                                                             (expand
                                                                                                                                                                                                                              "sq"
                                                                                                                                                                                                                              1
                                                                                                                                                                                                                              1)
                                                                                                                                                                                                                             (("2"
                                                                                                                                                                                                                               (simplify
                                                                                                                                                                                                                                1)
                                                                                                                                                                                                                               (("2"
                                                                                                                                                                                                                                 (expand
                                                                                                                                                                                                                                  "sq"
                                                                                                                                                                                                                                  1)
                                                                                                                                                                                                                                 (("2"
                                                                                                                                                                                                                                   (lemma
                                                                                                                                                                                                                                    "div_cancel1"
                                                                                                                                                                                                                                    ("x"
                                                                                                                                                                                                                                     "y!1*y!1"
                                                                                                                                                                                                                                     "n0z"
                                                                                                                                                                                                                                     "2"))
                                                                                                                                                                                                                                   (("2"
                                                                                                                                                                                                                                     (replace
                                                                                                                                                                                                                                      -1
                                                                                                                                                                                                                                      1)
                                                                                                                                                                                                                                     (("2"
                                                                                                                                                                                                                                       (lemma
                                                                                                                                                                                                                                        "both_sides_minus_lt1"
                                                                                                                                                                                                                                        ("x"
                                                                                                                                                                                                                                         "1 + y!1 * y!1 / 2 * (y!1 * y!1 / 2) - y!1 * y!1"
                                                                                                                                                                                                                                         "y"
                                                                                                                                                                                                                                         "1 - (1 / 6) * (1 / 6) * y!1 * y!1 * y!1 * y!1 * y!1 * y!1 -
                                                                                                                                                                                       y!1 * y!1
                                                                                                                                                                                       + (1 / 3) * y!1 * y!1 * y!1 * y!1"
                                                                                                                                                                                                                                         "z"
                                                                                                                                                                                                                                         "1-y!1*y!1"))
                                                                                                                                                                                                                                       (("2"
                                                                                                                                                                                                                                         (replace
                                                                                                                                                                                                                                          -1
                                                                                                                                                                                                                                          1
                                                                                                                                                                                                                                          rl)
                                                                                                                                                                                                                                         (("2"
                                                                                                                                                                                                                                           (simplify
                                                                                                                                                                                                                                            1)
                                                                                                                                                                                                                                           (("2"
                                                                                                                                                                                                                                             (hide
                                                                                                                                                                                                                                              -1)
                                                                                                                                                                                                                                             (("2"
                                                                                                                                                                                                                                               (lemma
                                                                                                                                                                                                                                                "both_sides_times_pos_lt1"
                                                                                                                                                                                                                                                ("x"
                                                                                                                                                                                                                                                 "1/4"
                                                                                                                                                                                                                                                 "y"
                                                                                                                                                                                                                                                 "1/3-y!1*y!1/36"
                                                                                                                                                                                                                                                 "pz"
                                                                                                                                                                                                                                                 "y!1 * y!1 * y!1 * y!1"))
                                                                                                                                                                                                                                               (("1"
                                                                                                                                                                                                                                                 (replace
                                                                                                                                                                                                                                                  -1
                                                                                                                                                                                                                                                  1)
                                                                                                                                                                                                                                                 (("1"
                                                                                                                                                                                                                                                   (hide
                                                                                                                                                                                                                                                    -1
                                                                                                                                                                                                                                                    -2)
                                                                                                                                                                                                                                                   (("1"
                                                                                                                                                                                                                                                     (case
                                                                                                                                                                                                                                                      "y!1 * y!1 / 36 < 1/12")
                                                                                                                                                                                                                                                     (("1"
                                                                                                                                                                                                                                                       (assert)
                                                                                                                                                                                                                                                       nil)
                                                                                                                                                                                                                                                      ("2"
                                                                                                                                                                                                                                                       (hide
                                                                                                                                                                                                                                                        2)
                                                                                                                                                                                                                                                       (("2"
                                                                                                                                                                                                                                                         (expand
                                                                                                                                                                                                                                                          "sq"
                                                                                                                                                                                                                                                          -7)
                                                                                                                                                                                                                                                         (("2"
                                                                                                                                                                                                                                                           (assert)
                                                                                                                                                                                                                                                           nil)))))))))))
                                                                                                                                                                                                                                                ("2"
                                                                                                                                                                                                                                                 (hide
                                                                                                                                                                                                                                                  2)
                                                                                                                                                                                                                                                 (("2"
                                                                                                                                                                                                                                                   (lemma
                                                                                                                                                                                                                                                    "sq_lt"
                                                                                                                                                                                                                                                    ("nna"
                                                                                                                                                                                                                                                     "0"
                                                                                                                                                                                                                                                     "nnb"
                                                                                                                                                                                                                                                     "sq(y!1)"))
                                                                                                                                                                                                                                                   (("2"
                                                                                                                                                                                                                                                     (rewrite
                                                                                                                                                                                                                                                      "sq_0")
                                                                                                                                                                                                                                                     (("2"
                                                                                                                                                                                                                                                       (assert)
                                                                                                                                                                                                                                                       (("2"
                                                                                                                                                                                                                                                         (expand
                                                                                                                                                                                                                                                          "sq"
                                                                                                                                                                                                                                                          -1)
                                                                                                                                                                                                                                                         (("2"
                                                                                                                                                                                                                                                           (assert)
                                                                                                                                                                                                                                                           nil)))))))))))))))))))))))))))))))))))))))))))
                                                                                                                                                                                                                ("2"
                                                                                                                                                                                                                 (hide
                                                                                                                                                                                                                  2)
                                                                                                                                                                                                                 (("2"
                                                                                                                                                                                                                   (assert)
                                                                                                                                                                                                                   nil)))))))))))))))))))))
                                                                                                                                                                                              ("2"
                                                                                                                                                                                               (assert)
                                                                                                                                                                                               nil)))))))))))))))
                                                                                                                                                                                ("2"
                                                                                                                                                                                 (assert)
                                                                                                                                                                                 nil)))))
                                                                                                                                                                            ("2"
                                                                                                                                                                             (assert)
                                                                                                                                                                             nil)
                                                                                                                                                                            ("3"
                                                                                                                                                                             (hide
                                                                                                                                                                              2)
                                                                                                                                                                             (("3"
                                                                                                                                                                               (assert)
                                                                                                                                                                               (("3"
                                                                                                                                                                                 (lemma
                                                                                                                                                                                  "sq_lt"
                                                                                                                                                                                  ("nna"
                                                                                                                                                                                   "0"
                                                                                                                                                                                   "nnb"
                                                                                                                                                                                   "y!1"))
                                                                                                                                                                                 (("3"
                                                                                                                                                                                   (rewrite
                                                                                                                                                                                    "sq_0")
                                                                                                                                                                                   (("3"
                                                                                                                                                                                     (assert)
                                                                                                                                                                                     nil)))))))))))
                                                                                                                                                                          ("2"
                                                                                                                                                                           (lemma
                                                                                                                                                                            "sq_lt"
                                                                                                                                                                            ("nna"
                                                                                                                                                                             "0"
                                                                                                                                                                             "nnb"
                                                                                                                                                                             "y!1"))
                                                                                                                                                                           (("2"
                                                                                                                                                                             (rewrite
                                                                                                                                                                              "sq_0")
                                                                                                                                                                             (("2"
                                                                                                                                                                               (assert)
                                                                                                                                                                               nil)))))))))))))))))))))
                                                                                                                                                          ("2"
                                                                                                                                                           (replace
                                                                                                                                                            -1)
                                                                                                                                                           (("2"
                                                                                                                                                             (replace
                                                                                                                                                              -4
                                                                                                                                                              1
                                                                                                                                                              rl)
                                                                                                                                                             (("2"
                                                                                                                                                               (simplify
                                                                                                                                                                1)
                                                                                                                                                               (("2"
                                                                                                                                                                 (hide-all-but
                                                                                                                                                                  1)
                                                                                                                                                                 (("2"
                                                                                                                                                                   (expand
                                                                                                                                                                    "sq")
                                                                                                                                                                   (("2"
                                                                                                                                                                     (assert)
                                                                                                                                                                     (("2"
                                                                                                                                                                       (name-replace
                                                                                                                                                                        "K1"
                                                                                                                                                                        "2 * (1 / 6) - (1 / 6) * (1 / 6)")
                                                                                                                                                                       (("2"
                                                                                                                                                                         (lemma
                                                                                                                                                                          "div_mult_pos_gt1"
                                                                                                                                                                          ("x"
                                                                                                                                                                           "1"
                                                                                                                                                                           "z"
                                                                                                                                                                           "1/2"
                                                                                                                                                                           "py"
                                                                                                                                                                           "sqrt(K1)"))
                                                                                                                                                                         (("1"
                                                                                                                                                                           (rewrite
                                                                                                                                                                            "div_div2"
                                                                                                                                                                            -1)
                                                                                                                                                                           (("1"
                                                                                                                                                                             (assert)
                                                                                                                                                                             (("1"
                                                                                                                                                                               (lemma
                                                                                                                                                                                "sq_gt"
                                                                                                                                                                                ("nna"
                                                                                                                                                                                 "sqrt(K1)"
                                                                                                                                                                                 "nnb"
                                                                                                                                                                                 "1/2"))
                                                                                                                                                                               (("1"
                                                                                                                                                                                 (rewrite
                                                                                                                                                                                  "sq_sqrt"
                                                                                                                                                                                  -1)
                                                                                                                                                                                 (("1"
                                                                                                                                                                                   (expand
                                                                                                                                                                                    "sq"
                                                                                                                                                                                    -1)
                                                                                                                                                                                   (("1"
                                                                                                                                                                                     (expand
                                                                                                                                                                                      "K1")
                                                                                                                                                                                     (("1"
                                                                                                                                                                                       (assert)
                                                                                                                                                                                       nil)))))))))))))
                                                                                                                                                                          ("2"
                                                                                                                                                                           (lemma
                                                                                                                                                                            "sqrt_lt"
                                                                                                                                                                            ("nny"
                                                                                                                                                                             "0"
                                                                                                                                                                             "nnz"
                                                                                                                                                                             "2 * (1 / 6) - (1 / 6) * (1 / 6)"))
                                                                                                                                                                           (("2"
                                                                                                                                                                             (rewrite
                                                                                                                                                                              "sqrt_0")
                                                                                                                                                                             (("2"
                                                                                                                                                                               (expand
                                                                                                                                                                                "K1")
                                                                                                                                                                               (("2"
                                                                                                                                                                                 (hide
                                                                                                                                                                                  2)
                                                                                                                                                                                 (("2"
                                                                                                                                                                                   (assert)
                                                                                                                                                                                   nil)))))))))
                                                                                                                                                                          ("3"
                                                                                                                                                                           (hide
                                                                                                                                                                            2)
                                                                                                                                                                           (("3"
                                                                                                                                                                             (expand
                                                                                                                                                                              "K1")
                                                                                                                                                                             (("3"
                                                                                                                                                                               (assert)
                                                                                                                                                                               nil)))))))))))))))))))))))))
                                                                                                                                                      ("2"
                                                                                                                                                       (hide
                                                                                                                                                        2)
                                                                                                                                                       (("2"
                                                                                                                                                         (lemma
                                                                                                                                                          "posreal_times_posreal_is_posreal"
                                                                                                                                                          ("px"
                                                                                                                                                           "y!1"
                                                                                                                                                           "py"
                                                                                                                                                           "y!1"))
                                                                                                                                                         (("1"
                                                                                                                                                           (assert)
                                                                                                                                                           nil)
                                                                                                                                                          ("2"
                                                                                                                                                           (assert)
                                                                                                                                                           nil)))))
                                                                                                                                                      ("3"
                                                                                                                                                       (assert)
                                                                                                                                                       nil)))))))))))))
                                                                                                                                          ("2"
                                                                                                                                           (assert)
                                                                                                                                           nil)))))))))))))))))))))))))))))))
                                                                                                            ("2"
                                                                                                             (hide-all-but
                                                                                                              1)
                                                                                                             (("2"
                                                                                                               (skosimp*)
                                                                                                               (("2"
                                                                                                                 (typepred
                                                                                                                  "x!1")
                                                                                                                 (("2"
                                                                                                                   (expand
                                                                                                                    ">=")
                                                                                                                   (("2"
                                                                                                                     (expand
                                                                                                                      "<="
                                                                                                                      -1)
                                                                                                                     (("2"
                                                                                                                       (split
                                                                                                                        -1)
                                                                                                                       (("1"
                                                                                                                         (lemma
                                                                                                                          "posreal_times_posreal_is_posreal"
                                                                                                                          ("px"
                                                                                                                           "x!1"
                                                                                                                           "py"
                                                                                                                           "x!1"))
                                                                                                                         (("1"
                                                                                                                           (lemma
                                                                                                                            "posreal_times_posreal_is_posreal"
                                                                                                                            ("px"
                                                                                                                             "x!1"
                                                                                                                             "py"
                                                                                                                             "x!1*x!1"))
                                                                                                                           (("1"
                                                                                                                             (lemma
                                                                                                                              "posreal_div_posreal_is_posreal"
                                                                                                                              ("px"
                                                                                                                               "x!1*x!1*x!1"
                                                                                                                               "py"
                                                                                                                               "6"))
                                                                                                                             (("1"
                                                                                                                               (lemma
                                                                                                                                "lt_minus_lt1"
                                                                                                                                ("x"
                                                                                                                                 "x!1"
                                                                                                                                 "y"
                                                                                                                                 "1"
                                                                                                                                 "w"
                                                                                                                                 "0"
                                                                                                                                 "z"
                                                                                                                                 "x!1 * x!1 * x!1 / 6"))
                                                                                                                               (("1"
                                                                                                                                 (split
                                                                                                                                  -1)
                                                                                                                                 (("1"
                                                                                                                                   (lemma
                                                                                                                                    "sq_le"
                                                                                                                                    ("nna"
                                                                                                                                     "x!1"
                                                                                                                                     "nnb"
                                                                                                                                     "1"))
                                                                                                                                   (("1"
                                                                                                                                     (expand
                                                                                                                                      "sq")
                                                                                                                                     (("1"
                                                                                                                                       (lemma
                                                                                                                                        "posreal_times_posreal_is_posreal"
                                                                                                                                        ("px"
                                                                                                                                         "1-x!1*x!1/6"
                                                                                                                                         "py"
                                                                                                                                         "x!1"))
                                                                                                                                       (("1"
                                                                                                                                         (assert)
                                                                                                                                         nil)
                                                                                                                                        ("2"
                                                                                                                                         (hide
                                                                                                                                          2)
                                                                                                                                         (("2"
                                                                                                                                           (assert)
                                                                                                                                           nil)))))))))
                                                                                                                                  ("2"
                                                                                                                                   (propax)
                                                                                                                                   nil)
                                                                                                                                  ("3"
                                                                                                                                   (assert)
                                                                                                                                   nil)))))
                                                                                                                              ("2"
                                                                                                                               (assert)
                                                                                                                               nil)))
                                                                                                                            ("2"
                                                                                                                             (propax)
                                                                                                                             nil)))
                                                                                                                          ("2"
                                                                                                                           (assert)
                                                                                                                           nil)))
                                                                                                                        ("2"
                                                                                                                         (replace
                                                                                                                          -1
                                                                                                                          *
                                                                                                                          rl)
                                                                                                                         (("2"
                                                                                                                           (hide-all-but
                                                                                                                            1)
                                                                                                                           (("2"
                                                                                                                             (typepred
                                                                                                                              "x!1")
                                                                                                                             (("2"
                                                                                                                               (expand
                                                                                                                                ">=")
                                                                                                                               (("2"
                                                                                                                                 (expand
                                                                                                                                  "<="
                                                                                                                                  -1)
                                                                                                                                 (("2"
                                                                                                                                   (split
                                                                                                                                    -1)
                                                                                                                                   (("1"
                                                                                                                                     (lemma
                                                                                                                                      "posreal_times_posreal_is_posreal"
                                                                                                                                      ("px"
                                                                                                                                       "1-x!1*x!1/6"
                                                                                                                                       "py"
                                                                                                                                       "x!1"))
                                                                                                                                     (("1"
                                                                                                                                       (assert)
                                                                                                                                       nil)
                                                                                                                                      ("2"
                                                                                                                                       (assert)
                                                                                                                                       nil)
                                                                                                                                      ("3"
                                                                                                                                       (hide
                                                                                                                                        2)
                                                                                                                                       (("3"
                                                                                                                                         (lemma
                                                                                                                                          "sq_le"
                                                                                                                                          ("nna"
                                                                                                                                           "x!1"
                                                                                                                                           "nnb"
                                                                                                                                           "1"))
                                                                                                                                         (("3"
                                                                                                                                           (expand
                                                                                                                                            "sq")
                                                                                                                                           (("3"
                                                                                                                                             (assert)
                                                                                                                                             nil)))))))))
                                                                                                                                    ("2"
                                                                                                                                     (replace
                                                                                                                                      -1
                                                                                                                                      *
                                                                                                                                      rl)
                                                                                                                                     (("2"
                                                                                                                                       (assert)
                                                                                                                                       nil)))))))))))))))))))))))))))))))))))))))))))
                                                                                            ("2"
                                                                                             (skosimp*)
                                                                                             (("2"
                                                                                               (hide-all-but
                                                                                                1)
                                                                                               (("2"
                                                                                                 (typepred
                                                                                                  "x!1")
                                                                                                 (("2"
                                                                                                   (expand
                                                                                                    ">=")
                                                                                                   (("2"
                                                                                                     (lemma
                                                                                                      "posreal_times_posreal_is_posreal"
                                                                                                      ("px"
                                                                                                       "1-x!1*x!1/6"
                                                                                                       "py"
                                                                                                       "x!1"))
                                                                                                     (("1"
                                                                                                       (assert)
                                                                                                       nil)
                                                                                                      ("2"
                                                                                                       (assert)
                                                                                                       nil)
                                                                                                      ("3"
                                                                                                       (hide
                                                                                                        2)
                                                                                                       (("3"
                                                                                                         (lemma
                                                                                                          "sq_le"
                                                                                                          ("nna"
                                                                                                           "x!1"
                                                                                                           "nnb"
                                                                                                           "1"))
                                                                                                         (("3"
                                                                                                           (expand
                                                                                                            "sq")
                                                                                                           (("3"
                                                                                                             (assert)
                                                                                                             nil)))))))))))))))))
                                                                                            ("3"
                                                                                             (skosimp*)
                                                                                             (("3"
                                                                                               (assert)
                                                                                               (("3"
                                                                                                 (inst-cp
                                                                                                  +
                                                                                                  "1/2")
                                                                                                 (("3"
                                                                                                   (inst-cp
                                                                                                    +
                                                                                                    "1/4")
                                                                                                   (("3"
                                                                                                     (assert)
                                                                                                     nil)))))))))
                                                                                            ("4"
                                                                                             (skosimp*)
                                                                                             (("4"
                                                                                               (assert)
                                                                                               nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                    ("2" (skosimp*)
                     (("2" (assert)
                       (("2" (inst-cp + "1/4")
                         (("2" (inst-cp + "1/8") (("2" (assert) nil)))))))))
                    ("3" (skosimp*) (("3" (assert) nil)))))))
                ("2" (hide 2)
                 (("2" (lemma "sq_le" ("nnb" "px!1" "nna" "sqrt(6)"))
                   (("2" (flatten)
                     (("2" (rewrite "sq_sqrt")
                       (("2" (assert)
                         (("2" (hide -1)
                           (("2" (typepred "px!1")
                             (("2" (assert)
                               (("2" (lemma "sq_le" ("nna" "px!1" "nnb" "1"))
                                 (("2" (rewrite "sq_1")
                                   (("2" (assert)
                                     nil))))))))))))))))))))))))))))
         ";;; developed with shostak decision procedures")
        nil nil)
       (asin_pos_bnds-1 nil 3352192940
        ("" (skosimp*)
         (("" (split)
           (("1" (lemma "asin_derivable2")
             (("1" (lemma "deriv_asin_fun")
               (("1" (lemma "identity_derivable_fun[real_abs_lt1]")
                 (("1" (lemma "deriv_id_fun[real_abs_lt1]")
                   (("1" (expand "I")
                     (("1" (expand "const_fun")
                       (("1"
                         (lemma "diff_derivable_fun[real_abs_lt1]"
                          ("f1" "LAMBDA (x: real_abs_lt1): asin(x)" "f2"
                           "LAMBDA (x: real_abs_lt1): x"))
                         (("1" (assert)
                           (("1" (expand "-")
                             (("1"
                               (lemma "deriv_diff_fun[real_abs_lt1]"
                                ("ff1" "LAMBDA (x: real_abs_lt1): asin(x)"
                                 "ff2" "LAMBDA (x: real_abs_lt1): x"))
                               (("1" (replace -5 -1)
                                 (("1" (replace -3 -1)
                                   (("1" (expand "-")
                                     (("1"
                                       (typepred "px!1")
                                       (("1"
                                         (hide -1)
                                         (("1"
                                           (expand "<=" -1)
                                           (("1"
                                             (split -1)
                                             (("1"
                                               (lemma
                                                "minimum_derivative[{x:nnreal| x < 1}]"
                                                ("g"
                                                 "LAMBDA (x_1:{x:nnreal| x < 1} ): asin(x_1) - x_1"
                                                 "x"
                                                 "0"
                                                 "y1"
                                                 "px!1"))
                                               (("1"
                                                 (split -1)
                                                 (("1"
                                                   (simplify -1)
                                                   (("1"
                                                     (rewrite "asin_0")
                                                     (("1" (assert) nil nil))
                                                     nil))
                                                   nil)
                                                  ("2"
                                                   (lemma
                                                    "restrict2_deriv[{x: nnreal | x < 1},real_abs_lt1]"
                                                    ("f"
                                                     "LAMBDA (x_1: real_abs_lt1): asin(x_1) - x_1"
                                                     "a"
                                                     "0"))
                                                   (("1"
                                                     (replace -4 -1)
                                                     (("1"
                                                       (simplify -1)
                                                       (("1"
                                                         (expand
                                                          "restrict2"
                                                          -1)
                                                         (("1"
                                                           (replace -1 1 rl)
                                                           (("1"
                                                             (expand "sq" 1)
                                                             (("1"
                                                               (rewrite
                                                                "sqrt_1")
                                                               (("1"
                                                                 (assert)
                                                                 nil
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil)
                                                    ("2" (propax) nil nil)
                                                    ("3"
                                                     (skosimp*)
                                                     (("3"
                                                       (inst + "x!1")
                                                       nil
                                                       nil))
                                                     nil)
                                                    ("4"
                                                     (assert)
                                                     (("4"
                                                       (skosimp*)
                                                       (("4"
                                                         (case "x!1=0")
                                                         (("1"
                                                           (inst + "px!1")
                                                           (("1"
                                                             (assert)
                                                             nil
                                                             nil))
                                                           nil)
                                                          ("2"
                                                           (inst + "0")
                                                           (("2"
                                                             (assert)
                                                             nil
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil)
                                                    ("5"
                                                     (assert)
                                                     (("5"
                                                       (hide-all-but 1)
                                                       (("5" (grind) nil nil))
                                                       nil))
                                                     nil))
                                                   nil)
                                                  ("3" (assert) nil nil)
                                                  ("4"
                                                   (skosimp*)
                                                   (("4"
                                                     (typepred "y!1")
                                                     (("4"
                                                       (expand ">=" -1)
                                                       (("4"
                                                         (expand "<=" -1)
                                                         (("4"
                                                           (split -1)
                                                           (("1"
                                                             (lemma
                                                              "restrict2_deriv[{x: nnreal | x < 1},real_abs_lt1]"
                                                              ("f"
                                                               "LAMBDA (x_1: real_abs_lt1): asin(x_1) - x_1"
                                                               "a"
                                                               "y!1"))
                                                             (("1"
                                                               (replace -6 -1)
                                                               (("1"
                                                                 (simplify -1)
                                                                 (("1"
                                                                   (expand
                                                                    "restrict2"
                                                                    -1)
                                                                   (("1"
                                                                     (replace
                                                                      -1
                                                                      2
                                                                      rl)
                                                                     (("1"
                                                                       (hide
                                                                        -1
                                                                        -6
                                                                        3
                                                                        1
                                                                        -7
                                                                        -8
                                                                        -9
                                                                        -10
                                                                        -11)
                                                                       (("1"
                                                                         (lemma
                                                                          "sq_lt"
                                                                          ("nna"
                                                                           "0"
                                                                           "nnb"
                                                                           "y!1"))
                                                                         (("1"
                                                                           (lemma
                                                                            "sq_lt"
                                                                            ("nna"
                                                                             "y!1"
                                                                             "nnb"
                                                                             "1"))
                                                                           (("1"
                                                                             (expand
                                                                              "sq"
                                                                              -1
                                                                              2)
                                                                             (("1"
                                                                               (expand
                                                                                "sq"
                                                                                -2
                                                                                1)
                                                                               (("1"
                                                                                 (assert)
                                                                                 (("1"
                                                                                   (lemma
                                                                                    "sqrt_pos"
                                                                                    ("px"
                                                                                     "1-sq(y!1)"))
                                                                                   (("1"
                                                                                     (lemma
                                                                                      "div_mult_pos_gt2"
                                                                                      ("z"
                                                                                       "1"
                                                                                       "py"
                                                                                       "sqrt(1-sq(y!1))"
                                                                                       "x"
                                                                                       "1"))
                                                                                     (("1"
                                                                                       (lemma
                                                                                        "sqrt_lt"
                                                                                        ("nny"
                                                                                         "1-sq(y!1)"
                                                                                         "nnz"
                                                                                         "1"))
                                                                                       (("1"
                                                                                         (rewrite
                                                                                          "sqrt_1")
                                                                                         (("1"
                                                                                           (assert)
                                                                                           (("1"
                                                                                             (lemma
                                                                                              "posreal_times_posreal_is_posreal"
                                                                                              ("px"
                                                                                               "1 / sqrt(1 - sq(y!1))-1"
                                                                                               "py"
                                                                                               "y!1"))
                                                                                             (("1"
                                                                                               (assert)
                                                                                               nil
                                                                                               nil))
                                                                                             nil))
                                                                                           nil))
                                                                                         nil))
                                                                                       nil))
                                                                                     nil))
                                                                                   nil))
                                                                                 nil))
                                                                               nil))
                                                                             nil))
                                                                           nil))
                                                                         nil))
                                                                       nil))
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil)
                                                              ("2"
                                                               (propax)
                                                               nil
                                                               nil)
                                                              ("3"
                                                               (skosimp*)
                                                               (("3"
                                                                 (inst
                                                                  +
                                                                  "x!1")
                                                                 nil
                                                                 nil))
                                                               nil)
                                                              ("4"
                                                               (assert)
                                                               (("4"
                                                                 (skosimp*)
                                                                 (("4"
                                                                   (case
                                                                    "x!1 = 0")
                                                                   (("1"
                                                                     (inst
                                                                      +
                                                                      "1/2")
                                                                     (("1"
                                                                       (assert)
                                                                       nil
                                                                       nil))
                                                                     nil)
                                                                    ("2"
                                                                     (assert)
                                                                     (("2"
                                                                       (inst
                                                                        +
                                                                        "0")
                                                                       (("2"
                                                                         (assert)
                                                                         nil
                                                                         nil))
                                                                       nil))
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil)
                                                              ("5"
                                                               (assert)
                                                               (("5"
                                                                 (hide-all-but
                                                                  1)
                                                                 (("5"
                                                                   (grind)
                                                                   nil
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil)
                                                            ("2"
                                                             (assert)
                                                             nil
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil))
                                                 nil)
                                                ("2" (propax) nil nil)
                                                ("3"
                                                 (lemma
                                                  "restrict2_derivable[{x: nnreal | x < 1},real_abs_lt1]"
                                                  ("f"
                                                   "LAMBDA (x_1: real_abs_lt1): asin(x_1) - x_1"))
                                                 (("1"
                                                   (expand "restrict2" -1)
                                                   (("1" (propax) nil nil))
                                                   nil)
                                                  ("2" (propax) nil nil)
                                                  ("3"
                                                   (skosimp*)
                                                   (("3"
                                                     (typepred "x!1")
                                                     (("3"
                                                       (inst + "x!1")
                                                       nil
                                                       nil))
                                                     nil))
                                                   nil)
                                                  ("4"
                                                   (skosimp*)
                                                   (("4"
                                                     (case "x!1=0")
                                                     (("1"
                                                       (inst + "1/2")
                                                       (("1"
                                                         (assert)
                                                         nil
                                                         nil))
                                                       nil)
                                                      ("2"
                                                       (assert)
                                                       (("2"
                                                         (inst + "0")
                                                         (("2"
                                                           (assert)
                                                           nil
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil)
                                                  ("5"
                                                   (assert)
                                                   (("5"
                                                     (skosimp*)
                                                     (("5"
                                                       (case "x!1=0")
                                                       (("1"
                                                         (inst + "1/2")
                                                         (("1"
                                                           (assert)
                                                           nil
                                                           nil))
                                                         nil)
                                                        ("2"
                                                         (inst + "0")
                                                         (("2"
                                                           (assert)
                                                           nil
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil)
                                                  ("6"
                                                   (hide-all-but 1)
                                                   (("6" (grind) nil nil))
                                                   nil)
                                                  ("7"
                                                   (hide-all-but 1)
                                                   (("7" (grind) nil nil))
                                                   nil))
                                                 nil)
                                                ("4"
                                                 (hide-all-but 1)
                                                 (("4"
                                                   (skosimp*)
                                                   (("4"
                                                     (case "x!1=0")
                                                     (("1"
                                                       (inst + "1/2")
                                                       (("1"
                                                         (assert)
                                                         nil
                                                         nil))
                                                       nil)
                                                      ("2"
                                                       (inst + "0")
                                                       (("2"
                                                         (assert)
                                                         nil
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil))
                                                 nil)
                                                ("5"
                                                 (hide-all-but 1)
                                                 (("5" (grind) nil nil))
                                                 nil))
                                               nil)
                                              ("2"
                                               (replace -1)
                                               (("2"
                                                 (rewrite "asin_1")
                                                 (("2"
                                                   (lemma "pi_bnds")
                                                   (("2"
                                                     (flatten)
                                                     (("2" (assert) nil nil))
                                                     nil))
                                                   nil))
                                                 nil))
                                               nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil)
            ("2" (flatten)
             (("2" (case "px!1 < sqrt(6)")
               (("1" (typepred "px!1")
                 (("1" (lemma "identity_derivable_fun[{x:nnreal| x <= 1}]")
                   (("1" (lemma "deriv_id_fun[{x:nnreal| x <= 1}]")
                     (("1" (expand "I")
                       (("1"
                         (lemma "const_derivable_fun[{x:nnreal| x <= 1}]"
                          ("b" "1"))
                         (("1"
                           (lemma "deriv_const_fun[{x:nnreal| x <= 1}]"
                            ("b" "1"))
                           (("1" (expand "const_fun")
                             (("1"
                               (lemma "prod_derivable_fun[{x:nnreal| x <= 1}]"
                                ("f1" "LAMBDA (x: {x: nnreal | x <= 1}): x"
                                 "f2" "LAMBDA (x: {x: nnreal | x <= 1}): x"))
                               (("1" (assert)
                                 (("1" (expand "*" -1)
                                   (("1"
                                     (lemma
                                      "deriv_prod_fun[{x:nnreal| x <= 1}]"
                                      ("ff1"
                                       "LAMBDA (x: {x: nnreal | x <= 1}): x"
                                       "ff2"
                                       "LAMBDA (x: {x: nnreal | x <= 1}): x"))
                                     (("1"
                                       (replace -5 -1)
                                       (("1"
                                         (expand "*")
                                         (("1"
                                           (expand "+")
                                           (("1"
                                             (lemma
                                              "scal_derivable_fun[{x:nnreal| x <= 1}]"
                                              ("f"
                                               "LAMBDA (x_1: {x: nnreal | x <= 1}): x_1 * x_1"
                                               "b"
                                               "1/6"))
                                             (("1"
                                               (assert)
                                               (("1"
                                                 (expand "*")
                                                 (("1"
                                                   (lemma
                                                    "deriv_scal_fun[{x:nnreal| x <= 1}]"
                                                    ("ff"
                                                     "LAMBDA (x_1: {x: nnreal | x <= 1}): x_1 * x_1"
                                                     "b"
                                                     "1/6"))
                                                   (("1"
                                                     (replace -3 -1)
                                                     (("1"
                                                       (expand "*" -1)
                                                       (("1"
                                                         (lemma
                                                          "diff_derivable_fun[{x:nnreal| x <= 1}]"
                                                          ("f1"
                                                           "LAMBDA (x: {x: nnreal | x <= 1}): 1"
                                                           "f2"
                                                           "LAMBDA (x: {x: nnreal | x <= 1}): 1 / 6 * (x * x)"))
                                                         (("1"
                                                           (assert)
                                                           (("1"
                                                             (expand "-")
                                                             (("1"
                                                               (lemma
                                                                "deriv_diff_fun[{x:nnreal| x <= 1}]"
                                                                ("ff1"
                                                                 "LAMBDA (x: {x: nnreal | x <= 1}): 1"
                                                                 "ff2"
                                                                 "LAMBDA (x: {x: nnreal | x <= 1}): 1 / 6 * (x * x)"))
                                                               (("1"
                                                                 (replace
                                                                  -7
                                                                  -1)
                                                                 (("1"
                                                                   (replace
                                                                    -3
                                                                    -1)
                                                                   (("1"
                                                                     (expand
                                                                      "-")
                                                                     (("1"
                                                                       (lemma
                                                                        "prod_derivable_fun[{x:nnreal| x <= 1}]"
                                                                        ("f1"
                                                                         "LAMBDA (x: {x: nnreal | x <= 1}): x"
                                                                         "f2"
                                                                         "LAMBDA (x_1: {x: nnreal | x <= 1}): 1 - 1 / 6 * (x_1 * x_1)"))
                                                                       (("1"
                                                                         (assert)
                                                                         (("1"
                                                                           (expand
                                                                            "*")
                                                                           (("1"
                                                                             (lemma
                                                                              "deriv_prod_fun[{x:nnreal| x <= 1}]"
                                                                              ("ff1"
                                                                               "LAMBDA (x: {x: nnreal | x <= 1}): x"
                                                                               "ff2"
                                                                               "LAMBDA (x_1: {x: nnreal | x <= 1}): 1 - 1 / 6 * (x_1 * x_1)"))
                                                                             (("1"
                                                                               (replace
                                                                                -3
                                                                                -1)
                                                                               (("1"
                                                                                 (replace
                                                                                  -11
                                                                                  -1)
                                                                                 (("1"
                                                                                   (expand
                                                                                    "*")
                                                                                   (("1"
                                                                                     (expand
                                                                                      "+")
                                                                                     (("1"
                                                                                       (lemma
                                                                                        "asin_derivable2")
                                                                                       (("1"
                                                                                         (lemma
                                                                                          "deriv_asin_fun")
                                                                                         (("1"
                                                                                           (lemma
                                                                                            "composition_derivable_fun[{x: nnreal | x <= 1},real_abs_lt1]"
                                                                                            ("f"
                                                                                             "LAMBDA (x_1: {x: nnreal | x <= 1}): x_1 - x_1 * x_1 * x_1 * (1 / 6)"
                                                                                             "g"
                                                                                             "LAMBDA (x: real_abs_lt1): asin(x)"))
                                                                                           (("1"
                                                                                             (assert)
                                                                                             (("1"
                                                                                               (expand
                                                                                                "o")
                                                                                               (("1"
                                                                                                 (lemma
                                                                                                  "deriv_comp_fun[{x: nnreal | x <= 1},real_abs_lt1]"
                                                                                                  ("ff"
                                                                                                   "LAMBDA (x_1: {x: nnreal | x <= 1}): x_1 - x_1 * x_1 * x_1 * (1 / 6)"
                                                                                                   "gg"
                                                                                                   "LAMBDA (x: real_abs_lt1): asin(x)"))
                                                                                                 (("1"
                                                                                                   (replace
                                                                                                    -3
                                                                                                    -1)
                                                                                                   (("1"
                                                                                                     (replace
                                                                                                      -5
                                                                                                      -1)
                                                                                                     (("1"
                                                                                                       (expand
                                                                                                        "o")
                                                                                                       (("1"
                                                                                                         (expand
                                                                                                          "*")
                                                                                                         (("1"
                                                                                                           (lemma
                                                                                                            "diff_derivable_fun[{x:nnreal| x <= 1}]"
                                                                                                            ("f1"
                                                                                                             "LAMBDA (x: {x: nnreal | x <= 1}): x"
                                                                                                             "f2"
                                                                                                             "LAMBDA (x_1: {x: nnreal | x <= 1}): asin(x_1 - x_1 * x_1 * x_1 * (1 / 6))"))
                                                                                                           (("1"
                                                                                                             (expand
                                                                                                              "-")
                                                                                                             (("1"
                                                                                                               (assert)
                                                                                                               (("1"
                                                                                                                 (lemma
                                                                                                                  "deriv_diff_fun[{x:nnreal| x <= 1}]"
                                                                                                                  ("ff1"
                                                                                                                   "LAMBDA (x: {x: nnreal | x <= 1}): x"
                                                                                                                   "ff2"
                                                                                                                   "LAMBDA (x_1: {x: nnreal | x <= 1}): asin(x_1 - x_1 * x_1 * x_1 * (1 / 6))"))
                                                                                                                 (("1"
                                                                                                                   (replace
                                                                                                                    -3
                                                                                                                    -1)
                                                                                                                   (("1"
                                                                                                                     (replace
                                                                                                                      -17
                                                                                                                      -1)
                                                                                                                     (("1"
                                                                                                                       (expand
                                                                                                                        "-")
                                                                                                                       (("1"
                                                                                                                         (lemma
                                                                                                                          "minimum_derivative[{x: nnreal | x <= 1}]"
                                                                                                                          ("g"
                                                                                                                           "LAMBDA (x_1: {x: nnreal | x <= 1}): x_1 - asin(x_1 - x_1 * x_1 * x_1 * (1 / 6))"
                                                                                                                           "x"
                                                                                                                           "0"
                                                                                                                           "y1"
                                                                                                                           "px!1"))
                                                                                                                         (("1"
                                                                                                                           (split
                                                                                                                            -1)
                                                                                                                           (("1"
                                                                                                                             (simplify
                                                                                                                              -1)
                                                                                                                             (("1"
                                                                                                                               (assert)
                                                                                                                               (("1"
                                                                                                                                 (rewrite
                                                                                                                                  "asin_0")
                                                                                                                                 (("1"
                                                                                                                                   (assert)
                                                                                                                                   nil
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil)
                                                                                                                            ("2"
                                                                                                                             (hide
                                                                                                                              2)
                                                                                                                             (("2"
                                                                                                                               (replace
                                                                                                                                -1
                                                                                                                                1)
                                                                                                                               (("2"
                                                                                                                                 (simplify
                                                                                                                                  1)
                                                                                                                                 (("2"
                                                                                                                                   (rewrite
                                                                                                                                    "sq_0")
                                                                                                                                   (("2"
                                                                                                                                     (rewrite
                                                                                                                                      "sqrt_1")
                                                                                                                                     (("2"
                                                                                                                                       (assert)
                                                                                                                                       nil
                                                                                                                                       nil))
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil)
                                                                                                                            ("3"
                                                                                                                             (assert)
                                                                                                                             nil
                                                                                                                             nil)
                                                                                                                            ("4"
                                                                                                                             (replace
                                                                                                                              -1
                                                                                                                              1)
                                                                                                                             (("4"
                                                                                                                               (hide-all-but
                                                                                                                                1)
                                                                                                                               (("4"
                                                                                                                                 (skosimp*)
                                                                                                                                 (("4"
                                                                                                                                   (typepred
                                                                                                                                    "y!1")
                                                                                                                                   (("4"
                                                                                                                                     (expand
                                                                                                                                      ">="
                                                                                                                                      -1)
                                                                                                                                     (("4"
                                                                                                                                       (expand
                                                                                                                                        "<="
                                                                                                                                        -1)
                                                                                                                                       (("4"
                                                                                                                                         (split
                                                                                                                                          -1)
                                                                                                                                         (("1"
                                                                                                                                           (hide
                                                                                                                                            1)
                                                                                                                                           (("1"
                                                                                                                                             (name
                                                                                                                                              "AP"
                                                                                                                                              "y!1 - y!1 * y!1 * y!1 * (1 / 6)")
                                                                                                                                             (("1"
                                                                                                                                               (replace
                                                                                                                                                -1)
                                                                                                                                               (("1"
                                                                                                                                                 (lemma
                                                                                                                                                  "sq_le"
                                                                                                                                                  ("nna"
                                                                                                                                                   "y!1"
                                                                                                                                                   "nnb"
                                                                                                                                                   "1"))
                                                                                                                                                 (("1"
                                                                                                                                                   (expand
                                                                                                                                                    "sq"
                                                                                                                                                    -1)
                                                                                                                                                   (("1"
                                                                                                                                                     (lemma
                                                                                                                                                      "posreal_times_posreal_is_posreal"
                                                                                                                                                      ("px"
                                                                                                                                                       "y!1"
                                                                                                                                                       "py"
                                                                                                                                                       "1-y!1 * y!1 / 6"))
                                                                                                                                                     (("1"
                                                                                                                                                       (expand
                                                                                                                                                        "<="
                                                                                                                                                        -5)
                                                                                                                                                       (("1"
                                                                                                                                                         (split
                                                                                                                                                          -5)
                                                                                                                                                         (("1"
                                                                                                                                                           (lemma
                                                                                                                                                            "sq_lt"
                                                                                                                                                            ("nna"
                                                                                                                                                             "y!1"
                                                                                                                                                             "nnb"
                                                                                                                                                             "1"))
                                                                                                                                                           (("1"
                                                                                                                                                             (rewrite
                                                                                                                                                              "sq_rew")
                                                                                                                                                             (("1"
                                                                                                                                                               (rewrite
                                                                                                                                                                "sq_1")
                                                                                                                                                               (("1"
                                                                                                                                                                 (flatten
                                                                                                                                                                  -1)
                                                                                                                                                                 (("1"
                                                                                                                                                                   (replace
                                                                                                                                                                    -3
                                                                                                                                                                    -2)
                                                                                                                                                                   (("1"
                                                                                                                                                                     (hide
                                                                                                                                                                      -1)
                                                                                                                                                                     (("1"
                                                                                                                                                                       (hide
                                                                                                                                                                        -4)
                                                                                                                                                                       (("1"
                                                                                                                                                                         (lemma
                                                                                                                                                                          "lt_times_lt_pos1"
                                                                                                                                                                          ("px"
                                                                                                                                                                           "y!1"
                                                                                                                                                                           "y"
                                                                                                                                                                           "1"
                                                                                                                                                                           "nnz"
                                                                                                                                                                           "1 - sq(y!1) / 6"
                                                                                                                                                                           "w"
                                                                                                                                                                           "1"))
                                                                                                                                                                         (("1"
                                                                                                                                                                           (split
                                                                                                                                                                            -1)
                                                                                                                                                                           (("1"
                                                                                                                                                                             (replace
                                                                                                                                                                              -5)
                                                                                                                                                                             (("1"
                                                                                                                                                                               (lemma
                                                                                                                                                                                "sq_lt"
                                                                                                                                                                                ("nna"
                                                                                                                                                                                 "AP"
                                                                                                                                                                                 "nnb"
                                                                                                                                                                                 "1"))
                                                                                                                                                                               (("1"
                                                                                                                                                                                 (expand
                                                                                                                                                                                  "sq"
                                                                                                                                                                                  -1)
                                                                                                                                                                                 (("1"
                                                                                                                                                                                   (assert)
                                                                                                                                                                                   (("1"
                                                                                                                                                                                     (rewrite
                                                                                                                                                                                      "sq_rew"
                                                                                                                                                                                      -1)
                                                                                                                                                                                     (("1"
                                                                                                                                                                                       (lemma
                                                                                                                                                                                        "sq_lt"
                                                                                                                                                                                        ("nna"
                                                                                                                                                                                         "0"
                                                                                                                                                                                         "nnb"
                                                                                                                                                                                         "AP"))
                                                                                                                                                                                       (("1"
                                                                                                                                                                                         (rewrite
                                                                                                                                                                                          "sq_0")
                                                                                                                                                                                         (("1"
                                                                                                                                                                                           (assert)
                                                                                                                                                                                           (("1"
                                                                                                                                                                                             (case
                                                                                                                                                                                              "1-sq(AP) > 0")
                                                                                                                                                                                             (("1"
                                                                                                                                                                                               (lemma
                                                                                                                                                                                                "sqrt_lt"
                                                                                                                                                                                                ("nny"
                                                                                                                                                                                                 "0"
                                                                                                                                                                                                 "nnz"
                                                                                                                                                                                                 "1-sq(AP)"))
                                                                                                                                                                                               (("1"
                                                                                                                                                                                                 (rewrite
                                                                                                                                                                                                  "sqrt_0")
                                                                                                                                                                                                 (("1"
                                                                                                                                                                                                   (flatten
                                                                                                                                                                                                    -1)
                                                                                                                                                                                                   (("1"
                                                                                                                                                                                                     (expand
                                                                                                                                                                                                      ">"
                                                                                                                                                                                                      -3)
                                                                                                                                                                                                     (("1"
                                                                                                                                                                                                       (replace
                                                                                                                                                                                                        -3
                                                                                                                                                                                                        -2)
                                                                                                                                                                                                       (("1"
                                                                                                                                                                                                         (hide
                                                                                                                                                                                                          -1)
                                                                                                                                                                                                         (("1"
                                                                                                                                                                                                           (lemma
                                                                                                                                                                                                            "posreal_times_posreal_is_posreal"
                                                                                                                                                                                                            ("px"
                                                                                                                                                                                                             "(sq(y!1)/2-1)/sqrt(1 - sq(AP))+1"
                                                                                                                                                                                                             "py"
                                                                                                                                                                                                             "y!1"))
                                                                                                                                                                                                           (("1"
                                                                                                                                                                                                             (assert)
                                                                                                                                                                                                             nil
                                                                                                                                                                                                             nil)
                                                                                                                                                                                                            ("2"
                                                                                                                                                                                                             (hide
                                                                                                                                                                                                              2)
                                                                                                                                                                                                             (("2"
                                                                                                                                                                                                               (case
                                                                                                                                                                                                                "1-sq(y!1)/2 > 0")
                                                                                                                                                                                                               (("1"
                                                                                                                                                                                                                 (lemma
                                                                                                                                                                                                                  "div_mult_pos_lt1"
                                                                                                                                                                                                                  ("x"
                                                                                                                                                                                                                   "1"
                                                                                                                                                                                                                   "z"
                                                                                                                                                                                                                   "1 - sq(y!1) / 2"
                                                                                                                                                                                                                   "py"
                                                                                                                                                                                                                   "sqrt(1 - sq(AP))"))
                                                                                                                                                                                                                 (("1"
                                                                                                                                                                                                                   (lemma
                                                                                                                                                                                                                    "sq_lt"
                                                                                                                                                                                                                    ("nna"
                                                                                                                                                                                                                     "1 - sq(y!1) / 2"
                                                                                                                                                                                                                     "nnb"
                                                                                                                                                                                                                     "sqrt(1 - sq(AP))"))
                                                                                                                                                                                                                   (("1"
                                                                                                                                                                                                                     (rewrite
                                                                                                                                                                                                                      "sq_sqrt"
                                                                                                                                                                                                                      -1)
                                                                                                                                                                                                                     (("1"
                                                                                                                                                                                                                       (case
                                                                                                                                                                                                                        "sq(1 - sq(y!1) / 2) < 1 - sq(AP)")
                                                                                                                                                                                                                       (("1"
                                                                                                                                                                                                                         (assert)
                                                                                                                                                                                                                         nil
                                                                                                                                                                                                                         nil)
                                                                                                                                                                                                                        ("2"
                                                                                                                                                                                                                         (hide
                                                                                                                                                                                                                          2
                                                                                                                                                                                                                          -1
                                                                                                                                                                                                                          -2)
                                                                                                                                                                                                                         (("2"
                                                                                                                                                                                                                           (expand
                                                                                                                                                                                                                            "AP"
                                                                                                                                                                                                                            1)
                                                                                                                                                                                                                           (("2"
                                                                                                                                                                                                                             (expand
                                                                                                                                                                                                                              "sq"
                                                                                                                                                                                                                              1
                                                                                                                                                                                                                              1)
                                                                                                                                                                                                                             (("2"
                                                                                                                                                                                                                               (simplify
                                                                                                                                                                                                                                1)
                                                                                                                                                                                                                               (("2"
                                                                                                                                                                                                                                 (expand
                                                                                                                                                                                                                                  "sq"
                                                                                                                                                                                                                                  1)
                                                                                                                                                                                                                                 (("2"
                                                                                                                                                                                                                                   (lemma
                                                                                                                                                                                                                                    "div_cancel1"
                                                                                                                                                                                                                                    ("x"
                                                                                                                                                                                                                                     "y!1*y!1"
                                                                                                                                                                                                                                     "n0z"
                                                                                                                                                                                                                                     "2"))
                                                                                                                                                                                                                                   (("2"
                                                                                                                                                                                                                                     (replace
                                                                                                                                                                                                                                      -1
                                                                                                                                                                                                                                      1)
                                                                                                                                                                                                                                     (("2"
                                                                                                                                                                                                                                       (lemma
                                                                                                                                                                                                                                        "both_sides_minus_lt1"
                                                                                                                                                                                                                                        ("x"
                                                                                                                                                                                                                                         "1 + y!1 * y!1 / 2 * (y!1 * y!1 / 2) - y!1 * y!1"
                                                                                                                                                                                                                                         "y"
                                                                                                                                                                                                                                         "1 - (1 / 6) * (1 / 6) * y!1 * y!1 * y!1 * y!1 * y!1 * y!1 -
                                                                                                                                                    y!1 * y!1
                                                                                                                                                    + (1 / 3) * y!1 * y!1 * y!1 * y!1"
                                                                                                                                                                                                                                         "z"
                                                                                                                                                                                                                                         "1-y!1*y!1"))
                                                                                                                                                                                                                                       (("2"
                                                                                                                                                                                                                                         (replace
                                                                                                                                                                                                                                          -1
                                                                                                                                                                                                                                          1
                                                                                                                                                                                                                                          rl)
                                                                                                                                                                                                                                         (("2"
                                                                                                                                                                                                                                           (simplify
                                                                                                                                                                                                                                            1)
                                                                                                                                                                                                                                           (("2"
                                                                                                                                                                                                                                             (hide
                                                                                                                                                                                                                                              -1)
                                                                                                                                                                                                                                             (("2"
                                                                                                                                                                                                                                               (lemma
                                                                                                                                                                                                                                                "both_sides_times_pos_lt1"
                                                                                                                                                                                                                                                ("x"
                                                                                                                                                                                                                                                 "1/4"
                                                                                                                                                                                                                                                 "y"
                                                                                                                                                                                                                                                 "1/3-y!1*y!1/36"
                                                                                                                                                                                                                                                 "pz"
                                                                                                                                                                                                                                                 "y!1 * y!1 * y!1 * y!1"))
                                                                                                                                                                                                                                               (("1"
                                                                                                                                                                                                                                                 (replace
                                                                                                                                                                                                                                                  -1
                                                                                                                                                                                                                                                  1)
                                                                                                                                                                                                                                                 (("1"
                                                                                                                                                                                                                                                   (hide
                                                                                                                                                                                                                                                    -1
                                                                                                                                                                                                                                                    -2)
                                                                                                                                                                                                                                                   (("1"
                                                                                                                                                                                                                                                     (case
                                                                                                                                                                                                                                                      "y!1 * y!1 / 36 < 1/12")
                                                                                                                                                                                                                                                     (("1"
                                                                                                                                                                                                                                                       (assert)
                                                                                                                                                                                                                                                       nil
                                                                                                                                                                                                                                                       nil)
                                                                                                                                                                                                                                                      ("2"
                                                                                                                                                                                                                                                       (hide
                                                                                                                                                                                                                                                        2)
                                                                                                                                                                                                                                                       (("2"
                                                                                                                                                                                                                                                         (expand
                                                                                                                                                                                                                                                          "sq"
                                                                                                                                                                                                                                                          -7)
                                                                                                                                                                                                                                                         (("2"
                                                                                                                                                                                                                                                           (assert)
                                                                                                                                                                                                                                                           nil
                                                                                                                                                                                                                                                           nil))
                                                                                                                                                                                                                                                         nil))
                                                                                                                                                                                                                                                       nil))
                                                                                                                                                                                                                                                     nil))
                                                                                                                                                                                                                                                   nil))
                                                                                                                                                                                                                                                 nil)
                                                                                                                                                                                                                                                ("2"
                                                                                                                                                                                                                                                 (hide
                                                                                                                                                                                                                                                  2)
                                                                                                                                                                                                                                                 (("2"
                                                                                                                                                                                                                                                   (lemma
                                                                                                                                                                                                                                                    "sq_lt"
                                                                                                                                                                                                                                                    ("nna"
                                                                                                                                                                                                                                                     "0"
                                                                                                                                                                                                                                                     "nnb"
                                                                                                                                                                                                                                                     "sq(y!1)"))
                                                                                                                                                                                                                                                   (("2"
                                                                                                                                                                                                                                                     (rewrite
                                                                                                                                                                                                                                                      "sq_0")
                                                                                                                                                                                                                                                     (("2"
                                                                                                                                                                                                                                                       (assert)
                                                                                                                                                                                                                                                       (("2"
                                                                                                                                                                                                                                                         (expand
                                                                                                                                                                                                                                                          "sq"
                                                                                                                                                                                                                                                          -1)
                                                                                                                                                                                                                                                         (("2"
                                                                                                                                                                                                                                                           (assert)
                                                                                                                                                                                                                                                           nil
                                                                                                                                                                                                                                                           nil))
                                                                                                                                                                                                                                                         nil))
                                                                                                                                                                                                                                                       nil))
                                                                                                                                                                                                                                                     nil))
                                                                                                                                                                                                                                                   nil))
                                                                                                                                                                                                                                                 nil))
                                                                                                                                                                                                                                               nil))
                                                                                                                                                                                                                                             nil))
                                                                                                                                                                                                                                           nil))
                                                                                                                                                                                                                                         nil))
                                                                                                                                                                                                                                       nil))
                                                                                                                                                                                                                                     nil))
                                                                                                                                                                                                                                   nil))
                                                                                                                                                                                                                                 nil))
                                                                                                                                                                                                                               nil))
                                                                                                                                                                                                                             nil))
                                                                                                                                                                                                                           nil))
                                                                                                                                                                                                                         nil))
                                                                                                                                                                                                                       nil))
                                                                                                                                                                                                                     nil))
                                                                                                                                                                                                                   nil))
                                                                                                                                                                                                                 nil)
                                                                                                                                                                                                                ("2"
                                                                                                                                                                                                                 (hide
                                                                                                                                                                                                                  2)
                                                                                                                                                                                                                 (("2"
                                                                                                                                                                                                                   (assert)
                                                                                                                                                                                                                   nil
                                                                                                                                                                                                                   nil))
                                                                                                                                                                                                                 nil))
                                                                                                                                                                                                               nil))
                                                                                                                                                                                                             nil))
                                                                                                                                                                                                           nil))
                                                                                                                                                                                                         nil))
                                                                                                                                                                                                       nil))
                                                                                                                                                                                                     nil))
                                                                                                                                                                                                   nil))
                                                                                                                                                                                                 nil))
                                                                                                                                                                                               nil)
                                                                                                                                                                                              ("2"
                                                                                                                                                                                               (assert)
                                                                                                                                                                                               nil
                                                                                                                                                                                               nil))
                                                                                                                                                                                             nil))
                                                                                                                                                                                           nil))
                                                                                                                                                                                         nil))
                                                                                                                                                                                       nil))
                                                                                                                                                                                     nil))
                                                                                                                                                                                   nil))
                                                                                                                                                                                 nil)
                                                                                                                                                                                ("2"
                                                                                                                                                                                 (assert)
                                                                                                                                                                                 nil
                                                                                                                                                                                 nil))
                                                                                                                                                                               nil))
                                                                                                                                                                             nil)
                                                                                                                                                                            ("2"
                                                                                                                                                                             (assert)
                                                                                                                                                                             nil
                                                                                                                                                                             nil)
                                                                                                                                                                            ("3"
                                                                                                                                                                             (hide
                                                                                                                                                                              2)
                                                                                                                                                                             (("3"
                                                                                                                                                                               (assert)
                                                                                                                                                                               (("3"
                                                                                                                                                                                 (lemma
                                                                                                                                                                                  "sq_lt"
                                                                                                                                                                                  ("nna"
                                                                                                                                                                                   "0"
                                                                                                                                                                                   "nnb"
                                                                                                                                                                                   "y!1"))
                                                                                                                                                                                 (("3"
                                                                                                                                                                                   (rewrite
                                                                                                                                                                                    "sq_0")
                                                                                                                                                                                   (("3"
                                                                                                                                                                                     (assert)
                                                                                                                                                                                     nil
                                                                                                                                                                                     nil))
                                                                                                                                                                                   nil))
                                                                                                                                                                                 nil))
                                                                                                                                                                               nil))
                                                                                                                                                                             nil))
                                                                                                                                                                           nil)
                                                                                                                                                                          ("2"
                                                                                                                                                                           (lemma
                                                                                                                                                                            "sq_lt"
                                                                                                                                                                            ("nna"
                                                                                                                                                                             "0"
                                                                                                                                                                             "nnb"
                                                                                                                                                                             "y!1"))
                                                                                                                                                                           (("2"
                                                                                                                                                                             (rewrite
                                                                                                                                                                              "sq_0")
                                                                                                                                                                             (("2"
                                                                                                                                                                               (assert)
                                                                                                                                                                               nil
                                                                                                                                                                               nil))
                                                                                                                                                                             nil))
                                                                                                                                                                           nil))
                                                                                                                                                                         nil))
                                                                                                                                                                       nil))
                                                                                                                                                                     nil))
                                                                                                                                                                   nil))
                                                                                                                                                                 nil))
                                                                                                                                                               nil))
                                                                                                                                                             nil))
                                                                                                                                                           nil)
                                                                                                                                                          ("2"
                                                                                                                                                           (replace
                                                                                                                                                            -1)
                                                                                                                                                           (("2"
                                                                                                                                                             (replace
                                                                                                                                                              -4
                                                                                                                                                              1
                                                                                                                                                              rl)
                                                                                                                                                             (("2"
                                                                                                                                                               (simplify
                                                                                                                                                                1)
                                                                                                                                                               (("2"
                                                                                                                                                                 (hide-all-but
                                                                                                                                                                  1)
                                                                                                                                                                 (("2"
                                                                                                                                                                   (expand
                                                                                                                                                                    "sq")
                                                                                                                                                                   (("2"
                                                                                                                                                                     (assert)
                                                                                                                                                                     (("2"
                                                                                                                                                                       (name-replace
                                                                                                                                                                        "K1"
                                                                                                                                                                        "2 * (1 / 6) - (1 / 6) * (1 / 6)")
                                                                                                                                                                       (("2"
                                                                                                                                                                         (lemma
                                                                                                                                                                          "div_mult_pos_gt1"
                                                                                                                                                                          ("x"
                                                                                                                                                                           "1"
                                                                                                                                                                           "z"
                                                                                                                                                                           "1/2"
                                                                                                                                                                           "py"
                                                                                                                                                                           "sqrt(K1)"))
                                                                                                                                                                         (("1"
                                                                                                                                                                           (rewrite
                                                                                                                                                                            "div_div2"
                                                                                                                                                                            -1)
                                                                                                                                                                           (("1"
                                                                                                                                                                             (assert)
                                                                                                                                                                             (("1"
                                                                                                                                                                               (lemma
                                                                                                                                                                                "sq_gt"
                                                                                                                                                                                ("nna"
                                                                                                                                                                                 "sqrt(K1)"
                                                                                                                                                                                 "nnb"
                                                                                                                                                                                 "1/2"))
                                                                                                                                                                               (("1"
                                                                                                                                                                                 (rewrite
                                                                                                                                                                                  "sq_sqrt"
                                                                                                                                                                                  -1)
                                                                                                                                                                                 (("1"
                                                                                                                                                                                   (expand
                                                                                                                                                                                    "sq"
                                                                                                                                                                                    -1)
                                                                                                                                                                                   (("1"
                                                                                                                                                                                     (expand
                                                                                                                                                                                      "K1")
                                                                                                                                                                                     (("1"
                                                                                                                                                                                       (assert)
                                                                                                                                                                                       nil
                                                                                                                                                                                       nil))
                                                                                                                                                                                     nil))
                                                                                                                                                                                   nil))
                                                                                                                                                                                 nil))
                                                                                                                                                                               nil))
                                                                                                                                                                             nil))
                                                                                                                                                                           nil)
                                                                                                                                                                          ("2"
                                                                                                                                                                           (lemma
                                                                                                                                                                            "sqrt_lt"
                                                                                                                                                                            ("nny"
                                                                                                                                                                             "0"
                                                                                                                                                                             "nnz"
                                                                                                                                                                             "2 * (1 / 6) - (1 / 6) * (1 / 6)"))
                                                                                                                                                                           (("2"
                                                                                                                                                                             (rewrite
                                                                                                                                                                              "sqrt_0")
                                                                                                                                                                             (("2"
                                                                                                                                                                               (expand
                                                                                                                                                                                "K1")
                                                                                                                                                                               (("2"
                                                                                                                                                                                 (hide
                                                                                                                                                                                  2)
                                                                                                                                                                                 (("2"
                                                                                                                                                                                   (assert)
                                                                                                                                                                                   nil
                                                                                                                                                                                   nil))
                                                                                                                                                                                 nil))
                                                                                                                                                                               nil))
                                                                                                                                                                             nil))
                                                                                                                                                                           nil)
                                                                                                                                                                          ("3"
                                                                                                                                                                           (hide
                                                                                                                                                                            2)
                                                                                                                                                                           (("3"
                                                                                                                                                                             (expand
                                                                                                                                                                              "K1")
                                                                                                                                                                             (("3"
                                                                                                                                                                               (assert)
                                                                                                                                                                               nil
                                                                                                                                                                               nil))
                                                                                                                                                                             nil))
                                                                                                                                                                           nil))
                                                                                                                                                                         nil))
                                                                                                                                                                       nil))
                                                                                                                                                                     nil))
                                                                                                                                                                   nil))
                                                                                                                                                                 nil))
                                                                                                                                                               nil))
                                                                                                                                                             nil))
                                                                                                                                                           nil))
                                                                                                                                                         nil))
                                                                                                                                                       nil)
                                                                                                                                                      ("2"
                                                                                                                                                       (hide
                                                                                                                                                        2)
                                                                                                                                                       (("2"
                                                                                                                                                         (lemma
                                                                                                                                                          "posreal_times_posreal_is_posreal"
                                                                                                                                                          ("px"
                                                                                                                                                           "y!1"
                                                                                                                                                           "py"
                                                                                                                                                           "y!1"))
                                                                                                                                                         (("1"
                                                                                                                                                           (assert)
                                                                                                                                                           nil
                                                                                                                                                           nil)
                                                                                                                                                          ("2"
                                                                                                                                                           (assert)
                                                                                                                                                           nil
                                                                                                                                                           nil))
                                                                                                                                                         nil))
                                                                                                                                                       nil)
                                                                                                                                                      ("3"
                                                                                                                                                       (assert)
                                                                                                                                                       nil
                                                                                                                                                       nil))
                                                                                                                                                     nil))
                                                                                                                                                   nil))
                                                                                                                                                 nil))
                                                                                                                                               nil))
                                                                                                                                             nil))
                                                                                                                                           nil)
                                                                                                                                          ("2"
                                                                                                                                           (assert)
                                                                                                                                           nil
                                                                                                                                           nil))
                                                                                                                                         nil))
                                                                                                                                       nil))
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil))
                                                                                                                           nil))
                                                                                                                         nil))
                                                                                                                       nil))
                                                                                                                     nil))
                                                                                                                   nil))
                                                                                                                 nil))
                                                                                                               nil))
                                                                                                             nil)
                                                                                                            ("2"
                                                                                                             (hide-all-but
                                                                                                              1)
                                                                                                             (("2"
                                                                                                               (skosimp*)
                                                                                                               (("2"
                                                                                                                 (typepred
                                                                                                                  "x!1")
                                                                                                                 (("2"
                                                                                                                   (expand
                                                                                                                    ">=")
                                                                                                                   (("2"
                                                                                                                     (expand
                                                                                                                      "<="
                                                                                                                      -1)
                                                                                                                     (("2"
                                                                                                                       (split
                                                                                                                        -1)
                                                                                                                       (("1"
                                                                                                                         (lemma
                                                                                                                          "posreal_times_posreal_is_posreal"
                                                                                                                          ("px"
                                                                                                                           "x!1"
                                                                                                                           "py"
                                                                                                                           "x!1"))
                                                                                                                         (("1"
                                                                                                                           (lemma
                                                                                                                            "posreal_times_posreal_is_posreal"
                                                                                                                            ("px"
                                                                                                                             "x!1"
                                                                                                                             "py"
                                                                                                                             "x!1*x!1"))
                                                                                                                           (("1"
                                                                                                                             (lemma
                                                                                                                              "posreal_div_posreal_is_posreal"
                                                                                                                              ("px"
                                                                                                                               "x!1*x!1*x!1"
                                                                                                                               "py"
                                                                                                                               "6"))
                                                                                                                             (("1"
                                                                                                                               (lemma
                                                                                                                                "lt_minus_lt1"
                                                                                                                                ("x"
                                                                                                                                 "x!1"
                                                                                                                                 "y"
                                                                                                                                 "1"
                                                                                                                                 "w"
                                                                                                                                 "0"
                                                                                                                                 "z"
                                                                                                                                 "x!1 * x!1 * x!1 / 6"))
                                                                                                                               (("1"
                                                                                                                                 (split
                                                                                                                                  -1)
                                                                                                                                 (("1"
                                                                                                                                   (lemma
                                                                                                                                    "sq_le"
                                                                                                                                    ("nna"
                                                                                                                                     "x!1"
                                                                                                                                     "nnb"
                                                                                                                                     "1"))
                                                                                                                                   (("1"
                                                                                                                                     (expand
                                                                                                                                      "sq")
                                                                                                                                     (("1"
                                                                                                                                       (lemma
                                                                                                                                        "posreal_times_posreal_is_posreal"
                                                                                                                                        ("px"
                                                                                                                                         "1-x!1*x!1/6"
                                                                                                                                         "py"
                                                                                                                                         "x!1"))
                                                                                                                                       (("1"
                                                                                                                                         (assert)
                                                                                                                                         nil
                                                                                                                                         nil)
                                                                                                                                        ("2"
                                                                                                                                         (hide
                                                                                                                                          2)
                                                                                                                                         (("2"
                                                                                                                                           (assert)
                                                                                                                                           nil
                                                                                                                                           nil))
                                                                                                                                         nil))
                                                                                                                                       nil))
                                                                                                                                     nil))
                                                                                                                                   nil)
                                                                                                                                  ("2"
                                                                                                                                   (propax)
                                                                                                                                   nil
                                                                                                                                   nil)
                                                                                                                                  ("3"
                                                                                                                                   (assert)
                                                                                                                                   nil
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil)
                                                                                                                              ("2"
                                                                                                                               (assert)
                                                                                                                               nil
                                                                                                                               nil))
                                                                                                                             nil)
                                                                                                                            ("2"
                                                                                                                             (propax)
                                                                                                                             nil
                                                                                                                             nil))
                                                                                                                           nil)
                                                                                                                          ("2"
                                                                                                                           (assert)
                                                                                                                           nil
                                                                                                                           nil))
                                                                                                                         nil)
                                                                                                                        ("2"
                                                                                                                         (replace
                                                                                                                          -1
                                                                                                                          *
                                                                                                                          rl)
                                                                                                                         (("2"
                                                                                                                           (hide-all-but
                                                                                                                            1)
                                                                                                                           (("2"
                                                                                                                             (typepred
                                                                                                                              "x!1")
                                                                                                                             (("2"
                                                                                                                               (expand
                                                                                                                                ">=")
                                                                                                                               (("2"
                                                                                                                                 (expand
                                                                                                                                  "<="
                                                                                                                                  -1)
                                                                                                                                 (("2"
                                                                                                                                   (split
                                                                                                                                    -1)
                                                                                                                                   (("1"
                                                                                                                                     (lemma
                                                                                                                                      "posreal_times_posreal_is_posreal"
                                                                                                                                      ("px"
                                                                                                                                       "1-x!1*x!1/6"
                                                                                                                                       "py"
                                                                                                                                       "x!1"))
                                                                                                                                     (("1"
                                                                                                                                       (assert)
                                                                                                                                       nil
                                                                                                                                       nil)
                                                                                                                                      ("2"
                                                                                                                                       (assert)
                                                                                                                                       nil
                                                                                                                                       nil)
                                                                                                                                      ("3"
                                                                                                                                       (hide
                                                                                                                                        2)
                                                                                                                                       (("3"
                                                                                                                                         (lemma
                                                                                                                                          "sq_le"
                                                                                                                                          ("nna"
                                                                                                                                           "x!1"
                                                                                                                                           "nnb"
                                                                                                                                           "1"))
                                                                                                                                         (("3"
                                                                                                                                           (expand
                                                                                                                                            "sq")
                                                                                                                                           (("3"
                                                                                                                                             (assert)
                                                                                                                                             nil
                                                                                                                                             nil))
                                                                                                                                           nil))
                                                                                                                                         nil))
                                                                                                                                       nil))
                                                                                                                                     nil)
                                                                                                                                    ("2"
                                                                                                                                     (replace
                                                                                                                                      -1
                                                                                                                                      *
                                                                                                                                      rl)
                                                                                                                                     (("2"
                                                                                                                                       (assert)
                                                                                                                                       nil
                                                                                                                                       nil))
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil))
                                                                                                                           nil))
                                                                                                                         nil))
                                                                                                                       nil))
                                                                                                                     nil))
                                                                                                                   nil))
                                                                                                                 nil))
                                                                                                               nil))
                                                                                                             nil))
                                                                                                           nil))
                                                                                                         nil))
                                                                                                       nil))
                                                                                                     nil))
                                                                                                   nil))
                                                                                                 nil))
                                                                                               nil))
                                                                                             nil)
                                                                                            ("2"
                                                                                             (skosimp*)
                                                                                             (("2"
                                                                                               (hide-all-but
                                                                                                1)
                                                                                               (("2"
                                                                                                 (typepred
                                                                                                  "x!1")
                                                                                                 (("2"
                                                                                                   (expand
                                                                                                    ">=")
                                                                                                   (("2"
                                                                                                     (lemma
                                                                                                      "posreal_times_posreal_is_posreal"
                                                                                                      ("px"
                                                                                                       "1-x!1*x!1/6"
                                                                                                       "py"
                                                                                                       "x!1"))
                                                                                                     (("1"
                                                                                                       (assert)
                                                                                                       nil
                                                                                                       nil)
                                                                                                      ("2"
                                                                                                       (assert)
                                                                                                       nil
                                                                                                       nil)
                                                                                                      ("3"
                                                                                                       (hide
                                                                                                        2)
                                                                                                       (("3"
                                                                                                         (lemma
                                                                                                          "sq_le"
                                                                                                          ("nna"
                                                                                                           "x!1"
                                                                                                           "nnb"
                                                                                                           "1"))
                                                                                                         (("3"
                                                                                                           (expand
                                                                                                            "sq")
                                                                                                           (("3"
                                                                                                             (assert)
                                                                                                             nil
                                                                                                             nil))
                                                                                                           nil))
                                                                                                         nil))
                                                                                                       nil))
                                                                                                     nil))
                                                                                                   nil))
                                                                                                 nil))
                                                                                               nil))
                                                                                             nil)
                                                                                            ("3"
                                                                                             (skosimp*)
                                                                                             (("3"
                                                                                               (assert)
                                                                                               (("3"
                                                                                                 (inst-cp
                                                                                                  +
                                                                                                  "1/2")
                                                                                                 (("3"
                                                                                                   (inst-cp
                                                                                                    +
                                                                                                    "1/4")
                                                                                                   (("3"
                                                                                                     (assert)
                                                                                                     nil
                                                                                                     nil))
                                                                                                   nil))
                                                                                                 nil))
                                                                                               nil))
                                                                                             nil)
                                                                                            ("4"
                                                                                             (skosimp*)
                                                                                             (("4"
                                                                                               (assert)
                                                                                               nil
                                                                                               nil))
                                                                                             nil))
                                                                                           nil))
                                                                                         nil))
                                                                                       nil))
                                                                                     nil))
                                                                                   nil))
                                                                                 nil))
                                                                               nil))
                                                                             nil))
                                                                           nil))
                                                                         nil))
                                                                       nil))
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil))
                                                 nil))
                                               nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil)
                    ("2" (skosimp*)
                     (("2" (assert)
                       (("2" (inst-cp + "1/4")
                         (("2" (inst-cp + "1/8") (("2" (assert) nil nil))
                           nil))
                         nil))
                       nil))
                     nil)
                    ("3" (skosimp*) (("3" (assert) nil nil)) nil))
                   nil))
                 nil)
                ("2" (hide 2)
                 (("2" (lemma "sq_le" ("nnb" "px!1" "nna" "sqrt(6)"))
                   (("2" (flatten)
                     (("2" (rewrite "sq_sqrt")
                       (("2" (assert)
                         (("2" (hide -1)
                           (("2" (typepred "px!1")
                             (("2" (assert)
                               (("2" (lemma "sq_le" ("nna" "px!1" "nnb" "1"))
                                 (("2" (rewrite "sq_1")
                                   (("2" (assert) nil nil)) nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil))
           nil))
         nil)
        ((deriv_id_fun formula-decl nil derivatives analysis)
         (const_fun const-decl "[T -> real]" real_fun_ops reals)
         (deriv_diff_fun formula-decl nil derivatives analysis)
         (deriv_fun type-eq-decl nil derivatives analysis)
         (pi_bnds formula-decl nil atan nil)
         (minimum_derivative formula-decl nil derivative_props analysis)
         (sqrt_pos judgement-tcc nil sqrt reals)
         (sqrt_lt formula-decl nil sqrt reals)
         (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
         (sq_lt formula-decl nil sq reals)
         (restrict2_deriv formula-decl nil restrict2_deriv analysis)
         (sqrt_1 formula-decl nil sqrt reals) (sq_0 formula-decl nil sq reals)
         (sq const-decl "nonneg_real" sq reals)
         (sqrt_pos application-judgement "posreal" sqrt reals)
         (restrict2 const-decl "[T1 -> real]" restrict2_deriv analysis)
         (restrict2_derivable formula-decl nil restrict2_deriv analysis)
         (diff_derivable_fun formula-decl nil derivatives analysis)
         (identity_derivable_fun formula-decl nil derivatives analysis)
         (deriv_const_fun formula-decl nil derivatives analysis)
         (prod_derivable_fun formula-decl nil derivatives analysis)
         (deriv_scal_fun formula-decl nil derivatives analysis)
         (composition_derivable_fun formula-decl nil chain_rule analysis)
         (sq_gt formula-decl nil sq reals) (sq_1 formula-decl nil sq reals)
         (sq_sqrt formula-decl nil sqrt reals)
         (sqrt_0 formula-decl nil sqrt reals)
         (sq_rew formula-decl nil sq reals) (sq_le formula-decl nil sq reals)
         (deriv_comp_fun formula-decl nil chain_rule analysis)
         (scal_derivable_fun formula-decl nil derivatives analysis)
         (deriv_prod_fun formula-decl nil derivatives analysis)
         (const_derivable_fun formula-decl nil derivatives analysis))
        nil)
       (asin_pos_bnds-4 nil 3307805790
        ("" (skosimp*)
         (("" (split)
           (("1" (lemma "asin_derivable2")
             (("1" (lemma "deriv_asin_fun")
               (("1" (lemma "identity_derivable_fun[real_abs_lt1]")
                 (("1" (lemma "deriv_id_fun[real_abs_lt1]")
                   (("1" (expand "I")
                     (("1" (expand "const_fun")
                       (("1"
                         (lemma "diff_derivable_fun[real_abs_lt1]"
                          ("f1" "LAMBDA (x: real_abs_lt1): asin(x)" "f2"
                           "LAMBDA (x: real_abs_lt1): x"))
                         (("1" (assert)
                           (("1" (expand "-")
                             (("1"
                               (lemma "deriv_diff_fun[real_abs_lt1]"
                                ("ff1" "LAMBDA (x: real_abs_lt1): asin(x)"
                                 "ff2" "LAMBDA (x: real_abs_lt1): x"))
                               (("1" (replace -5 -1)
                                 (("1" (replace -3 -1)
                                   (("1" (expand "-")
                                     (("1"
                                       (typepred "px!1")
                                       (("1"
                                         (expand "abs" -1)
                                         (("1"
                                           (expand "<=" -1)
                                           (("1"
                                             (split -1)
                                             (("1"
                                               (lemma
                                                "minimum_derivative[{x:nnreal| x < 1}]"
                                                ("g"
                                                 "LAMBDA (x_1:{x:nnreal| x < 1} ): asin(x_1) - x_1"
                                                 "x"
                                                 "0"
                                                 "y1"
                                                 "px!1"))
                                               (("1"
                                                 (split -1)
                                                 (("1"
                                                   (simplify -1)
                                                   (("1"
                                                     (rewrite "asin_0")
                                                     (("1" (assert) nil nil))
                                                     nil))
                                                   nil)
                                                  ("2"
                                                   (lemma
                                                    "restrict2_deriv[{x: nnreal | x < 1},real_abs_lt1]"
                                                    ("f"
                                                     "LAMBDA (x_1: real_abs_lt1): asin(x_1) - x_1"
                                                     "a"
                                                     "0"))
                                                   (("1"
                                                     (replace -4 -1)
                                                     (("1"
                                                       (simplify -1)
                                                       (("1"
                                                         (expand
                                                          "restrict2"
                                                          -1)
                                                         (("1"
                                                           (replace -1 1 rl)
                                                           (("1"
                                                             (expand "sq" 1)
                                                             (("1"
                                                               (rewrite
                                                                "sqrt_1")
                                                               (("1"
                                                                 (assert)
                                                                 nil
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil)
                                                    ("2" (propax) nil nil)
                                                    ("3"
                                                     (skosimp*)
                                                     (("3"
                                                       (inst + "x!1")
                                                       (("3"
                                                         (assert)
                                                         (("3"
                                                           (expand "abs")
                                                           (("3"
                                                             (assert)
                                                             nil
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil)
                                                    ("4"
                                                     (skosimp*)
                                                     (("4"
                                                       (case "x!1=0")
                                                       (("1"
                                                         (inst + "px!1")
                                                         (("1"
                                                           (assert)
                                                           nil
                                                           nil)
                                                          ("2"
                                                           (expand "abs" 1)
                                                           (("2"
                                                             (propax)
                                                             nil
                                                             nil))
                                                           nil))
                                                         nil)
                                                        ("2"
                                                         (inst + "0")
                                                         (("1"
                                                           (assert)
                                                           nil
                                                           nil)
                                                          ("2"
                                                           (expand "abs" 1)
                                                           (("2"
                                                             (assert)
                                                             nil
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil)
                                                    ("5"
                                                     (hide-all-but 1)
                                                     (("5" (grind) nil nil))
                                                     nil))
                                                   nil)
                                                  ("3" (assert) nil nil)
                                                  ("4"
                                                   (skosimp*)
                                                   (("4"
                                                     (typepred "y!1")
                                                     (("4"
                                                       (expand ">=" -1)
                                                       (("4"
                                                         (expand "<=" -1)
                                                         (("4"
                                                           (split -1)
                                                           (("1"
                                                             (lemma
                                                              "restrict2_deriv[{x: nnreal | x < 1},real_abs_lt1]"
                                                              ("f"
                                                               "LAMBDA (x_1: real_abs_lt1): asin(x_1) - x_1"
                                                               "a"
                                                               "y!1"))
                                                             (("1"
                                                               (replace -6 -1)
                                                               (("1"
                                                                 (simplify -1)
                                                                 (("1"
                                                                   (expand
                                                                    "restrict2"
                                                                    -1)
                                                                   (("1"
                                                                     (replace
                                                                      -1
                                                                      2
                                                                      rl)
                                                                     (("1"
                                                                       (hide
                                                                        -1
                                                                        -6
                                                                        3
                                                                        1
                                                                        -7
                                                                        -8
                                                                        -9
                                                                        -10
                                                                        -11)
                                                                       (("1"
                                                                         (lemma
                                                                          "sq_lt"
                                                                          ("nna"
                                                                           "0"
                                                                           "nnb"
                                                                           "y!1"))
                                                                         (("1"
                                                                           (lemma
                                                                            "sq_lt"
                                                                            ("nna"
                                                                             "y!1"
                                                                             "nnb"
                                                                             "1"))
                                                                           (("1"
                                                                             (expand
                                                                              "sq"
                                                                              -1
                                                                              2)
                                                                             (("1"
                                                                               (expand
                                                                                "sq"
                                                                                -2
                                                                                1)
                                                                               (("1"
                                                                                 (assert)
                                                                                 (("1"
                                                                                   (lemma
                                                                                    "sqrt_pos"
                                                                                    ("px"
                                                                                     "1-sq(y!1)"))
                                                                                   (("1"
                                                                                     (lemma
                                                                                      "div_mult_pos_gt2"
                                                                                      ("z"
                                                                                       "1"
                                                                                       "py"
                                                                                       "sqrt(1-sq(y!1))"
                                                                                       "x"
                                                                                       "1"))
                                                                                     (("1"
                                                                                       (lemma
                                                                                        "sqrt_lt"
                                                                                        ("nny"
                                                                                         "1-sq(y!1)"
                                                                                         "nnz"
                                                                                         "1"))
                                                                                       (("1"
                                                                                         (rewrite
                                                                                          "sqrt_1")
                                                                                         (("1"
                                                                                           (assert)
                                                                                           (("1"
                                                                                             (lemma
                                                                                              "posreal_times_posreal_is_posreal"
                                                                                              ("px"
                                                                                               "1 / sqrt(1 - sq(y!1))-1"
                                                                                               "py"
                                                                                               "y!1"))
                                                                                             (("1"
                                                                                               (assert)
                                                                                               nil
                                                                                               nil))
                                                                                             nil))
                                                                                           nil))
                                                                                         nil))
                                                                                       nil))
                                                                                     nil))
                                                                                   nil))
                                                                                 nil))
                                                                               nil))
                                                                             nil))
                                                                           nil))
                                                                         nil))
                                                                       nil))
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil)
                                                              ("2"
                                                               (propax)
                                                               nil
                                                               nil)
                                                              ("3"
                                                               (skosimp*)
                                                               (("3"
                                                                 (inst
                                                                  +
                                                                  "x!1")
                                                                 (("3"
                                                                   (expand
                                                                    "abs")
                                                                   (("3"
                                                                     (assert)
                                                                     nil
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil)
                                                              ("4"
                                                               (skosimp*)
                                                               (("4"
                                                                 (case
                                                                  "x!1 = 0")
                                                                 (("1"
                                                                   (inst
                                                                    +
                                                                    "1/2")
                                                                   (("1"
                                                                     (assert)
                                                                     nil
                                                                     nil)
                                                                    ("2"
                                                                     (expand
                                                                      "abs"
                                                                      1)
                                                                     (("2"
                                                                       (assert)
                                                                       nil
                                                                       nil))
                                                                     nil))
                                                                   nil)
                                                                  ("2"
                                                                   (inst
                                                                    +
                                                                    "0")
                                                                   (("1"
                                                                     (assert)
                                                                     nil
                                                                     nil)
                                                                    ("2"
                                                                     (expand
                                                                      "abs"
                                                                      1)
                                                                     (("2"
                                                                       (assert)
                                                                       nil
                                                                       nil))
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil)
                                                              ("5"
                                                               (hide-all-but
                                                                1)
                                                               (("5"
                                                                 (grind)
                                                                 nil
                                                                 nil))
                                                               nil))
                                                             nil)
                                                            ("2"
                                                             (assert)
                                                             nil
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil))
                                                 nil)
                                                ("2" (propax) nil nil)
                                                ("3"
                                                 (lemma
                                                  "restrict2_derivable[{x: nnreal | x < 1},real_abs_lt1]"
                                                  ("f"
                                                   "LAMBDA (x_1: real_abs_lt1): asin(x_1) - x_1"))
                                                 (("1"
                                                   (expand "restrict2" -1)
                                                   (("1" (propax) nil nil))
                                                   nil)
                                                  ("2" (propax) nil nil)
                                                  ("3"
                                                   (skosimp*)
                                                   (("3"
                                                     (typepred "x!1")
                                                     (("3"
                                                       (inst + "x!1")
                                                       (("3"
                                                         (expand "abs")
                                                         (("3"
                                                           (propax)
                                                           nil
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil)
                                                  ("4"
                                                   (skosimp*)
                                                   (("4"
                                                     (case "x!1=0")
                                                     (("1"
                                                       (inst + "1/2")
                                                       (("1" (assert) nil nil)
                                                        ("2"
                                                         (expand "abs")
                                                         (("2"
                                                           (assert)
                                                           nil
                                                           nil))
                                                         nil))
                                                       nil)
                                                      ("2"
                                                       (inst + "0")
                                                       (("1" (assert) nil nil)
                                                        ("2"
                                                         (expand "abs" 1)
                                                         (("2"
                                                           (assert)
                                                           nil
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil)
                                                  ("5"
                                                   (skosimp*)
                                                   (("5"
                                                     (case "x!1=0")
                                                     (("1"
                                                       (inst + "1/2")
                                                       (("1"
                                                         (assert)
                                                         nil
                                                         nil))
                                                       nil)
                                                      ("2"
                                                       (inst + "0")
                                                       (("2"
                                                         (assert)
                                                         nil
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil)
                                                  ("6"
                                                   (hide-all-but 1)
                                                   (("6" (grind) nil nil))
                                                   nil)
                                                  ("7"
                                                   (hide-all-but 1)
                                                   (("7" (grind) nil nil))
                                                   nil))
                                                 nil)
                                                ("4"
                                                 (hide-all-but 1)
                                                 (("4"
                                                   (expand "abs")
                                                   (("4" (propax) nil nil))
                                                   nil))
                                                 nil)
                                                ("5"
                                                 (skosimp*)
                                                 (("5"
                                                   (case "x!1=0")
                                                   (("1"
                                                     (inst + "1/2")
                                                     (("1" (assert) nil nil))
                                                     nil)
                                                    ("2"
                                                     (inst + "0")
                                                     (("2" (assert) nil nil))
                                                     nil))
                                                   nil))
                                                 nil)
                                                ("6"
                                                 (hide-all-but 1)
                                                 (("6" (grind) nil nil))
                                                 nil))
                                               nil)
                                              ("2"
                                               (replace -1)
                                               (("2"
                                                 (rewrite "asin_1")
                                                 (("2"
                                                   (lemma "pi_bnds")
                                                   (("2"
                                                     (flatten)
                                                     (("2" (assert) nil nil))
                                                     nil))
                                                   nil))
                                                 nil))
                                               nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil)
            ("2" (flatten)
             (("2" (case "px!1 < sqrt(6)")
               (("1" (typepred "px!1")
                 (("1" (expand "abs" -1)
                   (("1" (lemma "identity_derivable_fun[{x:nnreal| x <= 1}]")
                     (("1" (lemma "deriv_id_fun[{x:nnreal| x <= 1}]")
                       (("1" (expand "I")
                         (("1"
                           (lemma "const_derivable_fun[{x:nnreal| x <= 1}]"
                            ("b" "1"))
                           (("1"
                             (lemma "deriv_const_fun[{x:nnreal| x <= 1}]"
                              ("b" "1"))
                             (("1" (expand "const_fun")
                               (("1"
                                 (lemma "prod_derivable_fun"
                                  ("f1" "LAMBDA (x: {x: nnreal | x <= 1}): x"
                                   "f2"
                                   "LAMBDA (x: {x: nnreal | x <= 1}): x"))
                                 (("1" (assert)
                                   (("1" (expand "*" -1)
                                     (("1"
                                       (lemma
                                        "deriv_prod_fun"
                                        ("ff1"
                                         "LAMBDA (x: {x: nnreal | x <= 1}): x"
                                         "ff2"
                                         "LAMBDA (x: {x: nnreal | x <= 1}): x"))
                                       (("1"
                                         (replace -5 -1)
                                         (("1"
                                           (expand "*")
                                           (("1"
                                             (expand "+")
                                             (("1"
                                               (lemma
                                                "scal_derivable_fun"
                                                ("f"
                                                 "LAMBDA (x_1: {x: nnreal | x <= 1}): x_1 * x_1"
                                                 "b"
                                                 "1/6"))
                                               (("1"
                                                 (assert)
                                                 (("1"
                                                   (expand "*")
                                                   (("1"
                                                     (lemma
                                                      "deriv_scal_fun"
                                                      ("ff"
                                                       "LAMBDA (x_1: {x: nnreal | x <= 1}): x_1 * x_1"
                                                       "b"
                                                       "1/6"))
                                                     (("1"
                                                       (replace -3 -1)
                                                       (("1"
                                                         (expand "*" -1)
                                                         (("1"
                                                           (lemma
                                                            "diff_derivable_fun"
                                                            ("f1"
                                                             "LAMBDA (x: {x: nnreal | x <= 1}): 1"
                                                             "f2"
                                                             "LAMBDA (x: {x: nnreal | x <= 1}): 1 / 6 * (x * x)"))
                                                           (("1"
                                                             (assert)
                                                             (("1"
                                                               (expand "-")
                                                               (("1"
                                                                 (lemma
                                                                  "deriv_diff_fun"
                                                                  ("ff1"
                                                                   "LAMBDA (x: {x: nnreal | x <= 1}): 1"
                                                                   "ff2"
                                                                   "LAMBDA (x: {x: nnreal | x <= 1}): 1 / 6 * (x * x)"))
                                                                 (("1"
                                                                   (replace
                                                                    -7
                                                                    -1)
                                                                   (("1"
                                                                     (replace
                                                                      -3
                                                                      -1)
                                                                     (("1"
                                                                       (expand
                                                                        "-")
                                                                       (("1"
                                                                         (lemma
                                                                          "prod_derivable_fun"
                                                                          ("f1"
                                                                           "LAMBDA (x: {x: nnreal | x <= 1}): x"
                                                                           "f2"
                                                                           "LAMBDA (x_1: {x: nnreal | x <= 1}): 1 - 1 / 6 * (x_1 * x_1)"))
                                                                         (("1"
                                                                           (assert)
                                                                           (("1"
                                                                             (expand
                                                                              "*")
                                                                             (("1"
                                                                               (lemma
                                                                                "deriv_prod_fun"
                                                                                ("ff1"
                                                                                 "LAMBDA (x: {x: nnreal | x <= 1}): x"
                                                                                 "ff2"
                                                                                 "LAMBDA (x_1: {x: nnreal | x <= 1}): 1 - 1 / 6 * (x_1 * x_1)"))
                                                                               (("1"
                                                                                 (replace
                                                                                  -3
                                                                                  -1)
                                                                                 (("1"
                                                                                   (replace
                                                                                    -11
                                                                                    -1)
                                                                                   (("1"
                                                                                     (expand
                                                                                      "*")
                                                                                     (("1"
                                                                                       (expand
                                                                                        "+")
                                                                                       (("1"
                                                                                         (lemma
                                                                                          "asin_derivable2")
                                                                                         (("1"
                                                                                           (lemma
                                                                                            "deriv_asin_fun")
                                                                                           (("1"
                                                                                             (lemma
                                                                                              "composition_derivable_fun[{x: nnreal | x <= 1},real_abs_lt1]"
                                                                                              ("f"
                                                                                               "LAMBDA (x_1: {x: nnreal | x <= 1}): x_1 - x_1 * x_1 * x_1 * (1 / 6)"
                                                                                               "g"
                                                                                               "LAMBDA (x: real_abs_lt1): asin(x)"))
                                                                                             (("1"
                                                                                               (assert)
                                                                                               (("1"
                                                                                                 (expand
                                                                                                  "o")
                                                                                                 (("1"
                                                                                                   (lemma
                                                                                                    "deriv_comp_fun[{x: nnreal | x <= 1},real_abs_lt1]"
                                                                                                    ("ff"
                                                                                                     "LAMBDA (x_1: {x: nnreal | x <= 1}): x_1 - x_1 * x_1 * x_1 * (1 / 6)"
                                                                                                     "gg"
                                                                                                     "LAMBDA (x: real_abs_lt1): asin(x)"))
                                                                                                   (("1"
                                                                                                     (replace
                                                                                                      -3
                                                                                                      -1)
                                                                                                     (("1"
                                                                                                       (replace
                                                                                                        -5
                                                                                                        -1)
                                                                                                       (("1"
                                                                                                         (expand
                                                                                                          "o")
                                                                                                         (("1"
                                                                                                           (expand
                                                                                                            "*")
                                                                                                           (("1"
                                                                                                             (lemma
                                                                                                              "diff_derivable_fun"
                                                                                                              ("f1"
                                                                                                               "LAMBDA (x: {x: nnreal | x <= 1}): x"
                                                                                                               "f2"
                                                                                                               "LAMBDA (x_1: {x: nnreal | x <= 1}): asin(x_1 - x_1 * x_1 * x_1 * (1 / 6))"))
                                                                                                             (("1"
                                                                                                               (expand
                                                                                                                "-")
                                                                                                               (("1"
                                                                                                                 (assert)
                                                                                                                 (("1"
                                                                                                                   (lemma
                                                                                                                    "deriv_diff_fun"
                                                                                                                    ("ff1"
                                                                                                                     "LAMBDA (x: {x: nnreal | x <= 1}): x"
                                                                                                                     "ff2"
                                                                                                                     "LAMBDA (x_1: {x: nnreal | x <= 1}): asin(x_1 - x_1 * x_1 * x_1 * (1 / 6))"))
                                                                                                                   (("1"
                                                                                                                     (replace
                                                                                                                      -3
                                                                                                                      -1)
                                                                                                                     (("1"
                                                                                                                       (replace
                                                                                                                        -17
                                                                                                                        -1)
                                                                                                                       (("1"
                                                                                                                         (expand
                                                                                                                          "-")
                                                                                                                         (("1"
                                                                                                                           (lemma
                                                                                                                            "minimum_derivative[{x: nnreal | x <= 1}]"
                                                                                                                            ("g"
                                                                                                                             "LAMBDA (x_1: {x: nnreal | x <= 1}): x_1 - asin(x_1 - x_1 * x_1 * x_1 * (1 / 6))"
                                                                                                                             "x"
                                                                                                                             "0"
                                                                                                                             "y1"
                                                                                                                             "px!1"))
                                                                                                                           (("1"
                                                                                                                             (split
                                                                                                                              -1)
                                                                                                                             (("1"
                                                                                                                               (simplify
                                                                                                                                -1)
                                                                                                                               (("1"
                                                                                                                                 (assert)
                                                                                                                                 (("1"
                                                                                                                                   (rewrite
                                                                                                                                    "asin_0")
                                                                                                                                   (("1"
                                                                                                                                     (assert)
                                                                                                                                     nil
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil)
                                                                                                                              ("2"
                                                                                                                               (hide
                                                                                                                                2)
                                                                                                                               (("2"
                                                                                                                                 (replace
                                                                                                                                  -1
                                                                                                                                  1)
                                                                                                                                 (("2"
                                                                                                                                   (simplify
                                                                                                                                    1)
                                                                                                                                   (("2"
                                                                                                                                     (rewrite
                                                                                                                                      "sq_0")
                                                                                                                                     (("2"
                                                                                                                                       (rewrite
                                                                                                                                        "sqrt_1")
                                                                                                                                       (("2"
                                                                                                                                         (assert)
                                                                                                                                         nil
                                                                                                                                         nil))
                                                                                                                                       nil))
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil)
                                                                                                                              ("3"
                                                                                                                               (assert)
                                                                                                                               nil
                                                                                                                               nil)
                                                                                                                              ("4"
                                                                                                                               (replace
                                                                                                                                -1
                                                                                                                                1)
                                                                                                                               (("4"
                                                                                                                                 (hide-all-but
                                                                                                                                  1)
                                                                                                                                 (("4"
                                                                                                                                   (skosimp*)
                                                                                                                                   (("4"
                                                                                                                                     (typepred
                                                                                                                                      "y!1")
                                                                                                                                     (("4"
                                                                                                                                       (expand
                                                                                                                                        ">="
                                                                                                                                        -1)
                                                                                                                                       (("4"
                                                                                                                                         (expand
                                                                                                                                          "<="
                                                                                                                                          -1)
                                                                                                                                         (("4"
                                                                                                                                           (split
                                                                                                                                            -1)
                                                                                                                                           (("1"
                                                                                                                                             (hide
                                                                                                                                              1)
                                                                                                                                             (("1"
                                                                                                                                               (name
                                                                                                                                                "AP"
                                                                                                                                                "y!1 - y!1 * y!1 * y!1 * (1 / 6)")
                                                                                                                                               (("1"
                                                                                                                                                 (replace
                                                                                                                                                  -1)
                                                                                                                                                 (("1"
                                                                                                                                                   (lemma
                                                                                                                                                    "sq_le"
                                                                                                                                                    ("nna"
                                                                                                                                                     "y!1"
                                                                                                                                                     "nnb"
                                                                                                                                                     "1"))
                                                                                                                                                   (("1"
                                                                                                                                                     (expand
                                                                                                                                                      "sq"
                                                                                                                                                      -1)
                                                                                                                                                     (("1"
                                                                                                                                                       (lemma
                                                                                                                                                        "posreal_times_posreal_is_posreal"
                                                                                                                                                        ("px"
                                                                                                                                                         "y!1"
                                                                                                                                                         "py"
                                                                                                                                                         "1-y!1 * y!1 / 6"))
                                                                                                                                                       (("1"
                                                                                                                                                         (expand
                                                                                                                                                          "<="
                                                                                                                                                          -5)
                                                                                                                                                         (("1"
                                                                                                                                                           (split
                                                                                                                                                            -5)
                                                                                                                                                           (("1"
                                                                                                                                                             (lemma
                                                                                                                                                              "sq_lt"
                                                                                                                                                              ("nna"
                                                                                                                                                               "y!1"
                                                                                                                                                               "nnb"
                                                                                                                                                               "1"))
                                                                                                                                                             (("1"
                                                                                                                                                               (rewrite
                                                                                                                                                                "sq_rew")
                                                                                                                                                               (("1"
                                                                                                                                                                 (rewrite
                                                                                                                                                                  "sq_1")
                                                                                                                                                                 (("1"
                                                                                                                                                                   (flatten
                                                                                                                                                                    -1)
                                                                                                                                                                   (("1"
                                                                                                                                                                     (replace
                                                                                                                                                                      -3
                                                                                                                                                                      -2)
                                                                                                                                                                     (("1"
                                                                                                                                                                       (hide
                                                                                                                                                                        -1)
                                                                                                                                                                       (("1"
                                                                                                                                                                         (hide
                                                                                                                                                                          -4)
                                                                                                                                                                         (("1"
                                                                                                                                                                           (lemma
                                                                                                                                                                            "lt_times_lt_pos1"
                                                                                                                                                                            ("px"
                                                                                                                                                                             "y!1"
                                                                                                                                                                             "y"
                                                                                                                                                                             "1"
                                                                                                                                                                             "nnz"
                                                                                                                                                                             "1 - sq(y!1) / 6"
                                                                                                                                                                             "w"
                                                                                                                                                                             "1"))
                                                                                                                                                                           (("1"
                                                                                                                                                                             (split
                                                                                                                                                                              -1)
                                                                                                                                                                             (("1"
                                                                                                                                                                               (replace
                                                                                                                                                                                -5)
                                                                                                                                                                               (("1"
                                                                                                                                                                                 (lemma
                                                                                                                                                                                  "sq_lt"
                                                                                                                                                                                  ("nna"
                                                                                                                                                                                   "AP"
                                                                                                                                                                                   "nnb"
                                                                                                                                                                                   "1"))
                                                                                                                                                                                 (("1"
                                                                                                                                                                                   (expand
                                                                                                                                                                                    "sq"
                                                                                                                                                                                    -1)
                                                                                                                                                                                   (("1"
                                                                                                                                                                                     (assert)
                                                                                                                                                                                     (("1"
                                                                                                                                                                                       (rewrite
                                                                                                                                                                                        "sq_rew"
                                                                                                                                                                                        -1)
                                                                                                                                                                                       (("1"
                                                                                                                                                                                         (lemma
                                                                                                                                                                                          "sq_lt"
                                                                                                                                                                                          ("nna"
                                                                                                                                                                                           "0"
                                                                                                                                                                                           "nnb"
                                                                                                                                                                                           "AP"))
                                                                                                                                                                                         (("1"
                                                                                                                                                                                           (rewrite
                                                                                                                                                                                            "sq_0")
                                                                                                                                                                                           (("1"
                                                                                                                                                                                             (assert)
                                                                                                                                                                                             (("1"
                                                                                                                                                                                               (case
                                                                                                                                                                                                "1-sq(AP) > 0")
                                                                                                                                                                                               (("1"
                                                                                                                                                                                                 (lemma
                                                                                                                                                                                                  "sqrt_lt"
                                                                                                                                                                                                  ("nny"
                                                                                                                                                                                                   "0"
                                                                                                                                                                                                   "nnz"
                                                                                                                                                                                                   "1-sq(AP)"))
                                                                                                                                                                                                 (("1"
                                                                                                                                                                                                   (rewrite
                                                                                                                                                                                                    "sqrt_0")
                                                                                                                                                                                                   (("1"
                                                                                                                                                                                                     (flatten
                                                                                                                                                                                                      -1)
                                                                                                                                                                                                     (("1"
                                                                                                                                                                                                       (expand
                                                                                                                                                                                                        ">"
                                                                                                                                                                                                        -3)
                                                                                                                                                                                                       (("1"
                                                                                                                                                                                                         (replace
                                                                                                                                                                                                          -3
                                                                                                                                                                                                          -2)
                                                                                                                                                                                                         (("1"
                                                                                                                                                                                                           (hide
                                                                                                                                                                                                            -1)
                                                                                                                                                                                                           (("1"
                                                                                                                                                                                                             (lemma
                                                                                                                                                                                                              "posreal_times_posreal_is_posreal"
                                                                                                                                                                                                              ("px"
                                                                                                                                                                                                               "(sq(y!1)/2-1)/sqrt(1 - sq(AP))+1"
                                                                                                                                                                                                               "py"
                                                                                                                                                                                                               "y!1"))
                                                                                                                                                                                                             (("1"
                                                                                                                                                                                                               (assert)
                                                                                                                                                                                                               nil
                                                                                                                                                                                                               nil)
                                                                                                                                                                                                              ("2"
                                                                                                                                                                                                               (hide
                                                                                                                                                                                                                2)
                                                                                                                                                                                                               (("2"
                                                                                                                                                                                                                 (case
                                                                                                                                                                                                                  "1-sq(y!1)/2 > 0")
                                                                                                                                                                                                                 (("1"
                                                                                                                                                                                                                   (lemma
                                                                                                                                                                                                                    "div_mult_pos_lt1"
                                                                                                                                                                                                                    ("x"
                                                                                                                                                                                                                     "1"
                                                                                                                                                                                                                     "z"
                                                                                                                                                                                                                     "1 - sq(y!1) / 2"
                                                                                                                                                                                                                     "py"
                                                                                                                                                                                                                     "sqrt(1 - sq(AP))"))
                                                                                                                                                                                                                   (("1"
                                                                                                                                                                                                                     (lemma
                                                                                                                                                                                                                      "sq_lt"
                                                                                                                                                                                                                      ("nna"
                                                                                                                                                                                                                       "1 - sq(y!1) / 2"
                                                                                                                                                                                                                       "nnb"
                                                                                                                                                                                                                       "sqrt(1 - sq(AP))"))
                                                                                                                                                                                                                     (("1"
                                                                                                                                                                                                                       (rewrite
                                                                                                                                                                                                                        "sq_sqrt"
                                                                                                                                                                                                                        -1)
                                                                                                                                                                                                                       (("1"
                                                                                                                                                                                                                         (case
                                                                                                                                                                                                                          "sq(1 - sq(y!1) / 2) < 1 - sq(AP)")
                                                                                                                                                                                                                         (("1"
                                                                                                                                                                                                                           (assert)
                                                                                                                                                                                                                           nil
                                                                                                                                                                                                                           nil)
                                                                                                                                                                                                                          ("2"
                                                                                                                                                                                                                           (hide
                                                                                                                                                                                                                            2
                                                                                                                                                                                                                            -1
                                                                                                                                                                                                                            -2)
                                                                                                                                                                                                                           (("2"
                                                                                                                                                                                                                             (expand
                                                                                                                                                                                                                              "AP"
                                                                                                                                                                                                                              1)
                                                                                                                                                                                                                             (("2"
                                                                                                                                                                                                                               (expand
                                                                                                                                                                                                                                "sq"
                                                                                                                                                                                                                                1
                                                                                                                                                                                                                                1)
                                                                                                                                                                                                                               (("2"
                                                                                                                                                                                                                                 (simplify
                                                                                                                                                                                                                                  1)
                                                                                                                                                                                                                                 (("2"
                                                                                                                                                                                                                                   (expand
                                                                                                                                                                                                                                    "sq"
                                                                                                                                                                                                                                    1)
                                                                                                                                                                                                                                   (("2"
                                                                                                                                                                                                                                     (lemma
                                                                                                                                                                                                                                      "div_cancel1"
                                                                                                                                                                                                                                      ("x"
                                                                                                                                                                                                                                       "y!1*y!1"
                                                                                                                                                                                                                                       "n0z"
                                                                                                                                                                                                                                       "2"))
                                                                                                                                                                                                                                     (("2"
                                                                                                                                                                                                                                       (replace
                                                                                                                                                                                                                                        -1
                                                                                                                                                                                                                                        1)
                                                                                                                                                                                                                                       (("2"
                                                                                                                                                                                                                                         (lemma
                                                                                                                                                                                                                                          "both_sides_minus_lt1"
                                                                                                                                                                                                                                          ("x"
                                                                                                                                                                                                                                           "1 + y!1 * y!1 / 2 * (y!1 * y!1 / 2) - y!1 * y!1"
                                                                                                                                                                                                                                           "y"
                                                                                                                                                                                                                                           "1 - (1 / 6) * (1 / 6) * y!1 * y!1 * y!1 * y!1 * y!1 * y!1 -
                                                                              y!1 * y!1
                                                                              + (1 / 3) * y!1 * y!1 * y!1 * y!1"
                                                                                                                                                                                                                                           "z"
                                                                                                                                                                                                                                           "1-y!1*y!1"))
                                                                                                                                                                                                                                         (("2"
                                                                                                                                                                                                                                           (replace
                                                                                                                                                                                                                                            -1
                                                                                                                                                                                                                                            1
                                                                                                                                                                                                                                            rl)
                                                                                                                                                                                                                                           (("2"
                                                                                                                                                                                                                                             (simplify
                                                                                                                                                                                                                                              1)
                                                                                                                                                                                                                                             (("2"
                                                                                                                                                                                                                                               (hide
                                                                                                                                                                                                                                                -1)
                                                                                                                                                                                                                                               (("2"
                                                                                                                                                                                                                                                 (lemma
                                                                                                                                                                                                                                                  "both_sides_times_pos_lt1"
                                                                                                                                                                                                                                                  ("x"
                                                                                                                                                                                                                                                   "1/4"
                                                                                                                                                                                                                                                   "y"
                                                                                                                                                                                                                                                   "1/3-y!1*y!1/36"
                                                                                                                                                                                                                                                   "pz"
                                                                                                                                                                                                                                                   "y!1 * y!1 * y!1 * y!1"))
                                                                                                                                                                                                                                                 (("1"
                                                                                                                                                                                                                                                   (replace
                                                                                                                                                                                                                                                    -1
                                                                                                                                                                                                                                                    1)
                                                                                                                                                                                                                                                   (("1"
                                                                                                                                                                                                                                                     (hide
                                                                                                                                                                                                                                                      -1
                                                                                                                                                                                                                                                      -2)
                                                                                                                                                                                                                                                     (("1"
                                                                                                                                                                                                                                                       (case
                                                                                                                                                                                                                                                        "y!1 * y!1 / 36 < 1/12")
                                                                                                                                                                                                                                                       (("1"
                                                                                                                                                                                                                                                         (assert)
                                                                                                                                                                                                                                                         nil
                                                                                                                                                                                                                                                         nil)
                                                                                                                                                                                                                                                        ("2"
                                                                                                                                                                                                                                                         (hide
                                                                                                                                                                                                                                                          2)
                                                                                                                                                                                                                                                         (("2"
                                                                                                                                                                                                                                                           (expand
                                                                                                                                                                                                                                                            "sq"
                                                                                                                                                                                                                                                            -7)
                                                                                                                                                                                                                                                           (("2"
                                                                                                                                                                                                                                                             (assert)
                                                                                                                                                                                                                                                             nil
                                                                                                                                                                                                                                                             nil))
                                                                                                                                                                                                                                                           nil))
                                                                                                                                                                                                                                                         nil))
                                                                                                                                                                                                                                                       nil))
                                                                                                                                                                                                                                                     nil))
                                                                                                                                                                                                                                                   nil)
                                                                                                                                                                                                                                                  ("2"
                                                                                                                                                                                                                                                   (hide
                                                                                                                                                                                                                                                    2)
                                                                                                                                                                                                                                                   (("2"
                                                                                                                                                                                                                                                     (lemma
                                                                                                                                                                                                                                                      "sq_lt"
                                                                                                                                                                                                                                                      ("nna"
                                                                                                                                                                                                                                                       "0"
                                                                                                                                                                                                                                                       "nnb"
                                                                                                                                                                                                                                                       "sq(y!1)"))
                                                                                                                                                                                                                                                     (("2"
                                                                                                                                                                                                                                                       (rewrite
                                                                                                                                                                                                                                                        "sq_0")
                                                                                                                                                                                                                                                       (("2"
                                                                                                                                                                                                                                                         (assert)
                                                                                                                                                                                                                                                         (("2"
                                                                                                                                                                                                                                                           (expand
                                                                                                                                                                                                                                                            "sq"
                                                                                                                                                                                                                                                            -1)
                                                                                                                                                                                                                                                           (("2"
                                                                                                                                                                                                                                                             (assert)
                                                                                                                                                                                                                                                             nil
                                                                                                                                                                                                                                                             nil))
                                                                                                                                                                                                                                                           nil))
                                                                                                                                                                                                                                                         nil))
                                                                                                                                                                                                                                                       nil))
                                                                                                                                                                                                                                                     nil))
                                                                                                                                                                                                                                                   nil))
                                                                                                                                                                                                                                                 nil))
                                                                                                                                                                                                                                               nil))
                                                                                                                                                                                                                                             nil))
                                                                                                                                                                                                                                           nil))
                                                                                                                                                                                                                                         nil))
                                                                                                                                                                                                                                       nil))
                                                                                                                                                                                                                                     nil))
                                                                                                                                                                                                                                   nil))
                                                                                                                                                                                                                                 nil))
                                                                                                                                                                                                                               nil))
                                                                                                                                                                                                                             nil))
                                                                                                                                                                                                                           nil))
                                                                                                                                                                                                                         nil))
                                                                                                                                                                                                                       nil))
                                                                                                                                                                                                                     nil))
                                                                                                                                                                                                                   nil)
                                                                                                                                                                                                                  ("2"
                                                                                                                                                                                                                   (hide
                                                                                                                                                                                                                    2)
                                                                                                                                                                                                                   (("2"
                                                                                                                                                                                                                     (assert)
                                                                                                                                                                                                                     nil
                                                                                                                                                                                                                     nil))
                                                                                                                                                                                                                   nil))
                                                                                                                                                                                                                 nil))
                                                                                                                                                                                                               nil))
                                                                                                                                                                                                             nil))
                                                                                                                                                                                                           nil))
                                                                                                                                                                                                         nil))
                                                                                                                                                                                                       nil))
                                                                                                                                                                                                     nil))
                                                                                                                                                                                                   nil))
                                                                                                                                                                                                 nil)
                                                                                                                                                                                                ("2"
                                                                                                                                                                                                 (assert)
                                                                                                                                                                                                 nil
                                                                                                                                                                                                 nil))
                                                                                                                                                                                               nil))
                                                                                                                                                                                             nil))
                                                                                                                                                                                           nil))
                                                                                                                                                                                         nil))
                                                                                                                                                                                       nil))
                                                                                                                                                                                     nil))
                                                                                                                                                                                   nil)
                                                                                                                                                                                  ("2"
                                                                                                                                                                                   (assert)
                                                                                                                                                                                   nil
                                                                                                                                                                                   nil))
                                                                                                                                                                                 nil))
                                                                                                                                                                               nil)
                                                                                                                                                                              ("2"
                                                                                                                                                                               (assert)
                                                                                                                                                                               nil
                                                                                                                                                                               nil)
                                                                                                                                                                              ("3"
                                                                                                                                                                               (hide
                                                                                                                                                                                2)
                                                                                                                                                                               (("3"
                                                                                                                                                                                 (assert)
                                                                                                                                                                                 (("3"
                                                                                                                                                                                   (lemma
                                                                                                                                                                                    "sq_lt"
                                                                                                                                                                                    ("nna"
                                                                                                                                                                                     "0"
                                                                                                                                                                                     "nnb"
                                                                                                                                                                                     "y!1"))
                                                                                                                                                                                   (("3"
                                                                                                                                                                                     (rewrite
                                                                                                                                                                                      "sq_0")
                                                                                                                                                                                     (("3"
                                                                                                                                                                                       (assert)
                                                                                                                                                                                       nil
                                                                                                                                                                                       nil))
                                                                                                                                                                                     nil))
                                                                                                                                                                                   nil))
                                                                                                                                                                                 nil))
                                                                                                                                                                               nil))
                                                                                                                                                                             nil)
                                                                                                                                                                            ("2"
                                                                                                                                                                             (lemma
                                                                                                                                                                              "sq_lt"
                                                                                                                                                                              ("nna"
                                                                                                                                                                               "0"
                                                                                                                                                                               "nnb"
                                                                                                                                                                               "y!1"))
                                                                                                                                                                             (("2"
                                                                                                                                                                               (rewrite
                                                                                                                                                                                "sq_0")
                                                                                                                                                                               (("2"
                                                                                                                                                                                 (assert)
                                                                                                                                                                                 nil
                                                                                                                                                                                 nil))
                                                                                                                                                                               nil))
                                                                                                                                                                             nil))
                                                                                                                                                                           nil))
                                                                                                                                                                         nil))
                                                                                                                                                                       nil))
                                                                                                                                                                     nil))
                                                                                                                                                                   nil))
                                                                                                                                                                 nil))
                                                                                                                                                               nil))
                                                                                                                                                             nil)
                                                                                                                                                            ("2"
                                                                                                                                                             (replace
                                                                                                                                                              -1)
                                                                                                                                                             (("2"
                                                                                                                                                               (replace
                                                                                                                                                                -4
                                                                                                                                                                1
                                                                                                                                                                rl)
                                                                                                                                                               (("2"
                                                                                                                                                                 (simplify
                                                                                                                                                                  1)
                                                                                                                                                                 (("2"
                                                                                                                                                                   (hide-all-but
                                                                                                                                                                    1)
                                                                                                                                                                   (("2"
                                                                                                                                                                     (expand
                                                                                                                                                                      "sq")
                                                                                                                                                                     (("2"
                                                                                                                                                                       (assert)
                                                                                                                                                                       (("2"
                                                                                                                                                                         (name-replace
                                                                                                                                                                          "K1"
                                                                                                                                                                          "2 * (1 / 6) - (1 / 6) * (1 / 6)")
                                                                                                                                                                         (("2"
                                                                                                                                                                           (lemma
                                                                                                                                                                            "div_mult_pos_gt1"
                                                                                                                                                                            ("x"
                                                                                                                                                                             "1"
                                                                                                                                                                             "z"
                                                                                                                                                                             "1/2"
                                                                                                                                                                             "py"
                                                                                                                                                                             "sqrt(K1)"))
                                                                                                                                                                           (("1"
                                                                                                                                                                             (rewrite
                                                                                                                                                                              "div_div2"
                                                                                                                                                                              -1)
                                                                                                                                                                             (("1"
                                                                                                                                                                               (assert)
                                                                                                                                                                               (("1"
                                                                                                                                                                                 (lemma
                                                                                                                                                                                  "sq_gt"
                                                                                                                                                                                  ("nna"
                                                                                                                                                                                   "sqrt(K1)"
                                                                                                                                                                                   "nnb"
                                                                                                                                                                                   "1/2"))
                                                                                                                                                                                 (("1"
                                                                                                                                                                                   (rewrite
                                                                                                                                                                                    "sq_sqrt"
                                                                                                                                                                                    -1)
                                                                                                                                                                                   (("1"
                                                                                                                                                                                     (expand
                                                                                                                                                                                      "sq"
                                                                                                                                                                                      -1)
                                                                                                                                                                                     (("1"
                                                                                                                                                                                       (expand
                                                                                                                                                                                        "K1")
                                                                                                                                                                                       (("1"
                                                                                                                                                                                         (assert)
                                                                                                                                                                                         nil
                                                                                                                                                                                         nil))
                                                                                                                                                                                       nil))
                                                                                                                                                                                     nil))
                                                                                                                                                                                   nil))
                                                                                                                                                                                 nil))
                                                                                                                                                                               nil))
                                                                                                                                                                             nil)
                                                                                                                                                                            ("2"
                                                                                                                                                                             (lemma
                                                                                                                                                                              "sqrt_lt"
                                                                                                                                                                              ("nny"
                                                                                                                                                                               "0"
                                                                                                                                                                               "nnz"
                                                                                                                                                                               "2 * (1 / 6) - (1 / 6) * (1 / 6)"))
                                                                                                                                                                             (("2"
                                                                                                                                                                               (rewrite
                                                                                                                                                                                "sqrt_0")
                                                                                                                                                                               (("2"
                                                                                                                                                                                 (expand
                                                                                                                                                                                  "K1")
                                                                                                                                                                                 (("2"
                                                                                                                                                                                   (hide
                                                                                                                                                                                    2)
                                                                                                                                                                                   (("2"
                                                                                                                                                                                     (assert)
                                                                                                                                                                                     nil
                                                                                                                                                                                     nil))
                                                                                                                                                                                   nil))
                                                                                                                                                                                 nil))
                                                                                                                                                                               nil))
                                                                                                                                                                             nil)
                                                                                                                                                                            ("3"
                                                                                                                                                                             (hide
                                                                                                                                                                              2)
                                                                                                                                                                             (("3"
                                                                                                                                                                               (expand
                                                                                                                                                                                "K1")
                                                                                                                                                                               (("3"
                                                                                                                                                                                 (assert)
                                                                                                                                                                                 nil
                                                                                                                                                                                 nil))
                                                                                                                                                                               nil))
                                                                                                                                                                             nil))
                                                                                                                                                                           nil))
                                                                                                                                                                         nil))
                                                                                                                                                                       nil))
                                                                                                                                                                     nil))
                                                                                                                                                                   nil))
                                                                                                                                                                 nil))
                                                                                                                                                               nil))
                                                                                                                                                             nil))
                                                                                                                                                           nil))
                                                                                                                                                         nil)
                                                                                                                                                        ("2"
                                                                                                                                                         (hide
                                                                                                                                                          2)
                                                                                                                                                         (("2"
                                                                                                                                                           (lemma
                                                                                                                                                            "posreal_times_posreal_is_posreal"
                                                                                                                                                            ("px"
                                                                                                                                                             "y!1"
                                                                                                                                                             "py"
                                                                                                                                                             "y!1"))
                                                                                                                                                           (("1"
                                                                                                                                                             (assert)
                                                                                                                                                             nil
                                                                                                                                                             nil)
                                                                                                                                                            ("2"
                                                                                                                                                             (assert)
                                                                                                                                                             nil
                                                                                                                                                             nil))
                                                                                                                                                           nil))
                                                                                                                                                         nil)
                                                                                                                                                        ("3"
                                                                                                                                                         (assert)
                                                                                                                                                         nil
                                                                                                                                                         nil))
                                                                                                                                                       nil))
                                                                                                                                                     nil))
                                                                                                                                                   nil))
                                                                                                                                                 nil))
                                                                                                                                               nil))
                                                                                                                                             nil)
                                                                                                                                            ("2"
                                                                                                                                             (assert)
                                                                                                                                             nil
                                                                                                                                             nil))
                                                                                                                                           nil))
                                                                                                                                         nil))
                                                                                                                                       nil))
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil))
                                                                                                                               nil))
                                                                                                                             nil))
                                                                                                                           nil))
                                                                                                                         nil))
                                                                                                                       nil))
                                                                                                                     nil))
                                                                                                                   nil))
                                                                                                                 nil))
                                                                                                               nil)
                                                                                                              ("2"
                                                                                                               (hide-all-but
                                                                                                                1)
                                                                                                               (("2"
                                                                                                                 (skosimp*)
                                                                                                                 (("2"
                                                                                                                   (typepred
                                                                                                                    "x!1")
                                                                                                                   (("2"
                                                                                                                     (expand
                                                                                                                      ">=")
                                                                                                                     (("2"
                                                                                                                       (expand
                                                                                                                        "<="
                                                                                                                        -1)
                                                                                                                       (("2"
                                                                                                                         (split
                                                                                                                          -1)
                                                                                                                         (("1"
                                                                                                                           (lemma
                                                                                                                            "posreal_times_posreal_is_posreal"
                                                                                                                            ("px"
                                                                                                                             "x!1"
                                                                                                                             "py"
                                                                                                                             "x!1"))
                                                                                                                           (("1"
                                                                                                                             (lemma
                                                                                                                              "posreal_times_posreal_is_posreal"
                                                                                                                              ("px"
                                                                                                                               "x!1"
                                                                                                                               "py"
                                                                                                                               "x!1*x!1"))
                                                                                                                             (("1"
                                                                                                                               (lemma
                                                                                                                                "posreal_div_posreal_is_posreal"
                                                                                                                                ("px"
                                                                                                                                 "x!1*x!1*x!1"
                                                                                                                                 "py"
                                                                                                                                 "6"))
                                                                                                                               (("1"
                                                                                                                                 (lemma
                                                                                                                                  "lt_minus_lt1"
                                                                                                                                  ("x"
                                                                                                                                   "x!1"
                                                                                                                                   "y"
                                                                                                                                   "1"
                                                                                                                                   "w"
                                                                                                                                   "0"
                                                                                                                                   "z"
                                                                                                                                   "x!1 * x!1 * x!1 / 6"))
                                                                                                                                 (("1"
                                                                                                                                   (split
                                                                                                                                    -1)
                                                                                                                                   (("1"
                                                                                                                                     (expand
                                                                                                                                      "abs"
                                                                                                                                      1)
                                                                                                                                     (("1"
                                                                                                                                       (lemma
                                                                                                                                        "sq_le"
                                                                                                                                        ("nna"
                                                                                                                                         "x!1"
                                                                                                                                         "nnb"
                                                                                                                                         "1"))
                                                                                                                                       (("1"
                                                                                                                                         (expand
                                                                                                                                          "sq")
                                                                                                                                         (("1"
                                                                                                                                           (lemma
                                                                                                                                            "posreal_times_posreal_is_posreal"
                                                                                                                                            ("px"
                                                                                                                                             "1-x!1*x!1/6"
                                                                                                                                             "py"
                                                                                                                                             "x!1"))
                                                                                                                                           (("1"
                                                                                                                                             (assert)
                                                                                                                                             nil
                                                                                                                                             nil)
                                                                                                                                            ("2"
                                                                                                                                             (hide
                                                                                                                                              2)
                                                                                                                                             (("2"
                                                                                                                                               (assert)
                                                                                                                                               nil
                                                                                                                                               nil))
                                                                                                                                             nil))
                                                                                                                                           nil))
                                                                                                                                         nil))
                                                                                                                                       nil))
                                                                                                                                     nil)
                                                                                                                                    ("2"
                                                                                                                                     (propax)
                                                                                                                                     nil
                                                                                                                                     nil)
                                                                                                                                    ("3"
                                                                                                                                     (assert)
                                                                                                                                     nil
                                                                                                                                     nil))
                                                                                                                                   nil))
                                                                                                                                 nil)
                                                                                                                                ("2"
                                                                                                                                 (assert)
                                                                                                                                 nil
                                                                                                                                 nil))
                                                                                                                               nil)
                                                                                                                              ("2"
                                                                                                                               (propax)
                                                                                                                               nil
                                                                                                                               nil))
                                                                                                                             nil)
                                                                                                                            ("2"
                                                                                                                             (assert)
                                                                                                                             nil
                                                                                                                             nil))
                                                                                                                           nil)
                                                                                                                          ("2"
                                                                                                                           (replace
                                                                                                                            -1
                                                                                                                            *
                                                                                                                            rl)
                                                                                                                           (("2"
                                                                                                                             (expand
                                                                                                                              "abs")
                                                                                                                             (("2"
                                                                                                                               (propax)
                                                                                                                               nil
                                                                                                                               nil))
                                                                                                                             nil))
                                                                                                                           nil))
                                                                                                                         nil))
                                                                                                                       nil))
                                                                                                                     nil))
                                                                                                                   nil))
                                                                                                                 nil))
                                                                                                               nil))
                                                                                                             nil))
                                                                                                           nil))
                                                                                                         nil))
                                                                                                       nil))
                                                                                                     nil))
                                                                                                   nil))
                                                                                                 nil))
                                                                                               nil)
                                                                                              ("2"
                                                                                               (hide-all-but
                                                                                                1)
                                                                                               (("2"
                                                                                                 (skosimp*)
                                                                                                 (("2"
                                                                                                   (typepred
                                                                                                    "x!1")
                                                                                                   (("2"
                                                                                                     (expand
                                                                                                      ">=")
                                                                                                     (("2"
                                                                                                       (expand
                                                                                                        "<="
                                                                                                        -1)
                                                                                                       (("2"
                                                                                                         (split
                                                                                                          -1)
                                                                                                         (("1"
                                                                                                           (lemma
                                                                                                            "posreal_times_posreal_is_posreal"
                                                                                                            ("px"
                                                                                                             "1-x!1*x!1/6"
                                                                                                             "py"
                                                                                                             "x!1"))
                                                                                                           (("1"
                                                                                                             (expand
                                                                                                              "abs")
                                                                                                             (("1"
                                                                                                               (assert)
                                                                                                               nil
                                                                                                               nil))
                                                                                                             nil)
                                                                                                            ("2"
                                                                                                             (assert)
                                                                                                             nil
                                                                                                             nil)
                                                                                                            ("3"
                                                                                                             (hide
                                                                                                              2)
                                                                                                             (("3"
                                                                                                               (lemma
                                                                                                                "sq_le"
                                                                                                                ("nna"
                                                                                                                 "x!1"
                                                                                                                 "nnb"
                                                                                                                 "1"))
                                                                                                               (("3"
                                                                                                                 (expand
                                                                                                                  "sq")
                                                                                                                 (("3"
                                                                                                                   (assert)
                                                                                                                   nil
                                                                                                                   nil))
                                                                                                                 nil))
                                                                                                               nil))
                                                                                                             nil))
                                                                                                           nil)
                                                                                                          ("2"
                                                                                                           (replace
                                                                                                            -1
                                                                                                            *
                                                                                                            rl)
                                                                                                           (("2"
                                                                                                             (expand
                                                                                                              "abs")
                                                                                                             (("2"
                                                                                                               (assert)
                                                                                                               nil
                                                                                                               nil))
                                                                                                             nil))
                                                                                                           nil))
                                                                                                         nil))
                                                                                                       nil))
                                                                                                     nil))
                                                                                                   nil))
                                                                                                 nil))
                                                                                               nil)
                                                                                              ("3"
                                                                                               (hide-all-but
                                                                                                1)
                                                                                               (("3"
                                                                                                 (skosimp*)
                                                                                                 (("3"
                                                                                                   (case
                                                                                                    "x!1 = 0")
                                                                                                   (("1"
                                                                                                     (inst
                                                                                                      +
                                                                                                      "1/2")
                                                                                                     (("1"
                                                                                                       (assert)
                                                                                                       nil
                                                                                                       nil)
                                                                                                      ("2"
                                                                                                       (expand
                                                                                                        "abs")
                                                                                                       (("2"
                                                                                                         (assert)
                                                                                                         nil
                                                                                                         nil))
                                                                                                       nil))
                                                                                                     nil)
                                                                                                    ("2"
                                                                                                     (inst
                                                                                                      +
                                                                                                      "0")
                                                                                                     (("1"
                                                                                                       (assert)
                                                                                                       nil
                                                                                                       nil)
                                                                                                      ("2"
                                                                                                       (expand
                                                                                                        "abs")
                                                                                                       (("2"
                                                                                                         (assert)
                                                                                                         nil
                                                                                                         nil))
                                                                                                       nil))
                                                                                                     nil))
                                                                                                   nil))
                                                                                                 nil))
                                                                                               nil)
                                                                                              ("4"
                                                                                               (hide-all-but
                                                                                                1)
                                                                                               (("4"
                                                                                                 (grind)
                                                                                                 nil
                                                                                                 nil))
                                                                                               nil))
                                                                                             nil))
                                                                                           nil))
                                                                                         nil))
                                                                                       nil))
                                                                                     nil))
                                                                                   nil))
                                                                                 nil))
                                                                               nil))
                                                                             nil))
                                                                           nil))
                                                                         nil))
                                                                       nil))
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil))
                                                 nil))
                                               nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil)
                      ("2" (hide-all-but 1)
                       (("2" (skosimp*)
                         (("2" (case "x!1=0")
                           (("1" (inst + "1") (("1" (assert) nil nil)) nil)
                            ("2" (inst + "0") (("2" (assert) nil nil)) nil))
                           nil))
                         nil))
                       nil)
                      ("3" (hide-all-but 1) (("3" (grind) nil nil)) nil))
                     nil))
                   nil))
                 nil)
                ("2" (hide 2)
                 (("2" (lemma "sq_le" ("nnb" "px!1" "nna" "sqrt(6)"))
                   (("2" (flatten)
                     (("2" (rewrite "sq_sqrt")
                       (("2" (assert)
                         (("2" (hide -1)
                           (("2" (typepred "px!1")
                             (("2" (expand "abs")
                               (("2" (assert)
                                 (("2"
                                   (lemma "sq_le" ("nna" "px!1" "nnb" "1"))
                                   (("2" (rewrite "sq_1")
                                     (("2" (assert) nil nil)) nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil))
           nil))
         nil)
        ((deriv_id_fun formula-decl nil derivatives analysis)
         (const_fun const-decl "[T -> real]" real_fun_ops reals)
         (deriv_diff_fun formula-decl nil derivatives analysis)
         (deriv_fun type-eq-decl nil derivatives analysis)
         (pi_bnds formula-decl nil atan nil)
         (minimum_derivative formula-decl nil derivative_props analysis)
         (sqrt_pos judgement-tcc nil sqrt reals)
         (sqrt_lt formula-decl nil sqrt reals)
         (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
         (sq_lt formula-decl nil sq reals)
         (restrict2_deriv formula-decl nil restrict2_deriv analysis)
         (sqrt_1 formula-decl nil sqrt reals) (sq_0 formula-decl nil sq reals)
         (sq const-decl "nonneg_real" sq reals)
         (restrict2 const-decl "[T1 -> real]" restrict2_deriv analysis)
         (restrict2_derivable formula-decl nil restrict2_deriv analysis)
         (diff_derivable_fun formula-decl nil derivatives analysis)
         (identity_derivable_fun formula-decl nil derivatives analysis)
         (const_derivable_fun formula-decl nil derivatives analysis)
         (deriv_prod_fun formula-decl nil derivatives analysis)
         (scal_derivable_fun formula-decl nil derivatives analysis)
         (deriv_comp_fun formula-decl nil chain_rule analysis)
         (sq_le formula-decl nil sq reals) (sq_rew formula-decl nil sq reals)
         (sqrt_0 formula-decl nil sqrt reals)
         (sq_sqrt formula-decl nil sqrt reals)
         (sq_1 formula-decl nil sq reals) (sq_gt formula-decl nil sq reals)
         (composition_derivable_fun formula-decl nil chain_rule analysis)
         (deriv_scal_fun formula-decl nil derivatives analysis)
         (prod_derivable_fun formula-decl nil derivatives analysis)
         (deriv_const_fun formula-decl nil derivatives analysis))
        nil))
      (sin_atan 0
       (sin_atan-1 nil 3707552658
        ("" (skosimp*)
         (("" (name "Y" "atan(x!1)")
           (("" (case "tan(Y) = x!1")
             (("1" (expand "tan")
               (("1" (cross-mult -1)
                 (("1" (case-replace "sq(sin(Y)) = sq(x!1 * cos(Y))")
                   (("1" (hide -2)
                     (("1" (rewrite "sq_times")
                       (("1" (lemma sin2_cos2)
                         (("1" (inst?)
                           (("1"
                             (case "sq(sin(Y)) = sq(x!1) * (1 - sq(sin(Y)))")
                             (("1" (hide -2 -3)
                               (("1" (assert)
                                 (("1"
                                   (case "(1+sq(x!1))*sq(sin(Y)) = sq(x!1)")
                                   (("1" (div-by -1 "1+sq(x!1)")
                                     (("1"
                                       (lemma "sqrt_eq")
                                       (("1"
                                         (inst?)
                                         (("1"
                                           (flatten)
                                           (("1"
                                             (hide -1)
                                             (("1"
                                               (split -1)
                                               (("1"
                                                 (rewrite "sqrt_div")
                                                 (("1"
                                                   (rewrite "sqrt_sq_abs")
                                                   (("1"
                                                     (rewrite "sqrt_sq_abs")
                                                     (("1"
                                                       (expand "abs")
                                                       (("1"
                                                         (lift-if)
                                                         (("1"
                                                           (lift-if)
                                                           (("1"
                                                             (assert)
                                                             (("1"
                                                               (ground)
                                                               (("1"
                                                                 (replace
                                                                  -5
                                                                  *
                                                                  rl)
                                                                 (("1"
                                                                   (hide -5)
                                                                   (("1"
                                                                     (lemma
                                                                      "sin_gt_0")
                                                                     (("1"
                                                                       (inst?)
                                                                       (("1"
                                                                         (assert)
                                                                         (("1"
                                                                           (lemma
                                                                            "atan_gt_0")
                                                                           (("1"
                                                                             (inst?)
                                                                             (("1"
                                                                               (assert)
                                                                               nil
                                                                               nil))
                                                                             nil))
                                                                           nil))
                                                                         nil))
                                                                       nil))
                                                                     nil))
                                                                   nil))
                                                                 nil)
                                                                ("2"
                                                                 (lift-if)
                                                                 (("2"
                                                                   (ground)
                                                                   (("2"
                                                                     (lemma
                                                                      "sin_gt")
                                                                     (("2"
                                                                       (inst
                                                                        -
                                                                        "atan(x!1)"
                                                                        "0")
                                                                       (("2"
                                                                         (assert)
                                                                         (("2"
                                                                           (rewrite
                                                                            "sin_0")
                                                                           (("2"
                                                                             (assert)
                                                                             (("2"
                                                                               (lemma
                                                                                "atan_gt_0")
                                                                               (("2"
                                                                                 (inst?)
                                                                                 (("2"
                                                                                   (assert)
                                                                                   nil
                                                                                   nil))
                                                                                 nil))
                                                                               nil))
                                                                             nil))
                                                                           nil))
                                                                         nil))
                                                                       nil))
                                                                     nil))
                                                                   nil))
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil))
                                                 nil)
                                                ("2" (propax) nil nil))
                                               nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil))
                                     nil)
                                    ("2" (assert) nil nil))
                                   nil))
                                 nil))
                               nil)
                              ("2" (assert) nil nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil)
                    ("2" (assert) nil nil))
                   nil))
                 nil))
               nil)
              ("2" (assert)
               (("2" (hide 2)
                 (("2" (typepred "atan(x!1)")
                   (("2" (expand "tan_restrict") (("2" (assert) nil nil))
                     nil))
                   nil))
                 nil))
               nil)
              ("3" (lemma "tan_prep") (("3" (inst?) nil nil)) nil))
             nil))
           nil))
         nil)
        ((atan const-decl "{x: real_abs_lt_pi2 | y = tan_restrict(x)}" atan
               nil)
         (tan_restrict const-decl "real" trig_basic nil)
         (real_abs_lt_pi2 nonempty-type-eq-decl nil trig_types nil)
         (pi const-decl "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}"
          pi_def nil)
         (cos const-decl "real" sincos_def nil)
         (> const-decl "bool" reals nil)
         (- const-decl "[numfield -> numfield]" number_fields nil)
         (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
         (nznum nonempty-type-eq-decl nil number_fields nil)
         (/= const-decl "boolean" notequal nil)
         (numfield nonempty-type-eq-decl nil number_fields nil)
         (< const-decl "bool" reals nil)
         (AND const-decl "[bool, bool -> bool]" booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (real_pred const-decl "[number_field -> boolean]" reals nil)
         (number_field nonempty-type-from-decl nil number_fields nil)
         (number_field_pred const-decl "[number -> boolean]" number_fields
          nil)
         (real nonempty-type-from-decl nil reals nil)
         (= const-decl "[T, T -> boolean]" equalities nil)
         (boolean nonempty-type-decl nil booleans nil)
         (number nonempty-type-decl nil numbers nil)
         (tan_prep formula-decl nil trig_basic nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (sq const-decl "nonneg_real" sq reals)
         (nonneg_real nonempty-type-eq-decl nil real_types nil)
         (>= const-decl "bool" reals nil)
         (sqrt_pos application-judgement "posreal" sqrt reals)
         (sq_times formula-decl nil sq reals)
         (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
          real_types nil)
         (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
          real_types nil)
         (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (sqrt_eq formula-decl nil sqrt reals)
         (sqrt_sq_abs formula-decl nil sqrt reals)
         (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
              nil)
         (atan_gt_0 formula-decl nil atan nil)
         (real_gt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (sin_gt_0 formula-decl nil trig_ineq nil)
         (sin_0 formula-decl nil sincos_def nil)
         (real_le_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (nzreal_div_nzreal_is_nzreal application-judgement "nzreal"
          real_types nil)
         (posreal_div_posreal_is_posreal application-judgement "posreal"
          real_types nil)
         (posreal_times_posreal_is_posreal application-judgement "posreal"
          real_types nil)
         (sin_gt formula-decl nil trig_ineq nil)
         (minus_real_is_real application-judgement "real" reals nil)
         (real_ge_is_total_order name-judgement "(total_order?[real])"
          real_props nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (sqrt_div formula-decl nil sqrt reals)
         (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
          real_types nil)
         (times_div_cancel1 formula-decl nil extra_real_props nil)
         (both_sides_div1 formula-decl nil real_props nil)
         (real_minus_real_is_real application-judgement "real" reals nil)
         (posreal_plus_nnreal_is_posreal application-judgement "posreal"
          real_types nil)
         (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
         (sin2_cos2 formula-decl nil sincos_def nil)
         (real_times_real_is_real application-judgement "real" reals nil)
         (sin_range application-judgement "real_abs_le1" sincos nil)
         (cos_range application-judgement "real_abs_le1" sincos nil)
         (sin const-decl "real" sincos_def nil)
         (nonzero_real nonempty-type-eq-decl nil reals nil)
         (div_cancel3 formula-decl nil real_props nil)
         (real_div_nzreal_is_real application-judgement "real" reals nil)
         (tan const-decl "real" trig_basic nil)
         (Tan? const-decl "bool" trig_basic nil)
         (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
          nil)
         (pi_bound name-judgement
          "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def nil))
        nil)))

