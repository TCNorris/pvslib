trig_safe_ops: THEORY
BEGIN

  IMPORTING trig_basic

  % Tangent

  tan_safe(x:real): real = IF Tan?(x) THEN tan(x) ELSE 0 ENDIF

  tan_safe_eq
  : LEMMA FORALL(x: real)
    : Tan?(x) IMPLIES tan_safe(x) = tan(x)

  % Arc Sine

  IMPORTING asin

  asin_safe(x: real): real_abs_le_pi2
  = asin(max(-1.0,min(x,1.0)))

  asin_safe_eq
  : LEMMA FORALL(x: real_abs_le1)
    : asin_safe(x) = asin(x)

  % Arc Cosine
  
  IMPORTING acos
  
  acos_safe(x: real): nnreal_le_pi
  = acos(max(-1.0,min(x,1.0)))

  acos_safe_eq
  : LEMMA FORALL(x: real_abs_le1)
    : acos_safe(x) = acos(x)
    
  % 2-Argument Arctangent.
  % Contrary to the defintion in trig@atan2, atan2_safe carries its arguments
  % in the conventional order.

  IMPORTING atan2

  atan2_safe(y: real, x: real): nnreal_lt_2pi
  = IF (y = 0 AND x = 0)
    THEN 0
    ELSE atan2(x, y) ENDIF

  atan2_safe_eq
  : LEMMA FORALL(x,y: real)
    : NOT (y=0 AND x=0) IMPLIES atan2_safe(y,x) = atan2(x,y)

END trig_safe_ops
