(vardirselector_into_a2lvardirselector
 (represented_by_TCC1 0
  (represented_by_TCC1-1 nil 3687698618
   ("" (skeep)
    (("" (expand "represents")
      (("" (skeep*)
        ((""
          (lemma "polylist__represents_multibernstein[terms_1,nvars_1,dm_1]")
          (("" (inst - "mp")
            (("" (lemma "representation__is_canonical[terms_1,nvars_1,dm_1]")
              (("" (invoke (inst -1 "%1" "%2" "mp") (! -2 1) (! -3 1))
                (("" (assert) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((represents const-decl "bool" vardirselector_into_a2lvardirselector nil)
    (DegreeMono type-eq-decl nil util nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (polylist__represents_multibernstein formula-decl nil
     multibernstein_into_polylist nil)
    (representation__is_canonical formula-decl nil
     multibernstein_into_polylist nil)
    (list type-decl nil list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (PolyList type-eq-decl nil util nil)
    (MultiPolynomial type-eq-decl nil util nil)
    (polylist const-decl "PolyList" util nil)
    (Polynomial type-eq-decl nil util nil)
    (Polyproduct type-eq-decl nil util nil)
    (MultiBernstein type-eq-decl nil util nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (represented_by subtype
    "LAMBDA (mb: util.MultiBernstein, dm: util.DegreeMono, nvars: integers.posnat, terms: integers.posnat, cf: util.Coeff, level: naturalnumbers.nat): vardirselector_into_a2lvardirselector.a2l__varselect(util.polylist(mb, dm, nvars, terms), dm, nvars, terms, cf, level)"
    "{vs: vardirselector.VarSelector | vardirselector_into_a2lvardirselector.represents(vardirselector_into_a2lvardirselector.a2l__varselect, vs)}"))))

