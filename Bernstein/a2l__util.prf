(a2l__util
 (maximum_degree_TCC1 0
  (maximum_degree_TCC1-1 nil 3685977413 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (lt_realorder name-judgement "RealOrder" real_orders reals)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (gt_realorder name-judgement "RealOrder" real_orders reals)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (ge_realorder name-judgement "RealOrder" real_orders reals)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers nil)
    (le_realorder name-judgement "RealOrder" real_orders reals)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil))
   nil
   (maximum_degree subtype "a2l__util.current_degree"
    "{n: naturalnumbers.nat | FORALL (i: naturalnumbers.below(a2l__util.nvars)): reals.<=(a2l__util.coeffmono(i), n)}")))
 (maximum_degree_TCC2 0
  (maximum_degree_TCC2-2 nil 3685977748
   ("" (skeep) (("" (typepred "nvars") (("" (assert) nil nil)) nil)) nil)
   ((posnat nonempty-type-eq-decl nil integers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (> const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (gt_realorder name-judgement "RealOrder" real_orders reals)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (ge_realorder name-judgement "RealOrder" real_orders reals)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil))
   nil
   (maximum_degree subtype "(number_fields.-)(a2l__util.nvars, 1)" "posnat"))
  (maximum_degree_TCC2-1 nil 3685977413 ("" (subtype-tcc) nil nil) nil nil
   (maximum_degree subtype "(number_fields.-)(a2l__util.nvars, 1)" "posnat")))
 (maximum_degree_TCC3 0
  (maximum_degree_TCC3-1 nil 3685977413 ("" (termination-tcc) nil nil) nil nil
   (maximum_degree termination
    "a2l__util.maximum_degree(a2l__util.coeffmono, (number_fields.-)(a2l__util.nvars, 1))"
    "nil")))
 (maximum_degree_TCC4 0
  (maximum_degree_TCC4-2 nil 3685977699
   ("" (skeep)
    (("" (skeep 2)
      (("" (typepred "nvars")
        (("" (skeep 2)
          (("" (typepred "v(coeffmono, nvars-1)")
            (("1" (inst - "i")
              (("1" (assert) nil nil)
               ("2" (typepred "i") (("2" (assert) nil nil)) nil))
              nil)
             ("2" (assert) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (lt_realorder name-judgement "RealOrder" real_orders reals)
    (nvars skolem-const-decl "posnat" a2l__util nil)
    (i skolem-const-decl "below(nvars)" a2l__util nil)
    (le_realorder name-judgement "RealOrder" real_orders reals)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (gt_realorder name-judgement "RealOrder" real_orders reals)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (ge_realorder name-judgement "RealOrder" real_orders reals)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (below type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil) (CoeffMono type-eq-decl nil util nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil))
   nil
   (maximum_degree subtype "a2l__util.current_degree"
    "{n: naturalnumbers.nat | FORALL (i: naturalnumbers.below(a2l__util.nvars)): reals.<=(a2l__util.coeffmono(i), n)}"))
  (maximum_degree_TCC4-1 nil 3685977413 ("" (subtype-tcc) nil nil) nil nil
   (maximum_degree subtype "a2l__util.current_degree"
    "{n: naturalnumbers.nat | FORALL (i: naturalnumbers.below(a2l__util.nvars)): reals.<=(a2l__util.coeffmono(i), n)}")))
 (maximum_degree_TCC5 0
  (maximum_degree_TCC5-2 nil 3685977785
   ("" (skeep)
    (("" (skeep 2)
      (("" (typepred "v(coeffmono, nvars-1)")
        (("1" (skeep 3)
          (("1" (case "i=nvars-1")
            (("1" (replace -1 -3 RL) (("1" (assert) nil nil)) nil)
             ("2" (inst - "i") (("1" (assert) nil nil) ("2" (assert) nil nil))
              nil))
            nil))
          nil)
         ("2" (assert) nil nil))
        nil))
      nil))
    nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (lt_realorder name-judgement "RealOrder" real_orders reals)
    (nvars skolem-const-decl "posnat" a2l__util nil)
    (i skolem-const-decl "below(nvars)" a2l__util nil)
    (le_realorder name-judgement "RealOrder" real_orders reals)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (gt_realorder name-judgement "RealOrder" real_orders reals)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (ge_realorder name-judgement "RealOrder" real_orders reals)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (below type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil) (CoeffMono type-eq-decl nil util nil))
   nil
   (maximum_degree subtype "a2l__util.rec_maximum"
    "{n: naturalnumbers.nat | FORALL (i: naturalnumbers.below(a2l__util.nvars)): reals.<=(a2l__util.coeffmono(i), n)}"))
  (maximum_degree_TCC5-1 nil 3685977413 ("" (subtype-tcc) nil nil) nil nil
   (maximum_degree subtype "a2l__util.rec_maximum"
    "{n: naturalnumbers.nat | FORALL (i: naturalnumbers.below(a2l__util.nvars)): reals.<=(a2l__util.coeffmono(i), n)}")))
 (maximum_degree_TCC6 0
  (maximum_degree_TCC6-1 nil 3685977413 ("" (subtype-tcc) nil nil) nil nil
   (maximum_degree subtype "(number_fields.-)(a2l__util.nvars, 1)" "nat"))))

