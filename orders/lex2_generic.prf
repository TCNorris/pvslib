(lex2_generic
 (lt_lex2_wf 0
  (lt_lex2_wf-2 "" 3745025740
   ("" (expand "well_founded?")
    (("" (skeep)
      (("" (skeep)
        (("" (typepred "ltA")
          (("" (expand "well_founded?")
            (("" (inst -1 "LAMBDA(a: A): EXISTS(b: B): p(a, b)")
              (("" (split -1)
                (("1" (skolem -1 "a_min")
                  (("1" (typepred "ltB")
                    (("1" (expand "well_founded?")
                      (("1" (inst -1 "LAMBDA(b: B): p(a_min, b)")
                        (("1" (split -1)
                          (("1" (skolem -1 "b_min")
                            (("1" (inst 1 "(a_min, b_min)")
                              (("1"
                                (skolem 1 "a_b")
                                (("1"
                                  (expand "lt_lex2")
                                  (("1"
                                    (name "a" "a_b`1")
                                    (("1"
                                      (replaces -1)
                                      (("1"
                                        (name-replace "b" "a_b`2")
                                        (("1"
                                          (split -4)
                                          (("1"
                                            (inst? -3)
                                            (("1"
                                              (typepred "a_b")
                                              (("1"
                                                (inst 1 "b")
                                                (("1"
                                                  (expand "a")
                                                  (("1"
                                                    (expand "b")
                                                    (("1"
                                                      (hide-all-but
                                                       (-1 1))
                                                      (("1"
                                                        (case
                                                         "a_b = (a_b`1, a_b`2)")
                                                        (("1"
                                                          (replace -1)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (inst? -3)
                                              (("2"
                                                (typepred "a_b")
                                                (("2"
                                                  (case "a_b = (a, b)")
                                                  (("1"
                                                    (grind)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (hide-all-but 1)
                                                    (("2"
                                                      (expand "a")
                                                      (("2"
                                                        (expand "b")
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (typepred "a_min")
                            (("2" (propax) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (inst 1 "y`1")
                  (("2" (inst 1 "y`2") (("2" (grind) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (lt_lex2_wf subtype "lex2_generic.lt_lex2"
    "(orders[[lex2_generic.A, lex2_generic.B]].well_founded?)"))
  (lt_lex2_wf-1 nil 3642848886
   ("" (expand "well_founded?")
    (("" (skeep)
      (("" (skeep)
        (("" (typepred "ltA")
          (("" (expand "well_founded?")
            (("" (inst -1 "LAMBDA(a: A): EXISTS(b: B): p(a, b)")
              (("" (split -1)
                (("1" (skolem -1 "a_min")
                  (("1" (typepred "ltB")
                    (("1" (expand "well_founded?")
                      (("1" (inst -1 "LAMBDA(b: B): p(a_min, b)")
                        (("1" (split -1)
                          (("1" (skolem -1 "b_min")
                            (("1" (inst 1 "(a_min, b_min)")
                              (("1"
                                (skolem 1 "a_b")
                                (("1"
                                  (expand "lt_lex2")
                                  (("1"
                                    (name "a" "a_b`1")
                                    (("1"
                                      (replaces -1)
                                      (("1"
                                        (name-replace "b" "a_b`2")
                                        (("1"
                                          (split -4)
                                          (("1"
                                            (inst? -3)
                                            (("1"
                                              (typepred "a_b")
                                              (("1"
                                                (inst 1 "b")
                                                (("1"
                                                  (expand "a")
                                                  (("1"
                                                    (expand "b")
                                                    (("1"
                                                      (hide-all-but
                                                       (-1 1))
                                                      (("1"
                                                        (case
                                                         "a_b = (a_b`1, a_b`2)")
                                                        (("1"
                                                          (grind)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (inst? -3)
                                              (("2"
                                                (typepred "a_b")
                                                (("2"
                                                  (case "a_b = (a, b)")
                                                  (("1"
                                                    (grind)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (hide-all-but 1)
                                                    (("2"
                                                      (expand "a")
                                                      (("2"
                                                        (expand "b")
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (typepred "a_min")
                            (("2" (propax) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (inst 1 "y`1")
                  (("2" (inst 1 "y`2") (("2" (grind) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((ltA formal-const-decl "(well_founded?[A])" lex2_generic nil)
    (pred type-eq-decl nil defined_types nil)
    (A formal-type-decl nil lex2_generic nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (B formal-type-decl nil lex2_generic nil)
    (lt_lex2 const-decl "bool" lex2_generic nil)
    (TRUE const-decl "bool" booleans nil)
    (b skolem-const-decl "B" lex2_generic nil)
    (a skolem-const-decl "A" lex2_generic nil)
    (p skolem-const-decl "pred[[A, B]]" lex2_generic nil)
    (a_min skolem-const-decl "(LAMBDA (a: A): EXISTS (b: B): p(a, b))"
     lex2_generic nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (ltB formal-const-decl "(well_founded?[B])" lex2_generic nil)
    (well_founded? const-decl "bool" orders nil))
   nil
   (lt_lex2_wf subtype "lex2_generic.lt_lex2"
    "(orders[[lex2_generic.A, lex2_generic.B]].well_founded?)"))))

