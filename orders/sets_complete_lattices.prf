(sets_complete_lattices
 (subset_equals_pointwise_implies 0
  (subset_equals_pointwise_implies-1 nil 3318704900
   ("" (expand* "subset?" "member" "pointwise") nil nil)
   ((pointwise const-decl "bool" pointwise_orders nil)
    (member const-decl "bool" sets nil) (subset? const-decl "bool" sets nil))
   shostak))
 (subset_is_a_complete_lattice 0
  (subset_is_a_complete_lattice-1 nil 3318704881
   ("" (rewrite "subset_equals_pointwise_implies")
    (("" (rewrite "pointwise_preserves_complete_lattices") nil nil)) nil)
   ((pointwise_preserves_complete_lattices judgement-tcc nil pointwise_orders
     nil)
    (pred type-eq-decl nil defined_types nil)
    (complete_lattice? const-decl "bool" bounded_orders nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (T formal-type-decl nil sets_complete_lattices nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (pointwise_preserves_complete_lattices application-judgement
     "(complete_lattice?[[T -> bool]])" sets_complete_lattices nil)
    (implies_is_total_order name-judgement "(total_order?[bool])"
     booleans_are_finite nil)
    (subset_equals_pointwise_implies formula-decl nil sets_complete_lattices
     nil))
   nil
   (subset_is_a_complete_lattice subtype
    "sets[sets_complete_lattices.T].subset?"
    "(bounded_orders[set[T]].complete_lattice?)"))))

