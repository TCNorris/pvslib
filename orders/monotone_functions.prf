(monotone_functions
 (increasing_is_nondecreasing 0
  (increasing_is_nondecreasing-1 nil 3314545792 ("" (grind) nil nil)
   ((D formal-type-decl nil monotone_functions nil)
    (irreflexive_kernel const-decl "(irreflexive?)" closure_ops nil)
    (R formal-type-decl nil monotone_functions nil)
    (member const-decl "bool" sets nil) (difference const-decl "set" sets nil)
    (preserves const-decl "bool" functions nil)
    (increasing? const-decl "bool" monotone_functions nil)
    (reflexive_closure const-decl "(reflexive?)" closure_ops nil)
    (union const-decl "set" sets nil)
    (nondecreasing? const-decl "bool" monotone_functions nil))
   shostak))
 (decreasing_is_nonincreasing 0
  (decreasing_is_nonincreasing-1 nil 3314545806 ("" (grind) nil nil)
   ((D formal-type-decl nil monotone_functions nil)
    (irreflexive_kernel const-decl "(irreflexive?)" closure_ops nil)
    (R formal-type-decl nil monotone_functions nil)
    (member const-decl "bool" sets nil) (difference const-decl "set" sets nil)
    (inverts const-decl "bool" functions nil)
    (decreasing? const-decl "bool" monotone_functions nil)
    (reflexive_closure const-decl "(reflexive?)" closure_ops nil)
    (union const-decl "set" sets nil)
    (nonincreasing? const-decl "bool" monotone_functions nil))
   shostak))
 (not_increasing_and_nonincreasing 0
  (not_increasing_and_nonincreasing-1 nil 3314545810 ("" (grind) nil nil)
   ((nonincreasing? const-decl "bool" monotone_functions nil)
    (inverts const-decl "bool" functions nil)
    (union const-decl "set" sets nil)
    (reflexive_closure const-decl "(reflexive?)" closure_ops nil)
    (increasing? const-decl "bool" monotone_functions nil)
    (preserves const-decl "bool" functions nil)
    (difference const-decl "set" sets nil) (member const-decl "bool" sets nil)
    (R formal-type-decl nil monotone_functions nil)
    (irreflexive_kernel const-decl "(irreflexive?)" closure_ops nil)
    (D formal-type-decl nil monotone_functions nil)
    (/= const-decl "boolean" notequal nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (pred type-eq-decl nil defined_types nil)
    (trichotomous? const-decl "bool" orders nil)
    (PRED type-eq-decl nil defined_types nil)
    (antisymmetric? const-decl "bool" relations nil))
   shostak))
 (not_decreasing_and_nondecreasing 0
  (not_decreasing_and_nondecreasing-1 nil 3314547203 ("" (grind) nil nil)
   ((nondecreasing? const-decl "bool" monotone_functions nil)
    (preserves const-decl "bool" functions nil)
    (union const-decl "set" sets nil)
    (reflexive_closure const-decl "(reflexive?)" closure_ops nil)
    (decreasing? const-decl "bool" monotone_functions nil)
    (inverts const-decl "bool" functions nil)
    (difference const-decl "set" sets nil) (member const-decl "bool" sets nil)
    (R formal-type-decl nil monotone_functions nil)
    (irreflexive_kernel const-decl "(irreflexive?)" closure_ops nil)
    (D formal-type-decl nil monotone_functions nil)
    (/= const-decl "boolean" notequal nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (pred type-eq-decl nil defined_types nil)
    (trichotomous? const-decl "bool" orders nil)
    (PRED type-eq-decl nil defined_types nil)
    (antisymmetric? const-decl "bool" relations nil))
   shostak))
 (increasing_converse_decreasing1 0
  (increasing_converse_decreasing1-1 nil 3314547237
   ("" (grind-with-ext :if-match nil)
    (("1" (inst - "x1!1" "x2!1") (("1" (assert) nil nil)) nil)
     ("2" (inst - "x1!1" "x2!1") (("2" (assert) nil nil)) nil)
     ("3" (inst - "x1!1" "x2!1") (("3" (assert) nil nil)) nil)
     ("4" (inst - "x1!1" "x2!1") (("4" (assert) nil nil)) nil))
    nil)
   ((inverts const-decl "bool" functions nil)
    (preserves const-decl "bool" functions nil)
    (difference const-decl "set" sets nil) (member const-decl "bool" sets nil)
    (irreflexive_kernel const-decl "(irreflexive?)" closure_ops nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (pred type-eq-decl nil defined_types nil)
    (increasing? const-decl "bool" monotone_functions nil)
    (decreasing? const-decl "bool" monotone_functions nil)
    (converse const-decl "pred[[T2, T1]]" relation_defs nil)
    (boolean nonempty-type-decl nil booleans nil)
    (R formal-type-decl nil monotone_functions nil)
    (D formal-type-decl nil monotone_functions nil))
   shostak))
 (increasing_converse_decreasing2 0
  (increasing_converse_decreasing2-1 nil 3314547296
   ("" (grind-with-ext :if-match nil)
    (("1" (inst - "x2!1" "x1!1") (("1" (assert) nil nil)) nil)
     ("2" (inst - "x2!1" "x1!1") (("2" (assert) nil nil)) nil)
     ("3" (inst - "x2!1" "x1!1") (("3" (assert) nil nil)) nil)
     ("4" (inst - "x2!1" "x1!1") (("4" (assert) nil nil)) nil))
    nil)
   ((inverts const-decl "bool" functions nil)
    (preserves const-decl "bool" functions nil)
    (difference const-decl "set" sets nil) (member const-decl "bool" sets nil)
    (irreflexive_kernel const-decl "(irreflexive?)" closure_ops nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (pred type-eq-decl nil defined_types nil)
    (increasing? const-decl "bool" monotone_functions nil)
    (decreasing? const-decl "bool" monotone_functions nil)
    (converse const-decl "pred[[T2, T1]]" relation_defs nil)
    (boolean nonempty-type-decl nil booleans nil)
    (R formal-type-decl nil monotone_functions nil)
    (D formal-type-decl nil monotone_functions nil))
   shostak))
 (nonincreasing_converse_nondecreasing1 0
  (nonincreasing_converse_nondecreasing1-1 nil 3314547321
   ("" (grind-with-ext :if-match nil)
    (("1" (inst - "x1!1" "x2!1") (("1" (assert) nil nil)) nil)
     ("2" (inst - "x1!1" "x2!1") (("2" (assert) nil nil)) nil))
    nil)
   ((preserves const-decl "bool" functions nil)
    (inverts const-decl "bool" functions nil)
    (union const-decl "set" sets nil) (member const-decl "bool" sets nil)
    (reflexive_closure const-decl "(reflexive?)" closure_ops nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (pred type-eq-decl nil defined_types nil)
    (nonincreasing? const-decl "bool" monotone_functions nil)
    (nondecreasing? const-decl "bool" monotone_functions nil)
    (converse const-decl "pred[[T2, T1]]" relation_defs nil)
    (boolean nonempty-type-decl nil booleans nil)
    (R formal-type-decl nil monotone_functions nil)
    (D formal-type-decl nil monotone_functions nil))
   shostak))
 (nonincreasing_converse_nondecreasing2 0
  (nonincreasing_converse_nondecreasing2-1 nil 3314547334
   ("" (grind-with-ext :if-match nil)
    (("1" (inst - "x2!1" "x1!1") (("1" (assert) nil nil)) nil)
     ("2" (inst - "x2!1" "x1!1") (("2" (assert) nil nil)) nil))
    nil)
   ((preserves const-decl "bool" functions nil)
    (inverts const-decl "bool" functions nil)
    (union const-decl "set" sets nil) (member const-decl "bool" sets nil)
    (reflexive_closure const-decl "(reflexive?)" closure_ops nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (pred type-eq-decl nil defined_types nil)
    (nonincreasing? const-decl "bool" monotone_functions nil)
    (nondecreasing? const-decl "bool" monotone_functions nil)
    (converse const-decl "pred[[T2, T1]]" relation_defs nil)
    (boolean nonempty-type-decl nil booleans nil)
    (R formal-type-decl nil monotone_functions nil)
    (D formal-type-decl nil monotone_functions nil))
   shostak))
 (increasing_total_order_injective 0
  (increasing_total_order_injective-1 nil 3314547351
   ("" (grind :if-match nil)
    (("" (inst - "x1!1" "x2!1")
      (("" (inst - "x1!1" "x2!1")
        (("" (inst-cp - "x2!1" "x1!1")
          (("" (inst - "x1!1" "x2!1") (("" (ground) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   ((reflexive? const-decl "bool" relations nil)
    (transitive? const-decl "bool" relations nil)
    (preorder? const-decl "bool" orders nil)
    (antisymmetric? const-decl "bool" relations nil)
    (partial_order? const-decl "bool" orders nil)
    (dichotomous? const-decl "bool" orders nil)
    (total_order? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (injective? const-decl "bool" functions nil)
    (increasing? const-decl "bool" monotone_functions nil)
    (preserves const-decl "bool" functions nil)
    (difference const-decl "set" sets nil) (member const-decl "bool" sets nil)
    (R formal-type-decl nil monotone_functions nil)
    (irreflexive_kernel const-decl "(irreflexive?)" closure_ops nil)
    (D formal-type-decl nil monotone_functions nil))
   shostak))
 (increasing_strict_total_order_injective 0
  (increasing_strict_total_order_injective-1 nil 3314547531
   ("" (grind :if-match nil)
    (("" (inst - "x1!1" "x2!1")
      (("" (inst-cp - "x2!1" "x1!1")
        (("" (inst - "x1!1" "x2!1") (("" (ground) nil nil)) nil)) nil))
      nil))
    nil)
   ((irreflexive? const-decl "bool" relations nil)
    (transitive? const-decl "bool" relations nil)
    (strict_order? const-decl "bool" orders nil)
    (trichotomous? const-decl "bool" orders nil)
    (strict_total_order? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (injective? const-decl "bool" functions nil)
    (increasing? const-decl "bool" monotone_functions nil)
    (preserves const-decl "bool" functions nil)
    (difference const-decl "set" sets nil) (member const-decl "bool" sets nil)
    (R formal-type-decl nil monotone_functions nil)
    (irreflexive_kernel const-decl "(irreflexive?)" closure_ops nil)
    (D formal-type-decl nil monotone_functions nil))
   shostak))
 (decreasing_total_order_injective 0
  (decreasing_total_order_injective-1 nil 3314547571
   ("" (grind :if-match nil)
    (("" (inst - "x1!1" "x2!1")
      (("" (inst - "x1!1" "x2!1")
        (("" (inst-cp - "x2!1" "x1!1")
          (("" (inst - "x1!1" "x2!1") (("" (ground) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   ((reflexive? const-decl "bool" relations nil)
    (transitive? const-decl "bool" relations nil)
    (preorder? const-decl "bool" orders nil)
    (antisymmetric? const-decl "bool" relations nil)
    (partial_order? const-decl "bool" orders nil)
    (dichotomous? const-decl "bool" orders nil)
    (total_order? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (injective? const-decl "bool" functions nil)
    (decreasing? const-decl "bool" monotone_functions nil)
    (inverts const-decl "bool" functions nil)
    (difference const-decl "set" sets nil) (member const-decl "bool" sets nil)
    (R formal-type-decl nil monotone_functions nil)
    (irreflexive_kernel const-decl "(irreflexive?)" closure_ops nil)
    (D formal-type-decl nil monotone_functions nil))
   shostak))
 (decreasing_strict_total_order_injective 0
  (decreasing_strict_total_order_injective-1 nil 3314547608
   ("" (grind :if-match nil)
    (("" (inst - "x1!1" "x2!1")
      (("" (inst-cp - "x2!1" "x1!1")
        (("" (inst - "x1!1" "x2!1") (("" (ground) nil nil)) nil)) nil))
      nil))
    nil)
   ((irreflexive? const-decl "bool" relations nil)
    (transitive? const-decl "bool" relations nil)
    (strict_order? const-decl "bool" orders nil)
    (trichotomous? const-decl "bool" orders nil)
    (strict_total_order? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (injective? const-decl "bool" functions nil)
    (decreasing? const-decl "bool" monotone_functions nil)
    (inverts const-decl "bool" functions nil)
    (difference const-decl "set" sets nil) (member const-decl "bool" sets nil)
    (R formal-type-decl nil monotone_functions nil)
    (irreflexive_kernel const-decl "(irreflexive?)" closure_ops nil)
    (D formal-type-decl nil monotone_functions nil))
   shostak)))

