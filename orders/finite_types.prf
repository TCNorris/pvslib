(finite_types
 (every_set_is_finite 0
  (every_set_is_finite-1 nil 3314537469
   ("" (skolem!)
    (("" (rewrite "finite_type_set") (("" (rewrite "finite_type") nil nil))
      nil))
    nil)
   ((finite_type_set formula-decl nil finite_sets nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (T formal-nonempty-type-decl nil finite_types nil)
    (finite_type formula-decl nil finite_types nil))
   nil (every_set_is_finite subtype "finite_types.x" "finite_set[T]")))
 (every_non_empty_set_is_non_empty_finite 0
  (every_non_empty_set_is_non_empty_finite-3 "" 3790089648
   ("" (skeep :preds? t)
    (("" (expand "nonempty?") (("" (propax) nil nil)) nil)) nil)
   ((nonempty? const-decl "bool" sets nil)) shostak
   (every_non_empty_set_is_non_empty_finite subtype "finite_types.x"
    "non_empty_finite_set[T]"))
  (every_non_empty_set_is_non_empty_finite-2 "" 3744947981
   ("" (skeep :preds? t)
    (("" (expand "nonempty?")
      (("" (assert)
        (("" (lemma "every_set_is_finite") (("" (inst?) nil nil)) nil)) nil))
      nil))
    nil)
   nil shostak
   (every_non_empty_set_is_non_empty_finite subtype "finite_types.x"
    "non_empty_finite_set[T]"))
  (every_non_empty_set_is_non_empty_finite-1 nil 3314537469
   ("" (judgement-tcc) nil nil) nil nil
   (every_non_empty_set_is_non_empty_finite subtype "finite_types.x"
    "non_empty_finite_set[T]")))
 (fullset_is_nonempty_finite 0
  (fullset_is_nonempty_finite-1 nil 3314537469 ("" (judgement-tcc) nil nil)
   ((fullset const-decl "set" sets nil) (member const-decl "bool" sets nil)
    (empty? const-decl "bool" sets nil))
   nil
   (fullset_is_nonempty_finite subtype "sets[finite_types.T].fullset"
    "non_empty_finite_set[T]"))))

