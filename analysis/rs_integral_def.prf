(rs_integral_def
 (IMP_rs_partition_TCC1 0
  (IMP_rs_partition_TCC1-1 nil 3494855846
   ("" (lemma "connected_domain") (("" (propax) nil nil)) nil)
   ((connected_domain formula-decl nil rs_integral_def nil)) nil
   (IMP_rs_partition assuming "rs_partition[T].rs_partition"
    "connected_domain: ASSUMPTION deriv_domain_def[T].connected?")))
 (IMP_rs_partition_TCC2 0
  (IMP_rs_partition_TCC2-1 nil 3494855846
   ("" (lemma "not_one_element") (("" (propax) nil nil)) nil)
   ((not_one_element formula-decl nil rs_integral_def nil)) nil
   (IMP_rs_partition assuming "rs_partition[T].rs_partition"
    "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?")))
 (xis_join_TCC1 0
  (xis_join_TCC1-1 nil 3489830608 ("" (subtype-tcc) nil nil) nil nil
   (xis_join subtype "rs_integral_def.c"
    "{b | reals.<(rs_integral_def.a, rs_integral_def.b)}")))
 (xis_join_TCC2 0
  (xis_join_TCC2-2 "" 3790091121
   ("" (skeep)
    (("" (assert)
      (("" (ground)
        (("1" (expand "o")
          (("1" (expand "partjoin")
            (("1" (expand "o")
              (("1" (expand "delete") (("1" (assert) nil nil)) nil)) nil))
            nil))
          nil)
         ("2" (skeep)
          (("2" (ground)
            (("1" (expand "o")
              (("1" (lift-if)
                (("1" (assert)
                  (("1" (ground)
                    (("1" (expand "partjoin")
                      (("1" (expand "o")
                        (("1" (typepred "xab")
                          (("1" (inst?) (("1" (ground) nil nil)) nil)) nil))
                        nil))
                      nil)
                     ("2" (expand "partjoin")
                      (("2" (expand "o")
                        (("2" (lift-if)
                          (("2" (assert)
                            (("2" (ground)
                              (("1" (typepred "Pab")
                                (("1" (typepred "xbc")
                                  (("1" (inst -2 "ii-xab`length")
                                    (("1" (flatten) (("1" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (expand "delete")
                                (("2" (assert)
                                  (("2" (typepred "xbc")
                                    (("2" (inst - "ii-xab`length")
                                      (("2"
                                        (flatten)
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("3" (expand "delete") (("3" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("3" (typepred "ii")
                      (("3" (expand "partjoin" -)
                        (("3" (expand "o")
                          (("3" (expand "delete") (("3" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (expand "o")
              (("2" (expand "partjoin")
                (("2" (expand "o")
                  (("2" (expand "delete")
                    (("2" (assert)
                      (("2" (lift-if)
                        (("2" (lift-if)
                          (("2" (assert)
                            (("2" (ground)
                              (("1" (typepred "xab")
                                (("1" (inst - "ii") (("1" (ground) nil nil))
                                  nil))
                                nil)
                               ("2" (typepred "xbc")
                                (("2" (inst - "ii-xab`length")
                                  (("2" (ground) nil nil)) nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((int_minus_int_is_int application-judgement "int" integers nil)
    (partjoin const-decl "partition(a, c)" rs_partition nil)
    (delete const-decl "fseq" fseqs_ops structures)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (O const-decl "fseq" fseqs structures)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil)
    (barray type-eq-decl nil fseqs structures)
    (fseq type-eq-decl nil fseqs structures)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (> const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (restrict const-decl "R" restrict nil) (<= const-decl "bool" reals nil)
    (increasing? const-decl "bool" sort_fseq structures)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (partition type-eq-decl nil rs_partition nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (xis? type-eq-decl nil rs_integral_def nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil))
   shostak
   (xis_join subtype "fseqs[T].o(rs_integral_def.xab, rs_integral_def.xbc)"
    "rs_integral_def.xis?(rs_integral_def.a, rs_integral_def.c, rs_partition[T].partjoin(rs_integral_def.a, rs_integral_def.b, rs_integral_def.c)(rs_integral_def.Pab, rs_integral_def.Pbc))"))
  (xis_join_TCC2-1 nil 3489830608
   ("" (skeep)
    (("" (assert)
      (("" (ground)
        (("1" (expand "o")
          (("1" (expand "partjoin")
            (("1" (expand "o")
              (("1" (expand "delete") (("1" (assert) nil nil)) nil)) nil))
            nil))
          nil)
         ("2" (skeep)
          (("2" (ground)
            (("1" (expand "o")
              (("1" (lift-if)
                (("1" (assert)
                  (("1" (ground)
                    (("1" (expand "partjoin")
                      (("1" (expand "o")
                        (("1" (typepred "xab")
                          (("1" (inst?) (("1" (ground) nil nil)) nil)) nil))
                        nil))
                      nil)
                     ("2" (expand "partjoin")
                      (("2" (expand "o")
                        (("2" (lift-if)
                          (("2" (assert)
                            (("2" (ground)
                              (("1" (typepred "Pab")
                                (("1" (inst -6 "ii")
                                  (("1" (flatten)
                                    (("1" (typepred "xbc")
                                      (("1"
                                        (inst -2 "ii-xab`length")
                                        (("1"
                                          (flatten)
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (expand "delete")
                                (("2" (assert)
                                  (("2" (typepred "xbc")
                                    (("2" (inst - "ii-xab`length")
                                      (("2"
                                        (flatten)
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("3" (expand "delete") (("3" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("3" (typepred "ii")
                      (("3" (expand "partjoin" -)
                        (("3" (expand "o")
                          (("3" (expand "delete") (("3" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (expand "o")
              (("2" (expand "partjoin")
                (("2" (expand "o")
                  (("2" (expand "delete")
                    (("2" (assert)
                      (("2" (lift-if)
                        (("2" (lift-if)
                          (("2" (assert)
                            (("2" (ground)
                              (("1" (typepred "xab")
                                (("1" (inst - "ii") (("1" (ground) nil nil))
                                  nil))
                                nil)
                               ("2" (typepred "xbc")
                                (("2" (inst - "ii-xab`length")
                                  (("2" (ground) nil nil)) nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((partition type-eq-decl nil rs_partition nil)
    (increasing? const-decl "bool" sort_fseq structures)
    (fseq type-eq-decl nil fseqs structures)
    (barray type-eq-decl nil fseqs structures)
    (O const-decl "fseq" fseqs structures)
    (delete const-decl "fseq" fseqs_ops structures)
    (partjoin const-decl "partition(a, c)" rs_partition nil))
   nil
   (xis_join subtype "fseqs[T].o(rs_integral_def.xab, rs_integral_def.xbc)"
    "rs_integral_def.xis?(rs_integral_def.a, rs_integral_def.c, rs_partition[T].partjoin(rs_integral_def.a, rs_integral_def.b, rs_integral_def.c)(rs_integral_def.Pab, rs_integral_def.Pbc))")))
 (xis_lem 0
  (xis_lem-2 "" 3790091121
   ("" (skosimp*)
    (("" (assert)
      (("" (typepred "xis!1") (("" (assert) (("" (inst?) nil nil)) nil)) nil))
      nil))
    nil)
   ((real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil)
    (barray type-eq-decl nil fseqs structures)
    (fseq type-eq-decl nil fseqs structures)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (> const-decl "bool" reals nil) (restrict const-decl "R" restrict nil)
    (<= const-decl "bool" reals nil)
    (increasing? const-decl "bool" sort_fseq structures)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (partition type-eq-decl nil rs_partition nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (xis? type-eq-decl nil rs_integral_def nil))
   shostak)
  (xis_lem-1 nil 3278409455
   ("" (skosimp*)
    (("" (assert)
      (("" (typepred "xis!1")
        (("" (assert)
          (("" (flatten) (("" (assert) (("" (inst?) nil nil)) nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((barray type-eq-decl nil fseqs structures)
    (fseq type-eq-decl nil fseqs structures)
    (increasing? const-decl "bool" sort_fseq structures)
    (partition type-eq-decl nil rs_partition nil))
   shostak))
 (xis_bounded 0
  (xis_bounded-1 nil 3489771807
   ("" (skeep)
    (("" (typepred "xis")
      (("" (inst - "ii")
        (("" (flatten)
          (("" (typepred "P")
            (("" (inst-cp -5 "ii")
              (("" (inst -5 "ii+1") (("" (ground) nil nil)) nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((xis? type-eq-decl nil rs_integral_def nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (partition type-eq-decl nil rs_partition nil)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (increasing? const-decl "bool" sort_fseq structures)
    (<= const-decl "bool" reals nil) (restrict const-decl "R" restrict nil)
    (> const-decl "bool" reals nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (fseq type-eq-decl nil fseqs structures)
    (barray type-eq-decl nil fseqs structures)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil))
   shostak))
 (Rie_sum_TCC1 0
  (Rie_sum_TCC1-2 "" 3790091122 ("" (skosimp*) (("" (assert) nil nil)) nil)
   ((real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   shostak (Rie_sum subtype "0" "T_low[below(N)]"))
  (Rie_sum_TCC1-1 nil 3278175567
   ("" (skosimp*)
    (("" (assert) (("" (typepred "xis!1") (("" (assert) nil nil)) nil)) nil))
    nil)
   nil shostak (Rie_sum subtype "0" "T_low[below(N)]")))
 (Rie_sum_TCC2 0
  (Rie_sum_TCC2-1 nil 3278691242 ("" (skosimp*) (("" (assert) nil nil)) nil)
   ((real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   shostak
   (Rie_sum subtype "(number_fields.-)(rs_integral_def.N, 1)"
    "T_high[below(N)]")))
 (Rie_sum_TCC3 0
  (Rie_sum_TCC3-2 "" 3790091122
   ("" (skosimp*) (("" (typepred "P!1") (("" (assert) nil nil)) nil)) nil)
   ((partition type-eq-decl nil rs_partition nil)
    (below type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (increasing? const-decl "bool" sort_fseq structures)
    (<= const-decl "bool" reals nil) (restrict const-decl "R" restrict nil)
    (< const-decl "bool" reals nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (fseq type-eq-decl nil fseqs structures)
    (barray type-eq-decl nil fseqs structures)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (> const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil))
   shostak
   (Rie_sum assuming
    "reals@sigma[naturalnumbers.below(rs_integral_def.N)].sigma"
    "connected_domain: ASSUMPTION (FORALL (x, y: sigma.T), (z: integers.integer): booleans.IMPLIES(booleans.AND(reals.<=(x, z), reals.<=(z, y)), sigma.T_pred(z)))"))
  (Rie_sum_TCC3-1 nil 3278691242
   ("" (skosimp*)
    (("" (typepred "P!1")
      (("" (inst -6 "n!1+1")
        (("1" (flatten)
          (("1" (assert)
            (("1" (lemma "connected_domain")
              (("1" (expand "connected?")
                (("1" (inst - "a!1" "b!1" "P!1`seq(1+n!1)")
                  (("1" (assert) nil nil)) nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (assert) nil nil))
        nil))
      nil))
    nil)
   ((partition type-eq-decl nil rs_partition nil)
    (increasing? const-decl "bool" sort_fseq structures)
    (fseq type-eq-decl nil fseqs structures)
    (barray type-eq-decl nil fseqs structures))
   shostak
   (Rie_sum assuming
    "reals@sigma[naturalnumbers.below(rs_integral_def.N)].sigma"
    "connected_domain: ASSUMPTION (FORALL (x, y: sigma.T), (z: integers.integer): booleans.IMPLIES(booleans.AND(reals.<=(x, z), reals.<=(z, y)), sigma.T_pred(z)))")))
 (Rie_sec_TCC1 0
  (Rie_sec_TCC1-2 "" 3790091122
   ("" (skosimp*)
    (("" (lemma "connected_domain")
      (("" (expand "connected?") (("" (assert) nil nil)) nil)) nil))
    nil)
   ((connected_domain formula-decl nil rs_integral_def nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (connected? const-decl "bool" deriv_domain_def nil))
   shostak
   (Rie_sec subtype "(number_fields.-)(rs_integral_def.P`length, 1)" "nat"))
  (Rie_sec_TCC1-1 nil 3278154574
   ("" (skosimp*)
    (("" (lemma "connected_domain")
      (("" (expand "connected?")
        (("" (inst - "a!1" "b!1" "P!1`seq(n!1)")
          (("" (assert)
            (("" (typepred "P!1")
              (("" (inst - "n!1") (("" (inst - "n!1") nil nil)) nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((connected? const-decl "bool" deriv_domain_def nil)) shostak
   (Rie_sec subtype "(number_fields.-)(rs_integral_def.P`length, 1)" "nat")))
 (Rie_sec_TCC2 0
  (Rie_sec_TCC2-1 nil 3278154574 ("" (skosimp*) (("" (assert) nil nil)) nil)
   ((int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil))
   shostak (Rie_sec subtype "(number_fields.-)(rs_integral_def.n, 1)" "nat")))
 (Rie_sum_alt_TCC1 0
  (Rie_sum_alt_TCC1-1 nil 3278324172 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil)
    (< const-decl "bool" reals nil) (> const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (barray type-eq-decl nil fseqs structures)
    (fseq type-eq-decl nil fseqs structures)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (restrict const-decl "R" restrict nil) (<= const-decl "bool" reals nil)
    (increasing? const-decl "bool" sort_fseq structures)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (partition type-eq-decl nil rs_partition nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (xis? type-eq-decl nil rs_integral_def nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil))
   shostak (Rie_sum_alt subtype "1" "T_low[upto(N)]")))
 (Rie_sum_alt_TCC2 0
  (Rie_sum_alt_TCC2-1 nil 3278324172 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil)
    (< const-decl "bool" reals nil) (> const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (barray type-eq-decl nil fseqs structures)
    (fseq type-eq-decl nil fseqs structures)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (restrict const-decl "R" restrict nil) (<= const-decl "bool" reals nil)
    (increasing? const-decl "bool" sort_fseq structures)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (partition type-eq-decl nil rs_partition nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (xis? type-eq-decl nil rs_integral_def nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil))
   shostak (Rie_sum_alt subtype "rs_integral_def.N" "T_high[upto(N)]")))
 (Rie_sum_alt_TCC3 0
  (Rie_sum_alt_TCC3-1 nil 3278324172 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil)
    (< const-decl "bool" reals nil) (> const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (barray type-eq-decl nil fseqs structures)
    (fseq type-eq-decl nil fseqs structures)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (restrict const-decl "R" restrict nil) (<= const-decl "bool" reals nil)
    (increasing? const-decl "bool" sort_fseq structures)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (partition type-eq-decl nil rs_partition nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (xis? type-eq-decl nil rs_integral_def nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil))
   shostak
   (Rie_sum_alt subtype "rs_integral_def.n"
    "naturalnumbers.upto((number_fields.-)(rs_integral_def.P`length, 1))")))
 (Rie_sum_alt_TCC4 0
  (Rie_sum_alt_TCC4-1 nil 3278324172 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil)
    (< const-decl "bool" reals nil) (> const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (barray type-eq-decl nil fseqs structures)
    (fseq type-eq-decl nil fseqs structures)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (restrict const-decl "R" restrict nil) (<= const-decl "bool" reals nil)
    (increasing? const-decl "bool" sort_fseq structures)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (partition type-eq-decl nil rs_partition nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (xis? type-eq-decl nil rs_integral_def nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (integer nonempty-type-from-decl nil integers nil))
   shostak
   (Rie_sum_alt assuming
    "reals@sigma[naturalnumbers.upto(rs_integral_def.N)].sigma"
    "connected_domain: ASSUMPTION (FORALL (x, y: sigma.T), (z: integers.integer): booleans.IMPLIES(booleans.AND(reals.<=(x, z), reals.<=(z, y)), sigma.T_pred(z)))")))
 (Rie_sum_alt_lem 0
  (Rie_sum_alt_lem-4 "" 3790091125
   ("" (skosimp*)
    (("" (expand "Rie_sum")
      (("" (assert)
        (("" (expand "Rie_sum_alt")
          (("" (expand "Rie_sec")
            (("" (assert)
              ((""
                (case "FORALL (NN: below(length(P!1)-1)):  sigma[below(length(P!1) - 1)]
                                                    (0, NN,
                                                     LAMBDA (n: below(length(P!1) - 1)):
                                                       g!1(P!1`seq(1 + n)) * f!1(xis!1`seq(n)) -
                                                        g!1(P!1`seq(n)) * f!1(xis!1`seq(n)))
                                                 =
                                                 sigma[upto(length(P!1) - 1)]
                                                     (1, NN+1,
                                                      LAMBDA (n: upto(length(P!1) - 1)):
                                                        IF n = 0 THEN 0
                                                        ELSE g!1(P!1`seq(n)) * f!1(xis!1`seq(n - 1)) -
                                                              g!1(P!1`seq(n - 1)) * f!1(xis!1`seq(n - 1))
                                                        ENDIF)")
                (("1" (inst?)
                  (("1" (assert)
                    (("1" (replace -1)
                      (("1" (replace -1 :dir rl) (("1" (propax) nil nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide 2)
                  (("2" (induct "NN" 1 "below_induction[length(P!1)-1]")
                    (("1" (assert)
                      (("1" (expand "sigma")
                        (("1" (expand "sigma") (("1" (propax) nil nil)) nil))
                        nil))
                      nil)
                     ("2" (skosimp*)
                      (("2" (expand "sigma" 1) (("2" (assert) nil nil)) nil))
                      nil)
                     ("3" (hide 2)
                      (("3" (skosimp*) (("3" (assert) nil nil)) nil)) nil)
                     ("4" (skeep*) (("4" (assert) nil nil)) nil)
                     ("5" (skeep*) (("5" (assert) nil nil)) nil))
                    nil))
                  nil)
                 ("3" (hide 2) (("3" (skosimp*) (("3" (assert) nil nil)) nil))
                  nil)
                 ("4" (skeep*) (("4" (assert) nil nil)) nil)
                 ("5" (skeep*) (("5" (assert) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((real_times_real_is_real application-judgement "real" reals nil)
    (Rie_sum const-decl "real" rs_integral_def nil)
    (Rie_sum_alt const-decl "real" rs_integral_def nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (T_low type-eq-decl nil sigma reals) (T_high type-eq-decl nil sigma reals)
    (sigma def-decl "real" sigma reals)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (xis? type-eq-decl nil rs_integral_def nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (integer nonempty-type-from-decl nil integers nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (TRUE const-decl "bool" booleans nil)
    (below_induction formula-decl nil bounded_nat_inductions nil)
    (pred type-eq-decl nil defined_types nil)
    (P!1 skolem-const-decl "partition[T](a!1, b!1)" rs_integral_def nil)
    (b!1 skolem-const-decl "T" rs_integral_def nil)
    (a!1 skolem-const-decl "T" rs_integral_def nil)
    (Rie_sec const-decl "real" rs_integral_def nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (partition type-eq-decl nil rs_partition nil)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (increasing? const-decl "bool" sort_fseq structures)
    (<= const-decl "bool" reals nil) (restrict const-decl "R" restrict nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (> const-decl "bool" reals nil) (fseq type-eq-decl nil fseqs structures)
    (barray type-eq-decl nil fseqs structures)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   shostak)
  (Rie_sum_alt_lem-3 nil 3280252836
   ("" (skosimp*)
    (("" (expand "Rie_sum")
      (("" (assert)
        (("" (expand "Rie_sum_alt")
          (("" (expand "Rie_sec")
            (("" (assert)
              ((""
                (case "FORALL (NN: below(length(P!1)-1)):  sigma[below(length(P!1) - 1)]
                                                    (0, NN,
                                                     LAMBDA (n: below(length(P!1) - 1)):
                                                       g!1(P!1`seq(1 + n)) * f!1(xis!1`seq(n)) -
                                                        g!1(P!1`seq(n)) * f!1(xis!1`seq(n)))
                                                 =
                                                 sigma[upto(length(P!1) - 1)]
                                                     (1, NN+1,
                                                      LAMBDA (n: upto(length(P!1) - 1)):
                                                        IF n = 0 THEN 0
                                                        ELSE g!1(P!1`seq(n)) * f!1(xis!1`seq(n - 1)) -
                                                              g!1(P!1`seq(n - 1)) * f!1(xis!1`seq(n - 1))
                                                        ENDIF)")
                (("1" (inst?)
                  (("1" (assert)
                    (("1" (replace -1)
                      (("1" (replace -1 :dir rl) (("1" (propax) nil nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide 2)
                  (("2" (induct "NN" 1 "below_induction[length(P!1)-1]")
                    (("1" (assert)
                      (("1" (expand "sigma")
                        (("1" (expand "sigma") (("1" (propax) nil nil)) nil))
                        nil))
                      nil)
                     ("2" (skosimp*)
                      (("2" (expand "sigma" 1) (("2" (assert) nil nil)) nil))
                      nil)
                     ("3" (hide 2)
                      (("3" (skosimp*) (("3" (assert) nil nil)) nil)) nil))
                    nil))
                  nil)
                 ("3" (hide 2) (("3" (skosimp*) (("3" (assert) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((sigma def-decl "real" sigma reals) (T_high type-eq-decl nil sigma reals)
    (T_low type-eq-decl nil sigma reals)
    (partition type-eq-decl nil rs_partition nil)
    (increasing? const-decl "bool" sort_fseq structures)
    (fseq type-eq-decl nil fseqs structures)
    (barray type-eq-decl nil fseqs structures))
   nil)
  (Rie_sum_alt_lem-2 nil 3280252800
   ("" (skosimp*)
    (("" (expand "Rie_sum")
      (("" (assert)
        (("" (expand "Rie_sum_alt")
          (("" (expand "Rie_sec")
            (("" (assert)
              (("" (assert)
                ((""
                  (case "FORALL (NN: below(length(P!1)-1)):  sigma[below(length(P!1) - 1)]
                        (0, NN,
                         LAMBDA (n: below(length(P!1) - 1)):
                           P!1`seq(1 + n) * f!1(xis!1(n)) -
                            P!1`seq(n) * f!1(xis!1(n)))
                     =
                     sigma[upto(length(P!1) - 1)]
                         (1, NN+1,
                          LAMBDA (n: upto(length(P!1) - 1)):
                            IF n = 0 THEN 0
                            ELSE P!1`seq(n) * f!1(xis!1`seq(n - 1)) -
                                  P!1`seq(n - 1) * f!1(xis!1`seq(n - 1))
                            ENDIF)")
                  (("1" (inst?) (("1" (assert) nil)))
                   ("2" (hide 2)
                    (("2" (induct "NN" 1 "below_induction[length(P!1)-1]")
                      (("1" (assert)
                        (("1" (expand "sigma") (("1" (propax) nil)))))
                       ("2" (skosimp*)
                        (("2" (expand "sigma" 1) (("2" (assert) nil)))))
                       ("3" (hide 2) (("3" (skosimp*) (("3" (assert) nil)))))
                       ("4" (skosimp*) (("4" (assert) nil)))
                       ("5" (skosimp*)
                        (("5" (hide 3)
                          (("5" (assert)
                            (("5" (typepred "xis!1")
                              (("5" (expand "xis?")
                                (("5" (propax) nil)))))))))))
                       ("6" (assert)
                        (("6" (hide 2)
                          (("6" (skosimp*) (("6" (assert) nil)))))))
                       ("7" (skosimp*)
                        (("7" (assert)
                          (("7" (hide 2)
                            (("7" (typepred "xis!1")
                              (("7" (assert) nil)))))))))))))
                   ("3" (hide 2) (("3" (skosimp*) (("3" (assert) nil)))))
                   ("4" (hide 2) (("4" (skosimp*) (("4" (assert) nil)))))
                   ("5" (hide 2)
                    (("5" (skosimp*)
                      (("5" (assert)
                        (("5" (typepred "xis!1") (("5" (assert) nil)))))))))
                   ("6" (hide 2) (("6" (skosimp*) (("6" (assert) nil)))))
                   ("7" (hide 2)
                    (("7" (skosimp*)
                      (("7" (assert)
                        (("7" (typepred "xis!1")
                          (("7" (assert) nil))))))))))))))))))))))))
    nil)
   nil nil)
  (Rie_sum_alt_lem-1 nil 3278324183
   ("" (skosimp*)
    (("" (expand "Rie_sum")
      (("" (assert)
        (("" (expand "Rie_sum_alt")
          (("" (expand "Rie_sec")
            (("" (assert)
              (("" (assert)
                ((""
                  (case "FORALL (NN: below(length(P!1)-1)):  sigma[below(length(P!1) - 1)]
                 (0, NN,
                  LAMBDA (n: below(length(P!1) - 1)):
                    P!1`seq(1 + n) * f!1(xis!1`seq(n)) -
                     P!1`seq(n) * f!1(xis!1`seq(n)))
              =
              sigma[upto(length(P!1) - 1)]
                  (1, NN+1,
                   LAMBDA (n: upto(length(P!1) - 1)):
                     IF n = 0 THEN 0
                     ELSE P!1`seq(n) * f!1(xis!1`seq(n - 1)) -
                           P!1`seq(n - 1) * f!1(xis!1`seq(n - 1))
                     ENDIF)")
                  (("1" (inst?) (("1" (assert) nil nil)) nil)
                   ("2" (hide 2)
                    (("2" (induct "NN" 1 "below_induction[length(P!1)-1]")
                      (("1" (assert)
                        (("1" (expand "sigma") (("1" (propax) nil nil)) nil))
                        nil)
                       ("2" (skosimp*)
                        (("2" (expand "sigma" 1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("3" (hide 2)
                        (("3" (skosimp*) (("3" (assert) nil nil)) nil)) nil)
                       ("4" (skosimp*) (("4" (assert) nil nil)) nil)
                       ("5" (skosimp*)
                        (("5" (hide 3)
                          (("5" (assert)
                            (("5" (typepred "xis!1")
                              (("5" (expand "xis?") (("5" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("6" (assert)
                        (("6" (hide 2)
                          (("6" (skosimp*) (("6" (assert) nil nil)) nil))
                          nil))
                        nil)
                       ("7" (skosimp*)
                        (("7" (assert)
                          (("7" (hide 2)
                            (("7" (typepred "xis!1") (("7" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (hide 2)
                    (("3" (skosimp*) (("3" (assert) nil nil)) nil)) nil)
                   ("4" (hide 2)
                    (("4" (skosimp*) (("4" (assert) nil nil)) nil)) nil)
                   ("5" (hide 2)
                    (("5" (skosimp*)
                      (("5" (assert)
                        (("5" (typepred "xis!1") (("5" (assert) nil nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("6" (hide 2)
                    (("6" (skosimp*) (("6" (assert) nil nil)) nil)) nil)
                   ("7" (hide 2)
                    (("7" (skosimp*)
                      (("7" (assert)
                        (("7" (typepred "xis!1") (("7" (assert) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((sigma def-decl "real" sigma reals)) shostak))
 (Riemann_sum_strictly_sort_TCC1 0
  (Riemann_sum_strictly_sort_TCC1-1 nil 3492270809
   ("" (lemma "partition_strictly_sort")
    (("" (assert)
      (("" (skeep)
        (("" (skeep)
          (("" (inst - "a" "b")
            (("" (assert) (("" (inst - "P") nil nil)) nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (partition type-eq-decl nil rs_partition nil)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (increasing? const-decl "bool" sort_fseq structures)
    (<= const-decl "bool" reals nil) (restrict const-decl "R" restrict nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (> const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (fseq type-eq-decl nil fseqs structures)
    (barray type-eq-decl nil fseqs structures)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (partition_strictly_sort formula-decl nil rs_partition nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil))
   nil
   (Riemann_sum_strictly_sort subtype
    "sort_fseq[T, restrict[[real, real], [T, T], booleans.bool].restrict(reals.<=)].strictly_sort(rs_integral_def.P)"
    "rs_partition[T].partition(rs_integral_def.a, rs_integral_def.b)")))
 (Riemann_sum_strictly_sort 0
  (Riemann_sum_strictly_sort-4 "" 3790091136
   ("" (auto-rewrite + "member")
    (("" (skeep)
      (("" (skeep)
        ((""
          (name "XISfun"
                "(LAMBDA (xis:xis?(a,b,P)): (# length := strictly_sort(P)`length-1, seq := (LAMBDA (ii:nat): IF ii < strictly_sort(P)`length-1 THEN xis`seq(strictly_sort_map(P)(ii)) ELSE default[T] ENDIF) #))")
          (("1" (label "XISfunname" -1)
            (("1"
              (case "FORALL (xis:xis?(a,b,P)): Rie_sum(a,b,g,P,xis,f) = Rie_sum(a,b,g,strictly_sort(P),XISfun(xis),f)")
              (("1" (ground)
                (("1" (skeep -)
                  (("1" (inst - "xis")
                    (("1" (inst + "XISfun(xis)")
                      (("1" (assert) nil nil)
                       ("2" (assert)
                        (("2" (expand "XISfun" +)
                          (("2" (assert)
                            (("2" (typepred "strictly_sort(P)")
                              (("2" (inst - "a")
                                (("2" (case "member(a,P)")
                                  (("1" (replace -1)
                                    (("1" (hide -1)
                                      (("1"
                                        (assert)
                                        (("1" (skosimp*) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (hide-all-but 1)
                                    (("2" (assert)
                                      (("2"
                                        (inst + "0")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (skeep -)
                  (("2" (assert)
                    (("2"
                      (case "FORALL (xiss:xis?(a,b,strictly_sort(P))): EXISTS (xis:xis?(a,b,P)): xiss = XISfun(xis)")
                      (("1" (inst - "xis")
                        (("1" (skolem -1 "xisp")
                          (("1" (inst - "xisp")
                            (("1" (inst + "xisp") (("1" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide -1)
                        (("2" (hide -1)
                          (("2" (hide 2)
                            (("2" (skeep)
                              (("2"
                                (name "sig" "partition_union_map(a,b,P,P)")
                                (("2" (label "signame" -1)
                                  (("2" (typepred "sig")
                                    (("2" (label "sigtp" -1)
                                      (("2"
                                        (name
                                         "yis"
                                         "(# length := P`length-1, seq := (LAMBDA (ii:nat): IF ii < P`length-1 THEN IF sig(ii) = strictly_sort(P)`length-1 THEN b ELSIF sig(ii) = sig(ii+1) THEN P`seq(ii) ELSE xiss`seq(sig(ii)) ENDIF ELSE default[T] ENDIF) #)")
                                        (("1"
                                          (label "yisname" -1)
                                          (("1"
                                            (lemma
                                             "partition_union_is_strictly_sort")
                                            (("1"
                                              (inst - "a" "b")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (inst - "P")
                                                  (("1"
                                                    (label "unionsort" -1)
                                                    (("1"
                                                      (replace "unionsort")
                                                      (("1"
                                                        (inst + "yis")
                                                        (("1"
                                                          (expand "XISfun" +)
                                                          (("1"
                                                            (decompose-equality
                                                             +)
                                                            (("1"
                                                              (decompose-equality
                                                               +)
                                                              (("1"
                                                                (lift-if)
                                                                (("1"
                                                                  (ground)
                                                                  (("1"
                                                                    (expand
                                                                     "yis"
                                                                     +)
                                                                    (("1"
                                                                      (lift-if)
                                                                      (("1"
                                                                        (ground)
                                                                        (("1"
                                                                          (name
                                                                           "ssm"
                                                                           "strictly_sort_map(P)")
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (label
                                                                               "ssmname"
                                                                               -1)
                                                                              (("1"
                                                                                (lemma
                                                                                 "partition_union_strictly_sort_map_inv")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "a"
                                                                                   "b")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "P"
                                                                                       "x!1")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide
                                                                           2)
                                                                          (("2"
                                                                            (name
                                                                             "ssm"
                                                                             "strictly_sort_map(P)")
                                                                            (("2"
                                                                              (replace
                                                                               -1)
                                                                              (("2"
                                                                                (label
                                                                                 "ssmname"
                                                                                 -1)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "ssm")
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "partition_union_strictly_sort_map_inv")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "a"
                                                                                       "b")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "P"
                                                                                           "x!1")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (replace
                                                                                               "ssmname")
                                                                                              (("2"
                                                                                                (replace
                                                                                                 "signame")
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "x!1")
                                                                                                    (("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (typepred
                                                                                                           "sig")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "1+ssm(x!1)")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (typepred
                                                                                                                 "sig")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "ssm(x!1)")
                                                                                                                  (("2"
                                                                                                                    (case
                                                                                                                     "NOT P`seq(ssm(x!1)) = P`seq(1+ssm(x!1))")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (typepred
                                                                                                                       "xiss")
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "x!1")
                                                                                                                        (("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (name
                                                                           "ssm"
                                                                           "strictly_sort_map(P)")
                                                                          (("3"
                                                                            (replace
                                                                             -1)
                                                                            (("3"
                                                                              (label
                                                                               "ssmname"
                                                                               -1)
                                                                              (("3"
                                                                                (lemma
                                                                                 "partition_union_strictly_sort_map_inv")
                                                                                (("3"
                                                                                  (inst
                                                                                   -
                                                                                   "a"
                                                                                   "b")
                                                                                  (("3"
                                                                                    (assert)
                                                                                    (("3"
                                                                                      (inst
                                                                                       -
                                                                                       "P"
                                                                                       "x!1")
                                                                                      (("3"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("4"
                                                                          (name
                                                                           "ssm"
                                                                           "strictly_sort_map(P)")
                                                                          (("4"
                                                                            (replace
                                                                             -1)
                                                                            (("4"
                                                                              (label
                                                                               "ssmname"
                                                                               -1)
                                                                              (("4"
                                                                                (typepred
                                                                                 "ssm")
                                                                                (("4"
                                                                                  (assert)
                                                                                  (("4"
                                                                                    (inst
                                                                                     -
                                                                                     "x!1")
                                                                                    (("4"
                                                                                      (flatten)
                                                                                      (("4"
                                                                                        (assert)
                                                                                        (("4"
                                                                                          (typepred
                                                                                           "strictly_sort(P)")
                                                                                          (("4"
                                                                                            (expand
                                                                                             "strictly_increasing?")
                                                                                            (("4"
                                                                                              (inst
                                                                                               -
                                                                                               "x!1"
                                                                                               "strictly_sort(P)`length-1")
                                                                                              (("4"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (typepred
                                                                     "xiss`seq")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "x!1")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (skosimp*)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (skosimp*)
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("3"
                                                              (skosimp*)
                                                              (("3"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (split +)
                                                          (("1"
                                                            (skosimp*)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "yis"
                                                                 +)
                                                                (("1"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (skeep)
                                                            (("2"
                                                              (split +)
                                                              (("1"
                                                                (expand
                                                                 "yis"
                                                                 +)
                                                                (("1"
                                                                  (lift-if)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (split
                                                                       +)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (typepred
                                                                             "xiss")
                                                                            (("1"
                                                                              (typepred
                                                                               "sig")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "ii")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (ground)
                                                                          (("2"
                                                                            (typepred
                                                                             "xiss")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "sig(ii)")
                                                                              (("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "sig")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "ii")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "yis"
                                                                 +)
                                                                (("2"
                                                                  (lift-if)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (ground)
                                                                      (("1"
                                                                        (typepred
                                                                         "sig")
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "ii")
                                                                          (("1"
                                                                            (typepred
                                                                             "P")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "ii+1")
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (expand
                                                                                   "increasing?")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "ii"
                                                                                     "1+ii")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (typepred
                                                                         "P")
                                                                        (("2"
                                                                          (expand
                                                                           "increasing?")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "ii"
                                                                             "1+ii")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("3"
                                                                        (typepred
                                                                         "xiss")
                                                                        (("3"
                                                                          (inst
                                                                           -
                                                                           "sig(ii)")
                                                                          (("3"
                                                                            (flatten)
                                                                            (("3"
                                                                              (case
                                                                               "1+sig(ii) <= sig(1+ii)")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (typepred
                                                                                   "strictly_sort(P)")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "strictly_increasing?")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "1+sig(ii)"
                                                                                       "sig(1+ii)")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (typepred
                                                                                           "sig")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "1+ii")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (typepred
                                                                                 "sig")
                                                                                (("2"
                                                                                  (inst-cp
                                                                                   -
                                                                                   "ii")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "ii+1")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (typepred
                                                                                         "strictly_sort(P)")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "strictly_increasing?")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "sig(1+ii)"
                                                                                             "sig(ii)")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (typepred
                                                                                                   "P")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "increasing?")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "ii"
                                                                                                       "1+ii")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (skosimp*)
                                          (("2" (assert) nil nil))
                                          nil)
                                         ("3"
                                          (skosimp*)
                                          (("3" (assert) nil nil))
                                          nil)
                                         ("4"
                                          (skosimp*)
                                          (("4" (assert) nil nil))
                                          nil)
                                         ("5"
                                          (skosimp*)
                                          (("5" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide ("xispred" "XISfunname"))
                (("2" (hide 2)
                  (("2" (skeep)
                    (("2" (expand "XISfun")
                      (("2"
                        (name "yis"
                              "(# length := strictly_sort(P)`length-1, seq := (LAMBDA (ii:nat): IF ii < strictly_sort(P)`length-1 THEN xis`seq(strictly_sort_map(P)(ii)) ELSE default[T] ENDIF) #)")
                        (("1" (replace -1)
                          (("1" (hide -1)
                            (("1" (expand "Rie_sum")
                              (("1" (name "ssp" "strictly_sort(P)")
                                (("1" (label "sspname" -1)
                                  (("1" (replace "sspname")
                                    (("1" (name "sig" "strictly_sort_map(P)")
                                      (("1"
                                        (label "signame" -1)
                                        (("1"
                                          (case
                                           "FORALL (mm:below(ssp`length-1)): sigma[below(strictly_sort(P)`length - 1)]
                                                                                                                                                                                (0, mm,
                                                                                                                                                                                 LAMBDA (n: below(strictly_sort(P)`length - 1)):
                                                                                                                                                                                   f(yis`seq(n)) * g(ssp`seq(1 + n)) -
                                                                                                                                                                                    f(yis`seq(n)) * g(ssp`seq(n))) = sigma[below(P`length - 1)]
                                                                                                                                                                               (0, sig(mm),
                                                                                                                                                                                LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                  f(xis`seq(n)) * g(P`seq(1 + n)) - f(xis`seq(n)) * g(P`seq(n)))")
                                          (("1"
                                            (inst - "ssp`length-2")
                                            (("1"
                                              (replace -1)
                                              (("1"
                                                (hide -1)
                                                (("1"
                                                  (lemma
                                                   "sigma_split[below(P`length-1)]")
                                                  (("1"
                                                    (inst
                                                     -
                                                     "LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                     f(xis`seq(n)) * g(P`seq(1 + n)) - f(xis`seq(n)) * g(P`seq(n))"
                                                     "P`length-2"
                                                     "0"
                                                     "sig(ssp`length - 2)")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (case
                                                         "sig(ssp`length-2) <= P`length-2")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (replace -2)
                                                            (("1"
                                                              (case
                                                               "sigma(1 + sig(ssp`length - 2), P`length - 2,
                                                                                                                                                                                                                                                                                          LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                                                                                                            f(xis`seq(n)) * g(P`seq(1 + n)) -
                                                                                                                                                                                                                                                                                             f(xis`seq(n)) * g(P`seq(n))) = 0")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (hide 2)
                                                                (("2"
                                                                  (hide -2)
                                                                  (("2"
                                                                    (rewrite
                                                                     "sigma_restrict_eq_0")
                                                                    (("2"
                                                                      (hide 2)
                                                                      (("2"
                                                                        (skeep)
                                                                        (("2"
                                                                          (typepred
                                                                           "i")
                                                                          (("2"
                                                                            (case
                                                                             "g(P`seq(1+i)) = g(P`seq(i))")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil)
                                                                             ("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (typepred
                                                                                 "sig")
                                                                                (("2"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "ssp`length-2")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (name
                                                                                           "jj"
                                                                                           "ssp`length-2")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (case
                                                                                               "ssp`length-1 = jj+1")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "P`seq(1+i) = P`seq(i)")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "strictly_sort_map_between")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "P")
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           "sspname")
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             "signame")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "jj")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "i")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (case
                                                                                                                       "P`seq(sig(1+jj)) = P`seq(1+i)")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "1+sig(jj) <= sig(jj+1)")
                                                                                                                          (("1"
                                                                                                                            (case
                                                                                                                             "sig(jj+1) = P`length-1")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (replace
                                                                                                                               -3
                                                                                                                               :dir
                                                                                                                               rl)
                                                                                                                              (("2"
                                                                                                                                (typepred
                                                                                                                                 "sig")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (case
                                                                                                                                     "NOT P`length = 0")
                                                                                                                                    (("1"
                                                                                                                                      (lemma
                                                                                                                                       "fseq_length_zero")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "ssp")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (typepred
                                                                                                                                             "ssp")
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "P`seq(0)")
                                                                                                                                              (("1"
                                                                                                                                                (case
                                                                                                                                                 "member(P`seq(0),P)")
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (hide
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (skosimp*)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (expand
                                                                                                                                                   "member")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     +
                                                                                                                                                     "0")
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("3"
                                                                                                                              (lemma
                                                                                                                               "fseq_length_zero")
                                                                                                                              (("3"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "ssp")
                                                                                                                                (("3"
                                                                                                                                  (assert)
                                                                                                                                  (("3"
                                                                                                                                    (typepred
                                                                                                                                     "ssp")
                                                                                                                                    (("3"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "P`seq(0)")
                                                                                                                                      (("3"
                                                                                                                                        (case
                                                                                                                                         "member(P`seq(0),P)")
                                                                                                                                        (("1"
                                                                                                                                          (replace
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (skosimp*)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (expand
                                                                                                                                           "member")
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             +
                                                                                                                                             "0")
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (lemma
                                                                                                                             "strictly_sort_map_increasing")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "P")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "jj"
                                                                                                                                   "1+jj")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (lemma
                                                                                                                                       "fseq_length_zero")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "ssp")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (typepred
                                                                                                                                             "ssp")
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "P`seq(0)")
                                                                                                                                              (("2"
                                                                                                                                                (case
                                                                                                                                                 "member(P`seq(0),P)")
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (skosimp*)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (expand
                                                                                                                                                   "member")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     +
                                                                                                                                                     "0")
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("3"
                                                                                                                                    (lemma
                                                                                                                                     "partition_strictly_sort")
                                                                                                                                    (("3"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "a"
                                                                                                                                       "b")
                                                                                                                                      (("3"
                                                                                                                                        (assert)
                                                                                                                                        (("3"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "P")
                                                                                                                                          (("3"
                                                                                                                                            (flatten)
                                                                                                                                            (("3"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("3"
                                                                                                                            (lemma
                                                                                                                             "partition_strictly_sort")
                                                                                                                            (("3"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "a"
                                                                                                                               "b")
                                                                                                                              (("3"
                                                                                                                                (assert)
                                                                                                                                (("3"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "P")
                                                                                                                                  (("3"
                                                                                                                                    (flatten)
                                                                                                                                    (("3"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("4"
                                                                                                                            (lemma
                                                                                                                             "partition_strictly_sort")
                                                                                                                            (("4"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "a"
                                                                                                                               "b")
                                                                                                                              (("4"
                                                                                                                                (assert)
                                                                                                                                (("4"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "P")
                                                                                                                                  (("4"
                                                                                                                                    (flatten)
                                                                                                                                    (("4"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (lemma
                                                                                                                           "strictly_sort_map_between")
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "P")
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -11)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (replace
                                                                                                                                   -3
                                                                                                                                   +
                                                                                                                                   :dir
                                                                                                                                   rl)
                                                                                                                                  (("2"
                                                                                                                                    (typepred
                                                                                                                                     "sig")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (split
                                                                                                                                         -)
                                                                                                                                        (("1"
                                                                                                                                          (hide
                                                                                                                                           -2)
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             "sspname")
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -
                                                                                                                                                   "jj")
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "1+i")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (lemma
                                                                                                                                                       "partition_strictly_sort")
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         -
                                                                                                                                                         "a"
                                                                                                                                                         "b")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "P")
                                                                                                                                                            (("2"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (lemma
                                                                                                                                           "partition_strictly_sort")
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "a"
                                                                                                                                             "b")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -
                                                                                                                                                 "P")
                                                                                                                                                (("2"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (lemma
                                                                                                                         "partition_strictly_sort")
                                                                                                                        (("3"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "a"
                                                                                                                           "b")
                                                                                                                          (("3"
                                                                                                                            (assert)
                                                                                                                            (("3"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "P")
                                                                                                                              (("3"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (lemma
                                                                                                                   "partition_strictly_sort")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "a"
                                                                                                                     "b")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "P")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (lemma
                                                                                       "partition_strictly_sort")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "a"
                                                                                         "b")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "P")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide (-1 2))
                                                          (("2"
                                                            (typepred "sig")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (case
                                                                 "strictly_sort(P)`length >= 1")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (replace
                                                                     "sspname")
                                                                    (("1"
                                                                      (inst-cp
                                                                       -
                                                                       "ssp`length-2")
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "ssp`length-1")
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (case
                                                                               "NOT sig(ssp`length-2) = P`length-1")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil)
                                                                               ("2"
                                                                                (replace
                                                                                 -1)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "ssp")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "strictly_increasing?")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "ssp`length-2"
                                                                                       "ssp`length-1")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (lemma
                                                                                         "partition_strictly_sort")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "a"
                                                                                           "b")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "P")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (lemma
                                                                         "partition_strictly_sort")
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "a"
                                                                           "b")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "P")
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (lemma
                                                                   "partition_strictly_sort")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "a"
                                                                     "b")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "P")
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("3"
                                                          (lemma
                                                           "partition_strictly_sort")
                                                          (("3"
                                                            (inst - "a" "b")
                                                            (("3"
                                                              (assert)
                                                              (("3"
                                                                (inst - "P")
                                                                (("3"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (lemma
                                                       "partition_strictly_sort")
                                                      (("2"
                                                        (inst - "a" "b")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (inst - "P")
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (skeep*)
                                                    (("2" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (lemma
                                               "partition_strictly_sort")
                                              (("2"
                                                (inst - "a" "b")
                                                (("2"
                                                  (assert)
                                                  (("1"
                                                    (inst - "P")
                                                    (("1" (assert) nil nil))
                                                    nil)
                                                   ("2"
                                                    (lemma
                                                     "partition_strictly_sort")
                                                    (("2"
                                                      (expand "ssp")
                                                      (("2"
                                                        (typepred
                                                         "strictly_sort(P)")
                                                        (("2"
                                                          (inst-cp - "a")
                                                          (("2"
                                                            (inst - "b")
                                                            (("2"
                                                              (case
                                                               "member(b,P) and member(a,P)")
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (replace -1)
                                                                  (("1"
                                                                    (replace
                                                                     -2)
                                                                    (("1"
                                                                      (hide
                                                                       -1)
                                                                      (("1"
                                                                        (hide
                                                                         -1)
                                                                        (("1"
                                                                          (expand
                                                                           "member")
                                                                          (("1"
                                                                            (skosimp*)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (split)
                                                                    (("1"
                                                                      (inst
                                                                       +
                                                                       "P`length-1")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (inst
                                                                       +
                                                                       "0")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide 2)
                                            (("2"
                                              (label "altb" -3)
                                              (("2"
                                                (induct "mm")
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (expand "sigma")
                                                    (("1"
                                                      (expand "sigma" 1 1)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (lift-if)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (case
                                                               "sigma(0, sig(0) - 1,
                                                                                                                                                                                                                                      LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                                                        f(xis`seq(n)) * g(P`seq(1 + n)) -
                                                                                                                                                                                                                                         f(xis`seq(n)) * g(P`seq(n))) = 0")
                                                              (("1"
                                                                (replace -1)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (typepred
                                                                     "sig")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "0")
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (replace
                                                                             "sspname")
                                                                            (("1"
                                                                              (replace
                                                                               -2
                                                                               :dir
                                                                               rl)
                                                                              (("1"
                                                                                (replace
                                                                                 -3
                                                                                 :dir
                                                                                 rl)
                                                                                (("1"
                                                                                  (expand
                                                                                   "yis")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide 2)
                                                                (("2"
                                                                  (rewrite
                                                                   "sigma_restrict_eq_0")
                                                                  (("2"
                                                                    (hide 2)
                                                                    (("2"
                                                                      (skeep)
                                                                      (("2"
                                                                        (typepred
                                                                         "i")
                                                                        (("2"
                                                                          (case
                                                                           "P`seq(1+i) = P`seq(i)")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (typepred
                                                                               "sig")
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "0")
                                                                                (("2"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (hide
                                                                                         -2)
                                                                                        (("2"
                                                                                          (case
                                                                                           "P`seq(sig(0)) = a")
                                                                                          (("1"
                                                                                            (typepred
                                                                                             "P")
                                                                                            (("1"
                                                                                              (copy
                                                                                               -4)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "P`seq(i) = a AND P`seq(1+i) = a")
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "increasing?"
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (inst-cp
                                                                                                         -
                                                                                                         "0"
                                                                                                         "i")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "i"
                                                                                                           "sig(0)")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (expand
                                                                                                       "increasing?"
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (inst-cp
                                                                                                         -
                                                                                                         "0"
                                                                                                         "1+i")
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "1+i"
                                                                                                           "sig(0)")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (lemma
                                                                                             "partition_strictly_sort")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "a"
                                                                                               "b")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "P")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (skeep*)
                                                                (("3"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (skolem 1 "mm")
                                                  (("2"
                                                    (assert)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (expand "sigma" 1 1)
                                                        (("1"
                                                          (replace -2)
                                                          (("1"
                                                            (lemma
                                                             "strictly_sort_map_increasing")
                                                            (("1"
                                                              (expand
                                                               "sigma"
                                                               1
                                                               2)
                                                              (("1"
                                                                (lift-if)
                                                                (("1"
                                                                  (ground)
                                                                  (("1"
                                                                    (expand
                                                                     "yis"
                                                                     +)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (replace
                                                                         "signame")
                                                                        (("1"
                                                                          (case
                                                                           "f(xis`seq(sig(1 + mm))) * g(ssp`seq(2 + mm))
                                                                                                                                                                                                                                                          - f(xis`seq(sig(1 + mm))) * g(ssp`seq(1 + mm)) = f(xis`seq(sig(1 + mm))) * g(P`seq(1 + sig(1 + mm)))
                                                                                                                                                                                                                                                           - f(xis`seq(sig(1 + mm))) * g(P`seq(sig(1 + mm))) AND sigma[below(P`length - 1)]
                                                                                                                                                                                                                                                             (0, sig(mm),
                                                                                                                                                                                                                                                              LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                                                                                f(xis`seq(n)) * g(P`seq(1 + n)) - f(xis`seq(n)) * g(P`seq(n))) = sigma(0, sig(1 + mm) - 1,
                                                                                                                                                                                                                                                                LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                                                                                  f(xis`seq(n)) * g(P`seq(1 + n)) -
                                                                                                                                                                                                                                                                   f(xis`seq(n)) * g(P`seq(n)))")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide
                                                                             3)
                                                                            (("2"
                                                                              (split
                                                                               +)
                                                                              (("1"
                                                                                (typepred
                                                                                 "sig")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "1+mm")
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (lemma
                                                                                 "sigma_split[below(P`length-1)]")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "(LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                                                                     f(xis`seq(n)) * g(P`seq(1 + n)) -
                                                                                                                                                                                                                                                      f(xis`seq(n)) * g(P`seq(n)))"
                                                                                   "sig(1+mm)-1"
                                                                                   "0"
                                                                                   "sig(mm)")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (split
                                                                                       -)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (case
                                                                                             "sigma(1 + sig(mm), sig(1 + mm) - 1,
                                                                                                                                                                                                                                                                                                                                               (LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                                                                                                                                                                  f(xis`seq(n)) * g(P`seq(1 + n)) -
                                                                                                                                                                                                                                                                                                                                                   f(xis`seq(n)) * g(P`seq(n)))) = 0")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               2)
                                                                                              (("2"
                                                                                                (rewrite
                                                                                                 "sigma_restrict_eq_0")
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       -2)
                                                                                                      (("2"
                                                                                                        (skeep)
                                                                                                        (("2"
                                                                                                          (typepred
                                                                                                           "i")
                                                                                                          (("2"
                                                                                                            (case
                                                                                                             "P`seq(i) = P`seq(1+i)")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide
                                                                                                               2)
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "strictly_sort_map_between")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "P")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       "signame")
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "mm")
                                                                                                                        (("2"
                                                                                                                          (inst-cp
                                                                                                                           -
                                                                                                                           "i")
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "1+i")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (inst
                                                                                         -
                                                                                         "P")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "mm"
                                                                                             "1+mm")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (skeep*)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (flatten)
                                                                            (("3"
                                                                              (skeep*)
                                                                              (("3"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide 2)
                                                      (("2"
                                                        (replace -2)
                                                        (("2"
                                                          (case
                                                           "ssp`length >= 2")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (hide 2)
                                                            (("2"
                                                              (lemma
                                                               "partition_strictly_sort")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "a"
                                                                 "b")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (hide 2)
                                                  (("3"
                                                    (skeep)
                                                    (("3"
                                                      (case "mm < 0")
                                                      (("1" (assert) nil nil)
                                                       ("2"
                                                        (assert)
                                                        (("2"
                                                          (typepred "sig(mm)")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (case
                                                               "NOT sig(mm) = P`length-1")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (skeep*)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (typepred
                                                                 "sig")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "mm")
                                                                  (("2"
                                                                    (replace
                                                                     "sspname")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (typepred
                                                                           "sig")
                                                                          (("2"
                                                                            (hide
                                                                             -1)
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "ssp`length-1")
                                                                              (("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (typepred
                                                                                     "ssp")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "strictly_increasing?")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "mm"
                                                                                         "ssp`length-1")
                                                                                        (("2"
                                                                                          (ground)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("4"
                                                  (hide 2)
                                                  (("4"
                                                    (skeep)
                                                    (("4"
                                                      (case "mm < 0")
                                                      (("1" (assert) nil nil)
                                                       ("2"
                                                        (assert)
                                                        (("2"
                                                          (typepred "sig(mm)")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (case
                                                               "NOT sig(mm) = P`length-1")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (typepred
                                                                 "sig")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "mm")
                                                                  (("2"
                                                                    (replace
                                                                     "sspname")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (typepred
                                                                           "sig")
                                                                          (("2"
                                                                            (hide
                                                                             -1)
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "ssp`length-1")
                                                                              (("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (typepred
                                                                                     "ssp")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "strictly_increasing?")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "mm"
                                                                                         "ssp`length-1")
                                                                                        (("2"
                                                                                          (ground)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("5"
                                                  (skosimp*)
                                                  (("5" (assert) nil nil))
                                                  nil)
                                                 ("6"
                                                  (skosimp*)
                                                  (("6" (assert) nil nil))
                                                  nil)
                                                 ("7"
                                                  (lemma
                                                   "partition_strictly_sort")
                                                  (("7"
                                                    (inst - "a" "b")
                                                    (("7" (assert) nil nil))
                                                    nil))
                                                  nil)
                                                 ("8"
                                                  (skeep*)
                                                  (("8" (assert) nil nil))
                                                  nil)
                                                 ("9" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (hide 2)
                                            (("3"
                                              (skeep)
                                              (("3"
                                                (case "mm < 0")
                                                (("1" (assert) nil nil)
                                                 ("2"
                                                  (assert)
                                                  (("2"
                                                    (typepred "sig(mm)")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (case
                                                         "NOT sig(mm) = P`length-1")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (skeep*)
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (typepred "sig")
                                                          (("2"
                                                            (inst - "mm")
                                                            (("2"
                                                              (replace -6)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (typepred
                                                                     "sig")
                                                                    (("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "ssp`length-1")
                                                                        (("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (typepred
                                                                               "ssp")
                                                                              (("2"
                                                                                (expand
                                                                                 "strictly_increasing?")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "mm"
                                                                                   "ssp`length-1")
                                                                                  (("2"
                                                                                    (ground)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("4"
                                            (hide 2)
                                            (("4"
                                              (skeep)
                                              (("4"
                                                (case "mm < 0")
                                                (("1" (assert) nil nil)
                                                 ("2"
                                                  (assert)
                                                  (("2"
                                                    (typepred "sig(mm)")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (case
                                                         "NOT sig(mm) = P`length-1")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (typepred "sig")
                                                          (("2"
                                                            (inst - "mm")
                                                            (("2"
                                                              (replace -6)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (typepred
                                                                     "sig")
                                                                    (("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "ssp`length-1")
                                                                        (("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (typepred
                                                                               "ssp")
                                                                              (("2"
                                                                                (expand
                                                                                 "strictly_increasing?")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "mm"
                                                                                   "ssp`length-1")
                                                                                  (("2"
                                                                                    (ground)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("5"
                                            (skosimp*)
                                            (("5" (assert) nil nil))
                                            nil)
                                           ("6"
                                            (skeep*)
                                            (("6" (assert) nil nil))
                                            nil)
                                           ("7"
                                            (skeep*)
                                            (("7" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (assert)
                          (("2" (skeep)
                            (("2" (hide -2) (("2" (ground) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("3" (hide -1)
                (("3" (skeep)
                  (("3" (assert)
                    (("3" (hide 2)
                      (("3" (split +)
                        (("1" (skeep)
                          (("1" (expand "XISfun")
                            (("1" (lift-if) (("1" (ground) nil nil)) nil))
                            nil))
                          nil)
                         ("2" (expand "XISfun")
                          (("2" (lemma "partition_strictly_sort")
                            (("2" (inst - "a" "b")
                              (("2" (assert)
                                (("2" (inst - "P") (("2" (ground) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("3" (expand "XISfun") (("3" (propax) nil nil)) nil)
                         ("4" (skeep)
                          (("4" (expand "XISfun")
                            (("4" (name "sig" "strictly_sort_map(P)")
                              (("4" (replace -1)
                                (("4" (typepred "ii")
                                  (("4" (typepred "sig")
                                    (("4" (inst - "ii")
                                      (("4"
                                        (flatten)
                                        (("4"
                                          (assert)
                                          (("4"
                                            (typepred "xis")
                                            (("4"
                                              (inst - "sig(ii)")
                                              (("1"
                                                (flatten)
                                                (("1" (assert) nil nil))
                                                nil)
                                               ("2"
                                                (case "sig(ii) = P`length-1")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (lemma
                                                       "strictly_sort_map_increasing")
                                                      (("1"
                                                        (inst - "P")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (inst
                                                             -
                                                             "ii"
                                                             "strictly_sort(P)`length-1")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("4" (hide 2)
                (("4" (skeep)
                  (("4" (lemma "partition_strictly_sort")
                    (("4" (inst - "a" "b")
                      (("4" (assert) (("4" (inst - "P") nil nil)) nil)) nil))
                    nil))
                  nil))
                nil)
               ("5" (assert) nil nil))
              nil))
            nil)
           ("2" (hide 2)
            (("2" (skeep)
              (("2" (lemma "partition_strictly_sort")
                (("2" (inst - "a" "b") (("2" (assert) nil nil)) nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Rie_sum const-decl "real" rs_integral_def nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (a skolem-const-decl "T" rs_integral_def nil)
    (b skolem-const-decl "T" rs_integral_def nil)
    (P skolem-const-decl "partition[T](a, b)" rs_integral_def nil)
    (XISfun skolem-const-decl
     "[xis?(a, b, P) -> [# length: int, seq: [nat -> T] #]]" rs_integral_def
     nil)
    (xis skolem-const-decl "xis?(a, b, P)" rs_integral_def nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (partition_union_is_strictly_sort formula-decl nil rs_partition nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (partition_union_strictly_sort_map_inv formula-decl nil rs_partition nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (yis skolem-const-decl "[# length: int, seq: [nat -> T] #]"
     rs_integral_def nil)
    (partition_union_map const-decl
     "{pm: [below(P`length) -> below(partition_union(a, b)(P, Q)`length)] |
   FORALL (ii: below(P`length)):
     P`seq(ii) = partition_union(a, b)(P, Q)`seq(pm(ii))}" rs_partition nil)
    (partition_union const-decl "{PQ: partition(a, b) |
   (FORALL (x: T): member(x, PQ) IFF (member(x, P) OR member(x, Q))) AND
    strictly_increasing?(PQ)}" rs_partition nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (T_low type-eq-decl nil sigma reals) (T_high type-eq-decl nil sigma reals)
    (sigma def-decl "real" sigma reals)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (integer nonempty-type-from-decl nil integers nil)
    (ssp skolem-const-decl "{ss: fseq[T] |
   strictly_increasing?(ss) AND
    FORALL (x: T): member(x, P) IFF member(x, ss)}" rs_integral_def nil)
    (sigma_split formula-decl nil sigma reals)
    (sigma_restrict_eq_0 formula-decl nil sigma reals)
    (fseq_length_zero formula-decl nil fseqs structures)
    (empty_seq_fseq name-judgement "fseq" rs_integral_def nil)
    (partition_strictly_sort formula-decl nil rs_partition nil)
    (strictly_sort_map_increasing formula-decl nil sort_fseq structures)
    (jj skolem-const-decl "int" rs_integral_def nil)
    (strictly_sort_map_between formula-decl nil sort_fseq structures)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (subrange type-eq-decl nil integers nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers nil)
    (TRUE const-decl "bool" booleans nil)
    (sigma_0_neg formula-decl nil sigma_below reals)
    (sig skolem-const-decl
         "{sq: [below(strictly_sort(P)`length) -> below(P`length)] |
   (strictly_sort(P)`length >= 1 IMPLIES
     sq(strictly_sort(P)`length - 1) = P`length - 1)
    AND
    FORALL (ii: below(strictly_sort(P)`length)):
      (strictly_sort(P)`seq(ii) = P`seq(sq(ii)) AND
        (ii < strictly_sort(P)`length - 1 IMPLIES
          strictly_sort(P)`seq(1 + ii) = P`seq(1 + sq(ii))))}" rs_integral_def
         nil)
    (pred type-eq-decl nil defined_types nil)
    (below_induction formula-decl nil bounded_nat_inductions nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (yis skolem-const-decl "[# length: int, seq: [nat -> T] #]"
     rs_integral_def nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (sig skolem-const-decl
         "{sq: [below(strictly_sort(P)`length) -> below(P`length)] |
   (strictly_sort(P)`length >= 1 IMPLIES
     sq(strictly_sort(P)`length - 1) = P`length - 1)
    AND
    FORALL (ii: below(strictly_sort(P)`length)):
      (strictly_sort(P)`seq(ii) = P`seq(sq(ii)) AND
        (ii < strictly_sort(P)`length - 1 IMPLIES
          strictly_sort(P)`seq(1 + ii) = P`seq(1 + sq(ii))))}" rs_integral_def
         nil)
    (ii skolem-const-decl "below(strictly_sort(P)`length - 1)" rs_integral_def
     nil)
    (total_order_restrict application-judgement "(total_order?[S])"
     restrict_order_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil)
    (barray type-eq-decl nil fseqs structures)
    (fseq type-eq-decl nil fseqs structures)
    (bool nonempty-type-eq-decl nil booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (> const-decl "bool" reals nil) (restrict const-decl "R" restrict nil)
    (<= const-decl "bool" reals nil)
    (increasing? const-decl "bool" sort_fseq structures)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (partition type-eq-decl nil rs_partition nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (xis? type-eq-decl nil rs_integral_def nil)
    (strictly_increasing? const-decl "bool" sort_fseq structures)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (member const-decl "bool" fseqs structures)
    (strictly_sort const-decl "{ss: fseq |
   strictly_increasing?(ss) AND
    (FORALL (x: T): member(x, s) IFF member(x, ss))}" sort_fseq structures)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (strictly_sort_map const-decl
     "{sq: [below(strictly_sort(s)`length) -> below(s`length)] |
   LET sss = strictly_sort(s) IN
     (increasing?(s) AND sss`length >= 1 IMPLIES
       sq(sss`length - 1) = s`length - 1)
      AND
      (FORALL (ii: below(sss`length)):
         (sss`seq(ii) = s`seq(sq(ii)) AND
           (increasing?(s) AND ii < sss`length - 1 IMPLIES
             sss`seq(ii + 1) = s`seq(sq(ii) + 1))))}" sort_fseq structures)
    (default const-decl "T" fseqs structures))
   shostak)
  (Riemann_sum_strictly_sort-3 nil 3495206538
   ("" (auto-rewrite + "member")
    (("" (skeep)
      (("" (skeep)
        ((""
          (name "XISfun"
                "(LAMBDA (xis:xis?(a,b,P)): (# length := strictly_sort(P)`length-1, seq := (LAMBDA (ii:nat): IF ii < strictly_sort(P)`length-1 THEN xis`seq(strictly_sort_map(P)(ii)) ELSE default[T] ENDIF) #))")
          (("1" (label "XISfunname" -1)
            (("1"
              (case "FORALL (xis:xis?(a,b,P)): Rie_sum(a,b,g,P,xis,f) = Rie_sum(a,b,g,strictly_sort(P),XISfun(xis),f)")
              (("1" (ground)
                (("1" (skeep -)
                  (("1" (inst - "xis")
                    (("1" (inst + "XISfun(xis)")
                      (("1" (assert) nil nil)
                       ("2" (assert)
                        (("2" (expand "XISfun" +)
                          (("2" (assert)
                            (("2" (typepred "strictly_sort(P)")
                              (("2" (inst - "a")
                                (("2" (case "member(a,P)")
                                  (("1" (replace -1)
                                    (("1" (hide -1)
                                      (("1"
                                        (assert)
                                        (("1" (skosimp*) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (hide-all-but 1)
                                    (("2" (assert)
                                      (("2"
                                        (inst + "0")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (skeep -)
                  (("2" (assert)
                    (("2"
                      (case "FORALL (xiss:xis?(a,b,strictly_sort(P))): EXISTS (xis:xis?(a,b,P)): xiss = XISfun(xis)")
                      (("1" (inst - "xis")
                        (("1" (skolem -1 "xisp")
                          (("1" (inst - "xisp")
                            (("1" (inst + "xisp") (("1" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide -1)
                        (("2" (hide -1)
                          (("2" (hide 2)
                            (("2" (skeep)
                              (("2"
                                (name "sig" "partition_union_map(a,b,P,P)")
                                (("2" (label "signame" -1)
                                  (("2" (typepred "sig")
                                    (("2" (label "sigtp" -1)
                                      (("2"
                                        (name
                                         "yis"
                                         "(# length := P`length-1, seq := (LAMBDA (ii:nat): IF ii < P`length-1 THEN IF sig(ii) = strictly_sort(P)`length-1 THEN b ELSIF sig(ii) = sig(ii+1) THEN P`seq(ii) ELSE xiss`seq(sig(ii)) ENDIF ELSE default[T] ENDIF) #)")
                                        (("1"
                                          (label "yisname" -1)
                                          (("1"
                                            (lemma
                                             "partition_union_is_strictly_sort")
                                            (("1"
                                              (inst - "a" "b")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (inst - "P")
                                                  (("1"
                                                    (label "unionsort" -1)
                                                    (("1"
                                                      (replace "unionsort")
                                                      (("1"
                                                        (stop-rewrite
                                                         "xis_lem")
                                                        (("1"
                                                          (inst + "yis")
                                                          (("1"
                                                            (expand
                                                             "XISfun"
                                                             +)
                                                            (("1"
                                                              (decompose-equality
                                                               +)
                                                              (("1"
                                                                (decompose-equality
                                                                 +)
                                                                (("1"
                                                                  (lift-if)
                                                                  (("1"
                                                                    (ground)
                                                                    (("1"
                                                                      (expand
                                                                       "yis"
                                                                       +)
                                                                      (("1"
                                                                        (lift-if)
                                                                        (("1"
                                                                          (ground)
                                                                          (("1"
                                                                            (name
                                                                             "ssm"
                                                                             "strictly_sort_map(P)")
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (label
                                                                                 "ssmname"
                                                                                 -1)
                                                                                (("1"
                                                                                  (lemma
                                                                                   "partition_union_strictly_sort_map_inv")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "a"
                                                                                     "b")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "P"
                                                                                         "x!1")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (name
                                                                               "ssm"
                                                                               "strictly_sort_map(P)")
                                                                              (("2"
                                                                                (replace
                                                                                 -1)
                                                                                (("2"
                                                                                  (label
                                                                                   "ssmname"
                                                                                   -1)
                                                                                  (("2"
                                                                                    (typepred
                                                                                     "ssm")
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "partition_union_strictly_sort_map_inv")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "a"
                                                                                         "b")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "P"
                                                                                             "x!1")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (replace
                                                                                                 "ssmname")
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   "signame")
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "x!1")
                                                                                                      (("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (typepred
                                                                                                             "sig")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "1+ssm(x!1)")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (typepred
                                                                                                                   "sig")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "ssm(x!1)")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (case
                                                                                                                         "NOT P`seq(ssm(x!1)) = P`seq(1+ssm(x!1))")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (typepred
                                                                                                                           "xiss")
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "x!1")
                                                                                                                            (("2"
                                                                                                                              (flatten)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (name
                                                                             "ssm"
                                                                             "strictly_sort_map(P)")
                                                                            (("3"
                                                                              (replace
                                                                               -1)
                                                                              (("3"
                                                                                (label
                                                                                 "ssmname"
                                                                                 -1)
                                                                                (("3"
                                                                                  (lemma
                                                                                   "partition_union_strictly_sort_map_inv")
                                                                                  (("3"
                                                                                    (inst
                                                                                     -
                                                                                     "a"
                                                                                     "b")
                                                                                    (("3"
                                                                                      (assert)
                                                                                      (("3"
                                                                                        (inst
                                                                                         -
                                                                                         "P"
                                                                                         "x!1")
                                                                                        (("3"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("4"
                                                                            (name
                                                                             "ssm"
                                                                             "strictly_sort_map(P)")
                                                                            (("4"
                                                                              (replace
                                                                               -1)
                                                                              (("4"
                                                                                (label
                                                                                 "ssmname"
                                                                                 -1)
                                                                                (("4"
                                                                                  (typepred
                                                                                   "ssm")
                                                                                  (("4"
                                                                                    (assert)
                                                                                    (("4"
                                                                                      (inst
                                                                                       -
                                                                                       "x!1")
                                                                                      (("4"
                                                                                        (flatten)
                                                                                        (("4"
                                                                                          (assert)
                                                                                          (("4"
                                                                                            (typepred
                                                                                             "strictly_sort(P)")
                                                                                            (("4"
                                                                                              (expand
                                                                                               "strictly_increasing?")
                                                                                              (("4"
                                                                                                (inst
                                                                                                 -
                                                                                                 "x!1"
                                                                                                 "strictly_sort(P)`length-1")
                                                                                                (("4"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (typepred
                                                                       "xiss`seq")
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "x!1")
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (skosimp*)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (skosimp*)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (skosimp*)
                                                                (("3"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (split +)
                                                            (("1"
                                                              (skosimp*)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "yis"
                                                                   +)
                                                                  (("1"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (skeep)
                                                              (("2"
                                                                (split +)
                                                                (("1"
                                                                  (expand
                                                                   "yis"
                                                                   +)
                                                                  (("1"
                                                                    (lift-if)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (split
                                                                         +)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (typepred
                                                                               "xiss")
                                                                              (("1"
                                                                                (typepred
                                                                                 "sig")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "ii")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (ground)
                                                                            (("2"
                                                                              (typepred
                                                                               "xiss")
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "sig(ii)")
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (typepred
                                                                                     "sig")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "ii")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "yis"
                                                                   +)
                                                                  (("2"
                                                                    (lift-if)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (ground)
                                                                        (("1"
                                                                          (typepred
                                                                           "sig")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "ii")
                                                                            (("1"
                                                                              (typepred
                                                                               "P")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "ii+1")
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "increasing?")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "ii"
                                                                                       "1+ii")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (typepred
                                                                           "P")
                                                                          (("2"
                                                                            (expand
                                                                             "increasing?")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "ii"
                                                                               "1+ii")
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (typepred
                                                                           "xiss")
                                                                          (("3"
                                                                            (inst
                                                                             -
                                                                             "sig(ii)")
                                                                            (("3"
                                                                              (flatten)
                                                                              (("3"
                                                                                (case
                                                                                 "1+sig(ii) <= sig(1+ii)")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (typepred
                                                                                     "strictly_sort(P)")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "strictly_increasing?")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "1+sig(ii)"
                                                                                         "sig(1+ii)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (typepred
                                                                                             "sig")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "1+ii")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (typepred
                                                                                   "sig")
                                                                                  (("2"
                                                                                    (inst-cp
                                                                                     -
                                                                                     "ii")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "ii+1")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (typepred
                                                                                           "strictly_sort(P)")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "strictly_increasing?")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "sig(1+ii)"
                                                                                               "sig(ii)")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (typepred
                                                                                                     "P")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "increasing?")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "ii"
                                                                                                         "1+ii")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (skosimp*)
                                          (("2" (assert) nil nil))
                                          nil)
                                         ("3"
                                          (skosimp*)
                                          (("3" (assert) nil nil))
                                          nil)
                                         ("4"
                                          (skosimp*)
                                          (("4" (assert) nil nil))
                                          nil)
                                         ("5"
                                          (skosimp*)
                                          (("5" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide ("xispred" "XISfunname"))
                (("2" (hide 2)
                  (("2" (skeep)
                    (("2" (expand "XISfun")
                      (("2"
                        (name "yis"
                              "(# length := strictly_sort(P)`length-1, seq := (LAMBDA (ii:nat): IF ii < strictly_sort(P)`length-1 THEN xis`seq(strictly_sort_map(P)(ii)) ELSE default[T] ENDIF) #)")
                        (("1" (replace -1)
                          (("1" (hide -1)
                            (("1" (expand "Rie_sum")
                              (("1" (name "ssp" "strictly_sort(P)")
                                (("1" (label "sspname" -1)
                                  (("1" (replace "sspname")
                                    (("1" (name "sig" "strictly_sort_map(P)")
                                      (("1"
                                        (label "signame" -1)
                                        (("1"
                                          (case
                                           "FORALL (mm:below(ssp`length-1)): sigma[below(strictly_sort(P)`length - 1)]
                                                                                                                                                                                (0, mm,
                                                                                                                                                                                 LAMBDA (n: below(strictly_sort(P)`length - 1)):
                                                                                                                                                                                   f(yis`seq(n)) * g(ssp`seq(1 + n)) -
                                                                                                                                                                                    f(yis`seq(n)) * g(ssp`seq(n))) = sigma[below(P`length - 1)]
                                                                                                                                                                               (0, sig(mm),
                                                                                                                                                                                LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                  f(xis`seq(n)) * g(P`seq(1 + n)) - f(xis`seq(n)) * g(P`seq(n)))")
                                          (("1"
                                            (inst - "ssp`length-2")
                                            (("1"
                                              (replace -1)
                                              (("1"
                                                (hide -1)
                                                (("1"
                                                  (lemma
                                                   "sigma_split[below(P`length-1)]")
                                                  (("1"
                                                    (inst
                                                     -
                                                     "LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                     f(xis`seq(n)) * g(P`seq(1 + n)) - f(xis`seq(n)) * g(P`seq(n))"
                                                     "P`length-2"
                                                     "0"
                                                     "sig(ssp`length - 2)")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (case
                                                         "sig(ssp`length-2) <= P`length-2")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (replace -2)
                                                            (("1"
                                                              (case
                                                               "sigma(1 + sig(ssp`length - 2), P`length - 2,
                                                                                                                                                                                                                                                                                          LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                                                                                                            f(xis`seq(n)) * g(P`seq(1 + n)) -
                                                                                                                                                                                                                                                                                             f(xis`seq(n)) * g(P`seq(n))) = 0")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (hide 2)
                                                                (("2"
                                                                  (hide -2)
                                                                  (("2"
                                                                    (rewrite
                                                                     "sigma_restrict_eq_0")
                                                                    (("2"
                                                                      (hide 2)
                                                                      (("2"
                                                                        (skeep)
                                                                        (("2"
                                                                          (typepred
                                                                           "i")
                                                                          (("2"
                                                                            (case
                                                                             "g(P`seq(1+i)) = g(P`seq(i))")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil)
                                                                             ("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (typepred
                                                                                 "sig")
                                                                                (("2"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "ssp`length-2")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (name
                                                                                           "jj"
                                                                                           "ssp`length-2")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (case
                                                                                               "ssp`length-1 = jj+1")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "P`seq(1+i) = P`seq(i)")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "strictly_sort_map_between")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "P")
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           "sspname")
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             "signame")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "jj")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "i")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (case
                                                                                                                       "P`seq(sig(1+jj)) = P`seq(1+i)")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "1+sig(jj) <= sig(jj+1)")
                                                                                                                          (("1"
                                                                                                                            (case
                                                                                                                             "sig(jj+1) = P`length-1")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (replace
                                                                                                                               -3
                                                                                                                               :dir
                                                                                                                               rl)
                                                                                                                              (("2"
                                                                                                                                (typepred
                                                                                                                                 "sig")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (case
                                                                                                                                     "NOT P`length = 0")
                                                                                                                                    (("1"
                                                                                                                                      (lemma
                                                                                                                                       "fseq_length_zero")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "ssp")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (typepred
                                                                                                                                             "ssp")
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "P`seq(0)")
                                                                                                                                              (("1"
                                                                                                                                                (case
                                                                                                                                                 "member(P`seq(0),P)")
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (hide
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (skosimp*)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (expand
                                                                                                                                                   "member")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     +
                                                                                                                                                     "0")
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("3"
                                                                                                                              (lemma
                                                                                                                               "fseq_length_zero")
                                                                                                                              (("3"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "ssp")
                                                                                                                                (("3"
                                                                                                                                  (assert)
                                                                                                                                  (("3"
                                                                                                                                    (typepred
                                                                                                                                     "ssp")
                                                                                                                                    (("3"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "P`seq(0)")
                                                                                                                                      (("3"
                                                                                                                                        (case
                                                                                                                                         "member(P`seq(0),P)")
                                                                                                                                        (("1"
                                                                                                                                          (replace
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (skosimp*)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (expand
                                                                                                                                           "member")
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             +
                                                                                                                                             "0")
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (lemma
                                                                                                                             "strictly_sort_map_increasing")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "P")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "jj"
                                                                                                                                   "1+jj")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (lemma
                                                                                                                                       "fseq_length_zero")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "ssp")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (typepred
                                                                                                                                             "ssp")
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "P`seq(0)")
                                                                                                                                              (("2"
                                                                                                                                                (case
                                                                                                                                                 "member(P`seq(0),P)")
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (skosimp*)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (expand
                                                                                                                                                   "member")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     +
                                                                                                                                                     "0")
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("3"
                                                                                                                                    (lemma
                                                                                                                                     "partition_strictly_sort")
                                                                                                                                    (("3"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "a"
                                                                                                                                       "b")
                                                                                                                                      (("3"
                                                                                                                                        (assert)
                                                                                                                                        (("3"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "P")
                                                                                                                                          (("3"
                                                                                                                                            (flatten)
                                                                                                                                            (("3"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("3"
                                                                                                                            (lemma
                                                                                                                             "partition_strictly_sort")
                                                                                                                            (("3"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "a"
                                                                                                                               "b")
                                                                                                                              (("3"
                                                                                                                                (assert)
                                                                                                                                (("3"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "P")
                                                                                                                                  (("3"
                                                                                                                                    (flatten)
                                                                                                                                    (("3"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("4"
                                                                                                                            (lemma
                                                                                                                             "partition_strictly_sort")
                                                                                                                            (("4"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "a"
                                                                                                                               "b")
                                                                                                                              (("4"
                                                                                                                                (assert)
                                                                                                                                (("4"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "P")
                                                                                                                                  (("4"
                                                                                                                                    (flatten)
                                                                                                                                    (("4"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (lemma
                                                                                                                           "strictly_sort_map_between")
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "P")
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -11)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (replace
                                                                                                                                   -3
                                                                                                                                   +
                                                                                                                                   :dir
                                                                                                                                   rl)
                                                                                                                                  (("2"
                                                                                                                                    (typepred
                                                                                                                                     "sig")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (split
                                                                                                                                         -)
                                                                                                                                        (("1"
                                                                                                                                          (hide
                                                                                                                                           -2)
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             "sspname")
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -
                                                                                                                                                   "jj")
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "1+i")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (lemma
                                                                                                                                                       "partition_strictly_sort")
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         -
                                                                                                                                                         "a"
                                                                                                                                                         "b")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "P")
                                                                                                                                                            (("2"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (lemma
                                                                                                                                           "partition_strictly_sort")
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "a"
                                                                                                                                             "b")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -
                                                                                                                                                 "P")
                                                                                                                                                (("2"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (lemma
                                                                                                                         "partition_strictly_sort")
                                                                                                                        (("3"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "a"
                                                                                                                           "b")
                                                                                                                          (("3"
                                                                                                                            (assert)
                                                                                                                            (("3"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "P")
                                                                                                                              (("3"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (lemma
                                                                                                                   "partition_strictly_sort")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "a"
                                                                                                                     "b")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "P")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (lemma
                                                                                       "partition_strictly_sort")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "a"
                                                                                         "b")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "P")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide (-1 2))
                                                          (("2"
                                                            (typepred "sig")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (case
                                                                 "strictly_sort(P)`length >= 1")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (replace
                                                                     "sspname")
                                                                    (("1"
                                                                      (inst-cp
                                                                       -
                                                                       "ssp`length-2")
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "ssp`length-1")
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (case
                                                                               "NOT sig(ssp`length-2) = P`length-1")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil)
                                                                               ("2"
                                                                                (replace
                                                                                 -1)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "ssp")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "strictly_increasing?")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "ssp`length-2"
                                                                                       "ssp`length-1")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (lemma
                                                                                         "partition_strictly_sort")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "a"
                                                                                           "b")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "P")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (lemma
                                                                         "partition_strictly_sort")
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "a"
                                                                           "b")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "P")
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (lemma
                                                                   "partition_strictly_sort")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "a"
                                                                     "b")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "P")
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("3"
                                                          (lemma
                                                           "partition_strictly_sort")
                                                          (("3"
                                                            (inst - "a" "b")
                                                            (("3"
                                                              (assert)
                                                              (("3"
                                                                (inst - "P")
                                                                (("3"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (lemma
                                                       "partition_strictly_sort")
                                                      (("2"
                                                        (inst - "a" "b")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (inst - "P")
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (lemma
                                               "partition_strictly_sort")
                                              (("2"
                                                (inst - "a" "b")
                                                (("2"
                                                  (assert)
                                                  (("1"
                                                    (inst - "P")
                                                    (("1" (assert) nil nil))
                                                    nil)
                                                   ("2"
                                                    (lemma
                                                     "partition_strictly_sort")
                                                    (("2"
                                                      (expand "ssp")
                                                      (("2"
                                                        (typepred
                                                         "strictly_sort(P)")
                                                        (("2"
                                                          (inst-cp - "a")
                                                          (("2"
                                                            (inst - "b")
                                                            (("2"
                                                              (case
                                                               "member(b,P) and member(a,P)")
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (replace -1)
                                                                  (("1"
                                                                    (replace
                                                                     -2)
                                                                    (("1"
                                                                      (hide
                                                                       -1)
                                                                      (("1"
                                                                        (hide
                                                                         -1)
                                                                        (("1"
                                                                          (expand
                                                                           "member")
                                                                          (("1"
                                                                            (skosimp*)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (split)
                                                                    (("1"
                                                                      (inst
                                                                       +
                                                                       "P`length-1")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (inst
                                                                       +
                                                                       "0")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide 2)
                                            (("2"
                                              (label "altb" -3)
                                              (("2"
                                                (induct "mm")
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (expand "sigma")
                                                    (("1"
                                                      (expand "sigma" 1 1)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (lift-if)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (case
                                                               "sigma(0, sig(0) - 1,
                                                                                                                                                                                                                                      LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                                                        f(xis`seq(n)) * g(P`seq(1 + n)) -
                                                                                                                                                                                                                                         f(xis`seq(n)) * g(P`seq(n))) = 0")
                                                              (("1"
                                                                (replace -1)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (typepred
                                                                     "sig")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "0")
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (replace
                                                                             "sspname")
                                                                            (("1"
                                                                              (replace
                                                                               -2
                                                                               :dir
                                                                               rl)
                                                                              (("1"
                                                                                (replace
                                                                                 -3
                                                                                 :dir
                                                                                 rl)
                                                                                (("1"
                                                                                  (expand
                                                                                   "yis")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide 2)
                                                                (("2"
                                                                  (rewrite
                                                                   "sigma_restrict_eq_0")
                                                                  (("2"
                                                                    (hide 2)
                                                                    (("2"
                                                                      (skeep)
                                                                      (("2"
                                                                        (typepred
                                                                         "i")
                                                                        (("2"
                                                                          (case
                                                                           "P`seq(1+i) = P`seq(i)")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (typepred
                                                                               "sig")
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "0")
                                                                                (("2"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (hide
                                                                                         -2)
                                                                                        (("2"
                                                                                          (case
                                                                                           "P`seq(sig(0)) = a")
                                                                                          (("1"
                                                                                            (typepred
                                                                                             "P")
                                                                                            (("1"
                                                                                              (copy
                                                                                               -4)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "P`seq(i) = a AND P`seq(1+i) = a")
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "increasing?"
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (inst-cp
                                                                                                         -
                                                                                                         "0"
                                                                                                         "i")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "i"
                                                                                                           "sig(0)")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (expand
                                                                                                       "increasing?"
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (inst-cp
                                                                                                         -
                                                                                                         "0"
                                                                                                         "1+i")
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "1+i"
                                                                                                           "sig(0)")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (lemma
                                                                                             "partition_strictly_sort")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "a"
                                                                                               "b")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "P")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (skolem 1 "mm")
                                                  (("2"
                                                    (assert)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (expand "sigma" 1 1)
                                                        (("1"
                                                          (replace -2)
                                                          (("1"
                                                            (lemma
                                                             "strictly_sort_map_increasing")
                                                            (("1"
                                                              (expand
                                                               "sigma"
                                                               1
                                                               2)
                                                              (("1"
                                                                (lift-if)
                                                                (("1"
                                                                  (ground)
                                                                  (("1"
                                                                    (expand
                                                                     "yis"
                                                                     +)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (replace
                                                                         "signame")
                                                                        (("1"
                                                                          (case
                                                                           "f(xis`seq(sig(1 + mm))) * g(ssp`seq(2 + mm))
                                                                                                                                                                                                                                                          - f(xis`seq(sig(1 + mm))) * g(ssp`seq(1 + mm)) = f(xis`seq(sig(1 + mm))) * g(P`seq(1 + sig(1 + mm)))
                                                                                                                                                                                                                                                           - f(xis`seq(sig(1 + mm))) * g(P`seq(sig(1 + mm))) AND sigma[below(P`length - 1)]
                                                                                                                                                                                                                                                             (0, sig(mm),
                                                                                                                                                                                                                                                              LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                                                                                f(xis`seq(n)) * g(P`seq(1 + n)) - f(xis`seq(n)) * g(P`seq(n))) = sigma(0, sig(1 + mm) - 1,
                                                                                                                                                                                                                                                                LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                                                                                  f(xis`seq(n)) * g(P`seq(1 + n)) -
                                                                                                                                                                                                                                                                   f(xis`seq(n)) * g(P`seq(n)))")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide
                                                                             3)
                                                                            (("2"
                                                                              (split
                                                                               +)
                                                                              (("1"
                                                                                (typepred
                                                                                 "sig")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "1+mm")
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (lemma
                                                                                 "sigma_split[below(P`length-1)]")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "(LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                                                                     f(xis`seq(n)) * g(P`seq(1 + n)) -
                                                                                                                                                                                                                                                      f(xis`seq(n)) * g(P`seq(n)))"
                                                                                   "sig(1+mm)-1"
                                                                                   "0"
                                                                                   "sig(mm)")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (split
                                                                                       -)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (case
                                                                                             "sigma(1 + sig(mm), sig(1 + mm) - 1,
                                                                                                                                                                                                                                                                                                                                               (LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                                                                                                                                                                  f(xis`seq(n)) * g(P`seq(1 + n)) -
                                                                                                                                                                                                                                                                                                                                                   f(xis`seq(n)) * g(P`seq(n)))) = 0")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               2)
                                                                                              (("2"
                                                                                                (rewrite
                                                                                                 "sigma_restrict_eq_0")
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       -2)
                                                                                                      (("2"
                                                                                                        (skeep)
                                                                                                        (("2"
                                                                                                          (typepred
                                                                                                           "i")
                                                                                                          (("2"
                                                                                                            (case
                                                                                                             "P`seq(i) = P`seq(1+i)")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide
                                                                                                               2)
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "strictly_sort_map_between")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "P")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       "signame")
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "mm")
                                                                                                                        (("2"
                                                                                                                          (inst-cp
                                                                                                                           -
                                                                                                                           "i")
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "1+i")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (inst
                                                                                         -
                                                                                         "P")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "mm"
                                                                                             "1+mm")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide 2)
                                                      (("2"
                                                        (replace -2)
                                                        (("2"
                                                          (case
                                                           "ssp`length >= 2")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (hide 2)
                                                            (("2"
                                                              (lemma
                                                               "partition_strictly_sort")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "a"
                                                                 "b")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (hide 2)
                                                  (("3"
                                                    (skeep)
                                                    (("3"
                                                      (case "mm < 0")
                                                      (("1" (assert) nil nil)
                                                       ("2"
                                                        (assert)
                                                        (("2"
                                                          (typepred "sig(mm)")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (case
                                                               "NOT sig(mm) = P`length-1")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (typepred
                                                                 "sig")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "mm")
                                                                  (("2"
                                                                    (replace
                                                                     "sspname")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (typepred
                                                                           "sig")
                                                                          (("2"
                                                                            (hide
                                                                             -1)
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "ssp`length-1")
                                                                              (("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (typepred
                                                                                     "ssp")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "strictly_increasing?")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "mm"
                                                                                         "ssp`length-1")
                                                                                        (("2"
                                                                                          (ground)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("4"
                                                  (skosimp*)
                                                  (("4" (assert) nil nil))
                                                  nil)
                                                 ("5"
                                                  (skosimp*)
                                                  (("5" (assert) nil nil))
                                                  nil)
                                                 ("6"
                                                  (skosimp*)
                                                  (("6" (assert) nil nil))
                                                  nil)
                                                 ("7"
                                                  (lemma
                                                   "partition_strictly_sort")
                                                  (("7"
                                                    (inst - "a" "b")
                                                    (("7" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (hide 2)
                                            (("3"
                                              (skeep)
                                              (("3"
                                                (case "mm < 0")
                                                (("1" (assert) nil nil)
                                                 ("2"
                                                  (assert)
                                                  (("2"
                                                    (typepred "sig(mm)")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (case
                                                         "NOT sig(mm) = P`length-1")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (typepred "sig")
                                                          (("2"
                                                            (inst - "mm")
                                                            (("2"
                                                              (replace -6)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (typepred
                                                                     "sig")
                                                                    (("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "ssp`length-1")
                                                                        (("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (typepred
                                                                               "ssp")
                                                                              (("2"
                                                                                (expand
                                                                                 "strictly_increasing?")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "mm"
                                                                                   "ssp`length-1")
                                                                                  (("2"
                                                                                    (ground)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("4"
                                            (skosimp*)
                                            (("4" (assert) nil nil))
                                            nil)
                                           ("5"
                                            (skosimp*)
                                            (("5" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (assert)
                          (("2" (skeep)
                            (("2" (hide -2) (("2" (ground) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("3" (hide -1)
                (("3" (skeep)
                  (("3" (assert)
                    (("3" (hide 2)
                      (("3" (split +)
                        (("1" (skeep)
                          (("1" (expand "XISfun")
                            (("1" (lift-if) (("1" (ground) nil nil)) nil))
                            nil))
                          nil)
                         ("2" (expand "XISfun")
                          (("2" (lemma "partition_strictly_sort")
                            (("2" (inst - "a" "b")
                              (("2" (assert)
                                (("2" (inst - "P") (("2" (ground) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("3" (expand "XISfun") (("3" (propax) nil nil)) nil)
                         ("4" (skeep)
                          (("4" (expand "XISfun")
                            (("4" (name "sig" "strictly_sort_map(P)")
                              (("4" (replace -1)
                                (("4" (typepred "ii")
                                  (("4" (typepred "sig")
                                    (("4" (inst - "ii")
                                      (("4"
                                        (flatten)
                                        (("4"
                                          (assert)
                                          (("4"
                                            (typepred "xis")
                                            (("4"
                                              (inst - "sig(ii)")
                                              (("1"
                                                (flatten)
                                                (("1" (assert) nil nil))
                                                nil)
                                               ("2"
                                                (case "sig(ii) = P`length-1")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (lemma
                                                       "strictly_sort_map_increasing")
                                                      (("1"
                                                        (inst - "P")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (inst
                                                             -
                                                             "ii"
                                                             "strictly_sort(P)`length-1")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("4" (hide 2)
                (("4" (skeep)
                  (("4" (lemma "partition_strictly_sort")
                    (("4" (inst - "a" "b")
                      (("4" (assert) (("4" (inst - "P") nil nil)) nil)) nil))
                    nil))
                  nil))
                nil)
               ("5" (assert) nil nil))
              nil))
            nil)
           ("2" (hide 2)
            (("2" (skeep)
              (("2" (lemma "partition_strictly_sort")
                (("2" (inst - "a" "b") (("2" (assert) nil nil)) nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((default const-decl "T" fseqs structures)
    (strictly_sort_map const-decl
     "{sq: [below(strictly_sort(s)`length) -> below(s`length)] |
   LET sss = strictly_sort(s) IN
     (increasing?(s) AND sss`length >= 1 IMPLIES
       sq(sss`length - 1) = s`length - 1)
      AND
      (FORALL (ii: below(sss`length)):
         (sss`seq(ii) = s`seq(sq(ii)) AND
           (increasing?(s) AND ii < sss`length - 1 IMPLIES
             sss`seq(ii + 1) = s`seq(sq(ii) + 1))))}" sort_fseq structures)
    (strictly_sort const-decl "{ss: fseq |
   strictly_increasing?(ss) AND
    (FORALL (x: T): member(x, s) IFF member(x, ss))}" sort_fseq structures)
    (member const-decl "bool" fseqs structures)
    (strictly_increasing? const-decl "bool" sort_fseq structures)
    (partition type-eq-decl nil rs_partition nil)
    (increasing? const-decl "bool" sort_fseq structures)
    (fseq type-eq-decl nil fseqs structures)
    (barray type-eq-decl nil fseqs structures)
    (partition_union_strictly_sort_map_inv formula-decl nil rs_partition nil)
    (partition_union_is_strictly_sort formula-decl nil rs_partition nil)
    (partition_union_map const-decl
     "{pm: [below(P`length) -> below(partition_union(a, b)(P, Q)`length)] |
   FORALL (ii: below(P`length)):
     P`seq(ii) = partition_union(a, b)(P, Q)`seq(pm(ii))}" rs_partition nil)
    (partition_union const-decl "{PQ: partition(a, b) |
   (FORALL (x: T): member(x, PQ) IFF (member(x, P) OR member(x, Q))) AND
    strictly_increasing?(PQ)}" rs_partition nil)
    (T_low type-eq-decl nil sigma reals) (T_high type-eq-decl nil sigma reals)
    (sigma def-decl "real" sigma reals)
    (sigma_0_neg formula-decl nil sigma_below reals)
    (sigma_split formula-decl nil sigma reals)
    (strictly_sort_map_between formula-decl nil sort_fseq structures)
    (fseq_length_zero formula-decl nil fseqs structures)
    (partition_strictly_sort formula-decl nil rs_partition nil)
    (strictly_sort_map_increasing formula-decl nil sort_fseq structures)
    (sigma_restrict_eq_0 formula-decl nil sigma reals))
   nil)
  (Riemann_sum_strictly_sort-2 nil 3492270772
   ("" (skeep)
    (("" (skeep)
      ((""
        (name "XISfun"
              "(LAMBDA (xis:xis?(a,b,P)): (# length := strictly_sort(P)`length-1, seq := (LAMBDA (ii:nat): IF ii < strictly_sort(P)`length-1 THEN xis`seq(strictly_sort_map(P)(ii)) ELSE default[T] ENDIF) #))")
        (("1" (label "XISfunname" -1)
          (("1"
            (case "FORALL (xis:xis?(a,b,P)): Rie_sum(a,b,g,P,xis,f) = Rie_sum(a,b,g,strictly_sort(P),XISfun(xis),f)")
            (("1" (ground)
              (("1" (skeep -)
                (("1" (inst - "xis")
                  (("1" (inst + "XISfun(xis)")
                    (("1" (assert) nil nil)
                     ("2" (assert)
                      (("2" (expand "XISfun" +)
                        (("2" (assert)
                          (("2" (typepred "strictly_sort(P)")
                            (("2" (inst - "a")
                              (("2" (case "member(a,P)")
                                (("1" (replace -1)
                                  (("1" (hide -1)
                                    (("1" (assert) (("1" (skosimp*) nil nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (hide-all-but 1)
                                  (("2" (assert)
                                    (("2" (inst + "0")
                                      (("2" (assert) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (skeep -)
                (("2" (assert)
                  (("2"
                    (case "FORALL (xiss:xis?(a,b,strictly_sort(P))): EXISTS (xis:xis?(a,b,P)): xiss = XISfun(xis)")
                    (("1" (inst - "xis")
                      (("1" (skolem -1 "xisp")
                        (("1" (inst - "xisp")
                          (("1" (inst + "xisp") (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide -1)
                      (("2" (hide -1)
                        (("2" (hide 2)
                          (("2" (skeep)
                            (("2" (name "sig" "partition_union_map(a,b,P,P)")
                              (("2" (label "signame" -1)
                                (("2" (typepred "sig")
                                  (("2" (label "sigtp" -1)
                                    (("2"
                                      (name
                                       "yis"
                                       "(# length := P`length-1, seq := (LAMBDA (ii:nat): IF ii < P`length-1 THEN IF sig(ii) = strictly_sort(P)`length-1 THEN b ELSIF sig(ii) = sig(ii+1) THEN P`seq(ii) ELSE xiss`seq(sig(ii)) ENDIF ELSE default[T] ENDIF) #)")
                                      (("1"
                                        (label "yisname" -1)
                                        (("1"
                                          (lemma
                                           "partition_union_is_strictly_sort")
                                          (("1"
                                            (inst - "a" "b")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (inst - "P")
                                                (("1"
                                                  (label "unionsort" -1)
                                                  (("1"
                                                    (replace "unionsort")
                                                    (("1"
                                                      (stop-rewrite "xis_lem")
                                                      (("1"
                                                        (inst + "yis")
                                                        (("1"
                                                          (expand "XISfun" +)
                                                          (("1"
                                                            (decompose-equality
                                                             +)
                                                            (("1"
                                                              (decompose-equality
                                                               +)
                                                              (("1"
                                                                (lift-if)
                                                                (("1"
                                                                  (ground)
                                                                  (("1"
                                                                    (expand
                                                                     "yis"
                                                                     +)
                                                                    (("1"
                                                                      (lift-if)
                                                                      (("1"
                                                                        (ground)
                                                                        (("1"
                                                                          (name
                                                                           "ssm"
                                                                           "strictly_sort_map(P)")
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (label
                                                                               "ssmname"
                                                                               -1)
                                                                              (("1"
                                                                                (lemma
                                                                                 "partition_union_strictly_sort_map_inv")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "a"
                                                                                   "b")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "P"
                                                                                       "x!1")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide
                                                                           2)
                                                                          (("2"
                                                                            (name
                                                                             "ssm"
                                                                             "strictly_sort_map(P)")
                                                                            (("2"
                                                                              (replace
                                                                               -1)
                                                                              (("2"
                                                                                (label
                                                                                 "ssmname"
                                                                                 -1)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "ssm")
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "partition_union_strictly_sort_map_inv")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "a"
                                                                                       "b")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "P"
                                                                                           "x!1")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (replace
                                                                                               "ssmname")
                                                                                              (("2"
                                                                                                (replace
                                                                                                 "signame")
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "x!1")
                                                                                                    (("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (typepred
                                                                                                           "sig")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "1+ssm(x!1)")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (typepred
                                                                                                                 "sig")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "ssm(x!1)")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (case
                                                                                                                       "NOT P`seq(ssm(x!1)) = P`seq(1+ssm(x!1))")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (typepred
                                                                                                                         "xiss")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "x!1")
                                                                                                                          (("2"
                                                                                                                            (flatten)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (name
                                                                           "ssm"
                                                                           "strictly_sort_map(P)")
                                                                          (("3"
                                                                            (replace
                                                                             -1)
                                                                            (("3"
                                                                              (label
                                                                               "ssmname"
                                                                               -1)
                                                                              (("3"
                                                                                (lemma
                                                                                 "partition_union_strictly_sort_map_inv")
                                                                                (("3"
                                                                                  (inst
                                                                                   -
                                                                                   "a"
                                                                                   "b")
                                                                                  (("3"
                                                                                    (assert)
                                                                                    (("3"
                                                                                      (inst
                                                                                       -
                                                                                       "P"
                                                                                       "x!1")
                                                                                      (("3"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("4"
                                                                          (name
                                                                           "ssm"
                                                                           "strictly_sort_map(P)")
                                                                          (("4"
                                                                            (replace
                                                                             -1)
                                                                            (("4"
                                                                              (label
                                                                               "ssmname"
                                                                               -1)
                                                                              (("4"
                                                                                (typepred
                                                                                 "ssm")
                                                                                (("4"
                                                                                  (assert)
                                                                                  (("4"
                                                                                    (inst
                                                                                     -
                                                                                     "x!1")
                                                                                    (("4"
                                                                                      (flatten)
                                                                                      (("4"
                                                                                        (assert)
                                                                                        (("4"
                                                                                          (typepred
                                                                                           "strictly_sort(P)")
                                                                                          (("4"
                                                                                            (expand
                                                                                             "strictly_increasing?")
                                                                                            (("4"
                                                                                              (inst
                                                                                               -
                                                                                               "x!1"
                                                                                               "strictly_sort(P)`length-1")
                                                                                              (("4"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (typepred
                                                                     "xiss`seq")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "x!1")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (skosimp*)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (skosimp*)
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("3"
                                                              (skosimp*)
                                                              (("3"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (split +)
                                                          (("1"
                                                            (skosimp*)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "yis"
                                                                 +)
                                                                (("1"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (skeep)
                                                            (("2"
                                                              (split +)
                                                              (("1"
                                                                (expand
                                                                 "yis"
                                                                 +)
                                                                (("1"
                                                                  (lift-if)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (split
                                                                       +)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (typepred
                                                                             "xiss")
                                                                            (("1"
                                                                              (typepred
                                                                               "sig")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "ii")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (ground)
                                                                          (("2"
                                                                            (typepred
                                                                             "xiss")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "sig(ii)")
                                                                              (("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "sig")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "ii")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "yis"
                                                                 +)
                                                                (("2"
                                                                  (lift-if)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (ground)
                                                                      (("1"
                                                                        (typepred
                                                                         "sig")
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "ii")
                                                                          (("1"
                                                                            (typepred
                                                                             "P")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "ii+1")
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (expand
                                                                                   "increasing?")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "ii"
                                                                                     "1+ii")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (typepred
                                                                         "P")
                                                                        (("2"
                                                                          (expand
                                                                           "increasing?")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "ii"
                                                                             "1+ii")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("3"
                                                                        (typepred
                                                                         "xiss")
                                                                        (("3"
                                                                          (inst
                                                                           -
                                                                           "sig(ii)")
                                                                          (("3"
                                                                            (flatten)
                                                                            (("3"
                                                                              (case
                                                                               "1+sig(ii) <= sig(1+ii)")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (typepred
                                                                                   "strictly_sort(P)")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "strictly_increasing?")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "1+sig(ii)"
                                                                                       "sig(1+ii)")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (typepred
                                                                                           "sig")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "1+ii")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (typepred
                                                                                 "sig")
                                                                                (("2"
                                                                                  (inst-cp
                                                                                   -
                                                                                   "ii")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "ii+1")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (typepred
                                                                                         "strictly_sort(P)")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "strictly_increasing?")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "sig(1+ii)"
                                                                                             "sig(ii)")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (typepred
                                                                                                   "P")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "increasing?")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "ii"
                                                                                                       "1+ii")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (skosimp*)
                                        (("2" (assert) nil nil))
                                        nil)
                                       ("3"
                                        (skosimp*)
                                        (("3" (assert) nil nil))
                                        nil)
                                       ("4"
                                        (skosimp*)
                                        (("4" (assert) nil nil))
                                        nil)
                                       ("5"
                                        (skosimp*)
                                        (("5" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (hide ("xispred" "XISfunname"))
              (("2" (hide 2)
                (("2" (skeep)
                  (("2" (expand "XISfun")
                    (("2"
                      (name "yis"
                            "(# length := strictly_sort(P)`length-1, seq := (LAMBDA (ii:nat): IF ii < strictly_sort(P)`length-1 THEN xis`seq(strictly_sort_map(P)(ii)) ELSE default[T] ENDIF) #)")
                      (("1" (replace -1)
                        (("1" (hide -1)
                          (("1" (expand "Rie_sum")
                            (("1" (name "ssp" "strictly_sort(P)")
                              (("1" (label "sspname" -1)
                                (("1" (replace "sspname")
                                  (("1" (name "sig" "strictly_sort_map(P)")
                                    (("1" (label "signame" -1)
                                      (("1"
                                        (case
                                         "FORALL (mm:below(ssp`length-1)): sigma[below(strictly_sort(P)`length - 1)]
                                                                                                                                                      (0, mm,
                                                                                                                                                       LAMBDA (n: below(strictly_sort(P)`length - 1)):
                                                                                                                                                         f(yis`seq(n)) * g(ssp`seq(1 + n)) -
                                                                                                                                                          f(yis`seq(n)) * g(ssp`seq(n))) = sigma[below(P`length - 1)]
                                                                                                                                                     (0, sig(mm),
                                                                                                                                                      LAMBDA (n: below(P`length - 1)):
                                                                                                                                                        f(xis`seq(n)) * g(P`seq(1 + n)) - f(xis`seq(n)) * g(P`seq(n)))")
                                        (("1"
                                          (inst - "ssp`length-2")
                                          (("1"
                                            (replace -1)
                                            (("1"
                                              (hide -1)
                                              (("1"
                                                (lemma
                                                 "sigma_split[below(P`length-1)]")
                                                (("1"
                                                  (inst
                                                   -
                                                   "LAMBDA (n: below(P`length - 1)):
                                                                                                                                             f(xis`seq(n)) * g(P`seq(1 + n)) - f(xis`seq(n)) * g(P`seq(n))"
                                                   "P`length-2"
                                                   "0"
                                                   "sig(ssp`length - 2)")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (case
                                                       "sig(ssp`length-2) <= P`length-2")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (replace -2)
                                                          (("1"
                                                            (case
                                                             "sigma(1 + sig(ssp`length - 2), P`length - 2,
                                                                                                                                                                                                                                                LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                                                                  f(xis`seq(n)) * g(P`seq(1 + n)) -
                                                                                                                                                                                                                                                   f(xis`seq(n)) * g(P`seq(n))) = 0")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (hide 2)
                                                              (("2"
                                                                (hide -2)
                                                                (("2"
                                                                  (rewrite
                                                                   "sigma_restrict_eq_0")
                                                                  (("2"
                                                                    (hide 2)
                                                                    (("2"
                                                                      (skeep)
                                                                      (("2"
                                                                        (typepred
                                                                         "i")
                                                                        (("2"
                                                                          (case
                                                                           "g(P`seq(1+i)) = g(P`seq(i))")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (typepred
                                                                               "sig")
                                                                              (("2"
                                                                                (hide
                                                                                 -1)
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "ssp`length-2")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (name
                                                                                         "jj"
                                                                                         "ssp`length-2")
                                                                                        (("1"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("1"
                                                                                            (case
                                                                                             "ssp`length-1 = jj+1")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "P`seq(1+i) = P`seq(i)")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "strictly_sort_map_between")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "P")
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         "sspname")
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           "signame")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "jj")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "i")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "P`seq(sig(1+jj)) = P`seq(1+i)")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (case
                                                                                                                         "1+sig(jj) <= sig(jj+1)")
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "sig(jj+1) = P`length-1")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (replace
                                                                                                                             -3
                                                                                                                             :dir
                                                                                                                             rl)
                                                                                                                            (("2"
                                                                                                                              (typepred
                                                                                                                               "sig")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "NOT P`length = 0")
                                                                                                                                  (("1"
                                                                                                                                    (lemma
                                                                                                                                     "fseq_length_zero")
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "ssp")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (typepred
                                                                                                                                           "ssp")
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "P`seq(0)")
                                                                                                                                            (("1"
                                                                                                                                              (case
                                                                                                                                               "member(P`seq(0),P)")
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (hide
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (skosimp*)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (expand
                                                                                                                                                 "member")
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   +
                                                                                                                                                   "0")
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("3"
                                                                                                                            (lemma
                                                                                                                             "fseq_length_zero")
                                                                                                                            (("3"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "ssp")
                                                                                                                              (("3"
                                                                                                                                (assert)
                                                                                                                                (("3"
                                                                                                                                  (typepred
                                                                                                                                   "ssp")
                                                                                                                                  (("3"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "P`seq(0)")
                                                                                                                                    (("3"
                                                                                                                                      (case
                                                                                                                                       "member(P`seq(0),P)")
                                                                                                                                      (("1"
                                                                                                                                        (replace
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (skosimp*)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (expand
                                                                                                                                         "member")
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           +
                                                                                                                                           "0")
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (lemma
                                                                                                                           "strictly_sort_map_increasing")
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "P")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "jj"
                                                                                                                                 "1+jj")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (lemma
                                                                                                                                     "fseq_length_zero")
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "ssp")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (typepred
                                                                                                                                           "ssp")
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "P`seq(0)")
                                                                                                                                            (("2"
                                                                                                                                              (case
                                                                                                                                               "member(P`seq(0),P)")
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (skosimp*)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (expand
                                                                                                                                                 "member")
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   +
                                                                                                                                                   "0")
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("3"
                                                                                                                                  (lemma
                                                                                                                                   "partition_strictly_sort")
                                                                                                                                  (("3"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "a"
                                                                                                                                     "b")
                                                                                                                                    (("3"
                                                                                                                                      (assert)
                                                                                                                                      (("3"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "P")
                                                                                                                                        (("3"
                                                                                                                                          (flatten)
                                                                                                                                          (("3"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("3"
                                                                                                                          (lemma
                                                                                                                           "partition_strictly_sort")
                                                                                                                          (("3"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "a"
                                                                                                                             "b")
                                                                                                                            (("3"
                                                                                                                              (assert)
                                                                                                                              (("3"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "P")
                                                                                                                                (("3"
                                                                                                                                  (flatten)
                                                                                                                                  (("3"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("4"
                                                                                                                          (lemma
                                                                                                                           "partition_strictly_sort")
                                                                                                                          (("4"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "a"
                                                                                                                             "b")
                                                                                                                            (("4"
                                                                                                                              (assert)
                                                                                                                              (("4"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "P")
                                                                                                                                (("4"
                                                                                                                                  (flatten)
                                                                                                                                  (("4"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (lemma
                                                                                                                         "strictly_sort_map_between")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "P")
                                                                                                                          (("2"
                                                                                                                            (replace
                                                                                                                             -11)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -3
                                                                                                                                 +
                                                                                                                                 :dir
                                                                                                                                 rl)
                                                                                                                                (("2"
                                                                                                                                  (typepred
                                                                                                                                   "sig")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (split
                                                                                                                                       -)
                                                                                                                                      (("1"
                                                                                                                                        (hide
                                                                                                                                         -2)
                                                                                                                                        (("1"
                                                                                                                                          (replace
                                                                                                                                           "sspname")
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -
                                                                                                                                                 "jj")
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -
                                                                                                                                                   "1+i")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (lemma
                                                                                                                                                     "partition_strictly_sort")
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       -
                                                                                                                                                       "a"
                                                                                                                                                       "b")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           -
                                                                                                                                                           "P")
                                                                                                                                                          (("2"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (lemma
                                                                                                                                         "partition_strictly_sort")
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "a"
                                                                                                                                           "b")
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "P")
                                                                                                                                              (("2"
                                                                                                                                                (flatten)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("3"
                                                                                                                      (lemma
                                                                                                                       "partition_strictly_sort")
                                                                                                                      (("3"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "a"
                                                                                                                         "b")
                                                                                                                        (("3"
                                                                                                                          (assert)
                                                                                                                          (("3"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "P")
                                                                                                                            (("3"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (lemma
                                                                                                                 "partition_strictly_sort")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "a"
                                                                                                                   "b")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "P")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (lemma
                                                                                     "partition_strictly_sort")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "a"
                                                                                       "b")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "P")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide (-1 2))
                                                        (("2"
                                                          (typepred "sig")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (case
                                                               "strictly_sort(P)`length >= 1")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replace
                                                                   "sspname")
                                                                  (("1"
                                                                    (inst-cp
                                                                     -
                                                                     "ssp`length-2")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "ssp`length-1")
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (case
                                                                             "NOT sig(ssp`length-2) = P`length-1")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil)
                                                                             ("2"
                                                                              (replace
                                                                               -1)
                                                                              (("2"
                                                                                (typepred
                                                                                 "ssp")
                                                                                (("2"
                                                                                  (expand
                                                                                   "strictly_increasing?")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "ssp`length-2"
                                                                                     "ssp`length-1")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (lemma
                                                                                       "partition_strictly_sort")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "a"
                                                                                         "b")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "P")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (lemma
                                                                       "partition_strictly_sort")
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "a"
                                                                         "b")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "P")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (lemma
                                                                 "partition_strictly_sort")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "a"
                                                                   "b")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "P")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (lemma
                                                         "partition_strictly_sort")
                                                        (("3"
                                                          (inst - "a" "b")
                                                          (("3"
                                                            (assert)
                                                            (("3"
                                                              (inst - "P")
                                                              (("3"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (lemma
                                                     "partition_strictly_sort")
                                                    (("2"
                                                      (inst - "a" "b")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (inst - "P")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (lemma "partition_strictly_sort")
                                            (("2"
                                              (inst - "a" "b")
                                              (("2"
                                                (assert)
                                                (("1"
                                                  (inst - "P")
                                                  (("1" (assert) nil nil))
                                                  nil)
                                                 ("2"
                                                  (lemma
                                                   "partition_strictly_sort")
                                                  (("2"
                                                    (expand "ssp")
                                                    (("2"
                                                      (typepred
                                                       "strictly_sort(P)")
                                                      (("2"
                                                        (inst-cp - "a")
                                                        (("2"
                                                          (inst - "b")
                                                          (("2"
                                                            (case
                                                             "member(b,P) and member(a,P)")
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (replace -1)
                                                                (("1"
                                                                  (replace -2)
                                                                  (("1"
                                                                    (hide -1)
                                                                    (("1"
                                                                      (hide
                                                                       -1)
                                                                      (("1"
                                                                        (expand
                                                                         "member")
                                                                        (("1"
                                                                          (skosimp*)
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide-all-but 1)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (split)
                                                                  (("1"
                                                                    (inst
                                                                     +
                                                                     "P`length-1")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (inst
                                                                     +
                                                                     "0")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide 2)
                                          (("2"
                                            (label "altb" -3)
                                            (("2"
                                              (induct "mm")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (expand "sigma")
                                                  (("1"
                                                    (expand "sigma" 1 1)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (lift-if)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (case
                                                             "sigma(0, sig(0) - 1,
                                                                                                                                                                                                    LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                      f(xis`seq(n)) * g(P`seq(1 + n)) -
                                                                                                                                                                                                       f(xis`seq(n)) * g(P`seq(n))) = 0")
                                                            (("1"
                                                              (replace -1)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (typepred
                                                                   "sig")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "0")
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (replace
                                                                           "sspname")
                                                                          (("1"
                                                                            (replace
                                                                             -2
                                                                             :dir
                                                                             rl)
                                                                            (("1"
                                                                              (replace
                                                                               -3
                                                                               :dir
                                                                               rl)
                                                                              (("1"
                                                                                (expand
                                                                                 "yis")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide 2)
                                                              (("2"
                                                                (rewrite
                                                                 "sigma_restrict_eq_0")
                                                                (("2"
                                                                  (hide 2)
                                                                  (("2"
                                                                    (skeep)
                                                                    (("2"
                                                                      (typepred
                                                                       "i")
                                                                      (("2"
                                                                        (case
                                                                         "P`seq(1+i) = P`seq(i)")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil)
                                                                         ("2"
                                                                          (hide
                                                                           2)
                                                                          (("2"
                                                                            (typepred
                                                                             "sig")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "0")
                                                                              (("2"
                                                                                (hide
                                                                                 -1)
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (hide
                                                                                       -2)
                                                                                      (("2"
                                                                                        (case
                                                                                         "P`seq(sig(0)) = a")
                                                                                        (("1"
                                                                                          (typepred
                                                                                           "P")
                                                                                          (("1"
                                                                                            (copy
                                                                                             -4)
                                                                                            (("1"
                                                                                              (case
                                                                                               "P`seq(i) = a AND P`seq(1+i) = a")
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (split
                                                                                                   +)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "increasing?"
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (inst-cp
                                                                                                       -
                                                                                                       "0"
                                                                                                       "i")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "i"
                                                                                                         "sig(0)")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (expand
                                                                                                     "increasing?"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (inst-cp
                                                                                                       -
                                                                                                       "0"
                                                                                                       "1+i")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "1+i"
                                                                                                         "sig(0)")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (lemma
                                                                                           "partition_strictly_sort")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "a"
                                                                                             "b")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "P")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (skolem 1 "mm")
                                                (("2"
                                                  (assert)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (expand "sigma" 1 1)
                                                      (("1"
                                                        (replace -2)
                                                        (("1"
                                                          (lemma
                                                           "strictly_sort_map_increasing")
                                                          (("1"
                                                            (expand
                                                             "sigma"
                                                             1
                                                             2)
                                                            (("1"
                                                              (lift-if)
                                                              (("1"
                                                                (ground)
                                                                (("1"
                                                                  (expand
                                                                   "yis"
                                                                   +)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (replace
                                                                       "signame")
                                                                      (("1"
                                                                        (case
                                                                         "f(xis`seq(sig(1 + mm))) * g(ssp`seq(2 + mm))
                                                                                                                                                                                                                    - f(xis`seq(sig(1 + mm))) * g(ssp`seq(1 + mm)) = f(xis`seq(sig(1 + mm))) * g(P`seq(1 + sig(1 + mm)))
                                                                                                                                                                                                                     - f(xis`seq(sig(1 + mm))) * g(P`seq(sig(1 + mm))) AND sigma[below(P`length - 1)]
                                                                                                                                                                                                                       (0, sig(mm),
                                                                                                                                                                                                                        LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                                          f(xis`seq(n)) * g(P`seq(1 + n)) - f(xis`seq(n)) * g(P`seq(n))) = sigma(0, sig(1 + mm) - 1,
                                                                                                                                                                                                                          LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                                            f(xis`seq(n)) * g(P`seq(1 + n)) -
                                                                                                                                                                                                                             f(xis`seq(n)) * g(P`seq(n)))")
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide
                                                                           3)
                                                                          (("2"
                                                                            (split
                                                                             +)
                                                                            (("1"
                                                                              (typepred
                                                                               "sig")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "1+mm")
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (lemma
                                                                               "sigma_split[below(P`length-1)]")
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "(LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                                 f(xis`seq(n)) * g(P`seq(1 + n)) -
                                                                                                                                                                                                                  f(xis`seq(n)) * g(P`seq(n)))"
                                                                                 "sig(1+mm)-1"
                                                                                 "0"
                                                                                 "sig(mm)")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (split
                                                                                     -)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (hide
                                                                                         -1)
                                                                                        (("1"
                                                                                          (case
                                                                                           "sigma(1 + sig(mm), sig(1 + mm) - 1,
                                                                                                                                                                                                                                                                                             (LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                                                                                                                f(xis`seq(n)) * g(P`seq(1 + n)) -
                                                                                                                                                                                                                                                                                                 f(xis`seq(n)) * g(P`seq(n)))) = 0")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (rewrite
                                                                                               "sigma_restrict_eq_0")
                                                                                              (("2"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     -2)
                                                                                                    (("2"
                                                                                                      (skeep)
                                                                                                      (("2"
                                                                                                        (typepred
                                                                                                         "i")
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "P`seq(i) = P`seq(1+i)")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide
                                                                                                             2)
                                                                                                            (("2"
                                                                                                              (lemma
                                                                                                               "strictly_sort_map_between")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "P")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     "signame")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "mm")
                                                                                                                      (("2"
                                                                                                                        (inst-cp
                                                                                                                         -
                                                                                                                         "i")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "1+i")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (inst
                                                                                       -
                                                                                       "P")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "mm"
                                                                                           "1+mm")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide 2)
                                                    (("2"
                                                      (replace -2)
                                                      (("2"
                                                        (case
                                                         "ssp`length >= 2")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (hide 2)
                                                          (("2"
                                                            (lemma
                                                             "partition_strictly_sort")
                                                            (("2"
                                                              (inst - "a" "b")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (hide 2)
                                                (("3"
                                                  (skeep)
                                                  (("3"
                                                    (case "mm < 0")
                                                    (("1" (assert) nil nil)
                                                     ("2"
                                                      (assert)
                                                      (("2"
                                                        (typepred "sig(mm)")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (case
                                                             "NOT sig(mm) = P`length-1")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (typepred "sig")
                                                              (("2"
                                                                (inst - "mm")
                                                                (("2"
                                                                  (replace
                                                                   "sspname")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (typepred
                                                                         "sig")
                                                                        (("2"
                                                                          (hide
                                                                           -1)
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "ssp`length-1")
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "ssp")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "strictly_increasing?")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "mm"
                                                                                       "ssp`length-1")
                                                                                      (("2"
                                                                                        (ground)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("4"
                                                (skosimp*)
                                                (("4" (assert) nil nil))
                                                nil)
                                               ("5"
                                                (skosimp*)
                                                (("5" (assert) nil nil))
                                                nil)
                                               ("6"
                                                (skosimp*)
                                                (("6" (assert) nil nil))
                                                nil)
                                               ("7"
                                                (lemma
                                                 "partition_strictly_sort")
                                                (("7"
                                                  (inst - "a" "b")
                                                  (("7" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("3"
                                          (hide 2)
                                          (("3"
                                            (skeep)
                                            (("3"
                                              (case "mm < 0")
                                              (("1" (assert) nil nil)
                                               ("2"
                                                (assert)
                                                (("2"
                                                  (typepred "sig(mm)")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (case
                                                       "NOT sig(mm) = P`length-1")
                                                      (("1" (assert) nil nil)
                                                       ("2"
                                                        (typepred "sig")
                                                        (("2"
                                                          (inst - "mm")
                                                          (("2"
                                                            (replace -6)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (typepred
                                                                   "sig")
                                                                  (("2"
                                                                    (hide -1)
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "ssp`length-1")
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (typepred
                                                                             "ssp")
                                                                            (("2"
                                                                              (expand
                                                                               "strictly_increasing?")
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "mm"
                                                                                 "ssp`length-1")
                                                                                (("2"
                                                                                  (ground)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("4"
                                          (skosimp*)
                                          (("4" (assert) nil nil))
                                          nil)
                                         ("5"
                                          (skosimp*)
                                          (("5" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (assert)
                        (("2" (skeep)
                          (("2" (hide -2) (("2" (ground) nil nil)) nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("3" (hide -1)
              (("3" (skeep)
                (("3" (assert)
                  (("3" (hide 2)
                    (("3" (split +)
                      (("1" (skeep)
                        (("1" (expand "XISfun")
                          (("1" (lift-if) (("1" (ground) nil nil)) nil)) nil))
                        nil)
                       ("2" (assert)
                        (("2" (expand "XISfun") (("2" (propax) nil nil)) nil))
                        nil)
                       ("3" (expand "XISfun") (("3" (propax) nil nil)) nil)
                       ("4" (expand "XISfun") (("4" (propax) nil nil)) nil)
                       ("5" (expand "XISfun")
                        (("5" (lemma "partition_strictly_sort")
                          (("5" (inst - "a" "b")
                            (("5" (assert)
                              (("5" (inst - "P") (("5" (ground) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("6" (expand "XISfun") (("6" (propax) nil nil)) nil)
                       ("7" (skeep)
                        (("7" (expand "XISfun")
                          (("7" (name "sig" "strictly_sort_map(P)")
                            (("7" (replace -1)
                              (("7" (typepred "ii")
                                (("7" (typepred "sig")
                                  (("7" (inst - "ii")
                                    (("7" (flatten)
                                      (("7"
                                        (assert)
                                        (("7"
                                          (typepred "xis")
                                          (("7"
                                            (inst - "sig(ii)")
                                            (("1"
                                              (flatten)
                                              (("1" (assert) nil nil))
                                              nil)
                                             ("2"
                                              (case "sig(ii) = P`length-1")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (replace -1)
                                                  (("1"
                                                    (lemma
                                                     "strictly_sort_map_increasing")
                                                    (("1"
                                                      (inst - "P")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (inst
                                                           -
                                                           "ii"
                                                           "strictly_sort(P)`length-1")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("4" (hide 2)
              (("4" (skeep)
                (("4" (lemma "partition_strictly_sort")
                  (("4" (inst - "a" "b")
                    (("4" (assert) (("4" (inst - "P") nil nil)) nil)) nil))
                  nil))
                nil))
              nil)
             ("5" (assert) nil nil))
            nil))
          nil)
         ("2" (hide 2)
          (("2" (skeep)
            (("2" (lemma "partition_strictly_sort")
              (("2" (inst - "a" "b") (("2" (assert) nil nil)) nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((sigma_restrict_eq_0 formula-decl nil sigma reals)
    (strictly_sort_map_increasing formula-decl nil sort_fseq structures)
    (fseq_length_zero formula-decl nil fseqs structures)
    (strictly_sort_map_between formula-decl nil sort_fseq structures)
    (sigma_split formula-decl nil sigma reals)
    (sigma_0_neg formula-decl nil sigma_below reals)
    (sigma def-decl "real" sigma reals) (T_high type-eq-decl nil sigma reals)
    (T_low type-eq-decl nil sigma reals)
    (barray type-eq-decl nil fseqs structures)
    (fseq type-eq-decl nil fseqs structures)
    (increasing? const-decl "bool" sort_fseq structures)
    (strictly_increasing? const-decl "bool" sort_fseq structures)
    (member const-decl "bool" fseqs structures)
    (strictly_sort const-decl "{ss: fseq |
   strictly_increasing?(ss) AND
    (FORALL (x: T): member(x, s) IFF member(x, ss))}" sort_fseq structures)
    (strictly_sort_map const-decl
     "{sq: [below(strictly_sort(s)`length) -> below(s`length)] |
   LET sss = strictly_sort(s) IN
     (increasing?(s) AND sss`length >= 1 IMPLIES
       sq(sss`length - 1) = s`length - 1)
      AND
      (FORALL (ii: below(sss`length)):
         (sss`seq(ii) = s`seq(sq(ii)) AND
           (increasing?(s) AND ii < sss`length - 1 IMPLIES
             sss`seq(ii + 1) = s`seq(sq(ii) + 1))))}" sort_fseq structures)
    (default const-decl "T" fseqs structures))
   nil)
  (Riemann_sum_strictly_sort-1 nil 3491668925
   ("" (skeep)
    (("" (skeep)
      (("" (typepred "RS")
        (("" (label "altb" -2)
          (("" (expand "Riemann_sum?")
            (("" (skeep -1)
              ((""
                (name "yis"
                      "(# length := strictly_sort(P)`length-1, seq := (LAMBDA (ii:nat): IF ii < strictly_sort(P)`length-1 THEN xis`seq(strictly_sort_map(P)(ii)) ELSE default[real] ENDIF) #)")
                (("1" (inst + "yis")
                  (("1" (hide -1)
                    (("1" (replace -1)
                      (("1" (hide -1)
                        (("1" (expand "Rie_sum")
                          (("1" (name "ssp" "strictly_sort(P)")
                            (("1" (label "sspname" -1)
                              (("1" (replace "sspname")
                                (("1" (name "sig" "strictly_sort_map(P)")
                                  (("1" (label "signame" -1)
                                    (("1"
                                      (case
                                       "FORALL (mm:below(ssp`length-1)): sigma[below(strictly_sort(P)`length - 1)]
                      (0, mm,
                       LAMBDA (n: below(strictly_sort(P)`length - 1)):
                         f(yis`seq(n)) * g(ssp`seq(1 + n)) -
                          f(yis`seq(n)) * g(ssp`seq(n))) = sigma[below(P`length - 1)]
                     (0, sig(mm),
                      LAMBDA (n: below(P`length - 1)):
                        f(xis`seq(n)) * g(P`seq(1 + n)) - f(xis`seq(n)) * g(P`seq(n)))")
                                      (("1"
                                        (inst - "ssp`length-2")
                                        (("1"
                                          (replace -1)
                                          (("1"
                                            (hide -1)
                                            (("1"
                                              (lemma
                                               "sigma_split[below(P`length-1)]")
                                              (("1"
                                                (inst
                                                 -
                                                 "LAMBDA (n: below(P`length - 1)):
                       f(xis`seq(n)) * g(P`seq(1 + n)) - f(xis`seq(n)) * g(P`seq(n))"
                                                 "P`length-2"
                                                 "0"
                                                 "sig(ssp`length - 2)")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (case
                                                     "sig(ssp`length-2) <= P`length-2")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (replace -2)
                                                        (("1"
                                                          (case
                                                           "sigma(1 + sig(ssp`length - 2), P`length - 2,
                                LAMBDA (n: below(P`length - 1)):
                                  f(xis`seq(n)) * g(P`seq(1 + n)) -
                                   f(xis`seq(n)) * g(P`seq(n))) = 0")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (hide 2)
                                                            (("2"
                                                              (hide -2)
                                                              (("2"
                                                                (rewrite
                                                                 "sigma_restrict_eq_0")
                                                                (("2"
                                                                  (hide 2)
                                                                  (("2"
                                                                    (skeep)
                                                                    (("2"
                                                                      (typepred
                                                                       "i")
                                                                      (("2"
                                                                        (case
                                                                         "g(P`seq(1+i)) = g(P`seq(i))")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil)
                                                                         ("2"
                                                                          (hide
                                                                           2)
                                                                          (("2"
                                                                            (typepred
                                                                             "sig")
                                                                            (("2"
                                                                              (hide
                                                                               -1)
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "ssp`length-2")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (name
                                                                                       "jj"
                                                                                       "ssp`length-2")
                                                                                      (("1"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("1"
                                                                                          (case
                                                                                           "ssp`length-1 = jj+1")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (case
                                                                                               "P`seq(1+i) = P`seq(i)")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (lemma
                                                                                                   "strictly_sort_map_between")
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "P")
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       "sspname")
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         "signame")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "jj")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "i")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "P`seq(sig(1+jj)) = P`seq(1+i)")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (case
                                                                                                                       "1+sig(jj) <= sig(jj+1)")
                                                                                                                      (("1"
                                                                                                                        (case
                                                                                                                         "sig(jj+1) = P`length-1")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (replace
                                                                                                                           -3
                                                                                                                           :dir
                                                                                                                           rl)
                                                                                                                          (("2"
                                                                                                                            (typepred
                                                                                                                             "sig")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (case
                                                                                                                                 "NOT P`length = 0")
                                                                                                                                (("1"
                                                                                                                                  (lemma
                                                                                                                                   "fseq_length_zero")
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "ssp")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (typepred
                                                                                                                                         "ssp")
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "P`seq(0)")
                                                                                                                                          (("1"
                                                                                                                                            (case
                                                                                                                                             "member(P`seq(0),P)")
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (hide
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (skosimp*)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (expand
                                                                                                                                               "member")
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 +
                                                                                                                                                 "0")
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("3"
                                                                                                                          (lemma
                                                                                                                           "fseq_length_zero")
                                                                                                                          (("3"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "ssp")
                                                                                                                            (("3"
                                                                                                                              (assert)
                                                                                                                              (("3"
                                                                                                                                (typepred
                                                                                                                                 "ssp")
                                                                                                                                (("3"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "P`seq(0)")
                                                                                                                                  (("3"
                                                                                                                                    (case
                                                                                                                                     "member(P`seq(0),P)")
                                                                                                                                    (("1"
                                                                                                                                      (replace
                                                                                                                                       -1)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (skosimp*)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (expand
                                                                                                                                       "member")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         +
                                                                                                                                         "0")
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (lemma
                                                                                                                         "strictly_sort_map_increasing")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "P")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "jj"
                                                                                                                               "1+jj")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (lemma
                                                                                                                                   "fseq_length_zero")
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "ssp")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (typepred
                                                                                                                                         "ssp")
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "P`seq(0)")
                                                                                                                                          (("2"
                                                                                                                                            (case
                                                                                                                                             "member(P`seq(0),P)")
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (skosimp*)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (expand
                                                                                                                                               "member")
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 +
                                                                                                                                                 "0")
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("3"
                                                                                                                                (lemma
                                                                                                                                 "partition_strictly_sort")
                                                                                                                                (("3"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "a"
                                                                                                                                   "b")
                                                                                                                                  (("3"
                                                                                                                                    (assert)
                                                                                                                                    (("3"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "P")
                                                                                                                                      (("3"
                                                                                                                                        (flatten)
                                                                                                                                        (("3"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (lemma
                                                                                                                         "partition_strictly_sort")
                                                                                                                        (("3"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "a"
                                                                                                                           "b")
                                                                                                                          (("3"
                                                                                                                            (assert)
                                                                                                                            (("3"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "P")
                                                                                                                              (("3"
                                                                                                                                (flatten)
                                                                                                                                (("3"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("4"
                                                                                                                        (lemma
                                                                                                                         "partition_strictly_sort")
                                                                                                                        (("4"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "a"
                                                                                                                           "b")
                                                                                                                          (("4"
                                                                                                                            (assert)
                                                                                                                            (("4"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "P")
                                                                                                                              (("4"
                                                                                                                                (flatten)
                                                                                                                                (("4"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (lemma
                                                                                                                       "strictly_sort_map_between")
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "P")
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -11)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -3
                                                                                                                               +
                                                                                                                               :dir
                                                                                                                               rl)
                                                                                                                              (("2"
                                                                                                                                (typepred
                                                                                                                                 "sig")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (split
                                                                                                                                     -)
                                                                                                                                    (("1"
                                                                                                                                      (hide
                                                                                                                                       -2)
                                                                                                                                      (("1"
                                                                                                                                        (replace
                                                                                                                                         "sspname")
                                                                                                                                        (("1"
                                                                                                                                          (replace
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "jj")
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -
                                                                                                                                                 "1+i")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (lemma
                                                                                                                                                   "partition_strictly_sort")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "a"
                                                                                                                                                     "b")
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         -
                                                                                                                                                         "P")
                                                                                                                                                        (("2"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (lemma
                                                                                                                                       "partition_strictly_sort")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "a"
                                                                                                                                         "b")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "P")
                                                                                                                                            (("2"
                                                                                                                                              (flatten)
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("3"
                                                                                                                    (lemma
                                                                                                                     "partition_strictly_sort")
                                                                                                                    (("3"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "a"
                                                                                                                       "b")
                                                                                                                      (("3"
                                                                                                                        (assert)
                                                                                                                        (("3"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "P")
                                                                                                                          (("3"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (lemma
                                                                                                               "partition_strictly_sort")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "a"
                                                                                                                 "b")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "P")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (lemma
                                                                                   "partition_strictly_sort")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "a"
                                                                                     "b")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "P")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide (-1 2))
                                                      (("2"
                                                        (typepred "sig")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (case
                                                             "strictly_sort(P)`length >= 1")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (replace
                                                                 "sspname")
                                                                (("1"
                                                                  (inst-cp
                                                                   -
                                                                   "ssp`length-2")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "ssp`length-1")
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (case
                                                                           "NOT sig(ssp`length-2) = P`length-1")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (replace
                                                                             -1)
                                                                            (("2"
                                                                              (typepred
                                                                               "ssp")
                                                                              (("2"
                                                                                (expand
                                                                                 "strictly_increasing?")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "ssp`length-2"
                                                                                   "ssp`length-1")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (lemma
                                                                                     "partition_strictly_sort")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "a"
                                                                                       "b")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "P")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (lemma
                                                                     "partition_strictly_sort")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "a"
                                                                       "b")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "P")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (lemma
                                                               "partition_strictly_sort")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "a"
                                                                 "b")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "P")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (lemma
                                                       "partition_strictly_sort")
                                                      (("3"
                                                        (inst - "a" "b")
                                                        (("3"
                                                          (assert)
                                                          (("3"
                                                            (inst - "P")
                                                            (("3"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (lemma
                                                   "partition_strictly_sort")
                                                  (("2"
                                                    (inst - "a" "b")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (inst - "P")
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (lemma "partition_strictly_sort")
                                          (("2"
                                            (inst - "a" "b")
                                            (("2"
                                              (assert)
                                              (("1"
                                                (inst - "P")
                                                (("1" (assert) nil nil))
                                                nil)
                                               ("2"
                                                (lemma
                                                 "partition_strictly_sort")
                                                (("2"
                                                  (hide-all-but
                                                   ("sspname" "altb" 2))
                                                  (("2"
                                                    (lemma
                                                     "partition_strictly_sort")
                                                    (("2"
                                                      (inst - "a" "b")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (inst - "P")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide 2)
                                        (("2"
                                          (induct "mm")
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (expand "sigma")
                                              (("1"
                                                (expand "sigma" 1 1)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (lift-if)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (case
                                                         "sigma(0, sig(0) - 1,
                            LAMBDA (n: below(P`length - 1)):
                              f(xis`seq(n)) * g(P`seq(1 + n)) -
                               f(xis`seq(n)) * g(P`seq(n))) = 0")
                                                        (("1"
                                                          (replace -1)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (typepred "sig")
                                                              (("1"
                                                                (inst - "0")
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (replace
                                                                       "sspname")
                                                                      (("1"
                                                                        (replace
                                                                         -2
                                                                         :dir
                                                                         rl)
                                                                        (("1"
                                                                          (replace
                                                                           -3
                                                                           :dir
                                                                           rl)
                                                                          (("1"
                                                                            (expand
                                                                             "yis")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide 2)
                                                          (("2"
                                                            (rewrite
                                                             "sigma_restrict_eq_0")
                                                            (("2"
                                                              (hide 2)
                                                              (("2"
                                                                (skeep)
                                                                (("2"
                                                                  (typepred
                                                                   "i")
                                                                  (("2"
                                                                    (case
                                                                     "P`seq(1+i) = P`seq(i)")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (hide 2)
                                                                      (("2"
                                                                        (typepred
                                                                         "sig")
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "0")
                                                                          (("2"
                                                                            (hide
                                                                             -1)
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (hide
                                                                                   -2)
                                                                                  (("2"
                                                                                    (case
                                                                                     "P`seq(sig(0)) = a")
                                                                                    (("1"
                                                                                      (typepred
                                                                                       "P")
                                                                                      (("1"
                                                                                        (copy
                                                                                         -4)
                                                                                        (("1"
                                                                                          (case
                                                                                           "P`seq(i) = a AND P`seq(1+i) = a")
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (split
                                                                                               +)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "increasing?"
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (inst-cp
                                                                                                   -
                                                                                                   "0"
                                                                                                   "i")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "i"
                                                                                                     "sig(0)")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (expand
                                                                                                 "increasing?"
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (inst-cp
                                                                                                   -
                                                                                                   "0"
                                                                                                   "1+i")
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "1+i"
                                                                                                     "sig(0)")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (lemma
                                                                                       "partition_strictly_sort")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "a"
                                                                                         "b")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "P")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (skolem 1 "mm")
                                            (("2"
                                              (assert)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (expand "sigma" 1 1)
                                                  (("1"
                                                    (replace -2)
                                                    (("1"
                                                      (lemma
                                                       "strictly_sort_map_increasing")
                                                      (("1"
                                                        (expand "sigma" 1 2)
                                                        (("1"
                                                          (lift-if)
                                                          (("1"
                                                            (ground)
                                                            (("1"
                                                              (expand "yis" +)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replace
                                                                   "signame")
                                                                  (("1"
                                                                    (case
                                                                     "f(xis`seq(sig(1 + mm))) * g(ssp`seq(2 + mm))
                        - f(xis`seq(sig(1 + mm))) * g(ssp`seq(1 + mm)) = f(xis`seq(sig(1 + mm))) * g(P`seq(1 + sig(1 + mm)))
                         - f(xis`seq(sig(1 + mm))) * g(P`seq(sig(1 + mm))) AND sigma[below(P`length - 1)]
                           (0, sig(mm),
                            LAMBDA (n: below(P`length - 1)):
                              f(xis`seq(n)) * g(P`seq(1 + n)) - f(xis`seq(n)) * g(P`seq(n))) = sigma(0, sig(1 + mm) - 1,
                              LAMBDA (n: below(P`length - 1)):
                                f(xis`seq(n)) * g(P`seq(1 + n)) -
                                 f(xis`seq(n)) * g(P`seq(n)))")
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide 3)
                                                                      (("2"
                                                                        (split
                                                                         +)
                                                                        (("1"
                                                                          (typepred
                                                                           "sig")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "1+mm")
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (lemma
                                                                           "sigma_split[below(P`length-1)]")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "(LAMBDA (n: below(P`length - 1)):
                               f(xis`seq(n)) * g(P`seq(1 + n)) -
                                f(xis`seq(n)) * g(P`seq(n)))"
                                                                             "sig(1+mm)-1"
                                                                             "0"
                                                                             "sig(mm)")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (split
                                                                                 -)
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("1"
                                                                                      (case
                                                                                       "sigma(1 + sig(mm), sig(1 + mm) - 1,
                                     (LAMBDA (n: below(P`length - 1)):
                                        f(xis`seq(n)) * g(P`seq(1 + n)) -
                                         f(xis`seq(n)) * g(P`seq(n)))) = 0")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (rewrite
                                                                                           "sigma_restrict_eq_0")
                                                                                          (("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("2"
                                                                                                (hide
                                                                                                 -2)
                                                                                                (("2"
                                                                                                  (skeep)
                                                                                                  (("2"
                                                                                                    (typepred
                                                                                                     "i")
                                                                                                    (("2"
                                                                                                      (case
                                                                                                       "P`seq(i) = P`seq(1+i)")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (lemma
                                                                                                           "strictly_sort_map_between")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "P")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 "signame")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "mm")
                                                                                                                  (("2"
                                                                                                                    (inst-cp
                                                                                                                     -
                                                                                                                     "i")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "1+i")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (inst
                                                                                   -
                                                                                   "P")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "mm"
                                                                                       "1+mm")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide 2)
                                                (("2"
                                                  (replace -2)
                                                  (("2"
                                                    (case "ssp`length >= 2")
                                                    (("1" (assert) nil nil)
                                                     ("2"
                                                      (hide 2)
                                                      (("2"
                                                        (lemma
                                                         "partition_strictly_sort")
                                                        (("2"
                                                          (inst - "a" "b")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (hide 2)
                                            (("3"
                                              (skeep)
                                              (("3"
                                                (case "mm < 0")
                                                (("1" (assert) nil nil)
                                                 ("2"
                                                  (assert)
                                                  (("2"
                                                    (typepred "sig(mm)")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (case
                                                         "NOT sig(mm) = P`length-1")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (typepred "sig")
                                                          (("2"
                                                            (inst - "mm")
                                                            (("2"
                                                              (replace
                                                               "sspname")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (typepred
                                                                     "sig")
                                                                    (("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "ssp`length-1")
                                                                        (("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (typepred
                                                                               "ssp")
                                                                              (("2"
                                                                                (expand
                                                                                 "strictly_increasing?")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "mm"
                                                                                   "ssp`length-1")
                                                                                  (("2"
                                                                                    (ground)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("4"
                                            (skosimp*)
                                            (("4" (assert) nil nil))
                                            nil)
                                           ("5"
                                            (skosimp*)
                                            (("5" (assert) nil nil))
                                            nil)
                                           ("6"
                                            (skosimp*)
                                            (("6" (assert) nil nil))
                                            nil)
                                           ("7"
                                            (lemma "partition_strictly_sort")
                                            (("7"
                                              (inst - "a" "b")
                                              (("7" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("3"
                                        (hide 2)
                                        (("3"
                                          (skeep)
                                          (("3"
                                            (case "mm < 0")
                                            (("1" (assert) nil nil)
                                             ("2"
                                              (assert)
                                              (("2"
                                                (typepred "sig(mm)")
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (case
                                                     "NOT sig(mm) = P`length-1")
                                                    (("1" (assert) nil nil)
                                                     ("2"
                                                      (typepred "sig")
                                                      (("2"
                                                        (inst - "mm")
                                                        (("2"
                                                          (replace -6)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (typepred
                                                                 "sig")
                                                                (("2"
                                                                  (hide -1)
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "ssp`length-1")
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (typepred
                                                                           "ssp")
                                                                          (("2"
                                                                            (expand
                                                                             "strictly_increasing?")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "mm"
                                                                               "ssp`length-1")
                                                                              (("2"
                                                                                (ground)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("4"
                                        (skosimp*)
                                        (("4" (assert) nil nil))
                                        nil)
                                       ("5"
                                        (skosimp*)
                                        (("5" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (assert)
                    (("2" (split +)
                      (("1" (skeep)
                        (("1" (hide -2)
                          (("1" (expand "yis")
                            (("1" (lift-if) (("1" (ground) nil nil)) nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide -1)
                        (("2" (expand "yis")
                          (("2" (lemma "fseq_length_zero")
                            (("2" (inst - "strictly_sort(P)")
                              (("2" (assert)
                                (("2" (case "member(a,empty_seq)")
                                  (("1" (expand "member")
                                    (("1" (skosimp*) nil nil)) nil)
                                   ("2" (typepred "strictly_sort(P)")
                                    (("2" (inst - "a")
                                      (("2"
                                        (replace -3)
                                        (("2"
                                          (replace -2 :dir rl)
                                          (("2"
                                            (expand "member" +)
                                            (("2"
                                              (inst + "0")
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("3" (skeep)
                        (("3" (hide -1)
                          (("3" (expand "yis")
                            (("3" (name "sig" "strictly_sort_map(P)")
                              (("3" (replace -1)
                                (("3" (typepred "sig")
                                  (("3" (inst-cp - "ii")
                                    (("3" (inst - "ii+1")
                                      (("3"
                                        (assert)
                                        (("3"
                                          (flatten)
                                          (("3"
                                            (hide -2)
                                            (("3"
                                              (typepred "xis")
                                              (("3"
                                                (inst - "sig(ii)")
                                                (("1" (ground) nil nil)
                                                 ("2"
                                                  (typepred "sig(ii)")
                                                  (("2"
                                                    (typepred "ii")
                                                    (("2"
                                                      (case
                                                       "P`seq(sig(ii)) < b")
                                                      (("1" (assert) nil nil)
                                                       ("2"
                                                        (typepred
                                                         "strictly_sort(P)")
                                                        (("2"
                                                          (expand
                                                           "strictly_increasing?")
                                                          (("2"
                                                            (inst
                                                             -
                                                             "ii"
                                                             "strictly_sort(P)`length-1")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (lemma
                                                                   "partition_strictly_sort")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "a"
                                                                     "b")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "P")
                                                                        (("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (skosimp*) (("2" (ground) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((T_low type-eq-decl nil sigma reals) (T_high type-eq-decl nil sigma reals)
    (sigma def-decl "real" sigma reals)
    (sigma_0_neg formula-decl nil sigma_below reals)
    (sigma_split formula-decl nil sigma reals)
    (strictly_sort_map_between formula-decl nil sort_fseq structures)
    (fseq_length_zero formula-decl nil fseqs structures)
    (strictly_sort_map_increasing formula-decl nil sort_fseq structures)
    (sigma_restrict_eq_0 formula-decl nil sigma reals)
    (empty_seq const-decl "fsq" fseqs structures)
    (strictly_increasing? const-decl "bool" sort_fseq structures)
    (member const-decl "bool" fseqs structures)
    (strictly_sort const-decl "{ss: fseq |
   strictly_increasing?(ss) AND
    (FORALL (x: T): member(x, s) IFF member(x, ss))}" sort_fseq structures)
    (strictly_sort_map const-decl
     "{sq: [below(strictly_sort(s)`length) -> below(s`length)] |
   LET sss = strictly_sort(s) IN
     (increasing?(s) AND sss`length >= 1 IMPLIES
       sq(sss`length - 1) = s`length - 1)
      AND
      (FORALL (ii: below(sss`length)):
         (sss`seq(ii) = s`seq(sq(ii)) AND
           (increasing?(s) AND ii < sss`length - 1 IMPLIES
             sss`seq(ii + 1) = s`seq(sq(ii) + 1))))}" sort_fseq structures)
    (default const-decl "T" fseqs structures)
    (barray type-eq-decl nil fseqs structures)
    (fseq type-eq-decl nil fseqs structures)
    (increasing? const-decl "bool" sort_fseq structures))
   shostak))
 (x_in_TCC1 0
  (x_in_TCC1-1 nil 3253536795
   ("" (assert)
    ((""
      (inst +
       "(LAMBDA (aa: T, bb:{x: T | aa <= x}): choose({t: T | aa <= t AND t <= bb}))")
      (("" (skosimp*)
        (("" (expand "nonempty?")
          (("" (expand "empty?")
            (("" (expand "member")
              (("" (inst - "(aa!1+bb!1)/2")
                (("1" (prop) (("1" (assert) nil nil) ("2" (assert) nil nil))
                  nil)
                 ("2" (lemma "connected_domain")
                  (("2" (expand "connected?")
                    (("2" (inst - "aa!1" "bb!1" "(aa!1+bb!1)/2")
                      (("2" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((T formal-nonempty-subtype-decl nil rs_integral_def nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (set type-eq-decl nil sets nil) (nonempty? const-decl "bool" sets nil)
    (choose const-decl "(p)" sets nil) (member const-decl "bool" sets nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (aa!1 skolem-const-decl "T" rs_integral_def nil)
    (bb!1 skolem-const-decl "{x: T | aa!1 <= x}" rs_integral_def nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (connected? const-decl "bool" deriv_domain_def nil)
    (connected_domain formula-decl nil rs_integral_def nil)
    (empty? const-decl "bool" sets nil))
   nil
   (x_in existence ""
    "[d: [aa: rs_integral_def.T, {x: rs_integral_def.T | reals.<=(aa, x)}] -> {t: rs_integral_def.T | booleans.AND(reals.<=(d`1, t), reals.<=(t, d`2))}]")))
 (pick_one_TCC1 0
  (pick_one_TCC1-1 nil 3277644518
   ("" (skeep)
    (("" (typepred "P")
      (("" (expand "increasing?")
        (("" (inst - "ii" "ii+1") (("" (assert) nil nil)) nil)) nil))
      nil))
    nil)
   ((partition type-eq-decl nil rs_partition nil)
    (below type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (increasing? const-decl "bool" sort_fseq structures)
    (<= const-decl "bool" reals nil) (restrict const-decl "R" restrict nil)
    (< const-decl "bool" reals nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (fseq type-eq-decl nil fseqs structures)
    (barray type-eq-decl nil fseqs structures)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (> const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   shostak
   (pick_one subtype
    "rs_integral_def.P`seq((number_fields.+)(rs_integral_def.ii, 1))"
    "{x: rs_integral_def.T | reals.<=(rs_integral_def.P`seq(rs_integral_def.ii), x)}")))
 (gen_xis_TCC1 0
  (gen_xis_TCC1-2 "" 3790091137
   ("" (skosimp*)
    (("" (assert) (("" (expand "pick_one") (("" (propax) nil nil)) nil)) nil))
    nil)
   ((int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (pick_one const-decl "T" rs_integral_def nil))
   shostak
   (gen_xis subtype
    "rs_integral_def.pick_one(rs_integral_def.a, rs_integral_def.b, rs_integral_def.P)"
    "fseqs[T].barray((number_fields.-)(rs_integral_def.P`length, 1))"))
  (gen_xis_TCC1-1 nil 3277144019
   ("" (skosimp*)
    (("" (split)
      (("1" (skosimp*)
        (("1" (split)
          (("1" (assert)
            (("1" (expand "pick_one")
              (("1" (typepred "P!1")
                (("1" (inst - "x1!1")
                  (("1" (inst - "x1!1") (("1" (assert) nil nil)) nil)) nil))
                nil))
              nil))
            nil)
           ("2" (expand "finseq_appl")
            (("2" (expand "pick_one")
              (("2" (typepred "P!1")
                (("2" (inst - "1+x1!1")
                  (("1" (inst - "1+x1!1") (("1" (assert) nil nil)) nil)
                   ("2" (assert) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (expand "xis?")
        (("2" (skosimp*)
          (("2" (split)
            (("1" (expand "finseq_appl")
              (("1" (expand "pick_one")
                (("1" (typepred "x_in(P!1`seq(ii!1), P!1`seq(1 + ii!1))")
                  (("1" (propax) nil nil)) nil))
                nil))
              nil)
             ("2" (expand "finseq_appl")
              (("2" (expand "pick_one")
                (("2" (typepred "x_in(P!1`seq(ii!1), P!1`seq(1 + ii!1))")
                  (("2" (propax) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (gen_xis subtype
    "rs_integral_def.pick_one(rs_integral_def.a, rs_integral_def.b, rs_integral_def.P)"
    "fseqs[T].barray((number_fields.-)(rs_integral_def.P`length, 1))")))
 (gen_xis_TCC2 0
  (gen_xis_TCC2-1 nil 3489770792 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil)
    (< const-decl "bool" reals nil) (> const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (barray type-eq-decl nil fseqs structures)
    (fseq type-eq-decl nil fseqs structures)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (restrict const-decl "R" restrict nil) (<= const-decl "bool" reals nil)
    (increasing? const-decl "bool" sort_fseq structures)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (partition type-eq-decl nil rs_partition nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (pick_one const-decl "T" rs_integral_def nil))
   nil
   (gen_xis subtype
    "(# length := (number_fields.-)(rs_integral_def.P`length, 1), seq := rs_integral_def.pick_one(rs_integral_def.a, rs_integral_def.b, rs_integral_def.P) #)"
    "rs_integral_def.xis?(rs_integral_def.a, rs_integral_def.b, rs_integral_def.P)")))
 (Riemann?_Rie 0
  (Riemann?_Rie-1 nil 3278177085
   ("" (skosimp*) (("" (expand "Riemann_sum?") (("" (inst?) nil nil)) nil))
    nil)
   ((int_minus_int_is_int application-judgement "int" integers nil)
    (Riemann_sum? const-decl "bool" rs_integral_def nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil)
    (barray type-eq-decl nil fseqs structures)
    (fseq type-eq-decl nil fseqs structures)
    (bool nonempty-type-eq-decl nil booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (> const-decl "bool" reals nil) (restrict const-decl "R" restrict nil)
    (<= const-decl "bool" reals nil)
    (increasing? const-decl "bool" sort_fseq structures)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (partition type-eq-decl nil rs_partition nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (xis? type-eq-decl nil rs_integral_def nil))
   shostak))
 (integral_unique 0
  (integral_unique-2 "" 3790091139
   ("" (skosimp*)
    (("" (expand "integral?")
      (("" (case-replace "(FORALL (EPS: posreal): abs(A1!1 - A2!1) < 2*EPS)")
        (("1" (inst - "abs(A1!1-A2!1)/2")
          (("1" (assert) nil nil) ("2" (assert) nil nil)) nil)
         ("2" (hide 2)
          (("2" (skosimp*)
            (("2" (inst - "EPS!1")
              (("2" (inst - "EPS!1")
                (("2" (skosimp*)
                  (("2" (name "Delta" "min(delta!1,delta!2)")
                    (("2" (lemma "partition_exists")
                      (("2" (inst - "a!1" "b!1" "Delta")
                        (("2" (assert)
                          (("2" (skolem -1 "myP")
                            (("2" (inst - "myP")
                              (("2" (inst - "myP")
                                (("2" (assert)
                                  (("2" (name "myxis" "gen_xis(a!1,b!1,myP)")
                                    (("2"
                                      (name
                                       "RS"
                                       "Rie_sum(a!1,b!1,g!1,myP,myxis,f!1)")
                                      (("2"
                                        (inst - "RS")
                                        (("1"
                                          (inst - "RS")
                                          (("1"
                                            (hide-all-but (-6 -7 +))
                                            (("1" (grind) nil nil))
                                            nil)
                                           ("2"
                                            (lemma "Riemann?_Rie")
                                            (("2"
                                              (inst - "a!1" "b!1" "f!1" "g!1")
                                              (("2"
                                                (split -)
                                                (("1"
                                                  (inst - "myP" "myxis")
                                                  (("1" (assert) nil nil))
                                                  nil)
                                                 ("2" (propax) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (lemma "Riemann?_Rie")
                                          (("2"
                                            (inst - "a!1" "b!1" "f!1" "g!1")
                                            (("2"
                                              (split -)
                                              (("1"
                                                (inst - "myP" "myxis")
                                                (("1" (assert) nil nil))
                                                nil)
                                               ("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((real_minus_real_is_real application-judgement "real" reals nil)
    (integral? const-decl "bool" rs_integral_def nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (< const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal" real_types
     nil)
    (/= const-decl "boolean" notequal nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (A1!1 skolem-const-decl "real" rs_integral_def nil)
    (A2!1 skolem-const-decl "real" rs_integral_def nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal" real_types
     nil)
    (posreal_min application-judgement "{z: posreal | z <= x AND z <= y}"
     real_defs nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (<= const-decl "bool" reals nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (xis? type-eq-decl nil rs_integral_def nil)
    (gen_xis const-decl "xis?(a, b, P)" rs_integral_def nil)
    (Riemann?_Rie formula-decl nil rs_integral_def nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (RS skolem-const-decl "real" rs_integral_def nil)
    (f!1 skolem-const-decl "[T -> real]" rs_integral_def nil)
    (g!1 skolem-const-decl "[T -> real]" rs_integral_def nil)
    (myP skolem-const-decl "partition[T](a!1, b!1)" rs_integral_def nil)
    (b!1 skolem-const-decl "T" rs_integral_def nil)
    (a!1 skolem-const-decl "T" rs_integral_def nil)
    (Riemann_sum? const-decl "bool" rs_integral_def nil)
    (Rie_sum const-decl "real" rs_integral_def nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (barray type-eq-decl nil fseqs structures)
    (fseq type-eq-decl nil fseqs structures)
    (restrict const-decl "R" restrict nil)
    (increasing? const-decl "bool" sort_fseq structures)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (below type-eq-decl nil naturalnumbers nil)
    (partition type-eq-decl nil rs_partition nil)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (partition_exists formula-decl nil rs_partition nil))
   shostak)
  (integral_unique-1 nil 3277652331
   ("" (stop-rewrite "xis_lem")
    (("" (skosimp*)
      (("" (expand "integral?")
        ((""
          (case-replace "(FORALL (EPS: posreal): abs(A1!1 - A2!1) < 2*EPS)")
          (("1" (inst - "abs(A1!1-A2!1)/2")
            (("1" (assert) nil nil) ("2" (assert) nil nil)) nil)
           ("2" (hide 2)
            (("2" (skosimp*)
              (("2" (inst - "EPS!1")
                (("2" (inst - "EPS!1")
                  (("2" (skosimp*)
                    (("2" (name "Delta" "min(delta!1,delta!2)")
                      (("2" (lemma "partition_exists")
                        (("2" (inst - "a!1" "b!1" "Delta")
                          (("2" (assert)
                            (("2" (skolem -1 "myP")
                              (("2" (inst - "myP")
                                (("2" (inst - "myP")
                                  (("2" (assert)
                                    (("2"
                                      (name "myxis" "gen_xis(a!1,b!1,myP)")
                                      (("2"
                                        (name
                                         "RS"
                                         "Rie_sum(a!1,b!1,g!1,myP,myxis,f!1)")
                                        (("2"
                                          (inst - "RS")
                                          (("1"
                                            (inst - "RS")
                                            (("1"
                                              (hide-all-but (-6 -7 +))
                                              (("1" (grind) nil nil))
                                              nil)
                                             ("2"
                                              (lemma "Riemann?_Rie")
                                              (("2"
                                                (inst
                                                 -
                                                 "a!1"
                                                 "b!1"
                                                 "f!1"
                                                 "g!1")
                                                (("2"
                                                  (split -)
                                                  (("1"
                                                    (inst - "myP" "myxis")
                                                    (("1" (assert) nil nil))
                                                    nil)
                                                   ("2" (propax) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (lemma "Riemann?_Rie")
                                            (("2"
                                              (inst - "a!1" "b!1" "f!1" "g!1")
                                              (("2"
                                                (split -)
                                                (("1"
                                                  (inst - "myP" "myxis")
                                                  (("1" (assert) nil nil))
                                                  nil)
                                                 ("2" (propax) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((partition_exists formula-decl nil rs_partition nil)
    (partition type-eq-decl nil rs_partition nil)
    (increasing? const-decl "bool" sort_fseq structures)
    (fseq type-eq-decl nil fseqs structures)
    (barray type-eq-decl nil fseqs structures))
   nil))
 (integral_TCC1 0
  (integral_TCC1-1 nil 3253536795
   (""
    (inst +
     "(LAMBDA (d: [a: T, b: {x: T | a < x}, g:[T->real],{f | integrable?(a, b, g,f)}]):  choose({S: real | integral?(d`1, d`2, d`3, d`4,S)}))")
    (("" (skosimp*)
      (("" (typepred "d!1`4")
        (("" (expand "integrable?")
          (("" (expand "nonempty?")
            (("" (skosimp*)
              (("" (expand "empty?")
                (("" (expand "member") (("" (inst?) nil nil)) nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((member const-decl "bool" sets nil) (empty? const-decl "bool" sets nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (choose const-decl "(p)" sets nil) (nonempty? const-decl "bool" sets nil)
    (set type-eq-decl nil sets nil)
    (integral? const-decl "bool" rs_integral_def nil)
    (integrable? const-decl "bool" rs_integral_def nil)
    (< const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil))
   nil
   (integral existence ""
    "[d: [a: rs_integral_def.T, b: {x: rs_integral_def.T | reals.<(a, x)}, gg: [T -> real], {f | rs_integral_def.integrable?(a, b, gg, rs_integral_def.f)}] -> {S: reals.real | rs_integral_def.integral?(d`1, d`2, d`3, d`4, S)}]")))
 (integral_def 0
  (integral_def-1 nil 3253536795
   ("" (skosimp*)
    (("" (expand "integrable?")
      (("" (typepred "integral(a!1, b!1, g!1,f!1)")
        (("1" (ground)
          (("1" (lemma "integral_unique")
            (("1" (inst?)
              (("1" (inst -1 "integral(a!1, b!1,g!1, f!1)")
                (("1" (assert) (("1" (inst + "s!1") nil nil)) nil)) nil))
              nil))
            nil)
           ("2" (lemma "integral_unique")
            (("2" (inst?)
              (("2" (inst -1 "integral(a!1, b!1, g!1,f!1)")
                (("2" (assert) nil nil)) nil))
              nil))
            nil))
          nil)
         ("2" (expand "integrable?")
          (("2" (inst?)
            (("2" (assert) (("2" (flatten) (("2" (assert) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((integrable? const-decl "bool" rs_integral_def nil)
    (integral const-decl "{S: real | integral?(a, b, gg, ff, S)}"
     rs_integral_def nil)
    (integral? const-decl "bool" rs_integral_def nil)
    (< const-decl "bool" reals nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (integral_unique formula-decl nil rs_integral_def nil))
   nil))
 (integral_restrict_eq 0
  (integral_restrict_eq-3 nil 3280252877
   ("" (skosimp*)
    (("" (rewrite "integral_def")
      (("" (typepred "integral(a!1, b!1, g!1,f!1)")
        (("" (expand "integral?")
          (("" (skosimp*)
            (("" (inst - "epsi!1")
              (("" (skosimp*)
                (("" (inst + "delta!1")
                  (("" (skosimp*)
                    (("" (inst - "P!1")
                      (("" (assert)
                        (("" (typepred "integral(a!1, b!1, g!1,f!1)")
                          (("" (inst - "R!1")
                            (("" (typepred "R!1")
                              (("" (hide 2)
                                (("" (expand "Riemann_sum?")
                                  (("" (skosimp*)
                                    (("" (inst + "xis!1")
                                      ((""
                                        (assert)
                                        ((""
                                          (replace -1)
                                          ((""
                                            (expand "Rie_sum")
                                            ((""
                                              (assert)
                                              ((""
                                                (rewrite "sigma_restrict_eq")
                                                (("1"
                                                  (hide 2)
                                                  (("1"
                                                    (hide -1)
                                                    (("1"
                                                      (expand "restrict")
                                                      (("1"
                                                        (apply-extensionality
                                                         :hide?
                                                         t)
                                                        (("1"
                                                          (inst
                                                           -
                                                           "xis!1`seq(x!1)")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (typepred
                                                               "xis!1")
                                                              (("1"
                                                                (inst - "x!1")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (typepred
                                                                       "P!1")
                                                                      (("1"
                                                                        (inst-cp
                                                                         -5
                                                                         "x!1")
                                                                        (("1"
                                                                          (inst
                                                                           -5
                                                                           "x!1+1")
                                                                          (("1"
                                                                            (ground)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (skeep*)
                                                  (("2" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((integral_def formula-decl nil rs_integral_def nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (< const-decl "bool" reals nil)
    (integrable? const-decl "bool" rs_integral_def nil)
    (integral? const-decl "bool" rs_integral_def nil)
    (integral const-decl "{S: real | integral?(a, b, gg, ff, S)}"
     rs_integral_def nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (barray type-eq-decl nil fseqs structures)
    (fseq type-eq-decl nil fseqs structures)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (restrict const-decl "R" restrict nil) (<= const-decl "bool" reals nil)
    (increasing? const-decl "bool" sort_fseq structures)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (below type-eq-decl nil naturalnumbers nil)
    (partition type-eq-decl nil rs_partition nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (xis? type-eq-decl nil rs_integral_def nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (integer nonempty-type-from-decl nil integers nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (T_low type-eq-decl nil sigma reals) (T_high type-eq-decl nil sigma reals)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (sigma_restrict_eq formula-decl nil sigma reals)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (restrict const-decl "[T -> real]" sigma reals)
    (TRUE const-decl "bool" booleans nil)
    (Rie_sum const-decl "real" rs_integral_def nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (R!1 skolem-const-decl "(Riemann_sum?(a!1, b!1, P!1, g!1, h!1))"
     rs_integral_def nil)
    (h!1 skolem-const-decl "[T -> real]" rs_integral_def nil)
    (f!1 skolem-const-decl "[T -> real]" rs_integral_def nil)
    (g!1 skolem-const-decl "[T -> real]" rs_integral_def nil)
    (P!1 skolem-const-decl "partition[T](a!1, b!1)" rs_integral_def nil)
    (b!1 skolem-const-decl "T" rs_integral_def nil)
    (a!1 skolem-const-decl "T" rs_integral_def nil)
    (Riemann_sum? const-decl "bool" rs_integral_def nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil))
   nil)
  (integral_restrict_eq-2 nil 3277652385
   ("" (skosimp*)
    (("" (rewrite "integral_def")
      (("" (typepred "integral(a!1, b!1, f!1)")
        (("1" (expand "integral?")
          (("1" (skosimp*)
            (("1" (inst - "epsi!1")
              (("1" (skosimp*)
                (("1" (inst + "delta!1")
                  (("1" (skosimp*)
                    (("1" (inst - "P!1")
                      (("1" (assert)
                        (("1" (typepred "integral(a!1, b!1, f!1)")
                          (("1" (inst - "R!1")
                            (("1" (typepred "R!1")
                              (("1" (hide 2)
                                (("1" (expand "Riemann_sum?")
                                  (("1" (skosimp*)
                                    (("1" (inst + "xis!1")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (replace -1)
                                          (("1"
                                            (expand "Rie_sum")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (rewrite "sigma_restrict_eq")
                                                (("1"
                                                  (hide 2)
                                                  (("1"
                                                    (hide -1)
                                                    (("1"
                                                      (expand "restrict")
                                                      (("1"
                                                        (apply-extensionality
                                                         :hide?
                                                         t)
                                                        (("1"
                                                          (inst
                                                           -
                                                           "xis!1`seq(x!1)")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (hide 2)
                                                            (("2"
                                                              (typepred
                                                               "xis!1")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (skosimp*)
                                                          (("2"
                                                            (typepred "xis!1")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide 2)
                                                  (("2"
                                                    (skosimp*)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (typepred "xis!1")
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (hide 2)
                                                  (("3"
                                                    (skosimp*)
                                                    (("3" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (propax) nil nil) ("3" (propax) nil nil))
        nil))
      nil))
    nil)
   ((restrict const-decl "[T -> real]" sigma reals)
    (sigma_restrict_eq formula-decl nil sigma reals))
   nil)
  (integral_restrict_eq-1 nil 3262002842
   ("" (skosimp*)
    (("" (rewrite "integral_def")
      (("" (typepred "integral(a!1, b!1, f!1)")
        (("1" (expand "is_integral")
          (("1" (skosimp*)
            (("1" (inst - "epsi!1")
              (("1" (skosimp*)
                (("1" (inst + "delta!1")
                  (("1" (skosimp*)
                    (("1" (inst - "P!1")
                      (("1" (assert)
                        (("1" (name "RS1" "Riemann_sum(a!1, b!1, P!1, f!1)")
                          (("1" (replace -1)
                            (("1"
                              (name "RS2" "Riemann_sum(a!1, b!1, P!1, g!1)")
                              (("1" (replace -1)
                                (("1" (case "RS1 = RS2")
                                  (("1" (assert) nil nil)
                                   ("2" (hide -3 -7 2)
                                    (("2" (replace -1 * rl)
                                      (("2"
                                        (hide -1)
                                        (("2"
                                          (replace -1 * rl)
                                          (("2"
                                            (hide -1)
                                            (("2"
                                              (expand "Riemann_sum")
                                              (("2"
                                                (rewrite "sigma_restrict_eq")
                                                (("1"
                                                  (hide 2)
                                                  (("1"
                                                    (expand "restrict")
                                                    (("1"
                                                      (apply-extensionality
                                                       1
                                                       :hide?
                                                       t)
                                                      (("1"
                                                        (lift-if)
                                                        (("1"
                                                          (ground)
                                                          (("1"
                                                            (inst?)
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (skosimp*)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (typepred "P!1")
                                                            (("2"
                                                              (inst?)
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (skosimp*)
                                                        (("3"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide 2)
                                                  (("2"
                                                    (skosimp*)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (typepred "P!1")
                                                        (("2"
                                                          (inst?)
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (hide 2)
                                                  (("3"
                                                    (skosimp*)
                                                    (("3" (assert) nil nil))
                                                    nil))
                                                  nil)
                                                 ("4"
                                                  (hide 2)
                                                  (("4"
                                                    (skosimp*)
                                                    (("4" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (propax) nil nil) ("3" (propax) nil nil))
        nil))
      nil))
    nil)
   ((restrict const-decl "[T -> real]" sigma reals)
    (sigma_restrict_eq formula-decl nil sigma reals))
   nil))
 (Integral_TCC1 0
  (Integral_TCC1-1 nil 3253536795
   ("" (skosimp*)
    (("" (typepred "f!1")
      (("" (expand "Integrable?") (("" (assert) nil nil)) nil)) nil))
    nil)
   ((Integrable_funs type-eq-decl nil rs_integral_def nil)
    (Integrable? const-decl "bool" rs_integral_def nil)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil
   (Integral subtype "rs_integral_def.f"
    "{f | rs_integral_def.integrable?(rs_integral_def.a, rs_integral_def.b, rs_integral_def.g, rs_integral_def.f)}")))
 (Integral_TCC2 0
  (Integral_TCC2-1 nil 3277142737 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil)
    (Integrable? const-decl "bool" rs_integral_def nil)
    (Integrable_funs type-eq-decl nil rs_integral_def nil)
    (width const-decl "posreal" rs_partition nil)
    (integral? const-decl "bool" rs_integral_def nil)
    (integrable? const-decl "bool" rs_integral_def nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   shostak
   (Integral subtype "rs_integral_def.a"
    "{x: rs_integral_def.T | reals.<(rs_integral_def.b, x)}")))
 (Integral_TCC3 0
  (Integral_TCC3-1 nil 3277142737 ("" (subtype-tcc) nil nil)
   ((bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Integrable? const-decl "bool" rs_integral_def nil)
    (Integrable_funs type-eq-decl nil rs_integral_def nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (width const-decl "posreal" rs_partition nil)
    (integral? const-decl "bool" rs_integral_def nil)
    (integrable? const-decl "bool" rs_integral_def nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   shostak
   (Integral subtype "rs_integral_def.f"
    "{f | rs_integral_def.integrable?(rs_integral_def.b, rs_integral_def.a, rs_integral_def.g, rs_integral_def.f)}")))
 (Rie_sum_extend_union_TCC1 0
  (Rie_sum_extend_union_TCC1-1 nil 3492415870 ("" (subtype-tcc) nil nil)
   ((/= const-decl "boolean" notequal nil) (<= const-decl "bool" reals nil)
    (restrict const-decl "R" restrict nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (strictly_increasing? const-decl "bool" sort_fseq structures))
   nil (Rie_sum_extend_union subtype "0" "T_low[below(PQ`length - 1)]")))
 (Rie_sum_extend_union_TCC2 0
  (Rie_sum_extend_union_TCC2-1 nil 3492415870 ("" (subtype-tcc) nil nil)
   ((/= const-decl "boolean" notequal nil) (<= const-decl "bool" reals nil)
    (restrict const-decl "R" restrict nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (strictly_increasing? const-decl "bool" sort_fseq structures))
   nil
   (Rie_sum_extend_union subtype
    "(number_fields.-)(rs_integral_def.PQ`length, 2)"
    "T_high[below(PQ`length - 1)]")))
 (Rie_sum_extend_union_TCC3 0
  (Rie_sum_extend_union_TCC3-1 nil 3492415870 ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (xis? type-eq-decl nil rs_integral_def nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (member const-decl "bool" fseqs structures)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (partition type-eq-decl nil rs_partition nil)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (increasing? const-decl "bool" sort_fseq structures)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (fseq type-eq-decl nil fseqs structures)
    (barray type-eq-decl nil fseqs structures)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (> const-decl "bool" reals nil) (/= const-decl "boolean" notequal nil)
    (<= const-decl "bool" reals nil) (restrict const-decl "R" restrict nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (strictly_increasing? const-decl "bool" sort_fseq structures))
   nil
   (Rie_sum_extend_union subtype "rs_integral_def.n"
    "naturalnumbers.below(rs_partition[T].partition_union(rs_integral_def.a, rs_integral_def.b)(rs_integral_def.P, rs_integral_def.Q)`length)")))
 (Rie_sum_extend_union_TCC4 0
  (Rie_sum_extend_union_TCC4-1 nil 3790089851 ("" (assuming-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (xis? type-eq-decl nil rs_integral_def nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (integer nonempty-type-from-decl nil integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (member const-decl "bool" fseqs structures)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (partition type-eq-decl nil rs_partition nil)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (increasing? const-decl "bool" sort_fseq structures)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (fseq type-eq-decl nil fseqs structures)
    (barray type-eq-decl nil fseqs structures)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (> const-decl "bool" reals nil) (/= const-decl "boolean" notequal nil)
    (<= const-decl "bool" reals nil) (restrict const-decl "R" restrict nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (strictly_increasing? const-decl "bool" sort_fseq structures))
   nil
   (Rie_sum_extend_union assuming
    "reals@sigma[naturalnumbers.below((number_fields.-)(rs_integral_def.PQ`length, 1))].sigma"
    "connected_domain: ASSUMPTION (FORALL (x, y: sigma.T), (z: integers.integer): booleans.IMPLIES(booleans.AND(reals.<=(x, z), reals.<=(z, y)), sigma.T_pred(z)))")))
 (Rie_sum_extend_union 0
  (Rie_sum_extend_union-3 nil 3495206579
   ("" (auto-rewrite + "member")
    (("" (skeep)
      (("" (label "altb" -1)
        (("" (skeep)
          (("" (name "PQ" "partition_union(a,b)(P,Q)")
            (("" (replace -1)
              (("" (label "PQname" -1)
                (("" (assert)
                  (("1" (flatten)
                    (("1" (label "Pinc" -3)
                      (("1" (skeep)
                        (("1" (expand "Rie_sum")
                          (("1"
                            (name "FF" "LAMBDA (n: below(P`length - 1)):
                                                                                                                                      f(xis`seq(n)) * (g(P`seq(1 + n)) - g(P`seq(n)))")
                            (("1" (label "FFname" -1)
                              (("1" (replace "FFname")
                                (("1"
                                  (name "sig"
                                        "partition_union_map_inv(a, b, P, Q)")
                                  (("1" (replace -1)
                                    (("1" (label "signame" -1)
                                      (("1"
                                        (case
                                         "NOT sig(partition_union(a, b)(P, Q)`length - 2) = P`length-2")
                                        (("1"
                                          (hide 2)
                                          (("1"
                                            (typepred "sig")
                                            (("1"
                                              (name
                                               "kj"
                                               "partition_union(a, b)(P, Q)`length - 2")
                                              (("1"
                                                (label "kjname" -1)
                                                (("1"
                                                  (replace "kjname")
                                                  (("1"
                                                    (inst - "kj")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (case
                                                           "sig(kj) = P`length-1")
                                                          (("1"
                                                            (case
                                                             "partition_union(a, b)(P, Q)`seq(kj) = b")
                                                            (("1"
                                                              (typepred
                                                               "partition_union(a,b)(P,Q)")
                                                              (("1"
                                                                (expand
                                                                 "strictly_increasing?")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "kj"
                                                                   "kj+1")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (typepred
                                                               "partition_union(a,b)(P,Q)")
                                                              (("2"
                                                                (inst - "kj")
                                                                (("2"
                                                                  (ground)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            (("2"
                                                              (case
                                                               "PQ`seq(kj) < P`seq(P`length-2)")
                                                              (("1"
                                                                (case
                                                                 "PQ`seq(kj)<P`seq(P`length-1)")
                                                                (("1"
                                                                  (typepred
                                                                   "PQ")
                                                                  (("1"
                                                                    (copy -6)
                                                                    (("1"
                                                                      (inst-cp
                                                                       -
                                                                       "P`seq(P`length - 2)")
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "P`seq(P`length - 1)")
                                                                        (("1"
                                                                          (case
                                                                           "member(P`seq(P`length-1),P)")
                                                                          (("1"
                                                                            (case
                                                                             "member(P`seq(P`length-2),P)")
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (replace
                                                                                 -2)
                                                                                (("1"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("1"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (skosimp*)
                                                                                        (("1"
                                                                                          (case
                                                                                           "kj < i!2 AND i!2 < i!1")
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (split
                                                                                             +)
                                                                                            (("1"
                                                                                              (case
                                                                                               "kj = i!2")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil)
                                                                                               ("2"
                                                                                                (expand
                                                                                                 "strictly_increasing?")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "i!2"
                                                                                                   "kj")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (label
                                                                                               "Pinc"
                                                                                               -1)
                                                                                              (("2"
                                                                                                (case
                                                                                                 "i!2 = i!1")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "strictly_increasing?"
                                                                                                     "Pinc")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       "Pinc"
                                                                                                       "P`length-2"
                                                                                                       "P`length-1")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide
                                                                                                   "Pinc")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "strictly_increasing?")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "i!1"
                                                                                                         "i!2")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (reveal
                                                                                                                 "Pinc")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "strictly_increasing?")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     "Pinc"
                                                                                                                     "P`length-2"
                                                                                                                     "P`length-1")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (inst?)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst?)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (label
                                                                   "Pinc"
                                                                   -1)
                                                                  (("2"
                                                                    (expand
                                                                     "strictly_increasing?"
                                                                     "Pinc")
                                                                    (("2"
                                                                      (inst
                                                                       "Pinc"
                                                                       "P`length-2"
                                                                       "P`length-1")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (label
                                                                 "Pinc"
                                                                 -1)
                                                                (("2"
                                                                  (expand
                                                                   "strictly_increasing?"
                                                                   "Pinc")
                                                                  (("2"
                                                                    (inst
                                                                     "Pinc"
                                                                     "1+sig(kj)"
                                                                     "P`length-2")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (label "sigm2" -1)
                                          (("2"
                                            (name
                                             "pum"
                                             "partition_union_map(a,b,P,Q)")
                                            (("2"
                                              (label "pumname" -1)
                                              (("2"
                                                (typepred "pum")
                                                (("2"
                                                  (label "pumtp" -1)
                                                  (("2"
                                                    (case
                                                     "NOT (FORALL (nn:below(P`length-1)): sigma[below(P`length - 1)](0, nn, FF) = sigma[below(PQ`length - 1)]
                                                                                                                                (0, pum(nn+1)-1, (LAMBDA (n: below(PQ`length - 1)):
                                                                                                                              f(xis`seq(sig(n))) * (g(PQ`seq(1 + n)) -g(PQ`seq(n))))))")
                                                    (("1"
                                                      (hide 2)
                                                      (("1"
                                                        (induct "nn")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             "sigma"
                                                             1
                                                             1)
                                                            (("1"
                                                              (expand
                                                               "sigma"
                                                               1
                                                               1)
                                                              (("1"
                                                                (expand
                                                                 "FF"
                                                                 +)
                                                                (("1"
                                                                  (case
                                                                   "FORALL (yy:below(PQ`length - 1)): yy<=pum(1)-1 IMPLIES sigma[below(PQ`length - 1)]
                                                                                                                                                            (0, yy,
                                                                                                                                                             (LAMBDA (n: below(PQ`length - 1)):
                                                                                                                                                                f(xis`seq(sig(n))) *
                                                                                                                                                                 g(PQ`seq(1 + n))
                                                                                                                                                                 -
                                                                                                                                                                 f(xis`seq(sig(n))) * g(PQ`seq(n)))) = f(xis`seq(0))*(g(PQ`seq(1 + yy))-g(PQ`seq(0)))")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "pum(1)-1")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (replace
                                                                         -1)
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "1")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (inst-cp
                                                                           -
                                                                           "1")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "0")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide 2)
                                                                    (("2"
                                                                      (induct
                                                                       "yy")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (expand
                                                                             "sigma"
                                                                             +)
                                                                            (("1"
                                                                              (expand
                                                                               "sigma"
                                                                               +)
                                                                              (("1"
                                                                                (case
                                                                                 "sig(0) = 0")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide
                                                                                   2)
                                                                                  (("2"
                                                                                    (typepred
                                                                                     "sig")
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "partition_union_map_inv_def")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "a"
                                                                                         "b")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "P"
                                                                                             "Q")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "0"
                                                                                               "0")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (typepred
                                                                                                   "pum")
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "0")
                                                                                                    (("2"
                                                                                                      (typepred
                                                                                                       "PQ")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "strictly_increasing?")
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "0"
                                                                                                           "pum(0)")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (skolem
                                                                         1
                                                                         "nn")
                                                                        (("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (expand
                                                                               "sigma"
                                                                               +)
                                                                              (("2"
                                                                                (replace
                                                                                 -2)
                                                                                (("2"
                                                                                  (case
                                                                                   "sig(1+nn) = 0")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     2)
                                                                                    (("2"
                                                                                      (hide
                                                                                       -2)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "partition_union_map_inv_def")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "a"
                                                                                             "b")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "P"
                                                                                                 "Q")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "1+nn"
                                                                                                   "0")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (typepred
                                                                                                         "pum")
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "0")
                                                                                                          (("2"
                                                                                                            (typepred
                                                                                                             "PQ")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "strictly_increasing?")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "0"
                                                                                                                 "pum(0)")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("3"
                                                                        (skeep*)
                                                                        (("3"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("4"
                                                                        (skeep*)
                                                                        (("4"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("3"
                                                                    (skeep*)
                                                                    (("3"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (skolem 1 "nn")
                                                          (("2"
                                                            (flatten)
                                                            (("2"
                                                              (expand
                                                               "sigma"
                                                               +
                                                               1)
                                                              (("2"
                                                                (replace -2)
                                                                (("2"
                                                                  (hide -2)
                                                                  (("2"
                                                                    (lemma
                                                                     "sigma_split[below(PQ`length - 1)]")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "(LAMBDA (n: below(PQ`length - 1)):
                                                                                                                             f(xis`seq(sig(n))) *(g(PQ`seq(1 + n))-g(PQ`seq(n))))"
                                                                       "pum(2+nn)-1"
                                                                       "0"
                                                                       "pum(nn + 1) - 1")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (case
                                                                           "pum(1 + nn) - 1 <= pum(2 + nn) - 1")
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (case
                                                                               "FF(1+nn) = sigma(pum(1 + nn), pum(2 + nn) - 1,
                                                                                                                                                                             (LAMBDA (n: below(PQ`length - 1)):
                                                                                                                                                                                f(xis`seq(sig(n))) *
                                                                                                                                                                                 g(PQ`seq(1 + n))
                                                                                                                                                                                 -
                                                                                                                                                                                 f(xis`seq(sig(n))) *
                                                                                                                                                                                  g(PQ`seq(n))))")
                                                                              (("1"
                                                                                (ground)
                                                                                nil
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 2)
                                                                                (("2"
                                                                                  (hide
                                                                                   -2)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "FF"
                                                                                     +)
                                                                                    (("2"
                                                                                      (case
                                                                                       "FORALL (yy:below(PQ`length - 1)): pum(1+nn)<=yy AND yy<=pum(2+nn)-1 IMPLIES sigma[below(PQ`length - 1)]
                                                                                                                                                                                    (pum(1+nn), yy,
                                                                                                                                                                                     (LAMBDA (n: below(PQ`length - 1)):
                                                                                                                                                                                        f(xis`seq(sig(n))) *
                                                                                                                                                                                         g(PQ`seq(1 + n))
                                                                                                                                                                                         -
                                                                                                                                                                                         f(xis`seq(sig(n))) * g(PQ`seq(n)))) = f(xis`seq(1+nn))*(g(PQ`seq(1 + yy))-g(PQ`seq(pum(1+nn))))")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "pum(2+nn)-1")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (split
                                                                                             -)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (typepred
                                                                                                 "pum")
                                                                                                (("1"
                                                                                                  (inst-cp
                                                                                                   -
                                                                                                   "1+nn")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "2+nn")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               2)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "partition_union_map_increasing")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "a"
                                                                                                   "b")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "P"
                                                                                                       "Q"
                                                                                                       "1+nn"
                                                                                                       "2+nn")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "sigma")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "partition_union_map_increasing")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "a"
                                                                                                 "b")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "P"
                                                                                                     "Q"
                                                                                                     "1+nn"
                                                                                                     "2+nn")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (induct
                                                                                           "yy")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "pum(1+nn) = 0")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "sigma")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "sigma")
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "partition_union_map_inv_def")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "a"
                                                                                                             "b")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "P"
                                                                                                                 "Q")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "0"
                                                                                                                   "1+nn")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skolem
                                                                                             1
                                                                                             "yy")
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (split
                                                                                                   -)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "sigma"
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "sig(1+yy) = 1+nn")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide
                                                                                                             2)
                                                                                                            (("2"
                                                                                                              (hide
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "partition_union_map_inv_def")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "a"
                                                                                                                     "b")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "P"
                                                                                                                         "Q")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "1+yy"
                                                                                                                           "1+nn")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (case
                                                                                                     "pum(1+nn) = 1+yy")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "sigma")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "sigma")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (case
                                                                                                             "sig(1+yy) = 1+nn")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (lemma
                                                                                                               "partition_union_map_inv_def")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "a"
                                                                                                                   "b")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "P"
                                                                                                                       "Q")
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "1+yy"
                                                                                                                         "1+nn")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (hide
                                                                                             2)
                                                                                            (("3"
                                                                                              (assert)
                                                                                              (("3"
                                                                                                (skeep*)
                                                                                                (("3"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("4"
                                                                                            (assert)
                                                                                            (("4"
                                                                                              (skeep*)
                                                                                              (("4"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("5"
                                                                                            (skeep*)
                                                                                            (("5"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("6"
                                                                                            (skeep*)
                                                                                            (("6"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("3"
                                                                                        (skeep*)
                                                                                        (("3"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (lemma
                                                                             "partition_union_map_increasing")
                                                                            (("2"
                                                                              (hide
                                                                               -2)
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "a"
                                                                                 "b")
                                                                                (("2"
                                                                                  (hide
                                                                                   2)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "P"
                                                                                       "Q"
                                                                                       "1+nn"
                                                                                       "2+nn")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (skeep*)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("3"
                                                          (hide 2)
                                                          (("3"
                                                            (skeep)
                                                            (("3"
                                                              (assert)
                                                              (("3"
                                                                (case
                                                                 "pum(1+nn) = 0")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (skeep*)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (skeep*)
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("4"
                                                          (skeep*)
                                                          (("4"
                                                            (assert)
                                                            (("4"
                                                              (assert)
                                                              (("4"
                                                                (assert)
                                                                (("4"
                                                                  (case
                                                                   "pum(1+nn) = 0")
                                                                  (("1"
                                                                    (inst
                                                                     +
                                                                     "0")
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("5"
                                                          (skeep*)
                                                          (("5"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (inst - "P`length-2")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (case
                                                             "pum(P`length-1) = PQ`length - 1")
                                                            (("1"
                                                              (replace -1)
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide 2)
                                                              (("2"
                                                                (hide -1)
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "P`length-1")
                                                                  (("2"
                                                                    (typepred
                                                                     "partition_union(a,b)(P,Q)")
                                                                    (("2"
                                                                      (expand
                                                                       "strictly_increasing?")
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "pum(P`length-1)"
                                                                         "PQ`length - 1")
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (assert)
                                                      (("3"
                                                        (skeep)
                                                        (("3"
                                                          (case
                                                           "pum(1+nn) = 0")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (skeep*)
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            (("2"
                                                              (skeep*)
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("4"
                                                      (skeep*)
                                                      (("4"
                                                        (assert)
                                                        (("4"
                                                          (assert)
                                                          (("4"
                                                            (assert)
                                                            (("4"
                                                              (case
                                                               "pum(1+nn) = 0")
                                                              (("1"
                                                                (inst + "0")
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("5"
                                                      (skeep*)
                                                      (("5" (assert) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (assert) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (xis? type-eq-decl nil rs_integral_def nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (T_low type-eq-decl nil sigma reals) (T_high type-eq-decl nil sigma reals)
    (sigma def-decl "real" sigma reals)
    (integer nonempty-type-from-decl nil integers nil)
    (sigma_split formula-decl nil sigma reals)
    (even_minus_odd_is_odd application-judgement "odd_int" integers nil)
    (nn skolem-const-decl "below(P`length - 1)" rs_integral_def nil)
    (partition_union_map_increasing formula-decl nil rs_partition nil)
    (yy!1 skolem-const-decl "below(PQ`length - 1)" rs_integral_def nil)
    (yy!1 skolem-const-decl "below(PQ`length - 1)" rs_integral_def nil)
    (yy!1 skolem-const-decl "below(PQ`length - 1)" rs_integral_def nil)
    (odd_plus_even_is_odd application-judgement "odd_int" integers nil)
    (partition_union_map_inv_def formula-decl nil rs_partition nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (TRUE const-decl "bool" booleans nil)
    (sigma_0_neg formula-decl nil sigma_below reals)
    (FF skolem-const-decl "[below(P`length - 1) -> real]" rs_integral_def nil)
    (below_induction formula-decl nil bounded_nat_inductions nil)
    (pred type-eq-decl nil defined_types nil)
    (PQ skolem-const-decl "{PQ: partition[T](a, b) |
   (FORALL (x: T): member(x, PQ) IFF (member(x, P) OR member(x, Q))) AND
    strictly_increasing?(PQ)}" rs_integral_def nil)
    (pum skolem-const-decl
     "{pm: [below(P`length) -> below(partition_union(a, b)(P, Q)`length)] |
   FORALL (ii: below(P`length)):
     P`seq(ii) = partition_union(a, b)(P, Q)`seq(pm(ii))}" rs_integral_def
     nil)
    (Q skolem-const-decl "partition[T](a, b)" rs_integral_def nil)
    (P skolem-const-decl "partition[T](a, b)" rs_integral_def nil)
    (b skolem-const-decl "T" rs_integral_def nil)
    (a skolem-const-decl "T" rs_integral_def nil)
    (partition_union_map const-decl
     "{pm: [below(P`length) -> below(partition_union(a, b)(P, Q)`length)] |
   FORALL (ii: below(P`length)):
     P`seq(ii) = partition_union(a, b)(P, Q)`seq(pm(ii))}" rs_partition nil)
    (kj skolem-const-decl "int" rs_integral_def nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (partition_union_map_inv const-decl
     "{pm: [below(partition_union(a, b)(P, Q)`length) -> below(P`length)] |
   FORALL (jj: below(partition_union(a, b)(P, Q)`length)):
     P`seq(pm(jj)) <= partition_union(a, b)(P, Q)`seq(jj) AND
      (pm(jj) < P`length - 1 IMPLIES
        partition_union(a, b)(P, Q)`seq(jj) < P`seq(pm(jj) + 1))}"
     rs_partition nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (Rie_sum const-decl "real" rs_integral_def nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil)
    (barray type-eq-decl nil fseqs structures)
    (fseq type-eq-decl nil fseqs structures)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (< const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (> const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (restrict const-decl "R" restrict nil) (<= const-decl "bool" reals nil)
    (increasing? const-decl "bool" sort_fseq structures)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (partition type-eq-decl nil rs_partition nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (member const-decl "bool" fseqs structures)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (strictly_increasing? const-decl "bool" sort_fseq structures)
    (partition_union const-decl "{PQ: partition(a, b) |
   (FORALL (x: T): member(x, PQ) IFF (member(x, P) OR member(x, Q))) AND
    strictly_increasing?(PQ)}" rs_partition nil))
   nil)
  (Rie_sum_extend_union-2 nil 3492415900
   ("" (skeep)
    (("" (label "altb" -1)
      (("" (skeep)
        (("" (name "PQ" "partition_union(a,b)(P,Q)")
          (("" (replace -1)
            (("" (label "PQname" -1)
              (("" (assert)
                (("1" (flatten)
                  (("1" (label "Pinc" -3)
                    (("1" (skeep)
                      (("1" (expand "Rie_sum")
                        (("1"
                          (name "FF" "LAMBDA (n: below(P`length - 1)):
                                                                                                                             f(xis`seq(n)) * (g(P`seq(1 + n)) - g(P`seq(n)))")
                          (("1" (label "FFname" -1)
                            (("1" (replace "FFname")
                              (("1"
                                (name "sig"
                                      "partition_union_map_inv(a, b, P, Q)")
                                (("1" (replace -1)
                                  (("1" (label "signame" -1)
                                    (("1"
                                      (case
                                       "NOT sig(partition_union(a, b)(P, Q)`length - 2) = P`length-2")
                                      (("1"
                                        (hide 2)
                                        (("1"
                                          (typepred "sig")
                                          (("1"
                                            (name
                                             "kj"
                                             "partition_union(a, b)(P, Q)`length - 2")
                                            (("1"
                                              (label "kjname" -1)
                                              (("1"
                                                (replace "kjname")
                                                (("1"
                                                  (inst - "kj")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (case
                                                         "sig(kj) = P`length-1")
                                                        (("1"
                                                          (case
                                                           "partition_union(a, b)(P, Q)`seq(kj) = b")
                                                          (("1"
                                                            (typepred
                                                             "partition_union(a,b)(P,Q)")
                                                            (("1"
                                                              (expand
                                                               "strictly_increasing?")
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "kj"
                                                                 "kj+1")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (typepred
                                                             "partition_union(a,b)(P,Q)")
                                                            (("2"
                                                              (inst - "kj")
                                                              (("2"
                                                                (ground)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          (("2"
                                                            (case
                                                             "PQ`seq(kj) < P`seq(P`length-2)")
                                                            (("1"
                                                              (case
                                                               "PQ`seq(kj)<P`seq(P`length-1)")
                                                              (("1"
                                                                (typepred
                                                                 "PQ")
                                                                (("1"
                                                                  (copy -6)
                                                                  (("1"
                                                                    (inst-cp
                                                                     -
                                                                     "P`seq(P`length - 2)")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "P`seq(P`length - 1)")
                                                                      (("1"
                                                                        (case
                                                                         "member(P`seq(P`length-1),P)")
                                                                        (("1"
                                                                          (case
                                                                           "member(P`seq(P`length-2),P)")
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (replace
                                                                               -2)
                                                                              (("1"
                                                                                (hide
                                                                                 -1)
                                                                                (("1"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (skosimp*)
                                                                                      (("1"
                                                                                        (case
                                                                                         "kj < i!2 AND i!2 < i!1")
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (split
                                                                                           +)
                                                                                          (("1"
                                                                                            (case
                                                                                             "kj = i!2")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil)
                                                                                             ("2"
                                                                                              (expand
                                                                                               "strictly_increasing?")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "i!2"
                                                                                                 "kj")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (label
                                                                                             "Pinc"
                                                                                             -1)
                                                                                            (("2"
                                                                                              (case
                                                                                               "i!2 = i!1")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "strictly_increasing?"
                                                                                                   "Pinc")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     "Pinc"
                                                                                                     "P`length-2"
                                                                                                     "P`length-1")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide
                                                                                                 "Pinc")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "strictly_increasing?")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "i!1"
                                                                                                       "i!2")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (reveal
                                                                                                               "Pinc")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "strictly_increasing?")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   "Pinc"
                                                                                                                   "P`length-2"
                                                                                                                   "P`length-1")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst?)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (inst?)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (label
                                                                 "Pinc"
                                                                 -1)
                                                                (("2"
                                                                  (expand
                                                                   "strictly_increasing?"
                                                                   "Pinc")
                                                                  (("2"
                                                                    (inst
                                                                     "Pinc"
                                                                     "P`length-2"
                                                                     "P`length-1")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (label
                                                               "Pinc"
                                                               -1)
                                                              (("2"
                                                                (expand
                                                                 "strictly_increasing?"
                                                                 "Pinc")
                                                                (("2"
                                                                  (inst
                                                                   "Pinc"
                                                                   "1+sig(kj)"
                                                                   "P`length-2")
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (label "sigm2" -1)
                                        (("2"
                                          (name
                                           "pum"
                                           "partition_union_map(a,b,P,Q)")
                                          (("2"
                                            (label "pumname" -1)
                                            (("2"
                                              (typepred "pum")
                                              (("2"
                                                (label "pumtp" -1)
                                                (("2"
                                                  (case
                                                   "NOT (FORALL (nn:below(P`length-1)): sigma[below(P`length - 1)](0, nn, FF) = sigma[below(PQ`length - 1)]
                                                                                                                     (0, pum(nn+1)-1, (LAMBDA (n: below(PQ`length - 1)):
                                                                                                                   f(xis`seq(sig(n))) * (g(PQ`seq(1 + n)) -g(PQ`seq(n))))))")
                                                  (("1"
                                                    (hide 2)
                                                    (("1"
                                                      (induct "nn")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand "sigma" 1 1)
                                                          (("1"
                                                            (expand
                                                             "sigma"
                                                             1
                                                             1)
                                                            (("1"
                                                              (expand "FF" +)
                                                              (("1"
                                                                (case
                                                                 "FORALL (yy:below(PQ`length - 1)): yy<=pum(1)-1 IMPLIES sigma[below(PQ`length - 1)]
                                                                                                                                             (0, yy,
                                                                                                                                              (LAMBDA (n: below(PQ`length - 1)):
                                                                                                                                                 f(xis`seq(sig(n))) *
                                                                                                                                                  g(PQ`seq(1 + n))
                                                                                                                                                  -
                                                                                                                                                  f(xis`seq(sig(n))) * g(PQ`seq(n)))) = f(xis`seq(0))*(g(PQ`seq(1 + yy))-g(PQ`seq(0)))")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "pum(1)-1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (replace
                                                                       -1)
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "1")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (inst-cp
                                                                         -
                                                                         "1")
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "0")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide 2)
                                                                  (("2"
                                                                    (induct
                                                                     "yy")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (expand
                                                                           "sigma"
                                                                           +)
                                                                          (("1"
                                                                            (expand
                                                                             "sigma"
                                                                             +)
                                                                            (("1"
                                                                              (case
                                                                               "sig(0) = 0")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 2)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "sig")
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "partition_union_map_inv_def")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "a"
                                                                                       "b")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "P"
                                                                                           "Q")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "0"
                                                                                             "0")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (typepred
                                                                                                 "pum")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "0")
                                                                                                  (("2"
                                                                                                    (typepred
                                                                                                     "PQ")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "strictly_increasing?")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "0"
                                                                                                         "pum(0)")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (skolem
                                                                       1
                                                                       "nn")
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (expand
                                                                             "sigma"
                                                                             +)
                                                                            (("2"
                                                                              (replace
                                                                               -2)
                                                                              (("2"
                                                                                (case
                                                                                 "sig(1+nn) = 0")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide
                                                                                   2)
                                                                                  (("2"
                                                                                    (hide
                                                                                     -2)
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "partition_union_map_inv_def")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "a"
                                                                                           "b")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "P"
                                                                                               "Q")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "1+nn"
                                                                                                 "0")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (typepred
                                                                                                       "pum")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "0")
                                                                                                        (("2"
                                                                                                          (typepred
                                                                                                           "PQ")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "strictly_increasing?")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "0"
                                                                                                               "pum(0)")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (skolem 1 "nn")
                                                        (("2"
                                                          (flatten)
                                                          (("2"
                                                            (expand
                                                             "sigma"
                                                             +
                                                             1)
                                                            (("2"
                                                              (replace -2)
                                                              (("2"
                                                                (hide -2)
                                                                (("2"
                                                                  (lemma
                                                                   "sigma_split[below(PQ`length - 1)]")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "(LAMBDA (n: below(PQ`length - 1)):
                                                                                                                   f(xis`seq(sig(n))) *(g(PQ`seq(1 + n))-g(PQ`seq(n))))"
                                                                     "pum(2+nn)-1"
                                                                     "0"
                                                                     "pum(nn + 1) - 1")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (case
                                                                         "pum(1 + nn) - 1 <= pum(2 + nn) - 1")
                                                                        (("1"
                                                                          (replace
                                                                           -1)
                                                                          (("1"
                                                                            (case
                                                                             "FF(1+nn) = sigma(pum(1 + nn), pum(2 + nn) - 1,
                                                                                                                                                            (LAMBDA (n: below(PQ`length - 1)):
                                                                                                                                                               f(xis`seq(sig(n))) *
                                                                                                                                                                g(PQ`seq(1 + n))
                                                                                                                                                                -
                                                                                                                                                                f(xis`seq(sig(n))) *
                                                                                                                                                                 g(PQ`seq(n))))")
                                                                            (("1"
                                                                              (ground)
                                                                              nil
                                                                              nil)
                                                                             ("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (hide
                                                                                 -2)
                                                                                (("2"
                                                                                  (expand
                                                                                   "FF"
                                                                                   +)
                                                                                  (("2"
                                                                                    (case
                                                                                     "FORALL (yy:below(PQ`length - 1)): pum(1+nn)<=yy AND yy<=pum(2+nn)-1 IMPLIES sigma[below(PQ`length - 1)]
                                                                                                                                                                 (pum(1+nn), yy,
                                                                                                                                                                  (LAMBDA (n: below(PQ`length - 1)):
                                                                                                                                                                     f(xis`seq(sig(n))) *
                                                                                                                                                                      g(PQ`seq(1 + n))
                                                                                                                                                                      -
                                                                                                                                                                      f(xis`seq(sig(n))) * g(PQ`seq(n)))) = f(xis`seq(1+nn))*(g(PQ`seq(1 + yy))-g(PQ`seq(pum(1+nn))))")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "pum(2+nn)-1")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (split
                                                                                           -)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (typepred
                                                                                               "pum")
                                                                                              (("1"
                                                                                                (inst-cp
                                                                                                 -
                                                                                                 "1+nn")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "2+nn")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "partition_union_map_increasing")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "a"
                                                                                                 "b")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "P"
                                                                                                     "Q"
                                                                                                     "1+nn"
                                                                                                     "2+nn")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (expand
                                                                                         "sigma")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (lemma
                                                                                             "partition_union_map_increasing")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "a"
                                                                                               "b")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "P"
                                                                                                   "Q"
                                                                                                   "1+nn"
                                                                                                   "2+nn")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide
                                                                                       2)
                                                                                      (("2"
                                                                                        (induct
                                                                                         "yy")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (case
                                                                                               "pum(1+nn) = 0")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "sigma")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "sigma")
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "partition_union_map_inv_def")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "a"
                                                                                                           "b")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "P"
                                                                                                               "Q")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "0"
                                                                                                                 "1+nn")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (skolem
                                                                                           1
                                                                                           "yy")
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (split
                                                                                                 -)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "sigma"
                                                                                                   +)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "sig(1+yy) = 1+nn")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (hide
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (lemma
                                                                                                               "partition_union_map_inv_def")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "a"
                                                                                                                   "b")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "P"
                                                                                                                       "Q")
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "1+yy"
                                                                                                                         "1+nn")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (case
                                                                                                   "pum(1+nn) = 1+yy")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "sigma")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "sigma")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "sig(1+yy) = 1+nn")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (lemma
                                                                                                             "partition_union_map_inv_def")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "a"
                                                                                                                 "b")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "P"
                                                                                                                     "Q")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "1+yy"
                                                                                                                       "1+nn")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (hide
                                                                                           2)
                                                                                          (("3"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("4"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (lemma
                                                                           "partition_union_map_increasing")
                                                                          (("2"
                                                                            (hide
                                                                             -2)
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "a"
                                                                               "b")
                                                                              (("2"
                                                                                (hide
                                                                                 2)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "P"
                                                                                     "Q"
                                                                                     "1+nn"
                                                                                     "2+nn")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (hide 2)
                                                        (("3"
                                                          (skeep)
                                                          (("3"
                                                            (assert)
                                                            (("3"
                                                              (case
                                                               "pum(1+nn) = 0")
                                                              (("1"
                                                                (inst + "0")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (inst - "P`length-2")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (replace -1)
                                                        (("2"
                                                          (case
                                                           "pum(P`length-1) = PQ`length - 1")
                                                          (("1"
                                                            (replace -1)
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide 2)
                                                            (("2"
                                                              (hide -1)
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "P`length-1")
                                                                (("2"
                                                                  (typepred
                                                                   "partition_union(a,b)(P,Q)")
                                                                  (("2"
                                                                    (expand
                                                                     "strictly_increasing?")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "pum(P`length-1)"
                                                                       "PQ`length - 1")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("3"
                                                    (assert)
                                                    (("3"
                                                      (skeep)
                                                      (("3"
                                                        (case "pum(1+nn) = 0")
                                                        (("1"
                                                          (inst + "0")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (assert) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((strictly_increasing? const-decl "bool" sort_fseq structures)
    (member const-decl "bool" fseqs structures)
    (increasing? const-decl "bool" sort_fseq structures)
    (fseq type-eq-decl nil fseqs structures)
    (barray type-eq-decl nil fseqs structures)
    (T_low type-eq-decl nil sigma reals) (T_high type-eq-decl nil sigma reals)
    (sigma def-decl "real" sigma reals)
    (sigma_0_neg formula-decl nil sigma_below reals)
    (sigma_split formula-decl nil sigma reals))
   nil)
  (Rie_sum_extend_union-1 nil 3492415870 ("" (postpone) nil nil) nil shostak))
 (Rie_sum_restrict_union_TCC1 0
  (Rie_sum_restrict_union_TCC1-1 nil 3492420141 ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (partition_union const-decl "{PQ: partition(a, b) |
   (FORALL (x: T): member(x, PQ) IFF (member(x, P) OR member(x, Q))) AND
    strictly_increasing?(PQ)}" rs_partition nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (xis? type-eq-decl nil rs_integral_def nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (member const-decl "bool" fseqs structures)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (partition type-eq-decl nil rs_partition nil)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (increasing? const-decl "bool" sort_fseq structures)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (fseq type-eq-decl nil fseqs structures)
    (barray type-eq-decl nil fseqs structures)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (> const-decl "bool" reals nil) (/= const-decl "boolean" notequal nil)
    (<= const-decl "bool" reals nil) (restrict const-decl "R" restrict nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (strictly_increasing? const-decl "bool" sort_fseq structures))
   nil
   (Rie_sum_restrict_union subtype "(number_fields.+)(rs_integral_def.ii, 1)"
    "naturalnumbers.below(rs_integral_def.P`length)")))
 (Rie_sum_restrict_union 0
  (Rie_sum_restrict_union-3 nil 3495206619
   ("" (auto-rewrite + "member")
    (("" (skeep)
      (("" (skeep)
        (("" (name "PQ" "partition_union(a,b)(P,Q)")
          (("" (replace -1)
            (("" (label "altb" -2)
              (("" (label "PQname" -1)
                (("" (name "pum" "partition_union_map(a,b,P,Q)")
                  (("" (label "pumname" -1)
                    (("" (replace -1)
                      (("" (assert)
                        (("" (skeep)
                          (("" (label "Pinc" -4)
                            (("" (label "hyplem" -5)
                              ((""
                                (name "xis"
                                      "(# length := P`length-1, seq:= (LAMBDA (nn:nat): IF nn<P`length-1 THEN xispq`seq(pum(nn)) ELSE default[T] ENDIF) #)")
                                (("1" (label "xisname" -1)
                                  (("1" (inst + "xis")
                                    (("1"
                                      (case "pum(P`length-1) = PQ`length-1")
                                      (("1"
                                        (label "pumm1" -1)
                                        (("1"
                                          (case "pum(0) = 0")
                                          (("1"
                                            (label "pum0" -1)
                                            (("1"
                                              (expand "Rie_sum")
                                              (("1"
                                                (case
                                                 "FORALL (mm:below(P`length-1)): sigma[below(P`length - 1)]
                                                                                  (0, mm,
                                                                                   LAMBDA (n: below(P`length - 1)):
                                                                                     f(xis`seq(n)) * g(P`seq(1 + n)) - f(xis`seq(n)) * g(P`seq(n))) = sigma[below(PQ`length - 1)]
                                                                                 (0,pum(mm+1)-1,
                                                                                  LAMBDA (n: below(PQ`length - 1)):
                                                                                    f(xispq`seq(n)) * g(PQ`seq(1 + n)) -
                                                                                     f(xispq`seq(n)) * g(PQ`seq(n)))")
                                                (("1"
                                                  (inst - "P`length-2")
                                                  (("1" (assert) nil nil))
                                                  nil)
                                                 ("2"
                                                  (hide 2)
                                                  (("2"
                                                    (induct "mm")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand "sigma" 1 1)
                                                          (("1"
                                                            (expand
                                                             "sigma"
                                                             1
                                                             1)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (case
                                                                 "FORALL (yy:below(PQ`length-1)): yy<= pum(1)-1 IMPLIES sigma[below(PQ`length - 1)]
                                                                                     (0, yy,
                                                                                      LAMBDA (n: below(PQ`length - 1)):
                                                                                        f(xispq`seq(n)) * g(PQ`seq(1 + n)) -
                                                                                         f(xispq`seq(n)) * g(PQ`seq(n))) = f(xis`seq(0))*(g(PQ`seq(yy+1))-g(PQ`seq(0)))")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "pum(1)-1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (replace
                                                                       -1)
                                                                      (("1"
                                                                        (hide
                                                                         -1)
                                                                        (("1"
                                                                          (typepred
                                                                           "pum")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "1")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (typepred
                                                                       "pum")
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "1")
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide 2)
                                                                  (("2"
                                                                    (induct
                                                                     "yy")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (expand
                                                                           "sigma")
                                                                          (("1"
                                                                            (expand
                                                                             "sigma")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 "xis"
                                                                                 +)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (skolem
                                                                       1
                                                                       "nn")
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (expand
                                                                             "sigma"
                                                                             1
                                                                             1)
                                                                            (("2"
                                                                              (replace
                                                                               -2)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (expand
                                                                                   "xis"
                                                                                   +)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (replace
                                                                                       "pum0")
                                                                                      (("2"
                                                                                        (inst
                                                                                         "hyplem"
                                                                                         "0"
                                                                                         "1+nn"
                                                                                         "0")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (skeep*)
                                                                      (("3"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (skeep*)
                                                                  (("3"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (skolem 1 "mm")
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (expand "sigma" 1 1)
                                                          (("2"
                                                            (replace -2)
                                                            (("2"
                                                              (hide -2)
                                                              (("2"
                                                                (lemma
                                                                 "sigma_split[below(PQ`length-1)]")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "LAMBDA (n: below(PQ`length - 1)):
                                                       f(xispq`seq(n)) * g(PQ`seq(1 + n)) -
                                                        f(xispq`seq(n)) * g(PQ`seq(n))"
                                                                   "pum(2+mm)-1"
                                                                   "0"
                                                                   "pum(mm+1)-1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (lemma
                                                                       "partition_union_map_increasing")
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "a"
                                                                         "b")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "P"
                                                                             "Q"
                                                                             "1+mm"
                                                                             "2+mm")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (hide
                                                                                 -1)
                                                                                (("1"
                                                                                  (case
                                                                                   "sigma(pum(1 + mm), pum(2 + mm) - 1,
                                                                       LAMBDA (n: below(PQ`length - 1)):
                                                                         f(xispq`seq(n)) * g(PQ`seq(1 + n)) -
                                                                          f(xispq`seq(n)) * g(PQ`seq(n))) = f(xis`seq(1 + mm)) * g(P`seq(2 + mm))
                                                                - f(xis`seq(1 + mm)) * g(P`seq(1 + mm))")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     2)
                                                                                    (("2"
                                                                                      (case
                                                                                       "FORALL (yy:below(PQ`length-1)): pum(1+mm)<=yy AND yy<=pum(2+mm)-1 IMPLIES
                                                                sigma(pum(1 + mm), yy,
                                                                            LAMBDA (n: below(PQ`length - 1)):
                                                                              f(xispq`seq(n)) * g(PQ`seq(1 + n)) -
                                                                               f(xispq`seq(n)) * g(PQ`seq(n))) = f(xis`seq(1+mm))*(g(PQ`seq(1+yy))-g(PQ`seq(pum(1+mm))))")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "pum(2+mm)-1")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (typepred
                                                                                             "pum")
                                                                                            (("1"
                                                                                              (inst-cp
                                                                                               -
                                                                                               "1+mm")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 "2+mm")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (induct
                                                                                           "yy")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "sigma")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "sigma")
                                                                                                    (("1"
                                                                                                      (case
                                                                                                       "pum(1+mm) = 0")
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "xis"
                                                                                                           +)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skolem
                                                                                             1
                                                                                             "nn")
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (split
                                                                                                   -)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "sigma"
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "xis"
                                                                                                             +)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (typepred
                                                                                                                 "pum")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   "hyplem"
                                                                                                                   "1+mm"
                                                                                                                   "pum(1+mm)"
                                                                                                                   "1+nn")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (case
                                                                                                     "NOT pum(1+mm) = nn+1")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "sigma"
                                                                                                           +)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "sigma"
                                                                                                             +)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "xis"
                                                                                                               +)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (skeep*)
                                                                                            (("3"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("3"
                                                                                        (skeep*)
                                                                                        (("3"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (skeep*)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (hide 2)
                                                      (("3"
                                                        (skosimp*)
                                                        (("3"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("4"
                                                      (skeep*)
                                                      (("4"
                                                        (assert)
                                                        (("4"
                                                          (assert)
                                                          (("4"
                                                            (assert)
                                                            (("4"
                                                              (inst + "0")
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("5"
                                                      (skeep*)
                                                      (("5" (assert) nil nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (hide 2)
                                                  (("3"
                                                    (skosimp*)
                                                    (("3" (assert) nil nil))
                                                    nil))
                                                  nil)
                                                 ("4"
                                                  (skeep*)
                                                  (("4"
                                                    (assert)
                                                    (("4"
                                                      (assert)
                                                      (("4"
                                                        (assert)
                                                        (("4"
                                                          (case
                                                           "pum(1+mm) = 0")
                                                          (("1"
                                                            (inst + "0")
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("5"
                                                  (skeep*)
                                                  (("5" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (typepred "pum")
                                            (("2"
                                              (inst - "0")
                                              (("2"
                                                (typepred "PQ")
                                                (("2"
                                                  (expand
                                                   "strictly_increasing?")
                                                  (("2"
                                                    (inst - "0" "pum(0)")
                                                    (("2" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (typepred "pum")
                                        (("2"
                                          (inst - "P`length-1")
                                          (("2"
                                            (typepred "PQ")
                                            (("2"
                                              (expand "strictly_increasing?")
                                              (("2"
                                                (inst
                                                 -
                                                 "pum(P`length-1)"
                                                 "PQ`length-1")
                                                (("2" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (assert)
                                      (("2"
                                        (split +)
                                        (("1"
                                          (skeep)
                                          (("1"
                                            (expand "xis")
                                            (("1"
                                              (lift-if)
                                              (("1" (ground) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (skeep)
                                          (("2"
                                            (expand "xis" +)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (typepred "pum")
                                                (("2"
                                                  (inst - "ii")
                                                  (("2"
                                                    (typepred "xispq")
                                                    (("2"
                                                      (inst - "pum(ii)")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (ground)
                                                          (("1"
                                                            (case
                                                             "PQ`seq(1+pum(ii)) <= P`seq(1+ii)")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (hide 2)
                                                              (("2"
                                                                (replace
                                                                 "PQname")
                                                                (("2"
                                                                  (expand
                                                                   "strictly_increasing?")
                                                                  (("2"
                                                                    (inst
                                                                     "Pinc"
                                                                     "ii"
                                                                     "1+ii")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (case
                                                                         "P`seq(ii) < P`seq(1+ii)")
                                                                        (("1"
                                                                          (hide
                                                                           "Pinc")
                                                                          (("1"
                                                                            (typepred
                                                                             "PQ")
                                                                            (("1"
                                                                              (copy
                                                                               -6)
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "P`seq(1+ii)")
                                                                                (("1"
                                                                                  (case
                                                                                   "member(P`seq(1+ii),P)")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("1"
                                                                                      (hide
                                                                                       -1)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (skosimp*)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (case
                                                                                               "i!1 > pum(ii)")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "strictly_increasing?")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "pum(ii)+1"
                                                                                                   "i!1")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (expand
                                                                                                 "strictly_increasing?")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "i!1"
                                                                                                   "pum(ii)")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (inst?)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (ground)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (case
                                                         "pum(ii) = PQ`length-1")
                                                        (("1"
                                                          (typepred "ii")
                                                          (("1"
                                                            (hide-all-but
                                                             (-1
                                                              -2
                                                              "Pinc"
                                                              "PQname"))
                                                            (("1"
                                                              (typepred "pum")
                                                              (("1"
                                                                (inst - "ii")
                                                                (("1"
                                                                  (expand
                                                                   "strictly_increasing?")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "ii"
                                                                     "P`length-1")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (skosimp*) (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((partition_union const-decl "{PQ: partition(a, b) |
   (FORALL (x: T): member(x, PQ) IFF (member(x, P) OR member(x, Q))) AND
    strictly_increasing?(PQ)}" rs_partition nil)
    (strictly_increasing? const-decl "bool" sort_fseq structures)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (member const-decl "bool" fseqs structures)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (partition type-eq-decl nil rs_partition nil)
    (below type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (increasing? const-decl "bool" sort_fseq structures)
    (<= const-decl "bool" reals nil) (restrict const-decl "R" restrict nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (> const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (< const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (fseq type-eq-decl nil fseqs structures)
    (barray type-eq-decl nil fseqs structures)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (partition_union_map const-decl
     "{pm: [below(P`length) -> below(partition_union(a, b)(P, Q)`length)] |
   FORALL (ii: below(P`length)):
     P`seq(ii) = partition_union(a, b)(P, Q)`seq(pm(ii))}" rs_partition nil)
    (default const-decl "T" fseqs structures)
    (xis? type-eq-decl nil rs_integral_def nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (ii skolem-const-decl "below(P`length - 1)" rs_integral_def nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (Rie_sum const-decl "real" rs_integral_def nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (T_low type-eq-decl nil sigma reals) (T_high type-eq-decl nil sigma reals)
    (sigma def-decl "real" sigma reals)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (integer nonempty-type-from-decl nil integers nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (sigma_split formula-decl nil sigma reals)
    (even_minus_odd_is_odd application-judgement "odd_int" integers nil)
    (mm skolem-const-decl "below(P`length - 1)" rs_integral_def nil)
    (partition_union_map_increasing formula-decl nil rs_partition nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (sigma_0_neg formula-decl nil sigma_below reals)
    (TRUE const-decl "bool" booleans nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (odd_plus_even_is_odd application-judgement "odd_int" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (even_plus_odd_is_odd application-judgement "odd_int" integers nil)
    (below_induction formula-decl nil bounded_nat_inductions nil)
    (pred type-eq-decl nil defined_types nil)
    (PQ skolem-const-decl "{PQ: partition[T](a, b) |
   (FORALL (x: T): member(x, PQ) IFF (member(x, P) OR member(x, Q))) AND
    strictly_increasing?(PQ)}" rs_integral_def nil)
    (pum skolem-const-decl
     "{pm: [below(P`length) -> below(partition_union(a, b)(P, Q)`length)] |
   FORALL (ii: below(P`length)):
     P`seq(ii) = partition_union(a, b)(P, Q)`seq(pm(ii))}" rs_integral_def
     nil)
    (Q skolem-const-decl "partition[T](a, b)" rs_integral_def nil)
    (P skolem-const-decl "partition[T](a, b)" rs_integral_def nil)
    (b skolem-const-decl "T" rs_integral_def nil)
    (a skolem-const-decl "T" rs_integral_def nil)
    (xis skolem-const-decl "[# length: int, seq: [nat -> T] #]"
     rs_integral_def nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil)
  (Rie_sum_restrict_union-2 nil 3494856658
   (";;; Proof Rie_sum_restrict_union-1 for formula integral_def.Rie_sum_restrict_union"
    (stop-rewrite "xis_lem")
    ((";;; Proof Rie_sum_restrict_union-1 for formula integral_def.Rie_sum_restrict_union"
      (skeep)
      ((";;; Proof Rie_sum_restrict_union-1 for formula integral_def.Rie_sum_restrict_union"
        (skeep)
        ((";;; Proof Rie_sum_restrict_union-1 for formula integral_def.Rie_sum_restrict_union"
          (name "PQ" "partition_union(a,b)(P,Q)")
          ((";;; Proof Rie_sum_restrict_union-1 for formula integral_def.Rie_sum_restrict_union"
            (replace -1)
            ((";;; Proof Rie_sum_restrict_union-1 for formula integral_def.Rie_sum_restrict_union"
              (label "altb" -2)
              ((";;; Proof Rie_sum_restrict_union-1 for formula integral_def.Rie_sum_restrict_union"
                (label "PQname" -1)
                ((";;; Proof Rie_sum_restrict_union-1 for formula integral_def.Rie_sum_restrict_union"
                  (name "pum" "partition_union_map(a,b,P,Q)")
                  ((";;; Proof Rie_sum_restrict_union-1 for formula integral_def.Rie_sum_restrict_union"
                    (label "pumname" -1)
                    ((";;; Proof Rie_sum_restrict_union-1 for formula integral_def.Rie_sum_restrict_union"
                      (replace -1)
                      ((";;; Proof Rie_sum_restrict_union-1 for formula integral_def.Rie_sum_restrict_union"
                        (assert)
                        ((";;; Proof Rie_sum_restrict_union-1 for formula integral_def.Rie_sum_restrict_union"
                          (skeep)
                          ((";;; Proof Rie_sum_restrict_union-1 for formula integral_def.Rie_sum_restrict_union"
                            (label "Pinc" -4)
                            ((";;; Proof Rie_sum_restrict_union-1 for formula integral_def.Rie_sum_restrict_union"
                              (label "hyplem" -5)
                              ((";;; Proof Rie_sum_restrict_union-1 for formula integral_def.Rie_sum_restrict_union"
                                (name "xis"
                                      "(# length := P`length-1, seq:= (LAMBDA (nn:nat): IF nn<P`length-1 THEN xispq`seq(pum(nn)) ELSE default[T] ENDIF) #)")
                                (("1" (label "xisname" -1)
                                  (("1" (inst + "xis")
                                    (("1"
                                      (case "pum(P`length-1) = PQ`length-1")
                                      (("1"
                                        (label "pumm1" -1)
                                        (("1"
                                          (case "pum(0) = 0")
                                          (("1"
                                            (label "pum0" -1)
                                            (("1"
                                              (expand "Rie_sum")
                                              (("1"
                                                (case
                                                 "FORALL (mm:below(P`length-1)): sigma[below(P`length - 1)]
                                                                   (0, mm,
                                                                    LAMBDA (n: below(P`length - 1)):
                                                                      f(xis`seq(n)) * g(P`seq(1 + n)) - f(xis`seq(n)) * g(P`seq(n))) = sigma[below(PQ`length - 1)]
                                                                  (0,pum(mm+1)-1,
                                                                   LAMBDA (n: below(PQ`length - 1)):
                                                                     f(xispq`seq(n)) * g(PQ`seq(1 + n)) -
                                                                      f(xispq`seq(n)) * g(PQ`seq(n)))")
                                                (("1"
                                                  (inst - "P`length-2")
                                                  (("1" (assert) nil)))
                                                 ("2"
                                                  (hide 2)
                                                  (("2"
                                                    (induct "mm")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand "sigma" 1 1)
                                                          (("1"
                                                            (expand
                                                             "sigma"
                                                             1
                                                             1)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (case
                                                                 "FORALL (yy:below(PQ`length-1)): yy<= pum(1)-1 IMPLIES sigma[below(PQ`length - 1)]
                                                                  (0, yy,
                                                                   LAMBDA (n: below(PQ`length - 1)):
                                                                     f(xispq`seq(n)) * g(PQ`seq(1 + n)) -
                                                                      f(xispq`seq(n)) * g(PQ`seq(n))) = f(xis`seq(0))*(g(PQ`seq(yy+1))-g(PQ`seq(0)))")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "pum(1)-1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (replace
                                                                       -1)
                                                                      (("1"
                                                                        (hide
                                                                         -1)
                                                                        (("1"
                                                                          (typepred
                                                                           "pum")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "1")
                                                                            (("1"
                                                                              (assert)
                                                                              nil)))))))))))
                                                                   ("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (typepred
                                                                       "pum")
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "1")
                                                                        (("2"
                                                                          (assert)
                                                                          nil)))))))))
                                                                 ("2"
                                                                  (hide 2)
                                                                  (("2"
                                                                    (induct
                                                                     "yy")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (expand
                                                                           "sigma")
                                                                          (("1"
                                                                            (expand
                                                                             "sigma")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 "xis"
                                                                                 +)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil)))))))))))))
                                                                     ("2"
                                                                      (skolem
                                                                       1
                                                                       "nn")
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (expand
                                                                             "sigma"
                                                                             1
                                                                             1)
                                                                            (("2"
                                                                              (replace
                                                                               -2)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (expand
                                                                                   "xis"
                                                                                   +)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (replace
                                                                                       "pum0")
                                                                                      (("2"
                                                                                        (inst
                                                                                         "hyplem"
                                                                                         "0"
                                                                                         "1+nn"
                                                                                         "0")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil)))))))))))))))))))))))))))))))))))))
                                                     ("2"
                                                      (skolem 1 "mm")
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (expand "sigma" 1 1)
                                                          (("2"
                                                            (replace -2)
                                                            (("2"
                                                              (hide -2)
                                                              (("2"
                                                                (lemma
                                                                 "sigma_split[below(PQ`length-1)]")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "LAMBDA (n: below(PQ`length - 1)):
                                         f(xispq`seq(n)) * g(PQ`seq(1 + n)) -
                                          f(xispq`seq(n)) * g(PQ`seq(n))"
                                                                   "pum(2+mm)-1"
                                                                   "0"
                                                                   "pum(mm+1)-1")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (lemma
                                                                       "partition_union_map_increasing")
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "a"
                                                                         "b")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "P"
                                                                             "Q"
                                                                             "1+mm"
                                                                             "2+mm")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (hide
                                                                                 -1)
                                                                                (("2"
                                                                                  (case
                                                                                   "sigma(pum(1 + mm), pum(2 + mm) - 1,
                                                    LAMBDA (n: below(PQ`length - 1)):
                                                      f(xispq`seq(n)) * g(PQ`seq(1 + n)) -
                                                       f(xispq`seq(n)) * g(PQ`seq(n))) = f(xis`seq(1 + mm)) * g(P`seq(2 + mm))
                                             - f(xis`seq(1 + mm)) * g(P`seq(1 + mm))")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     2)
                                                                                    (("2"
                                                                                      (case
                                                                                       "FORALL (yy:below(PQ`length-1)): pum(1+mm)<=yy AND yy<=pum(2+mm)-1 IMPLIES
                                           sigma(pum(1 + mm), yy,
                                                       LAMBDA (n: below(PQ`length - 1)):
                                                         f(xispq`seq(n)) * g(PQ`seq(1 + n)) -
                                                          f(xispq`seq(n)) * g(PQ`seq(n))) = f(xis`seq(1+mm))*(g(PQ`seq(1+yy))-g(PQ`seq(pum(1+mm))))")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "pum(2+mm)-1")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (typepred
                                                                                             "pum")
                                                                                            (("1"
                                                                                              (inst-cp
                                                                                               -
                                                                                               "1+mm")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 "2+mm")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil)))))))))))
                                                                                       ("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (induct
                                                                                           "yy")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "sigma")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "sigma")
                                                                                                    (("1"
                                                                                                      (case
                                                                                                       "pum(1+mm) = 0")
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "xis"
                                                                                                           +)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil)))))
                                                                                                       ("2"
                                                                                                        (assert)
                                                                                                        nil)))))))))))))
                                                                                           ("2"
                                                                                            (skolem
                                                                                             1
                                                                                             "nn")
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (split
                                                                                                   -)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "sigma"
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "xis"
                                                                                                             +)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (typepred
                                                                                                                 "pum")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   "hyplem"
                                                                                                                   "1+mm"
                                                                                                                   "pum(1+mm)"
                                                                                                                   "1+nn")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil)))))))))))))))))
                                                                                                   ("2"
                                                                                                    (case
                                                                                                     "NOT pum(1+mm) = nn+1")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "sigma"
                                                                                                           +)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "sigma"
                                                                                                             +)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "xis"
                                                                                                               +)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                                     ("3"
                                                      (hide 2)
                                                      (("3"
                                                        (skosimp*)
                                                        (("3"
                                                          (inst + "0")
                                                          (("3"
                                                            (assert)
                                                            nil)))))))))))
                                                 ("3"
                                                  (hide 2)
                                                  (("3"
                                                    (skosimp*)
                                                    (("3"
                                                      (inst + "0")
                                                      (("3"
                                                        (assert)
                                                        nil)))))))))))))
                                           ("2"
                                            (typepred "pum")
                                            (("2"
                                              (inst - "0")
                                              (("2"
                                                (typepred "PQ")
                                                (("2"
                                                  (expand
                                                   "strictly_increasing?")
                                                  (("2"
                                                    (inst - "0" "pum(0)")
                                                    (("2"
                                                      (assert)
                                                      nil)))))))))))))))
                                       ("2"
                                        (typepred "pum")
                                        (("2"
                                          (inst - "P`length-1")
                                          (("2"
                                            (typepred "PQ")
                                            (("2"
                                              (expand "strictly_increasing?")
                                              (("2"
                                                (inst
                                                 -
                                                 "pum(P`length-1)"
                                                 "PQ`length-1")
                                                (("2"
                                                  (assert)
                                                  nil)))))))))))))
                                     ("2" (assert)
                                      (("2"
                                        (split +)
                                        (("1"
                                          (skeep)
                                          (("1"
                                            (expand "xis")
                                            (("1"
                                              (lift-if)
                                              (("1" (ground) nil)))))))
                                         ("2"
                                          (skeep)
                                          (("2"
                                            (expand "xis" +)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (typepred "pum")
                                                (("2"
                                                  (inst - "ii")
                                                  (("2"
                                                    (typepred "xispq")
                                                    (("2"
                                                      (inst - "pum(ii)")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (ground)
                                                          (("1"
                                                            (case
                                                             "PQ`seq(1+pum(ii)) <= P`seq(1+ii)")
                                                            (("1"
                                                              (assert)
                                                              nil)
                                                             ("2"
                                                              (hide 2)
                                                              (("2"
                                                                (replace
                                                                 "PQname")
                                                                (("2"
                                                                  (expand
                                                                   "strictly_increasing?")
                                                                  (("2"
                                                                    (inst
                                                                     "Pinc"
                                                                     "ii"
                                                                     "1+ii")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (case
                                                                         "P`seq(ii) < P`seq(1+ii)")
                                                                        (("1"
                                                                          (hide
                                                                           "Pinc")
                                                                          (("1"
                                                                            (typepred
                                                                             "PQ")
                                                                            (("1"
                                                                              (copy
                                                                               -6)
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "P`seq(1+ii)")
                                                                                (("1"
                                                                                  (case
                                                                                   "member(P`seq(1+ii),P)")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("1"
                                                                                      (hide
                                                                                       -1)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (skosimp*)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (case
                                                                                               "i!1 > pum(ii)")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "strictly_increasing?")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "pum(ii)+1"
                                                                                                   "i!1")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil)))))
                                                                                               ("2"
                                                                                                (expand
                                                                                                 "strictly_increasing?")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "i!1"
                                                                                                   "pum(ii)")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil)))))))))))))))))
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (inst?)
                                                                                        nil)))))))))))))))
                                                                         ("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (ground)
                                                                            nil)))))))))))))))))))))
                                                       ("2"
                                                        (case
                                                         "pum(ii) = PQ`length-1")
                                                        (("1"
                                                          (typepred "ii")
                                                          (("1"
                                                            (hide-all-but
                                                             (-1
                                                              -2
                                                              "Pinc"
                                                              "PQname"))
                                                            (("1"
                                                              (typepred "pum")
                                                              (("1"
                                                                (inst - "ii")
                                                                (("1"
                                                                  (expand
                                                                   "strictly_increasing?")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "ii"
                                                                     "P`length-1")
                                                                    (("1"
                                                                      (assert)
                                                                      nil)))))))))))))
                                                         ("2"
                                                          (assert)
                                                          nil)))))))))))))))))))))))))
                                 ("2" (skosimp*)
                                  (("2" (assert)
                                    nil))))))))))))))))))))))))))))))))
    ";;; developed with shostak decision procedures")
   ((strictly_increasing? const-decl "bool" sort_fseq structures)
    (member const-decl "bool" fseqs structures)
    (increasing? const-decl "bool" sort_fseq structures)
    (fseq type-eq-decl nil fseqs structures)
    (barray type-eq-decl nil fseqs structures)
    (sigma_split formula-decl nil sigma reals)
    (sigma_0_neg formula-decl nil sigma_below reals)
    (sigma def-decl "real" sigma reals) (T_high type-eq-decl nil sigma reals)
    (T_low type-eq-decl nil sigma reals)
    (default const-decl "T" fseqs structures))
   nil)
  (Rie_sum_restrict_union-1 nil 3492420141
   ("" (stop-rewrite "xis_lem")
    (("" (skeep)
      (("" (skeep)
        (("" (name "PQ" "partition_union(a,b)(P,Q)")
          (("" (replace -1)
            (("" (label "altb" -2)
              (("" (label "PQname" -1)
                (("" (name "pum" "partition_union_map(a,b,P,Q)")
                  (("" (label "pumname" -1)
                    (("" (replace -1)
                      (("" (assert)
                        (("" (skeep)
                          (("" (label "Pinc" -4)
                            (("" (label "hyplem" -5)
                              ((""
                                (name "xis"
                                      "(# length := P`length-1, seq:= (LAMBDA (nn:nat): IF nn<P`length-1 THEN xispq`seq(pum(nn)) ELSE default[real] ENDIF) #)")
                                (("1" (label "xisname" -1)
                                  (("1" (inst + "xis")
                                    (("1"
                                      (case "pum(P`length-1) = PQ`length-1")
                                      (("1"
                                        (label "pumm1" -1)
                                        (("1"
                                          (case "pum(0) = 0")
                                          (("1"
                                            (label "pum0" -1)
                                            (("1"
                                              (expand "Rie_sum")
                                              (("1"
                                                (case
                                                 "FORALL (mm:below(P`length-1)): sigma[below(P`length - 1)]
                                                    (0, mm,
                                                     LAMBDA (n: below(P`length - 1)):
                                                       f(xis`seq(n)) * g(P`seq(1 + n)) - f(xis`seq(n)) * g(P`seq(n))) = sigma[below(PQ`length - 1)]
                                                   (0,pum(mm+1)-1,
                                                    LAMBDA (n: below(PQ`length - 1)):
                                                      f(xispq`seq(n)) * g(PQ`seq(1 + n)) -
                                                       f(xispq`seq(n)) * g(PQ`seq(n)))")
                                                (("1"
                                                  (inst - "P`length-2")
                                                  (("1" (assert) nil nil))
                                                  nil)
                                                 ("2"
                                                  (hide 2)
                                                  (("2"
                                                    (induct "mm")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand "sigma" 1 1)
                                                          (("1"
                                                            (expand
                                                             "sigma"
                                                             1
                                                             1)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (case
                                                                 "FORALL (yy:below(PQ`length-1)): yy<= pum(1)-1 IMPLIES sigma[below(PQ`length - 1)]
                                               (0, yy,
                                                LAMBDA (n: below(PQ`length - 1)):
                                                  f(xispq`seq(n)) * g(PQ`seq(1 + n)) -
                                                   f(xispq`seq(n)) * g(PQ`seq(n))) = f(xis`seq(0))*(g(PQ`seq(yy+1))-g(PQ`seq(0)))")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "pum(1)-1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (replace
                                                                       -1)
                                                                      (("1"
                                                                        (hide
                                                                         -1)
                                                                        (("1"
                                                                          (typepred
                                                                           "pum")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "1")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (typepred
                                                                       "pum")
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "1")
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide 2)
                                                                  (("2"
                                                                    (induct
                                                                     "yy")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (expand
                                                                           "sigma")
                                                                          (("1"
                                                                            (expand
                                                                             "sigma")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 "xis"
                                                                                 +)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (skolem
                                                                       1
                                                                       "nn")
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (expand
                                                                             "sigma"
                                                                             1
                                                                             1)
                                                                            (("2"
                                                                              (replace
                                                                               -2)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (expand
                                                                                   "xis"
                                                                                   +)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (replace
                                                                                       "pum0")
                                                                                      (("2"
                                                                                        (inst
                                                                                         "hyplem"
                                                                                         "0"
                                                                                         "1+nn"
                                                                                         "0")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (skolem 1 "mm")
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (expand "sigma" 1 1)
                                                          (("2"
                                                            (replace -2)
                                                            (("2"
                                                              (hide -2)
                                                              (("2"
                                                                (lemma
                                                                 "sigma_split[below(PQ`length-1)]")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "LAMBDA (n: below(PQ`length - 1)):
                           f(xispq`seq(n)) * g(PQ`seq(1 + n)) -
                            f(xispq`seq(n)) * g(PQ`seq(n))"
                                                                   "pum(2+mm)-1"
                                                                   "0"
                                                                   "pum(mm+1)-1")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (lemma
                                                                       "partition_union_map_increasing")
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "a"
                                                                         "b")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "P"
                                                                             "Q"
                                                                             "1+mm"
                                                                             "2+mm")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (hide
                                                                                 -1)
                                                                                (("2"
                                                                                  (case
                                                                                   "sigma(pum(1 + mm), pum(2 + mm) - 1,
                                 LAMBDA (n: below(PQ`length - 1)):
                                   f(xispq`seq(n)) * g(PQ`seq(1 + n)) -
                                    f(xispq`seq(n)) * g(PQ`seq(n))) = f(xis`seq(1 + mm)) * g(P`seq(2 + mm))
                          - f(xis`seq(1 + mm)) * g(P`seq(1 + mm))")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     2)
                                                                                    (("2"
                                                                                      (case
                                                                                       "FORALL (yy:below(PQ`length-1)): pum(1+mm)<=yy AND yy<=pum(2+mm)-1 IMPLIES
                      sigma(pum(1 + mm), yy,
                                  LAMBDA (n: below(PQ`length - 1)):
                                    f(xispq`seq(n)) * g(PQ`seq(1 + n)) -
                                     f(xispq`seq(n)) * g(PQ`seq(n))) = f(xis`seq(1+mm))*(g(PQ`seq(1+yy))-g(PQ`seq(pum(1+mm))))")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "pum(2+mm)-1")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (typepred
                                                                                             "pum")
                                                                                            (("1"
                                                                                              (inst-cp
                                                                                               -
                                                                                               "1+mm")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 "2+mm")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (induct
                                                                                           "yy")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "sigma")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "sigma")
                                                                                                    (("1"
                                                                                                      (case
                                                                                                       "pum(1+mm) = 0")
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "xis"
                                                                                                           +)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skolem
                                                                                             1
                                                                                             "nn")
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (split
                                                                                                   -)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "sigma"
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "xis"
                                                                                                             +)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (typepred
                                                                                                                 "pum")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   "hyplem"
                                                                                                                   "1+mm"
                                                                                                                   "pum(1+mm)"
                                                                                                                   "1+nn")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (case
                                                                                                     "NOT pum(1+mm) = nn+1")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "sigma"
                                                                                                           +)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "sigma"
                                                                                                             +)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "xis"
                                                                                                               +)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (hide 2)
                                                      (("3"
                                                        (skosimp*)
                                                        (("3"
                                                          (inst + "0")
                                                          (("3"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (hide 2)
                                                  (("3"
                                                    (skosimp*)
                                                    (("3"
                                                      (inst + "0")
                                                      (("3" (assert) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (typepred "pum")
                                            (("2"
                                              (inst - "0")
                                              (("2"
                                                (typepred "PQ")
                                                (("2"
                                                  (expand
                                                   "strictly_increasing?")
                                                  (("2"
                                                    (inst - "0" "pum(0)")
                                                    (("2" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (typepred "pum")
                                        (("2"
                                          (inst - "P`length-1")
                                          (("2"
                                            (typepred "PQ")
                                            (("2"
                                              (expand "strictly_increasing?")
                                              (("2"
                                                (inst
                                                 -
                                                 "pum(P`length-1)"
                                                 "PQ`length-1")
                                                (("2" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (assert)
                                      (("2"
                                        (split +)
                                        (("1"
                                          (skeep)
                                          (("1"
                                            (expand "xis")
                                            (("1"
                                              (lift-if)
                                              (("1" (ground) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (skeep)
                                          (("2"
                                            (expand "xis" +)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (typepred "pum")
                                                (("2"
                                                  (inst - "ii")
                                                  (("2"
                                                    (typepred "xispq")
                                                    (("2"
                                                      (inst - "pum(ii)")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (ground)
                                                          (("1"
                                                            (case
                                                             "PQ`seq(1+pum(ii)) <= P`seq(1+ii)")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (hide 2)
                                                              (("2"
                                                                (replace
                                                                 "PQname")
                                                                (("2"
                                                                  (expand
                                                                   "strictly_increasing?")
                                                                  (("2"
                                                                    (inst
                                                                     "Pinc"
                                                                     "ii"
                                                                     "1+ii")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (case
                                                                         "P`seq(ii) < P`seq(1+ii)")
                                                                        (("1"
                                                                          (hide
                                                                           "Pinc")
                                                                          (("1"
                                                                            (typepred
                                                                             "PQ")
                                                                            (("1"
                                                                              (copy
                                                                               -6)
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "P`seq(1+ii)")
                                                                                (("1"
                                                                                  (case
                                                                                   "member(P`seq(1+ii),P)")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("1"
                                                                                      (hide
                                                                                       -1)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (skosimp*)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (case
                                                                                               "i!1 > pum(ii)")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "strictly_increasing?")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "pum(ii)+1"
                                                                                                   "i!1")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (expand
                                                                                                 "strictly_increasing?")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "i!1"
                                                                                                   "pum(ii)")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (inst?)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (ground)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (case
                                                         "pum(ii) = PQ`length-1")
                                                        (("1"
                                                          (typepred "ii")
                                                          (("1"
                                                            (hide-all-but
                                                             (-1
                                                              -2
                                                              "Pinc"
                                                              "PQname"))
                                                            (("1"
                                                              (typepred "pum")
                                                              (("1"
                                                                (inst - "ii")
                                                                (("1"
                                                                  (expand
                                                                   "strictly_increasing?")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "ii"
                                                                     "P`length-1")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (skosimp*) (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((strictly_increasing? const-decl "bool" sort_fseq structures)
    (member const-decl "bool" fseqs structures)
    (increasing? const-decl "bool" sort_fseq structures)
    (fseq type-eq-decl nil fseqs structures)
    (barray type-eq-decl nil fseqs structures)
    (sigma_split formula-decl nil sigma reals)
    (sigma_0_neg formula-decl nil sigma_below reals)
    (sigma def-decl "real" sigma reals) (T_high type-eq-decl nil sigma reals)
    (T_low type-eq-decl nil sigma reals)
    (default const-decl "T" fseqs structures))
   shostak))
 (Rie_sum_diff_extend_union 0
  (Rie_sum_diff_extend_union-9 "" 3790091209
   (""
    (case "FORALL (a, b:T, f, g: [T->real]):
                                                                                                                                                                  a < b IMPLIES
                                                                                                                                                                   LET CI = LAMBDA (x:T): a <= x AND x <= b IN
                                                                                                                                                                     (increasing?[(CI)](restrict[T, ((CI)), real](g)) IMPLIES
                                                                                                                                                                       (FORALL (P, Q: partition(a, b)): (strictly_increasing?(P) AND strictly_increasing?(Q)) IMPLIES
                                                                                                                                                                          LET PQ:
                                                                                                                                                                                {PQ: partition(a, b) |
                                                                                                                                                                                         (FORALL (x:T):
                                                                                                                                                                                            member(x, PQ) IFF
                                                                                                                                                                                             (member(x, P) OR member(x, Q)))
                                                                                                                                                                                          AND strictly_increasing?(PQ)}
                                                                                                                                                                                = partition_union(a, b)(P, Q)
                                                                                                                                                                            IN
                                                                                                                                                                            FORALL (xispq: xis?(a, b, PQ), xis: xis?(a, b, P)):
                                                                                                                                                                              EXISTS (xis2: xis?(a, b, P)):
                                                                                                                                                                                abs(Rie_sum(a, b, g, P, xis, f) -
                                                                                                                                                                                     Rie_sum(a, b, g, PQ, xispq, f))
                                                                                                                                                                                 <=
                                                                                                                                                                                 abs(Rie_sum(a, b, g, P, xis, f) -
                                                                                                                                                                                      Rie_sum(a, b, g, P, xis2, f))))")
    (("1" (skeep)
      (("1" (assert)
        (("1" (flatten)
          (("1" (skeep)
            (("1" (inst - "a" "b" "f" "g")
              (("1" (assert)
                (("1"
                  (case "partition_union(a,b)(P,Q) = partition_union(a, b)(strictly_sort(P), strictly_sort(Q))")
                  (("1" (assert)
                    (("1" (inst - "strictly_sort(P)" "strictly_sort(Q)")
                      (("1" (assert)
                        (("1" (skeep)
                          (("1" (lemma "Riemann_sum_strictly_sort")
                            (("1" (inst - "a" "b" "f" "g")
                              (("1" (assert)
                                (("1"
                                  (inst - "P" "Rie_sum(a, b, g, P, xis, f)")
                                  (("1" (flatten)
                                    (("1" (hide -2)
                                      (("1"
                                        (split -)
                                        (("1"
                                          (skolem -1 "xissp")
                                          (("1"
                                            (inst - "xispq" "xissp")
                                            (("1"
                                              (skolem - "xis2sp")
                                              (("1"
                                                (lemma
                                                 "Riemann_sum_strictly_sort")
                                                (("1"
                                                  (inst - "a" "b" "f" "g")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (inst
                                                       -
                                                       "P"
                                                       "Rie_sum(a, b, g, strictly_sort(P), xis2sp, f)")
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (split -)
                                                            (("1"
                                                              (skolem
                                                               -1
                                                               "xis2")
                                                              (("1"
                                                                (inst
                                                                 +
                                                                 "xis2")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (case
                                                               "partition_union(a,b)(P,Q) = partition_union(a, b)(strictly_sort(P), strictly_sort(Q))")
                                                              (("1"
                                                                (inst
                                                                 +
                                                                 "xis2sp")
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (assert)
                                              (("2"
                                                (skeep)
                                                (("2"
                                                  (replace -2 :dir rl)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (typepred "xispq")
                                                      (("2"
                                                        (inst - "ii")
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2" (inst + "xis") nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide 2)
                    (("2" (lemma "partition_strictly_sort_union")
                      (("2" (inst - "a" "b")
                        (("2" (assert)
                          (("2" (inst-cp - "P" "Q")
                            (("2" (inst - "Q" "strictly_sort(P)")
                              (("2" (lemma "partition_union_sym")
                                (("2" (inst - "a" "b")
                                  (("2" (assert)
                                    (("2" (inst-cp - "strictly_sort(P)" "Q")
                                      (("2"
                                        (inst
                                         -
                                         "strictly_sort(P)"
                                         "strictly_sort(Q)")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (lemma "partition_strictly_sort")
                    (("3" (inst - "a" "b")
                      (("3" (assert) (("3" (inst - "Q") nil nil)) nil)) nil))
                    nil)
                   ("4" (lemma "partition_strictly_sort")
                    (("4" (inst - "a" "b")
                      (("4" (assert) (("4" (inst - "P") nil nil)) nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (hide 2)
      (("2"
        (case "FORALL (a, b:T, f, g: [T->real]):
                                                                                                                                                                                            a < b IMPLIES
                                                                                                                                                                                             LET CI = LAMBDA (x:T): a <= x AND x <= b IN
                                                                                                                                                                                               (increasing?[(CI)](restrict[T, ((CI)), real](g)) IMPLIES
                                                                                                                                                                                                 (FORALL (P, Q: partition(a, b)):
                                                                                                                                                                                                    (strictly_increasing?(P) AND strictly_increasing?(Q))
                                                                                                                                                                                                     IMPLIES
                                                                                                                                                                                                     LET PQ:
                                                                                                                                                                                                           {PQ: partition(a, b) |
                                                                                                                                                                                                                    (FORALL (x:T):
                                                                                                                                                                                                                       member(x, PQ) IFF
                                                                                                                                                                                                                        (member(x, P) OR member(x, Q)))
                                                                                                                                                                                                                     AND strictly_increasing?(PQ)}
                                                                                                                                                                                                           = partition_union(a, b)(P, Q)
                                                                                                                                                                                                       IN
                                                                                                                                                                                                       FORALL (xispq: xis?(a, b, PQ), xis: xis?(a, b, P)):Rie_sum(a, b, g, P, xis, f) >=
                                                                                                                                                                                                                Rie_sum(a, b, g, PQ, xispq, f) IMPLIES
                                                                                                                                                                                                         EXISTS (xis2: xis?(a, b, P)):
                                                                                                                                                                                                                Rie_sum(a, b, g, PQ, xispq, f) >=
                                                                                                                                                                                                                 Rie_sum(a, b, g, P, xis2, f)))")
        (("1" (skeep)
          (("1" (assert)
            (("1" (flatten)
              (("1" (skeep)
                (("1" (skeep)
                  (("1"
                    (case "Rie_sum(a, b, g, P, xis, f) >=
                                                                                                                                                                                                                                         Rie_sum(a, b, g, partition_union(a, b)(P, Q), xispq, f)")
                    (("1" (inst - "a" "b" "f" "g")
                      (("1" (assert)
                        (("1" (inst - "P" "Q")
                          (("1" (assert)
                            (("1" (inst - "xispq" "xis")
                              (("1" (assert)
                                (("1" (skosimp*)
                                  (("1" (inst + "xis2!1")
                                    (("1" (expand "abs")
                                      (("1"
                                        (lift-if)
                                        (("1" (ground) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (inst - "a" "b" "(LAMBDA x: -f(x))" "g")
                      (("2" (assert)
                        (("2" (inst - "P" "Q")
                          (("2" (assert)
                            (("2" (inst - "xispq" "xis")
                              (("2"
                                (case "FORALL (ZZ:partition(a,b),xizz:xis?(a,b,ZZ)): Rie_sum(a,b,g,ZZ,xizz,(LAMBDA x:-f(x))) = -Rie_sum(a,b,g,ZZ,xizz,f)")
                                (("1" (split -)
                                  (("1" (skeep -)
                                    (("1" (inst + "xis2")
                                      (("1"
                                        (inst-cp - "P" "xis")
                                        (("1"
                                          (inst-cp
                                           -
                                           "partition_union(a,b)(P,Q)"
                                           "xispq")
                                          (("1"
                                            (inst - "P" "xis2")
                                            (("1"
                                              (expand "abs")
                                              (("1"
                                                (lift-if)
                                                (("1" (ground) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (inst-cp - "P" "xis")
                                    (("2"
                                      (inst-cp
                                       -
                                       "partition_union(a,b)(P,Q)"
                                       "xispq")
                                      (("2" (assert) nil nil)) nil))
                                    nil))
                                  nil)
                                 ("2" (hide-all-but 1)
                                  (("2" (skeep)
                                    (("2" (expand "Rie_sum")
                                      (("2"
                                        (lemma
                                         "sigma_scal[below(ZZ`length-1)]")
                                        (("1"
                                          (inst
                                           -
                                           "LAMBDA (n: below(ZZ`length - 1)):
                                                                                                                                                                                                                     g(ZZ`seq(1 + n)) * f(xizz`seq(n)) -
                                                                                                                                                                                                                      g(ZZ`seq(n)) * f(xizz`seq(n))"
                                           "-1"
                                           "ZZ`length-2"
                                           "0")
                                          (("1" (assert) nil nil))
                                          nil)
                                         ("2"
                                          (skeep*)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide 2)
          (("2" (skeep)
            (("2" (assert)
              (("2" (flatten)
                (("2" (label "altb" -1)
                  (("2" (label "ginc" -2)
                    (("2" (skeep)
                      (("2" (label "Pinc" -3)
                        (("2" (label "Qinc" -4)
                          (("2" (skeep)
                            (("2" (label "RSge" -5)
                              (("2" (name "PQ" "partition_union(a,b)(P,Q)")
                                (("2" (label "PQname" -1)
                                  (("2" (replace "PQname")
                                    (("2"
                                      (name
                                       "pum"
                                       "partition_union_map(a,b,P,Q)")
                                      (("2"
                                        (label "pumname" -1)
                                        (("2"
                                          (name
                                           "sig"
                                           "partition_union_map_inv(a,b,P,Q)")
                                          (("2"
                                            (label "signame" -1)
                                            (("2"
                                              (case
                                               "sig(0) = 0 AND pum(0) = 0")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (label "sig0" -1)
                                                  (("1"
                                                    (label "pum0" -2)
                                                    (("1"
                                                      (case
                                                       "FORALL (ii:below(P`length-1)): EXISTS (jj:below(PQ`length-1)): (pum(ii)<=jj AND jj<pum(ii+1) AND (FORALL (zz:below(PQ`length-1)): pum(ii)<=zz AND zz<pum(ii+1) IMPLIES f(xispq`seq(zz)) >= f(xispq`seq(jj))))")
                                                      (("1"
                                                        (name
                                                         "xis2"
                                                         "(# length := P`length-1, seq := (LAMBDA (ii:nat): IF ii<P`length-1 THEN LET jj = choose({jj:below(PQ`length-1) | (pum(ii) <= jj AND
                                                                                                                                                                               jj < pum(ii + 1) AND
                                                                                                                                                                                (FORALL (zz: below(PQ`length - 1)):
                                                                                                                                                                                   pum(ii) <= zz AND zz < pum(ii + 1) IMPLIES
                                                                                                                                                                                    f(xispq`seq(zz)) >= f(xispq`seq(jj))))}) IN xispq`seq(jj) ELSE default[T] ENDIF) #)")
                                                        (("1"
                                                          (inst + "xis2")
                                                          (("1"
                                                            (hide -1)
                                                            (("1"
                                                              (lemma
                                                               "Rie_sum_extend_union")
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "a"
                                                                 "b"
                                                                 "f"
                                                                 "g")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "P"
                                                                     "Q")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "xis2")
                                                                        (("1"
                                                                          (replace
                                                                           -1
                                                                           +)
                                                                          (("1"
                                                                            (hide
                                                                             -1)
                                                                            (("1"
                                                                              (expand
                                                                               "Rie_sum"
                                                                               +)
                                                                              (("1"
                                                                                (case
                                                                                 "FORALL (nn:nat): nn<= PQ`length-2 IMPLIES sigma[below(PQ`length - 1)]
                                                                                                                                                                                                                                                                     (0, nn,
                                                                                                                                                                                                                                                                      LAMBDA (n: below(PQ`length - 1)):
                                                                                                                                                                                                                                                                        f(xispq`seq(n)) * g(PQ`seq(1 + n)) -
                                                                                                                                                                                                                                                                         f(xispq`seq(n)) * g(PQ`seq(n)))
                                                                                                                                                                                                                                                                  >=
                                                                                                                                                                                                                                                                  sigma[below(partition_union(a, b)(P, Q)`length - 1)]
                                                                                                                                                                                                                                                                      (0, nn,
                                                                                                                                                                                                                                                                       LAMBDA (n: below(partition_union(a, b)(P, Q)`length - 1)):
                                                                                                                                                                                                                                                                         f(xis2`seq(partition_union_map_inv(a, b, P, Q)(n))) *
                                                                                                                                                                                                                                                                          g(partition_union(a, b)(P, Q)`seq(1 + n))
                                                                                                                                                                                                                                                                          -
                                                                                                                                                                                                                                                                          f(xis2`seq(partition_union_map_inv(a, b, P, Q)(n))) *
                                                                                                                                                                                                                                                                           g(partition_union(a, b)(P, Q)`seq(n)))")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "PQ`length-2")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide
                                                                                   2)
                                                                                  (("2"
                                                                                    (induct
                                                                                     "nn")
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "sigma"
                                                                                         +)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "sigma"
                                                                                           +)
                                                                                          (("1"
                                                                                            (replace
                                                                                             "signame")
                                                                                            (("1"
                                                                                              (replace
                                                                                               "PQname")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "xis2"
                                                                                                 +)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (name
                                                                                                     "rr"
                                                                                                     "choose({jj: below(PQ`length - 1) |
                                                                                                                                                                                                                                                                                                       jj < pum(1 + sig(0)) AND
                                                                                                                                                                                                                                                                                                        (FORALL (zz: below(PQ`length - 1)):
                                                                                                                                                                                                                                                                                                           zz < pum(1 + sig(0)) IMPLIES
                                                                                                                                                                                                                                                                                                            f(xispq`seq(zz)) >= f(xispq`seq(jj)))})")
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (typepred
                                                                                                         "rr")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "0")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (case
                                                                                                               "g(PQ`seq(1)) >= g(PQ`seq(0))")
                                                                                                              (("1"
                                                                                                                (mult-by
                                                                                                                 -4
                                                                                                                 "g(PQ`seq(1))-g(PQ`seq(0))")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide
                                                                                                                 2)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "increasing?"
                                                                                                                   "ginc")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     "ginc"
                                                                                                                     "PQ`seq(0)"
                                                                                                                     "PQ`seq(1)")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "restrict")
                                                                                                                        (("1"
                                                                                                                          (typepred
                                                                                                                           "PQ")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "increasing?")
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "0"
                                                                                                                               "1")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (typepred
                                                                                                                       "PQ")
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "1")
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "nonempty?")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "empty?")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -3
                                                                                                             "sig(0)")
                                                                                                            (("2"
                                                                                                              (skosimp*)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "jj!1")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "member")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (skeep)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "sigma"
                                                                                           +)
                                                                                          (("2"
                                                                                            (case
                                                                                             "f(xispq`seq(1 + j)) * g(PQ`seq(2 + j))
                                                                                                                                                                                                                                                                                     - f(xispq`seq(1 + j)) * g(PQ`seq(1 + j))>=f(xis2`seq(partition_union_map_inv(a, b, P, Q)(1 + j))) *
                                                                                                                                                                                                                                                                                       g(partition_union(a, b)(P, Q)`seq(2 + j))
                                                                                                                                                                                                                                                                                      -
                                                                                                                                                                                                                                                                                      f(xis2`seq(partition_union_map_inv(a, b, P, Q)(1 + j))) *
                                                                                                                                                                                                                                                                                       g(partition_union(a, b)(P, Q)`seq(1 + j))")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               2)
                                                                                              (("2"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   "PQname")
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     "signame")
                                                                                                    (("2"
                                                                                                      (case
                                                                                                       "sig(1 + j) < P`length - 1")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "xis2"
                                                                                                         +)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (name
                                                                                                             "rr"
                                                                                                             "choose({jj: below(PQ`length - 1) |
                                                                                                                                                                                                                                                                                                                                               (pum(sig(1 + j)) <= jj AND
                                                                                                                                                                                                                                                                                                                                                 jj < pum(1 + sig(1 + j)) AND
                                                                                                                                                                                                                                                                                                                                                  (FORALL (zz: below(PQ`length - 1)):
                                                                                                                                                                                                                                                                                                                                                     pum(sig(1 + j)) <= zz AND
                                                                                                                                                                                                                                                                                                                                                      zz < pum(1 + sig(1 + j))
                                                                                                                                                                                                                                                                                                                                                      IMPLIES
                                                                                                                                                                                                                                                                                                                                                      f(xispq`seq(zz)) >= f(xispq`seq(jj))))})")
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (typepred
                                                                                                                 "rr")
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "g(PQ`seq(2+j))>=g(PQ`seq(1+j))")
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "1+j")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (split
                                                                                                                         -)
                                                                                                                        (("1"
                                                                                                                          (mult-by
                                                                                                                           -1
                                                                                                                           "g(PQ`seq(2+j))-g(PQ`seq(1+j))")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (hide
                                                                                                                           2)
                                                                                                                          (("2"
                                                                                                                            (typepred
                                                                                                                             "pum")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "sig(1+j)")
                                                                                                                              (("2"
                                                                                                                                (case
                                                                                                                                 "P`seq(sig(1+j)) <= PQ`seq(1+j)")
                                                                                                                                (("1"
                                                                                                                                  (typepred
                                                                                                                                   "PQ")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "strictly_increasing?")
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "1+j"
                                                                                                                                       "pum(sig(1+j))")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (ground)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (hide
                                                                                                                                   2)
                                                                                                                                  (("2"
                                                                                                                                    (typepred
                                                                                                                                     "sig")
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "1+j")
                                                                                                                                      (("2"
                                                                                                                                        (ground)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("3"
                                                                                                                          (hide
                                                                                                                           2)
                                                                                                                          (("3"
                                                                                                                            (typepred
                                                                                                                             "pum")
                                                                                                                            (("3"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "1+sig(1+j)")
                                                                                                                              (("3"
                                                                                                                                (case
                                                                                                                                 "P`seq(1+sig(1+j)) > PQ`seq(1+j)")
                                                                                                                                (("1"
                                                                                                                                  (typepred
                                                                                                                                   "PQ")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "strictly_increasing?")
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "pum(1+sig(1+j))"
                                                                                                                                       "1+j")
                                                                                                                                      (("1"
                                                                                                                                        (ground)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (hide
                                                                                                                                   2)
                                                                                                                                  (("2"
                                                                                                                                    (typepred
                                                                                                                                     "sig")
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "1+j")
                                                                                                                                      (("2"
                                                                                                                                        (ground)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (hide
                                                                                                                     2)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "increasing?"
                                                                                                                       "ginc")
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         "ginc"
                                                                                                                         "PQ`seq(1+j)"
                                                                                                                         "PQ`seq(2+j)")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "restrict")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (typepred
                                                                                                                               "PQ")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "increasing?")
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "1+j"
                                                                                                                                   "2+j")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (typepred
                                                                                                                           "PQ")
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "2+j")
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("3"
                                                                                                                          (typepred
                                                                                                                           "PQ")
                                                                                                                          (("3"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "1+j")
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide
                                                                                                               2)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "nonempty?")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "empty?")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -4
                                                                                                                     "sig(1+j)")
                                                                                                                    (("2"
                                                                                                                      (skosimp*)
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "jj!1")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "member")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "sig(1+j) = P`length-1")
                                                                                                          (("1"
                                                                                                            (typepred
                                                                                                             "sig")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "1+j")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (typepred
                                                                                                                   "PQ")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "strictly_increasing?")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "1+j"
                                                                                                                       "PQ`length-1")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (ground)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("3"
                                                                                      (hide
                                                                                       2)
                                                                                      (("3"
                                                                                        (skosimp*)
                                                                                        (("3"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("4"
                                                                                      (hide
                                                                                       3)
                                                                                      (("4"
                                                                                        (skosimp*)
                                                                                        (("4"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("5"
                                                                                      (hide
                                                                                       2)
                                                                                      (("5"
                                                                                        (skosimp*)
                                                                                        (("5"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("6"
                                                                                      (hide
                                                                                       3)
                                                                                      (("6"
                                                                                        (skosimp*)
                                                                                        (("6"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("7"
                                                                                      (skeep*)
                                                                                      (("7"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("8"
                                                                                      (skeep*)
                                                                                      (("8"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("9"
                                                                                      (skeep*)
                                                                                      (("9"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("10"
                                                                                      (skeep*)
                                                                                      (("10"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("3"
                                                                                  (hide
                                                                                   2)
                                                                                  (("3"
                                                                                    (skosimp*)
                                                                                    (("3"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("4"
                                                                                  (hide
                                                                                   2)
                                                                                  (("4"
                                                                                    (skosimp*)
                                                                                    (("4"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("5"
                                                                                  (skeep*)
                                                                                  (("5"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("6"
                                                                                  (skeep*)
                                                                                  (("6"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (expand
                                                                               "xis2")
                                                                              (("2"
                                                                                (hide
                                                                                 -1)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "P")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide -1)
                                                                    (("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (skosimp*)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (ground)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            (("2"
                                                              (hide -1)
                                                              (("2"
                                                                (label
                                                                 "exlem"
                                                                 -1)
                                                                (("2"
                                                                  (hide -1)
                                                                  (("2"
                                                                    (split)
                                                                    (("1"
                                                                      (skosimp*)
                                                                      (("1"
                                                                        (expand
                                                                         "xis2"
                                                                         +)
                                                                        (("1"
                                                                          (lift-if)
                                                                          (("1"
                                                                            (ground)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (skosimp*)
                                                                      (("2"
                                                                        (expand
                                                                         "xis2")
                                                                        (("2"
                                                                          (name
                                                                           "rr"
                                                                           "choose({jj: below(PQ`length - 1) |
                                                                                                                                                                                                                                        (pum(ii!1) <= jj AND
                                                                                                                                                                                                                                          jj < pum(1 + ii!1) AND
                                                                                                                                                                                                                                           (FORALL (zz: below(PQ`length - 1)):
                                                                                                                                                                                                                                              pum(ii!1) <= zz AND zz < pum(1 + ii!1) IMPLIES
                                                                                                                                                                                                                                               f(xispq`seq(zz)) >= f(xispq`seq(jj))))})")
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (typepred
                                                                               "rr")
                                                                              (("1"
                                                                                (typepred
                                                                                 "xispq")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "rr")
                                                                                  (("1"
                                                                                    (replace
                                                                                     "PQname")
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (case
                                                                                         "PQ`seq(rr) >= P`seq(ii!1) AND PQ`seq(1+rr) <= P`seq(1+ii!1)")
                                                                                        (("1"
                                                                                          (ground)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide
                                                                                           2)
                                                                                          (("2"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("2"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (split
                                                                                                   +)
                                                                                                  (("1"
                                                                                                    (typepred
                                                                                                     "pum")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "ii!1")
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         "PQname")
                                                                                                        (("1"
                                                                                                          (typepred
                                                                                                           "PQ")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "increasing?")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "pum(ii!1)"
                                                                                                               "rr")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (typepred
                                                                                                     "pum")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "1+ii!1")
                                                                                                      (("2"
                                                                                                        (typepred
                                                                                                         "PQ")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "increasing?")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "1+rr"
                                                                                                             "pum(1+ii!1)")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (expand
                                                                               "nonempty?")
                                                                              (("2"
                                                                                (expand
                                                                                 "empty?")
                                                                                (("2"
                                                                                  (reveal
                                                                                   "exlem")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "ii!1")
                                                                                    (("2"
                                                                                      (skosimp*)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -4
                                                                                         "jj!1")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "member")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide 2)
                                                          (("2"
                                                            (skosimp*)
                                                            (("2"
                                                              (expand
                                                               "nonempty?")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "ii!1")
                                                                (("2"
                                                                  (skosimp*)
                                                                  (("2"
                                                                    (expand
                                                                     "empty?")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "jj!1")
                                                                      (("2"
                                                                        (expand
                                                                         "member")
                                                                        (("2"
                                                                          (replace
                                                                           -2)
                                                                          (("2"
                                                                            (replace
                                                                             -3)
                                                                            (("2"
                                                                              (replace
                                                                               -4)
                                                                              (("2"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("3"
                                                          (hide 2)
                                                          (("3"
                                                            (skosimp*)
                                                            (("3"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("4"
                                                          (hide 2)
                                                          (("4"
                                                            (skosimp*)
                                                            (("4"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("5"
                                                          (skosimp*)
                                                          (("5"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("6"
                                                          (skosimp*)
                                                          (("6"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide 2)
                                                        (("2"
                                                          (skeep)
                                                          (("2"
                                                            (typepred "ii")
                                                            (("2"
                                                              (label
                                                               "iitp"
                                                               -1)
                                                              (("2"
                                                                (case
                                                                 "FORALL (qq:below(PQ`length-1)): pum(ii)<=qq AND qq<pum(ii+1) IMPLIES (EXISTS (jj:below(PQ`length-1)): (pum(ii)<=jj AND jj<=qq AND (FORALL (zz:below(PQ`length-1)): pum(ii)<=zz AND zz<=qq IMPLIES f(xispq`seq(zz)) >= f(xispq`seq(jj)))))")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "pum(ii+1)-1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (split
                                                                       -)
                                                                      (("1"
                                                                        (skosimp*)
                                                                        (("1"
                                                                          (inst
                                                                           +
                                                                           "jj!1")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (skosimp*)
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "zz!1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide
                                                                         2)
                                                                        (("2"
                                                                          (lemma
                                                                           "partition_union_map_increasing")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "a"
                                                                             "b")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "P"
                                                                                 "Q"
                                                                                 "ii"
                                                                                 "1+ii")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide 2)
                                                                    (("2"
                                                                      (typepred
                                                                       "pum(1+ii)")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (lemma
                                                                           "partition_union_map_increasing")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "a"
                                                                             "b")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "P"
                                                                                 "Q"
                                                                                 "0"
                                                                                 "1+ii")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide 2)
                                                                  (("2"
                                                                    (induct
                                                                     "qq")
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (inst
                                                                         +
                                                                         "0")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (skosimp*)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (skolem
                                                                       1
                                                                       "rr")
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (label
                                                                           "iirr1"
                                                                           -3)
                                                                          (("2"
                                                                            (label
                                                                             "rr1ii1"
                                                                             -4)
                                                                            (("2"
                                                                              (label
                                                                               "rrlt"
                                                                               -1)
                                                                              (("2"
                                                                                (case
                                                                                 "pum(ii) <= rr AND rr < pum(ii + 1)")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (label
                                                                                       "iirr"
                                                                                       -1)
                                                                                      (("1"
                                                                                        (label
                                                                                         "rrii1"
                                                                                         -2)
                                                                                        (("1"
                                                                                          (skosimp*)
                                                                                          (("1"
                                                                                            (label
                                                                                             "iijj"
                                                                                             -4)
                                                                                            (("1"
                                                                                              (label
                                                                                               "jjrr"
                                                                                               -5)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "f(xispq`seq(rr+1)) < f(xispq`seq(jj!1))")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "rr+1")
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     "iirr1")
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "zz!1")
                                                                                                          (("2"
                                                                                                            (ground)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "jj!1")
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     "iijj")
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -6)
                                                                                                        (("1"
                                                                                                          (ground)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "zz!1")
                                                                                                          (("2"
                                                                                                            (ground)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (case
                                                                                   "pum(ii) = rr+1")
                                                                                  (("1"
                                                                                    (inst
                                                                                     +
                                                                                     "rr+1")
                                                                                    (("1"
                                                                                      (hide-all-but
                                                                                       (-1
                                                                                        +))
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (skosimp*)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     3)
                                                                                    (("2"
                                                                                      (hide
                                                                                       -2)
                                                                                      (("2"
                                                                                        (ground)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (hide-all-but
                                                                       1)
                                                                      (("3"
                                                                        (ground)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide-all-but
                                                 (1
                                                  "pumname"
                                                  "signame"
                                                  "altb"
                                                  "Pinc"))
                                                (("2"
                                                  (lemma
                                                   "partition_union_map_inv_def")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (inst - "a" "b")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (inst - "P" "Q")
                                                          (("2"
                                                            (inst - "0" "0")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (replace
                                                                 "pumname")
                                                                (("1"
                                                                  (replace
                                                                   "signame")
                                                                  (("1"
                                                                    (case
                                                                     "pum(0) = 0")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (ground)
                                                                        (("1"
                                                                          (hide
                                                                           2)
                                                                          (("1"
                                                                            (typepred
                                                                             "pum")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "1")
                                                                              (("1"
                                                                                (expand
                                                                                 "strictly_increasing?")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "0"
                                                                                   "1")
                                                                                  (("1"
                                                                                    (ground)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide 2)
                                                                      (("2"
                                                                        (hide
                                                                         -1)
                                                                        (("2"
                                                                          (typepred
                                                                           "pum")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "0")
                                                                            (("2"
                                                                              (reveal
                                                                               "PQname")
                                                                              (("2"
                                                                                (typepred
                                                                                 "PQ")
                                                                                (("2"
                                                                                  (expand
                                                                                   "strictly_increasing?")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "0"
                                                                                     "pum(0)")
                                                                                    (("2"
                                                                                      (ground)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((partition_union const-decl "{PQ: partition(a, b) |
   (FORALL (x: T): member(x, PQ) IFF (member(x, P) OR member(x, Q))) AND
    strictly_increasing?(PQ)}" rs_partition nil)
    (Rie_sum const-decl "real" rs_integral_def nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (xis? type-eq-decl nil rs_integral_def nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (member const-decl "bool" fseqs structures)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (strictly_increasing? const-decl "bool" sort_fseq structures)
    (partition type-eq-decl nil rs_partition nil)
    (below type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (increasing? const-decl "bool" sort_fseq structures)
    (<= const-decl "bool" reals nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (> const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (fseq type-eq-decl nil fseqs structures)
    (barray type-eq-decl nil fseqs structures)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (restrict const-decl "R" restrict nil)
    (increasing? const-decl "bool" real_fun_preds reals)
    (< const-decl "bool" reals nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (T formal-nonempty-subtype-decl nil rs_integral_def nil)
    (T_pred const-decl "[real -> boolean]" rs_integral_def nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (total_order_restrict application-judgement "(total_order?[S])"
     restrict_order_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (strictly_sort const-decl "{ss: fseq |
   strictly_increasing?(ss) AND
    (FORALL (x: T): member(x, s) IFF member(x, ss))}" sort_fseq structures)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (xispq skolem-const-decl "xis?(a, b, partition_union(a, b)(P, Q))"
     rs_integral_def nil)
    (Q skolem-const-decl "partition[T](a, b)" rs_integral_def nil)
    (P skolem-const-decl "partition[T](a, b)" rs_integral_def nil)
    (b skolem-const-decl "T" rs_integral_def nil)
    (a skolem-const-decl "T" rs_integral_def nil)
    (Riemann_sum_strictly_sort formula-decl nil rs_integral_def nil)
    (partition_strictly_sort_union formula-decl nil rs_partition nil)
    (partition_union_sym formula-decl nil rs_partition nil)
    (partition_strictly_sort formula-decl nil rs_partition nil)
    (partition_union_map const-decl
     "{pm: [below(P`length) -> below(partition_union(a, b)(P, Q)`length)] |
   FORALL (ii: below(P`length)):
     P`seq(ii) = partition_union(a, b)(P, Q)`seq(pm(ii))}" rs_partition nil)
    (partition_union_map_inv const-decl
     "{pm: [below(partition_union(a, b)(P, Q)`length) -> below(P`length)] |
   FORALL (jj: below(partition_union(a, b)(P, Q)`length)):
     P`seq(pm(jj)) <= partition_union(a, b)(P, Q)`seq(jj) AND
      (pm(jj) < P`length - 1 IMPLIES
        partition_union(a, b)(P, Q)`seq(jj) < P`seq(pm(jj) + 1))}"
     rs_partition nil)
    (odd_plus_even_is_odd application-judgement "odd_int" integers nil)
    (partition_union_map_inv_def formula-decl nil rs_partition nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (set type-eq-decl nil sets nil) (nonempty? const-decl "bool" sets nil)
    (choose const-decl "(p)" sets nil)
    (default const-decl "T" fseqs structures)
    (xis2 skolem-const-decl "[# length: int, seq: [nat -> T] #]"
     rs_integral_def nil)
    (a skolem-const-decl "T" rs_integral_def nil)
    (b skolem-const-decl "T" rs_integral_def nil)
    (P skolem-const-decl "partition[T](a, b)" rs_integral_def nil)
    (Rie_sum_extend_union formula-decl nil rs_integral_def nil)
    (sigma def-decl "real" sigma reals)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (j skolem-const-decl "nat" rs_integral_def nil)
    (g skolem-const-decl "[T -> real]" rs_integral_def nil)
    (both_sides_times_pos_ge1_imp formula-decl nil extra_real_props nil)
    (member const-decl "bool" sets nil) (empty? const-decl "bool" sets nil)
    (nn!1 skolem-const-decl "nat" rs_integral_def nil)
    (nn!1 skolem-const-decl "nat" rs_integral_def nil)
    (nn!1 skolem-const-decl "nat" rs_integral_def nil)
    (nn!1 skolem-const-decl "nat" rs_integral_def nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (pred type-eq-decl nil defined_types nil)
    (PQ skolem-const-decl "{PQ: partition[T](a, b) |
   (FORALL (x: T): member(x, PQ) IFF (member(x, P) OR member(x, Q))) AND
    strictly_increasing?(PQ)}" rs_integral_def nil)
    (Q skolem-const-decl "partition[T](a, b)" rs_integral_def nil)
    (rr skolem-const-decl "({jj: below(PQ`length - 1) |
    (pum(ii!1) <= jj AND
      jj < pum(1 + ii!1) AND
       (FORALL (zz: below(PQ`length - 1)):
          pum(ii!1) <= zz AND zz < pum(1 + ii!1) IMPLIES
           f(xispq`seq(zz)) >= f(xispq`seq(jj))))})" rs_integral_def nil)
    (xispq skolem-const-decl "xis?(a, b, partition_union(a, b)(P, Q))"
     rs_integral_def nil)
    (f skolem-const-decl "[T -> real]" rs_integral_def nil)
    (ii!1 skolem-const-decl "below(P`length - 1)" rs_integral_def nil)
    (pum skolem-const-decl
     "{pm: [below(P`length) -> below(partition_union(a, b)(P, Q)`length)] |
   FORALL (ii: below(P`length)):
     P`seq(ii) = partition_union(a, b)(P, Q)`seq(pm(ii))}" rs_integral_def
     nil)
    (ii!1 skolem-const-decl "nat" rs_integral_def nil)
    (ii skolem-const-decl "below(P`length - 1)" rs_integral_def nil)
    (partition_union_map_increasing formula-decl nil rs_partition nil)
    (rr skolem-const-decl "below(PQ`length - 1)" rs_integral_def nil)
    (below_induction formula-decl nil bounded_nat_inductions nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (sigma_scal formula-decl nil sigma reals)
    (integer nonempty-type-from-decl nil integers nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (T_high type-eq-decl nil sigma reals) (T_low type-eq-decl nil sigma reals)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (TRUE const-decl "bool" booleans nil))
   shostak)
  (Rie_sum_diff_extend_union-8 nil 3494857517
   (""
    (case "FORALL (a, b:T, f, g: [T->real]):
                                                                                                                                                                  a < b IMPLIES
                                                                                                                                                                   LET CI = LAMBDA (x:T): a <= x AND x <= b IN
                                                                                                                                                                     (increasing?[(CI)](restrict[T, ((CI)), real](g)) IMPLIES
                                                                                                                                                                       (FORALL (P, Q: partition(a, b)): (strictly_increasing?(P) AND strictly_increasing?(Q)) IMPLIES
                                                                                                                                                                          LET PQ:
                                                                                                                                                                                {PQ: partition(a, b) |
                                                                                                                                                                                         (FORALL (x:T):
                                                                                                                                                                                            member(x, PQ) IFF
                                                                                                                                                                                             (member(x, P) OR member(x, Q)))
                                                                                                                                                                                          AND strictly_increasing?(PQ)}
                                                                                                                                                                                = partition_union(a, b)(P, Q)
                                                                                                                                                                            IN
                                                                                                                                                                            FORALL (xispq: xis?(a, b, PQ), xis: xis?(a, b, P)):
                                                                                                                                                                              EXISTS (xis2: xis?(a, b, P)):
                                                                                                                                                                                abs(Rie_sum(a, b, g, P, xis, f) -
                                                                                                                                                                                     Rie_sum(a, b, g, PQ, xispq, f))
                                                                                                                                                                                 <=
                                                                                                                                                                                 abs(Rie_sum(a, b, g, P, xis, f) -
                                                                                                                                                                                      Rie_sum(a, b, g, P, xis2, f))))")
    (("1" (skeep)
      (("1" (assert)
        (("1" (flatten)
          (("1" (skeep)
            (("1" (inst - "a" "b" "f" "g")
              (("1" (assert)
                (("1"
                  (case "partition_union(a,b)(P,Q) = partition_union(a, b)(strictly_sort(P), strictly_sort(Q))")
                  (("1" (assert)
                    (("1" (inst - "strictly_sort(P)" "strictly_sort(Q)")
                      (("1" (assert)
                        (("1" (skeep)
                          (("1" (lemma "Riemann_sum_strictly_sort")
                            (("1" (inst - "a" "b" "f" "g")
                              (("1" (assert)
                                (("1"
                                  (inst - "P" "Rie_sum(a, b, g, P, xis, f)")
                                  (("1" (flatten)
                                    (("1" (hide -2)
                                      (("1"
                                        (split -)
                                        (("1"
                                          (skolem -1 "xissp")
                                          (("1"
                                            (inst - "xispq" "xissp")
                                            (("1"
                                              (skolem - "xis2sp")
                                              (("1"
                                                (lemma
                                                 "Riemann_sum_strictly_sort")
                                                (("1"
                                                  (inst - "a" "b" "f" "g")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (inst
                                                       -
                                                       "P"
                                                       "Rie_sum(a, b, g, strictly_sort(P), xis2sp, f)")
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (split -)
                                                            (("1"
                                                              (skolem
                                                               -1
                                                               "xis2")
                                                              (("1"
                                                                (inst
                                                                 +
                                                                 "xis2")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (case
                                                               "partition_union(a,b)(P,Q) = partition_union(a, b)(strictly_sort(P), strictly_sort(Q))")
                                                              (("1"
                                                                (inst
                                                                 +
                                                                 "xis2sp")
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (assert)
                                              (("2"
                                                (skeep)
                                                (("2"
                                                  (replace -2 :dir rl)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (typepred "xispq")
                                                      (("2"
                                                        (inst - "ii")
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2" (inst + "xis") nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide 2)
                    (("2" (lemma "partition_strictly_sort_union")
                      (("2" (inst - "a" "b")
                        (("2" (assert)
                          (("2" (inst-cp - "P" "Q")
                            (("2" (inst - "Q" "strictly_sort(P)")
                              (("2" (lemma "partition_union_sym")
                                (("2" (inst - "a" "b")
                                  (("2" (assert)
                                    (("2" (inst-cp - "strictly_sort(P)" "Q")
                                      (("2"
                                        (inst
                                         -
                                         "strictly_sort(P)"
                                         "strictly_sort(Q)")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (lemma "partition_strictly_sort")
                    (("3" (inst - "a" "b")
                      (("3" (assert) (("3" (inst - "Q") nil nil)) nil)) nil))
                    nil)
                   ("4" (lemma "partition_strictly_sort")
                    (("4" (inst - "a" "b")
                      (("4" (assert) (("4" (inst - "P") nil nil)) nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (hide 2)
      (("2"
        (case "FORALL (a, b:T, f, g: [T->real]):
                                                                                                                                                                                            a < b IMPLIES
                                                                                                                                                                                             LET CI = LAMBDA (x:T): a <= x AND x <= b IN
                                                                                                                                                                                               (increasing?[(CI)](restrict[T, ((CI)), real](g)) IMPLIES
                                                                                                                                                                                                 (FORALL (P, Q: partition(a, b)):
                                                                                                                                                                                                    (strictly_increasing?(P) AND strictly_increasing?(Q))
                                                                                                                                                                                                     IMPLIES
                                                                                                                                                                                                     LET PQ:
                                                                                                                                                                                                           {PQ: partition(a, b) |
                                                                                                                                                                                                                    (FORALL (x:T):
                                                                                                                                                                                                                       member(x, PQ) IFF
                                                                                                                                                                                                                        (member(x, P) OR member(x, Q)))
                                                                                                                                                                                                                     AND strictly_increasing?(PQ)}
                                                                                                                                                                                                           = partition_union(a, b)(P, Q)
                                                                                                                                                                                                       IN
                                                                                                                                                                                                       FORALL (xispq: xis?(a, b, PQ), xis: xis?(a, b, P)):Rie_sum(a, b, g, P, xis, f) >=
                                                                                                                                                                                                                Rie_sum(a, b, g, PQ, xispq, f) IMPLIES
                                                                                                                                                                                                         EXISTS (xis2: xis?(a, b, P)):
                                                                                                                                                                                                                Rie_sum(a, b, g, PQ, xispq, f) >=
                                                                                                                                                                                                                 Rie_sum(a, b, g, P, xis2, f)))")
        (("1" (skeep)
          (("1" (assert)
            (("1" (flatten)
              (("1" (skeep)
                (("1" (skeep)
                  (("1"
                    (case "Rie_sum(a, b, g, P, xis, f) >=
                                                                                                                                                                                                                                         Rie_sum(a, b, g, partition_union(a, b)(P, Q), xispq, f)")
                    (("1" (inst - "a" "b" "f" "g")
                      (("1" (assert)
                        (("1" (inst - "P" "Q")
                          (("1" (assert)
                            (("1" (inst - "xispq" "xis")
                              (("1" (assert)
                                (("1" (skosimp*)
                                  (("1" (inst + "xis2!1")
                                    (("1" (expand "abs")
                                      (("1"
                                        (lift-if)
                                        (("1" (ground) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (inst - "a" "b" "(LAMBDA x: -f(x))" "g")
                      (("2" (assert)
                        (("2" (inst - "P" "Q")
                          (("2" (assert)
                            (("2" (inst - "xispq" "xis")
                              (("2"
                                (case "FORALL (ZZ:partition(a,b),xizz:xis?(a,b,ZZ)): Rie_sum(a,b,g,ZZ,xizz,(LAMBDA x:-f(x))) = -Rie_sum(a,b,g,ZZ,xizz,f)")
                                (("1" (split -)
                                  (("1" (skeep -)
                                    (("1" (inst + "xis2")
                                      (("1"
                                        (inst-cp - "P" "xis")
                                        (("1"
                                          (inst-cp
                                           -
                                           "partition_union(a,b)(P,Q)"
                                           "xispq")
                                          (("1"
                                            (inst - "P" "xis2")
                                            (("1"
                                              (expand "abs")
                                              (("1"
                                                (lift-if)
                                                (("1" (ground) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (inst-cp - "P" "xis")
                                    (("2"
                                      (inst-cp
                                       -
                                       "partition_union(a,b)(P,Q)"
                                       "xispq")
                                      (("2" (assert) nil nil)) nil))
                                    nil))
                                  nil)
                                 ("2" (hide-all-but 1)
                                  (("2" (skeep)
                                    (("2" (expand "Rie_sum")
                                      (("2"
                                        (lemma
                                         "sigma_scal[below(ZZ`length-1)]")
                                        (("2"
                                          (inst
                                           -
                                           "LAMBDA (n: below(ZZ`length - 1)):
                                                                                                                                                                                                                     g(ZZ`seq(1 + n)) * f(xizz`seq(n)) -
                                                                                                                                                                                                                      g(ZZ`seq(n)) * f(xizz`seq(n))"
                                           "-1"
                                           "ZZ`length-2"
                                           "0")
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide 2)
          (("2" (skeep)
            (("2" (assert)
              (("2" (flatten)
                (("2" (label "altb" -1)
                  (("2" (label "ginc" -2)
                    (("2" (skeep)
                      (("2" (label "Pinc" -3)
                        (("2" (label "Qinc" -4)
                          (("2" (skeep)
                            (("2" (label "RSge" -5)
                              (("2" (name "PQ" "partition_union(a,b)(P,Q)")
                                (("2" (label "PQname" -1)
                                  (("2" (replace "PQname")
                                    (("2"
                                      (name
                                       "pum"
                                       "partition_union_map(a,b,P,Q)")
                                      (("2"
                                        (label "pumname" -1)
                                        (("2"
                                          (name
                                           "sig"
                                           "partition_union_map_inv(a,b,P,Q)")
                                          (("2"
                                            (label "signame" -1)
                                            (("2"
                                              (case
                                               "sig(0) = 0 AND pum(0) = 0")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (label "sig0" -1)
                                                  (("1"
                                                    (label "pum0" -2)
                                                    (("1"
                                                      (case
                                                       "FORALL (ii:below(P`length-1)): EXISTS (jj:below(PQ`length-1)): (pum(ii)<=jj AND jj<pum(ii+1) AND (FORALL (zz:below(PQ`length-1)): pum(ii)<=zz AND zz<pum(ii+1) IMPLIES f(xispq`seq(zz)) >= f(xispq`seq(jj))))")
                                                      (("1"
                                                        (name
                                                         "xis2"
                                                         "(# length := P`length-1, seq := (LAMBDA (ii:nat): IF ii<P`length-1 THEN LET jj = choose({jj:below(PQ`length-1) | (pum(ii) <= jj AND
                                                                                                                                                                               jj < pum(ii + 1) AND
                                                                                                                                                                                (FORALL (zz: below(PQ`length - 1)):
                                                                                                                                                                                   pum(ii) <= zz AND zz < pum(ii + 1) IMPLIES
                                                                                                                                                                                    f(xispq`seq(zz)) >= f(xispq`seq(jj))))}) IN xispq`seq(jj) ELSE default[T] ENDIF) #)")
                                                        (("1"
                                                          (stop-rewrite
                                                           "xis_lem")
                                                          (("1"
                                                            (inst + "xis2")
                                                            (("1"
                                                              (hide -1)
                                                              (("1"
                                                                (lemma
                                                                 "Rie_sum_extend_union")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "a"
                                                                   "b"
                                                                   "f"
                                                                   "g")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "P"
                                                                       "Q")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "xis2")
                                                                          (("1"
                                                                            (replace
                                                                             -1
                                                                             +)
                                                                            (("1"
                                                                              (hide
                                                                               -1)
                                                                              (("1"
                                                                                (expand
                                                                                 "Rie_sum"
                                                                                 +)
                                                                                (("1"
                                                                                  (case
                                                                                   "FORALL (nn:nat): nn<= PQ`length-2 IMPLIES sigma[below(PQ`length - 1)]
                                                                                                                                                                                                                                                                     (0, nn,
                                                                                                                                                                                                                                                                      LAMBDA (n: below(PQ`length - 1)):
                                                                                                                                                                                                                                                                        f(xispq`seq(n)) * g(PQ`seq(1 + n)) -
                                                                                                                                                                                                                                                                         f(xispq`seq(n)) * g(PQ`seq(n)))
                                                                                                                                                                                                                                                                  >=
                                                                                                                                                                                                                                                                  sigma[below(partition_union(a, b)(P, Q)`length - 1)]
                                                                                                                                                                                                                                                                      (0, nn,
                                                                                                                                                                                                                                                                       LAMBDA (n: below(partition_union(a, b)(P, Q)`length - 1)):
                                                                                                                                                                                                                                                                         f(xis2`seq(partition_union_map_inv(a, b, P, Q)(n))) *
                                                                                                                                                                                                                                                                          g(partition_union(a, b)(P, Q)`seq(1 + n))
                                                                                                                                                                                                                                                                          -
                                                                                                                                                                                                                                                                          f(xis2`seq(partition_union_map_inv(a, b, P, Q)(n))) *
                                                                                                                                                                                                                                                                           g(partition_union(a, b)(P, Q)`seq(n)))")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "PQ`length-2")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     2)
                                                                                    (("2"
                                                                                      (induct
                                                                                       "nn")
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "sigma"
                                                                                           +)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "sigma"
                                                                                             +)
                                                                                            (("1"
                                                                                              (replace
                                                                                               "signame")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 "PQname")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "xis2"
                                                                                                   +)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (name
                                                                                                       "rr"
                                                                                                       "choose({jj: below(PQ`length - 1) |
                                                                                                                                                                                                                                                                                                       jj < pum(1 + sig(0)) AND
                                                                                                                                                                                                                                                                                                        (FORALL (zz: below(PQ`length - 1)):
                                                                                                                                                                                                                                                                                                           zz < pum(1 + sig(0)) IMPLIES
                                                                                                                                                                                                                                                                                                            f(xispq`seq(zz)) >= f(xispq`seq(jj)))})")
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (typepred
                                                                                                           "rr")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "0")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "g(PQ`seq(1)) >= g(PQ`seq(0))")
                                                                                                                (("1"
                                                                                                                  (mult-by
                                                                                                                   -4
                                                                                                                   "g(PQ`seq(1))-g(PQ`seq(0))")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "increasing?"
                                                                                                                     "ginc")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       "ginc"
                                                                                                                       "PQ`seq(0)"
                                                                                                                       "PQ`seq(1)")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "restrict")
                                                                                                                          (("1"
                                                                                                                            (typepred
                                                                                                                             "PQ")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "increasing?")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "0"
                                                                                                                                 "1")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (typepred
                                                                                                                         "PQ")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "1")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "nonempty?")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "empty?")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -3
                                                                                                               "sig(0)")
                                                                                                              (("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "jj!1")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "member")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (skeep)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "sigma"
                                                                                             +)
                                                                                            (("2"
                                                                                              (case
                                                                                               "f(xispq`seq(1 + j)) * g(PQ`seq(2 + j))
                                                                                                                                                                                                                                                                                     - f(xispq`seq(1 + j)) * g(PQ`seq(1 + j))>=f(xis2`seq(partition_union_map_inv(a, b, P, Q)(1 + j))) *
                                                                                                                                                                                                                                                                                       g(partition_union(a, b)(P, Q)`seq(2 + j))
                                                                                                                                                                                                                                                                                      -
                                                                                                                                                                                                                                                                                      f(xis2`seq(partition_union_map_inv(a, b, P, Q)(1 + j))) *
                                                                                                                                                                                                                                                                                       g(partition_union(a, b)(P, Q)`seq(1 + j))")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     "PQname")
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       "signame")
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "sig(1 + j) < P`length - 1")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "xis2"
                                                                                                           +)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (name
                                                                                                               "rr"
                                                                                                               "choose({jj: below(PQ`length - 1) |
                                                                                                                                                                                                                                                                                                                                               (pum(sig(1 + j)) <= jj AND
                                                                                                                                                                                                                                                                                                                                                 jj < pum(1 + sig(1 + j)) AND
                                                                                                                                                                                                                                                                                                                                                  (FORALL (zz: below(PQ`length - 1)):
                                                                                                                                                                                                                                                                                                                                                     pum(sig(1 + j)) <= zz AND
                                                                                                                                                                                                                                                                                                                                                      zz < pum(1 + sig(1 + j))
                                                                                                                                                                                                                                                                                                                                                      IMPLIES
                                                                                                                                                                                                                                                                                                                                                      f(xispq`seq(zz)) >= f(xispq`seq(jj))))})")
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (typepred
                                                                                                                   "rr")
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "g(PQ`seq(2+j))>=g(PQ`seq(1+j))")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "1+j")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (split
                                                                                                                           -)
                                                                                                                          (("1"
                                                                                                                            (mult-by
                                                                                                                             -1
                                                                                                                             "g(PQ`seq(2+j))-g(PQ`seq(1+j))")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("2"
                                                                                                                              (typepred
                                                                                                                               "pum")
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "sig(1+j)")
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "P`seq(sig(1+j)) <= PQ`seq(1+j)")
                                                                                                                                  (("1"
                                                                                                                                    (typepred
                                                                                                                                     "PQ")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "strictly_increasing?")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "1+j"
                                                                                                                                         "pum(sig(1+j))")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (ground)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (typepred
                                                                                                                                       "sig")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "1+j")
                                                                                                                                        (("2"
                                                                                                                                          (ground)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("3"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("3"
                                                                                                                              (typepred
                                                                                                                               "pum")
                                                                                                                              (("3"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "1+sig(1+j)")
                                                                                                                                (("3"
                                                                                                                                  (case
                                                                                                                                   "P`seq(1+sig(1+j)) > PQ`seq(1+j)")
                                                                                                                                  (("1"
                                                                                                                                    (typepred
                                                                                                                                     "PQ")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "strictly_increasing?")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "pum(1+sig(1+j))"
                                                                                                                                         "1+j")
                                                                                                                                        (("1"
                                                                                                                                          (ground)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (typepred
                                                                                                                                       "sig")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "1+j")
                                                                                                                                        (("2"
                                                                                                                                          (ground)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (hide
                                                                                                                       2)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "increasing?"
                                                                                                                         "ginc")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           "ginc"
                                                                                                                           "PQ`seq(1+j)"
                                                                                                                           "PQ`seq(2+j)")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "restrict")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (typepred
                                                                                                                                 "PQ")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "increasing?")
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "1+j"
                                                                                                                                     "2+j")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (typepred
                                                                                                                             "PQ")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "2+j")
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("3"
                                                                                                                            (typepred
                                                                                                                             "PQ")
                                                                                                                            (("3"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "1+j")
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide
                                                                                                                 2)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "nonempty?")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "empty?")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -4
                                                                                                                       "sig(1+j)")
                                                                                                                      (("2"
                                                                                                                        (skosimp*)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "jj!1")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "member")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (case
                                                                                                             "sig(1+j) = P`length-1")
                                                                                                            (("1"
                                                                                                              (typepred
                                                                                                               "sig")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "1+j")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (typepred
                                                                                                                     "PQ")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "strictly_increasing?")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "1+j"
                                                                                                                         "PQ`length-1")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (ground)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("3"
                                                                                        (hide
                                                                                         2)
                                                                                        (("3"
                                                                                          (skosimp*)
                                                                                          (("3"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("4"
                                                                                        (hide
                                                                                         3)
                                                                                        (("4"
                                                                                          (skosimp*)
                                                                                          (("4"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("5"
                                                                                        (hide
                                                                                         2)
                                                                                        (("5"
                                                                                          (skosimp*)
                                                                                          (("5"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("6"
                                                                                        (hide
                                                                                         3)
                                                                                        (("6"
                                                                                          (skosimp*)
                                                                                          (("6"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (hide
                                                                                     2)
                                                                                    (("3"
                                                                                      (skosimp*)
                                                                                      (("3"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("4"
                                                                                    (hide
                                                                                     2)
                                                                                    (("4"
                                                                                      (skosimp*)
                                                                                      (("4"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (expand
                                                                                 "xis2")
                                                                                (("2"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("2"
                                                                                    (typepred
                                                                                     "P")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (hide
                                                                         -1)
                                                                        (("2"
                                                                          (skosimp*)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (ground)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (hide -1)
                                                                (("2"
                                                                  (label
                                                                   "exlem"
                                                                   -1)
                                                                  (("2"
                                                                    (hide -1)
                                                                    (("2"
                                                                      (split)
                                                                      (("1"
                                                                        (skosimp*)
                                                                        (("1"
                                                                          (expand
                                                                           "xis2"
                                                                           +)
                                                                          (("1"
                                                                            (lift-if)
                                                                            (("1"
                                                                              (ground)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (skosimp*)
                                                                        (("2"
                                                                          (expand
                                                                           "xis2")
                                                                          (("2"
                                                                            (name
                                                                             "rr"
                                                                             "choose({jj: below(PQ`length - 1) |
                                                                                                                                                                                                                                        (pum(ii!1) <= jj AND
                                                                                                                                                                                                                                          jj < pum(1 + ii!1) AND
                                                                                                                                                                                                                                           (FORALL (zz: below(PQ`length - 1)):
                                                                                                                                                                                                                                              pum(ii!1) <= zz AND zz < pum(1 + ii!1) IMPLIES
                                                                                                                                                                                                                                               f(xispq`seq(zz)) >= f(xispq`seq(jj))))})")
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (typepred
                                                                                 "rr")
                                                                                (("1"
                                                                                  (typepred
                                                                                   "xispq")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "rr")
                                                                                    (("1"
                                                                                      (replace
                                                                                       "PQname")
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (case
                                                                                           "PQ`seq(rr) >= P`seq(ii!1) AND PQ`seq(1+rr) <= P`seq(1+ii!1)")
                                                                                          (("1"
                                                                                            (ground)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("2"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (typepred
                                                                                                       "pum")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "ii!1")
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           "PQname")
                                                                                                          (("1"
                                                                                                            (typepred
                                                                                                             "PQ")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "increasing?")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "pum(ii!1)"
                                                                                                                 "rr")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (typepred
                                                                                                       "pum")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "1+ii!1")
                                                                                                        (("2"
                                                                                                          (typepred
                                                                                                           "PQ")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "increasing?")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "1+rr"
                                                                                                               "pum(1+ii!1)")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (expand
                                                                                 "nonempty?")
                                                                                (("2"
                                                                                  (expand
                                                                                   "empty?")
                                                                                  (("2"
                                                                                    (reveal
                                                                                     "exlem")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "ii!1")
                                                                                      (("2"
                                                                                        (skosimp*)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -4
                                                                                           "jj!1")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "member")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide 2)
                                                          (("2"
                                                            (skosimp*)
                                                            (("2"
                                                              (expand
                                                               "nonempty?")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "ii!1")
                                                                (("2"
                                                                  (skosimp*)
                                                                  (("2"
                                                                    (expand
                                                                     "empty?")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "jj!1")
                                                                      (("2"
                                                                        (expand
                                                                         "member")
                                                                        (("2"
                                                                          (stop-rewrite
                                                                           "xis_lem")
                                                                          (("2"
                                                                            (replace
                                                                             -2)
                                                                            (("2"
                                                                              (replace
                                                                               -3)
                                                                              (("2"
                                                                                (replace
                                                                                 -4)
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("3"
                                                          (hide 2)
                                                          (("3"
                                                            (skosimp*)
                                                            (("3"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("4"
                                                          (hide 2)
                                                          (("4"
                                                            (skosimp*)
                                                            (("4"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("5"
                                                          (skosimp*)
                                                          (("5"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("6"
                                                          (skosimp*)
                                                          (("6"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide 2)
                                                        (("2"
                                                          (skeep)
                                                          (("2"
                                                            (typepred "ii")
                                                            (("2"
                                                              (label
                                                               "iitp"
                                                               -1)
                                                              (("2"
                                                                (case
                                                                 "FORALL (qq:below(PQ`length-1)): pum(ii)<=qq AND qq<pum(ii+1) IMPLIES (EXISTS (jj:below(PQ`length-1)): (pum(ii)<=jj AND jj<=qq AND (FORALL (zz:below(PQ`length-1)): pum(ii)<=zz AND zz<=qq IMPLIES f(xispq`seq(zz)) >= f(xispq`seq(jj)))))")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "pum(ii+1)-1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (split
                                                                       -)
                                                                      (("1"
                                                                        (skosimp*)
                                                                        (("1"
                                                                          (inst
                                                                           +
                                                                           "jj!1")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (skosimp*)
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "zz!1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide
                                                                         2)
                                                                        (("2"
                                                                          (lemma
                                                                           "partition_union_map_increasing")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "a"
                                                                             "b")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "P"
                                                                                 "Q"
                                                                                 "ii"
                                                                                 "1+ii")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide 2)
                                                                    (("2"
                                                                      (typepred
                                                                       "pum(1+ii)")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (lemma
                                                                           "partition_union_map_increasing")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "a"
                                                                             "b")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "P"
                                                                                 "Q"
                                                                                 "0"
                                                                                 "1+ii")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide 2)
                                                                  (("2"
                                                                    (induct
                                                                     "qq")
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (inst
                                                                         +
                                                                         "0")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (skosimp*)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (skolem
                                                                       1
                                                                       "rr")
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (label
                                                                           "iirr1"
                                                                           -3)
                                                                          (("2"
                                                                            (label
                                                                             "rr1ii1"
                                                                             -4)
                                                                            (("2"
                                                                              (label
                                                                               "rrlt"
                                                                               -1)
                                                                              (("2"
                                                                                (case
                                                                                 "pum(ii) <= rr AND rr < pum(ii + 1)")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (label
                                                                                       "iirr"
                                                                                       -1)
                                                                                      (("1"
                                                                                        (label
                                                                                         "rrii1"
                                                                                         -2)
                                                                                        (("1"
                                                                                          (skosimp*)
                                                                                          (("1"
                                                                                            (label
                                                                                             "iijj"
                                                                                             -4)
                                                                                            (("1"
                                                                                              (label
                                                                                               "jjrr"
                                                                                               -5)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "f(xispq`seq(rr+1)) < f(xispq`seq(jj!1))")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "rr+1")
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     "iirr1")
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "zz!1")
                                                                                                          (("2"
                                                                                                            (ground)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "jj!1")
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     "iijj")
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -6)
                                                                                                        (("1"
                                                                                                          (ground)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "zz!1")
                                                                                                          (("2"
                                                                                                            (ground)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (case
                                                                                   "pum(ii) = rr+1")
                                                                                  (("1"
                                                                                    (inst
                                                                                     +
                                                                                     "rr+1")
                                                                                    (("1"
                                                                                      (hide-all-but
                                                                                       (-1
                                                                                        +))
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (skosimp*)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     3)
                                                                                    (("2"
                                                                                      (hide
                                                                                       -2)
                                                                                      (("2"
                                                                                        (ground)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (hide-all-but
                                                                       1)
                                                                      (("3"
                                                                        (ground)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide-all-but
                                                 (1
                                                  "pumname"
                                                  "signame"
                                                  "altb"
                                                  "Pinc"))
                                                (("2"
                                                  (lemma
                                                   "partition_union_map_inv_def")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (inst - "a" "b")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (inst - "P" "Q")
                                                          (("2"
                                                            (inst - "0" "0")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (replace
                                                                 "pumname")
                                                                (("1"
                                                                  (replace
                                                                   "signame")
                                                                  (("1"
                                                                    (case
                                                                     "pum(0) = 0")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (ground)
                                                                        (("1"
                                                                          (hide
                                                                           2)
                                                                          (("1"
                                                                            (typepred
                                                                             "pum")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "1")
                                                                              (("1"
                                                                                (expand
                                                                                 "strictly_increasing?")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "0"
                                                                                   "1")
                                                                                  (("1"
                                                                                    (ground)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide 2)
                                                                      (("2"
                                                                        (hide
                                                                         -1)
                                                                        (("2"
                                                                          (typepred
                                                                           "pum")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "0")
                                                                            (("2"
                                                                              (reveal
                                                                               "PQname")
                                                                              (("2"
                                                                                (typepred
                                                                                 "PQ")
                                                                                (("2"
                                                                                  (expand
                                                                                   "strictly_increasing?")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "0"
                                                                                     "pum(0)")
                                                                                    (("2"
                                                                                      (ground)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((partition_union_map const-decl
     "{pm: [below(P`length) -> below(partition_union(a, b)(P, Q)`length)] |
   FORALL (ii: below(P`length)):
     P`seq(ii) = partition_union(a, b)(P, Q)`seq(pm(ii))}" rs_partition nil)
    (partition_union_map_inv const-decl
     "{pm: [below(partition_union(a, b)(P, Q)`length) -> below(P`length)] |
   FORALL (jj: below(partition_union(a, b)(P, Q)`length)):
     P`seq(pm(jj)) <= partition_union(a, b)(P, Q)`seq(jj) AND
      (pm(jj) < P`length - 1 IMPLIES
        partition_union(a, b)(P, Q)`seq(jj) < P`seq(pm(jj) + 1))}"
     rs_partition nil)
    (sigma def-decl "real" sigma reals)
    (default const-decl "T" fseqs structures)
    (partition_union_map_increasing formula-decl nil rs_partition nil)
    (partition_union_map_inv_def formula-decl nil rs_partition nil)
    (T_low type-eq-decl nil sigma reals) (T_high type-eq-decl nil sigma reals)
    (sigma_scal formula-decl nil sigma reals)
    (strictly_sort const-decl "{ss: fseq |
   strictly_increasing?(ss) AND
    (FORALL (x: T): member(x, s) IFF member(x, ss))}" sort_fseq structures)
    (partition_strictly_sort_union formula-decl nil rs_partition nil)
    (partition_union_sym formula-decl nil rs_partition nil)
    (partition_strictly_sort formula-decl nil rs_partition nil)
    (increasing? const-decl "bool" real_fun_preds reals)
    (barray type-eq-decl nil fseqs structures)
    (fseq type-eq-decl nil fseqs structures)
    (increasing? const-decl "bool" sort_fseq structures)
    (partition type-eq-decl nil rs_partition nil)
    (strictly_increasing? const-decl "bool" sort_fseq structures)
    (member const-decl "bool" fseqs structures)
    (partition_union const-decl "{PQ: partition(a, b) |
   (FORALL (x: T): member(x, PQ) IFF (member(x, P) OR member(x, Q))) AND
    strictly_increasing?(PQ)}" rs_partition nil))
   nil)
  (Rie_sum_diff_extend_union-7 nil 3494857417
   (""
    (case "FORALL (a, b:T, f, g: [T->real]):
                                                                                                                                                    a < b IMPLIES
                                                                                                                                                     LET CI = LAMBDA (x:T): a <= x AND x <= b IN
                                                                                                                                                       (increasing?[(CI)](restrict[T, ((CI)), T](g)) IMPLIES
                                                                                                                                                         (FORALL (P, Q: partition(a, b)): (strictly_increasing?(P) AND strictly_increasing?(Q)) IMPLIES
                                                                                                                                                            LET PQ:
                                                                                                                                                                  {PQ: partition(a, b) |
                                                                                                                                                                           (FORALL (x:T):
                                                                                                                                                                              member(x, PQ) IFF
                                                                                                                                                                               (member(x, P) OR member(x, Q)))
                                                                                                                                                                            AND strictly_increasing?(PQ)}
                                                                                                                                                                  = partition_union(a, b)(P, Q)
                                                                                                                                                              IN
                                                                                                                                                              FORALL (xispq: xis?(a, b, PQ), xis: xis?(a, b, P)):
                                                                                                                                                                EXISTS (xis2: xis?(a, b, P)):
                                                                                                                                                                  abs(Rie_sum(a, b, g, P, xis, f) -
                                                                                                                                                                       Rie_sum(a, b, g, PQ, xispq, f))
                                                                                                                                                                   <=
                                                                                                                                                                   abs(Rie_sum(a, b, g, P, xis, f) -
                                                                                                                                                                        Rie_sum(a, b, g, P, xis2, f))))")
    (("1" (skeep)
      (("1" (assert)
        (("1" (flatten)
          (("1" (skeep)
            (("1" (inst - "a" "b" "f" "g")
              (("1" (assert)
                (("1"
                  (case "partition_union(a,b)(P,Q) = partition_union(a, b)(strictly_sort(P), strictly_sort(Q))")
                  (("1" (assert)
                    (("1" (inst - "strictly_sort(P)" "strictly_sort(Q)")
                      (("1" (assert)
                        (("1" (skeep)
                          (("1" (lemma "Riemann_sum_strictly_sort")
                            (("1" (inst - "a" "b" "f" "g")
                              (("1" (assert)
                                (("1"
                                  (inst - "P" "Rie_sum(a, b, g, P, xis, f)")
                                  (("1" (flatten)
                                    (("1" (hide -2)
                                      (("1"
                                        (split -)
                                        (("1"
                                          (skolem -1 "xissp")
                                          (("1"
                                            (inst - "xispq" "xissp")
                                            (("1"
                                              (skolem - "xis2sp")
                                              (("1"
                                                (lemma
                                                 "Riemann_sum_strictly_sort")
                                                (("1"
                                                  (inst - "a" "b" "f" "g")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (inst
                                                       -
                                                       "P"
                                                       "Rie_sum(a, b, g, strictly_sort(P), xis2sp, f)")
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (split -)
                                                            (("1"
                                                              (skolem
                                                               -1
                                                               "xis2")
                                                              (("1"
                                                                (inst
                                                                 +
                                                                 "xis2")
                                                                (("1"
                                                                  (assert)
                                                                  nil)))))
                                                             ("2"
                                                              (case
                                                               "partition_union(a,b)(P,Q) = partition_union(a, b)(strictly_sort(P), strictly_sort(Q))")
                                                              (("1"
                                                                (inst
                                                                 +
                                                                 "xis2sp")
                                                                nil)
                                                               ("2"
                                                                (propax)
                                                                nil)))))))))))))))))))
                                             ("2"
                                              (assert)
                                              (("2"
                                                (skeep)
                                                (("2"
                                                  (replace -2 :dir rl)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (typepred "xispq")
                                                      (("2"
                                                        (inst - "ii")
                                                        nil)))))))))))))))
                                         ("2"
                                          (inst + "xis")
                                          nil)))))))))))))))))))))))
                   ("2" (hide 2)
                    (("2" (lemma "partition_strictly_sort_union")
                      (("2" (inst - "a" "b")
                        (("2" (assert)
                          (("2" (inst-cp - "P" "Q")
                            (("2" (inst - "Q" "strictly_sort(P)")
                              (("2" (lemma "partition_union_sym")
                                (("2" (inst - "a" "b")
                                  (("2" (assert)
                                    (("2" (inst-cp - "strictly_sort(P)" "Q")
                                      (("2"
                                        (inst
                                         -
                                         "strictly_sort(P)"
                                         "strictly_sort(Q)")
                                        (("2"
                                          (assert)
                                          nil)))))))))))))))))))))))
                   ("3" (lemma "partition_strictly_sort")
                    (("3" (inst - "a" "b")
                      (("3" (assert) (("3" (inst - "Q") nil)))))))
                   ("4" (lemma "partition_strictly_sort")
                    (("4" (inst - "a" "b")
                      (("4" (assert)
                        (("4" (inst - "P") nil)))))))))))))))))))))
     ("2" (hide 2)
      (("2"
        (case "FORALL (a, b:T, f, g: [T->real]):
                                                                                                                                                                          a < b IMPLIES
                                                                                                                                                                           LET CI = LAMBDA (x:T): a <= x AND x <= b IN
                                                                                                                                                                             (increasing?[(CI)](restrict[T, ((CI)), T](g)) IMPLIES
                                                                                                                                                                               (FORALL (P, Q: partition(a, b)):
                                                                                                                                                                                  (strictly_increasing?(P) AND strictly_increasing?(Q))
                                                                                                                                                                                   IMPLIES
                                                                                                                                                                                   LET PQ:
                                                                                                                                                                                         {PQ: partition(a, b) |
                                                                                                                                                                                                  (FORALL (x:T):
                                                                                                                                                                                                     member(x, PQ) IFF
                                                                                                                                                                                                      (member(x, P) OR member(x, Q)))
                                                                                                                                                                                                   AND strictly_increasing?(PQ)}
                                                                                                                                                                                         = partition_union(a, b)(P, Q)
                                                                                                                                                                                     IN
                                                                                                                                                                                     FORALL (xispq: xis?(a, b, PQ), xis: xis?(a, b, P)):Rie_sum(a, b, g, P, xis, f) >=
                                                                                                                                                                                              Rie_sum(a, b, g, PQ, xispq, f) IMPLIES
                                                                                                                                                                                       EXISTS (xis2: xis?(a, b, P)):
                                                                                                                                                                                              Rie_sum(a, b, g, PQ, xispq, f) >=
                                                                                                                                                                                               Rie_sum(a, b, g, P, xis2, f)))")
        (("1" (skeep)
          (("1" (assert)
            (("1" (flatten)
              (("1" (skeep)
                (("1" (skeep)
                  (("1"
                    (case "Rie_sum(a, b, g, P, xis, f) >=
                                                                                                                                                                                                                   Rie_sum(a, b, g, partition_union(a, b)(P, Q), xispq, f)")
                    (("1" (inst - "a" "b" "f" "g")
                      (("1" (assert)
                        (("1" (inst - "P" "Q")
                          (("1" (assert)
                            (("1" (inst - "xispq" "xis")
                              (("1" (assert)
                                (("1" (skosimp*)
                                  (("1" (inst + "xis2!1")
                                    (("1" (expand "abs")
                                      (("1"
                                        (lift-if)
                                        (("1"
                                          (ground)
                                          nil)))))))))))))))))))))
                     ("2" (inst - "a" "b" "(LAMBDA x: -f(x))" "g")
                      (("2" (assert)
                        (("2" (inst - "P" "Q")
                          (("2" (assert)
                            (("2" (inst - "xispq" "xis")
                              (("2"
                                (case "FORALL (ZZ:partition(a,b),xizz:xis?(a,b,ZZ)): Rie_sum(a,b,g,ZZ,xizz,(LAMBDA x:-f(x))) = -Rie_sum(a,b,g,ZZ,xizz,f)")
                                (("1" (split -)
                                  (("1" (skeep -)
                                    (("1" (inst + "xis2")
                                      (("1"
                                        (inst-cp - "P" "xis")
                                        (("1"
                                          (inst-cp
                                           -
                                           "partition_union(a,b)(P,Q)"
                                           "xispq")
                                          (("1"
                                            (inst - "P" "xis2")
                                            (("1"
                                              (expand "abs")
                                              (("1"
                                                (lift-if)
                                                (("1"
                                                  (ground)
                                                  nil)))))))))))))))
                                   ("2" (inst-cp - "P" "xis")
                                    (("2"
                                      (inst-cp
                                       -
                                       "partition_union(a,b)(P,Q)"
                                       "xispq")
                                      (("2" (assert) nil)))))))
                                 ("2" (hide-all-but 1)
                                  (("2" (skeep)
                                    (("2" (expand "Rie_sum")
                                      (("2"
                                        (lemma
                                         "sigma_scal[below(ZZ`length-1)]")
                                        (("2"
                                          (inst
                                           -
                                           "LAMBDA (n: below(ZZ`length - 1)):
                                                                                                                                                                                                 g(ZZ`seq(1 + n)) * f(xizz`seq(n)) -
                                                                                                                                                                                                  g(ZZ`seq(n)) * f(xizz`seq(n))"
                                           "-1"
                                           "ZZ`length-2"
                                           "0")
                                          (("2"
                                            (assert)
                                            nil)))))))))))))))))))))))))))))))))))
         ("2" (hide 2)
          (("2" (skeep)
            (("2" (assert)
              (("2" (flatten)
                (("2" (label "altb" -1)
                  (("2" (label "ginc" -2)
                    (("2" (skeep)
                      (("2" (label "Pinc" -3)
                        (("2" (label "Qinc" -4)
                          (("2" (skeep)
                            (("2" (label "RSge" -5)
                              (("2" (name "PQ" "partition_union(a,b)(P,Q)")
                                (("2" (label "PQname" -1)
                                  (("2" (replace "PQname")
                                    (("2"
                                      (name
                                       "pum"
                                       "partition_union_map(a,b,P,Q)")
                                      (("2"
                                        (label "pumname" -1)
                                        (("2"
                                          (name
                                           "sig"
                                           "partition_union_map_inv(a,b,P,Q)")
                                          (("2"
                                            (label "signame" -1)
                                            (("2"
                                              (case
                                               "sig(0) = 0 AND pum(0) = 0")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (label "sig0" -1)
                                                  (("1"
                                                    (label "pum0" -2)
                                                    (("1"
                                                      (case
                                                       "FORALL (ii:below(P`length-1)): EXISTS (jj:below(PQ`length-1)): (pum(ii)<=jj AND jj<pum(ii+1) AND (FORALL (zz:below(PQ`length-1)): pum(ii)<=zz AND zz<pum(ii+1) IMPLIES f(xispq`seq(zz)) >= f(xispq`seq(jj))))")
                                                      (("1"
                                                        (name
                                                         "xis2"
                                                         "(# length := P`length-1, seq := (LAMBDA (ii:nat): IF ii<P`length-1 THEN LET jj = choose({jj:below(PQ`length-1) | (pum(ii) <= jj AND
                                                                                                                                                 jj < pum(ii + 1) AND
                                                                                                                                                  (FORALL (zz: below(PQ`length - 1)):
                                                                                                                                                     pum(ii) <= zz AND zz < pum(ii + 1) IMPLIES
                                                                                                                                                      f(xispq`seq(zz)) >= f(xispq`seq(jj))))}) IN xispq`seq(jj) ELSE default[T] ENDIF) #)")
                                                        (("1"
                                                          (stop-rewrite
                                                           "xis_lem")
                                                          (("1"
                                                            (inst + "xis2")
                                                            (("1"
                                                              (hide -1)
                                                              (("1"
                                                                (lemma
                                                                 "Rie_sum_extend_union")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "a"
                                                                   "b"
                                                                   "f"
                                                                   "g")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "P"
                                                                       "Q")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "xis2")
                                                                          (("1"
                                                                            (replace
                                                                             -1
                                                                             +)
                                                                            (("1"
                                                                              (hide
                                                                               -1)
                                                                              (("1"
                                                                                (expand
                                                                                 "Rie_sum"
                                                                                 +)
                                                                                (("1"
                                                                                  (case
                                                                                   "FORALL (nn:nat): nn<= PQ`length-2 IMPLIES sigma[below(PQ`length - 1)]
                                                                                                                                                                                                                       (0, nn,
                                                                                                                                                                                                                        LAMBDA (n: below(PQ`length - 1)):
                                                                                                                                                                                                                          f(xispq`seq(n)) * g(PQ`seq(1 + n)) -
                                                                                                                                                                                                                           f(xispq`seq(n)) * g(PQ`seq(n)))
                                                                                                                                                                                                                    >=
                                                                                                                                                                                                                    sigma[below(partition_union(a, b)(P, Q)`length - 1)]
                                                                                                                                                                                                                        (0, nn,
                                                                                                                                                                                                                         LAMBDA (n: below(partition_union(a, b)(P, Q)`length - 1)):
                                                                                                                                                                                                                           f(xis2`seq(partition_union_map_inv(a, b, P, Q)(n))) *
                                                                                                                                                                                                                            g(partition_union(a, b)(P, Q)`seq(1 + n))
                                                                                                                                                                                                                            -
                                                                                                                                                                                                                            f(xis2`seq(partition_union_map_inv(a, b, P, Q)(n))) *
                                                                                                                                                                                                                             g(partition_union(a, b)(P, Q)`seq(n)))")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "PQ`length-2")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil)))
                                                                                   ("2"
                                                                                    (hide
                                                                                     2)
                                                                                    (("2"
                                                                                      (induct
                                                                                       "nn")
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "sigma"
                                                                                           +)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "sigma"
                                                                                             +)
                                                                                            (("1"
                                                                                              (replace
                                                                                               "signame")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 "PQname")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "xis2"
                                                                                                   +)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (name
                                                                                                       "rr"
                                                                                                       "choose({jj: below(PQ`length - 1) |
                                                                                                                                                                                                                                                 jj < pum(1 + sig(0)) AND
                                                                                                                                                                                                                                                  (FORALL (zz: below(PQ`length - 1)):
                                                                                                                                                                                                                                                     zz < pum(1 + sig(0)) IMPLIES
                                                                                                                                                                                                                                                      f(xispq`seq(zz)) >= f(xispq`seq(jj)))})")
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (typepred
                                                                                                           "rr")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "0")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "g(PQ`seq(1)) >= g(PQ`seq(0))")
                                                                                                                (("1"
                                                                                                                  (mult-by
                                                                                                                   -4
                                                                                                                   "g(PQ`seq(1))-g(PQ`seq(0))")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil)))
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "increasing?"
                                                                                                                     "ginc")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       "ginc"
                                                                                                                       "PQ`seq(0)"
                                                                                                                       "PQ`seq(1)")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "restrict")
                                                                                                                          (("1"
                                                                                                                            (typepred
                                                                                                                             "PQ")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "increasing?")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "0"
                                                                                                                                 "1")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil)))))))))))
                                                                                                                       ("2"
                                                                                                                        (typepred
                                                                                                                         "PQ")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "1")
                                                                                                                          nil)))))))))))))))))))
                                                                                                       ("2"
                                                                                                        (hide
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "nonempty?")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "empty?")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -3
                                                                                                               "sig(0)")
                                                                                                              (("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "jj!1")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "member")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil)))))))))))))))))))))))))))))))
                                                                                       ("2"
                                                                                        (skeep)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "sigma"
                                                                                             +)
                                                                                            (("2"
                                                                                              (case
                                                                                               "f(xispq`seq(1 + j)) * g(PQ`seq(2 + j))
                                                                                                                                                                                                                               - f(xispq`seq(1 + j)) * g(PQ`seq(1 + j))>=f(xis2`seq(partition_union_map_inv(a, b, P, Q)(1 + j))) *
                                                                                                                                                                                                                                 g(partition_union(a, b)(P, Q)`seq(2 + j))
                                                                                                                                                                                                                                -
                                                                                                                                                                                                                                f(xis2`seq(partition_union_map_inv(a, b, P, Q)(1 + j))) *
                                                                                                                                                                                                                                 g(partition_union(a, b)(P, Q)`seq(1 + j))")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     "PQname")
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       "signame")
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "sig(1 + j) < P`length - 1")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "xis2"
                                                                                                           +)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (name
                                                                                                               "rr"
                                                                                                               "choose({jj: below(PQ`length - 1) |
                                                                                                                                                                                                                                                                                 (pum(sig(1 + j)) <= jj AND
                                                                                                                                                                                                                                                                                   jj < pum(1 + sig(1 + j)) AND
                                                                                                                                                                                                                                                                                    (FORALL (zz: below(PQ`length - 1)):
                                                                                                                                                                                                                                                                                       pum(sig(1 + j)) <= zz AND
                                                                                                                                                                                                                                                                                        zz < pum(1 + sig(1 + j))
                                                                                                                                                                                                                                                                                        IMPLIES
                                                                                                                                                                                                                                                                                        f(xispq`seq(zz)) >= f(xispq`seq(jj))))})")
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (typepred
                                                                                                                   "rr")
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "g(PQ`seq(2+j))>=g(PQ`seq(1+j))")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "1+j")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (split
                                                                                                                           -)
                                                                                                                          (("1"
                                                                                                                            (mult-by
                                                                                                                             -1
                                                                                                                             "g(PQ`seq(2+j))-g(PQ`seq(1+j))")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil)))
                                                                                                                           ("2"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("2"
                                                                                                                              (typepred
                                                                                                                               "pum")
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "sig(1+j)")
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "P`seq(sig(1+j)) <= PQ`seq(1+j)")
                                                                                                                                  (("1"
                                                                                                                                    (typepred
                                                                                                                                     "PQ")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "strictly_increasing?")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "1+j"
                                                                                                                                         "pum(sig(1+j))")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (ground)
                                                                                                                                            nil)))))))))
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (typepred
                                                                                                                                       "sig")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "1+j")
                                                                                                                                        (("2"
                                                                                                                                          (ground)
                                                                                                                                          nil)))))))))))))))
                                                                                                                           ("3"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("3"
                                                                                                                              (typepred
                                                                                                                               "pum")
                                                                                                                              (("3"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "1+sig(1+j)")
                                                                                                                                (("3"
                                                                                                                                  (case
                                                                                                                                   "P`seq(1+sig(1+j)) > PQ`seq(1+j)")
                                                                                                                                  (("1"
                                                                                                                                    (typepred
                                                                                                                                     "PQ")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "strictly_increasing?")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "pum(1+sig(1+j))"
                                                                                                                                         "1+j")
                                                                                                                                        (("1"
                                                                                                                                          (ground)
                                                                                                                                          nil)))))))
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (typepred
                                                                                                                                       "sig")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "1+j")
                                                                                                                                        (("2"
                                                                                                                                          (ground)
                                                                                                                                          nil)))))))))))))))))))))
                                                                                                                     ("2"
                                                                                                                      (hide
                                                                                                                       2)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "increasing?"
                                                                                                                         "ginc")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           "ginc"
                                                                                                                           "PQ`seq(1+j)"
                                                                                                                           "PQ`seq(2+j)")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "restrict")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (typepred
                                                                                                                                 "PQ")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "increasing?")
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "1+j"
                                                                                                                                     "2+j")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil)))))))))))
                                                                                                                           ("2"
                                                                                                                            (typepred
                                                                                                                             "PQ")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "2+j")
                                                                                                                              nil)))
                                                                                                                           ("3"
                                                                                                                            (typepred
                                                                                                                             "PQ")
                                                                                                                            (("3"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "1+j")
                                                                                                                              nil)))))))))))))))
                                                                                                               ("2"
                                                                                                                (hide
                                                                                                                 2)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "nonempty?")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "empty?")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -4
                                                                                                                       "sig(1+j)")
                                                                                                                      (("2"
                                                                                                                        (skosimp*)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "jj!1")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "member")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil)))))))))))))))))))))
                                                                                                         ("2"
                                                                                                          (hide
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (case
                                                                                                             "sig(1+j) = P`length-1")
                                                                                                            (("1"
                                                                                                              (typepred
                                                                                                               "sig")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "1+j")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (typepred
                                                                                                                     "PQ")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "strictly_increasing?")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "1+j"
                                                                                                                         "PQ`length-1")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (ground)
                                                                                                                            nil)))))))))))))))
                                                                                                             ("2"
                                                                                                              (assert)
                                                                                                              nil)))))))))))))))))))))))
                                                                                       ("3"
                                                                                        (hide
                                                                                         2)
                                                                                        (("3"
                                                                                          (skosimp*)
                                                                                          (("3"
                                                                                            (assert)
                                                                                            nil)))))
                                                                                       ("4"
                                                                                        (hide
                                                                                         3)
                                                                                        (("4"
                                                                                          (skosimp*)
                                                                                          (("4"
                                                                                            (assert)
                                                                                            nil)))))
                                                                                       ("5"
                                                                                        (hide
                                                                                         2)
                                                                                        (("5"
                                                                                          (skosimp*)
                                                                                          (("5"
                                                                                            (assert)
                                                                                            nil)))))
                                                                                       ("6"
                                                                                        (hide
                                                                                         3)
                                                                                        (("6"
                                                                                          (skosimp*)
                                                                                          (("6"
                                                                                            (assert)
                                                                                            nil)))))))))
                                                                                   ("3"
                                                                                    (hide
                                                                                     2)
                                                                                    (("3"
                                                                                      (skosimp*)
                                                                                      (("3"
                                                                                        (assert)
                                                                                        nil)))))
                                                                                   ("4"
                                                                                    (hide
                                                                                     2)
                                                                                    (("4"
                                                                                      (skosimp*)
                                                                                      (("4"
                                                                                        (assert)
                                                                                        nil)))))))))))))
                                                                           ("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (expand
                                                                                 "xis2")
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil)))))))))))))
                                                                     ("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (hide
                                                                         -1)
                                                                        (("2"
                                                                          (skosimp*)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (ground)
                                                                              nil)))))))))))))))))
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (hide -1)
                                                                (("2"
                                                                  (label
                                                                   "exlem"
                                                                   -1)
                                                                  (("2"
                                                                    (hide -1)
                                                                    (("2"
                                                                      (split)
                                                                      (("1"
                                                                        (skosimp*)
                                                                        (("1"
                                                                          (expand
                                                                           "xis2"
                                                                           +)
                                                                          (("1"
                                                                            (lift-if)
                                                                            (("1"
                                                                              (ground)
                                                                              nil)))))))
                                                                       ("2"
                                                                        (skosimp*)
                                                                        (("2"
                                                                          (expand
                                                                           "xis2")
                                                                          (("2"
                                                                            (name
                                                                             "rr"
                                                                             "choose({jj: below(PQ`length - 1) |
                                                                                                                                                                                              (pum(ii!1) <= jj AND
                                                                                                                                                                                                jj < pum(1 + ii!1) AND
                                                                                                                                                                                                 (FORALL (zz: below(PQ`length - 1)):
                                                                                                                                                                                                    pum(ii!1) <= zz AND zz < pum(1 + ii!1) IMPLIES
                                                                                                                                                                                                     f(xispq`seq(zz)) >= f(xispq`seq(jj))))})")
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (typepred
                                                                                 "rr")
                                                                                (("1"
                                                                                  (typepred
                                                                                   "xispq")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "rr")
                                                                                    (("1"
                                                                                      (replace
                                                                                       "PQname")
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (case
                                                                                           "PQ`seq(rr) >= P`seq(ii!1) AND PQ`seq(1+rr) <= P`seq(1+ii!1)")
                                                                                          (("1"
                                                                                            (ground)
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("2"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (typepred
                                                                                                       "pum")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "ii!1")
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           "PQname")
                                                                                                          (("1"
                                                                                                            (typepred
                                                                                                             "PQ")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "increasing?")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "pum(ii!1)"
                                                                                                                 "rr")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil)))))))))))))
                                                                                                     ("2"
                                                                                                      (typepred
                                                                                                       "pum")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "1+ii!1")
                                                                                                        (("2"
                                                                                                          (typepred
                                                                                                           "PQ")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "increasing?")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "1+rr"
                                                                                                               "pum(1+ii!1)")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil)))))))))))))))))))))))))))
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil)))))))))
                                                                             ("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (expand
                                                                                 "nonempty?")
                                                                                (("2"
                                                                                  (expand
                                                                                   "empty?")
                                                                                  (("2"
                                                                                    (reveal
                                                                                     "exlem")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "ii!1")
                                                                                      (("2"
                                                                                        (skosimp*)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -4
                                                                                           "jj!1")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "member")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil)))))))))))))))))))))))))))))))))))))
                                                         ("2"
                                                          (hide 2)
                                                          (("2"
                                                            (skosimp*)
                                                            (("2"
                                                              (expand
                                                               "nonempty?")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "ii!1")
                                                                (("2"
                                                                  (skosimp*)
                                                                  (("2"
                                                                    (expand
                                                                     "empty?")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "jj!1")
                                                                      (("2"
                                                                        (expand
                                                                         "member")
                                                                        (("2"
                                                                          (stop-rewrite
                                                                           "xis_lem")
                                                                          (("2"
                                                                            (replace
                                                                             -2)
                                                                            (("2"
                                                                              (replace
                                                                               -3)
                                                                              (("2"
                                                                                (replace
                                                                                 -4)
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil)))))))))))))))))))))))))
                                                         ("3"
                                                          (hide 2)
                                                          (("3"
                                                            (skosimp*)
                                                            (("3"
                                                              (assert)
                                                              nil)))))
                                                         ("4"
                                                          (hide 2)
                                                          (("4"
                                                            (skosimp*)
                                                            (("4"
                                                              (assert)
                                                              nil)))))
                                                         ("5"
                                                          (skosimp*)
                                                          (("5"
                                                            (assert)
                                                            nil)))
                                                         ("6"
                                                          (skosimp*)
                                                          (("6"
                                                            (assert)
                                                            nil)))))
                                                       ("2"
                                                        (hide 2)
                                                        (("2"
                                                          (skeep)
                                                          (("2"
                                                            (typepred "ii")
                                                            (("2"
                                                              (label
                                                               "iitp"
                                                               -1)
                                                              (("2"
                                                                (case
                                                                 "FORALL (qq:below(PQ`length-1)): pum(ii)<=qq AND qq<pum(ii+1) IMPLIES (EXISTS (jj:below(PQ`length-1)): (pum(ii)<=jj AND jj<=qq AND (FORALL (zz:below(PQ`length-1)): pum(ii)<=zz AND zz<=qq IMPLIES f(xispq`seq(zz)) >= f(xispq`seq(jj)))))")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "pum(ii+1)-1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (split
                                                                       -)
                                                                      (("1"
                                                                        (skosimp*)
                                                                        (("1"
                                                                          (inst
                                                                           +
                                                                           "jj!1")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (skosimp*)
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "zz!1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil)))))))))))
                                                                       ("2"
                                                                        (hide
                                                                         2)
                                                                        (("2"
                                                                          (lemma
                                                                           "partition_union_map_increasing")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "a"
                                                                             "b")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "P"
                                                                                 "Q"
                                                                                 "ii"
                                                                                 "1+ii")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil)))))))))))))))
                                                                   ("2"
                                                                    (hide 2)
                                                                    (("2"
                                                                      (typepred
                                                                       "pum(1+ii)")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (lemma
                                                                           "partition_union_map_increasing")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "a"
                                                                             "b")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "P"
                                                                                 "Q"
                                                                                 "0"
                                                                                 "1+ii")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil)))))))))))))))))
                                                                 ("2"
                                                                  (hide 2)
                                                                  (("2"
                                                                    (induct
                                                                     "qq")
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (inst
                                                                         +
                                                                         "0")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (skosimp*)
                                                                            (("1"
                                                                              (assert)
                                                                              nil)))))
                                                                         ("2"
                                                                          (assert)
                                                                          nil)))))
                                                                     ("2"
                                                                      (skolem
                                                                       1
                                                                       "rr")
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (label
                                                                           "iirr1"
                                                                           -3)
                                                                          (("2"
                                                                            (label
                                                                             "rr1ii1"
                                                                             -4)
                                                                            (("2"
                                                                              (label
                                                                               "rrlt"
                                                                               -1)
                                                                              (("2"
                                                                                (case
                                                                                 "pum(ii) <= rr AND rr < pum(ii + 1)")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (label
                                                                                       "iirr"
                                                                                       -1)
                                                                                      (("1"
                                                                                        (label
                                                                                         "rrii1"
                                                                                         -2)
                                                                                        (("1"
                                                                                          (skosimp*)
                                                                                          (("1"
                                                                                            (label
                                                                                             "iijj"
                                                                                             -4)
                                                                                            (("1"
                                                                                              (label
                                                                                               "jjrr"
                                                                                               -5)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "f(xispq`seq(rr+1)) < f(xispq`seq(jj!1))")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "rr+1")
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     "iirr1")
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil)))
                                                                                                       ("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "zz!1")
                                                                                                          (("2"
                                                                                                            (ground)
                                                                                                            nil)))))))))
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    nil)))
                                                                                                 ("2"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "jj!1")
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     "iijj")
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -6)
                                                                                                        (("1"
                                                                                                          (ground)
                                                                                                          nil)))
                                                                                                       ("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "zz!1")
                                                                                                          (("2"
                                                                                                            (ground)
                                                                                                            nil)))))))))))))))))))))))))))
                                                                                 ("2"
                                                                                  (case
                                                                                   "pum(ii) = rr+1")
                                                                                  (("1"
                                                                                    (inst
                                                                                     +
                                                                                     "rr+1")
                                                                                    (("1"
                                                                                      (hide-all-but
                                                                                       (-1
                                                                                        +))
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (skosimp*)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil)))))))
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil)))
                                                                                   ("2"
                                                                                    (hide
                                                                                     3)
                                                                                    (("2"
                                                                                      (hide
                                                                                       -2)
                                                                                      (("2"
                                                                                        (ground)
                                                                                        nil)))))))))))))))))))
                                                                     ("3"
                                                                      (hide-all-but
                                                                       1)
                                                                      (("3"
                                                                        (ground)
                                                                        nil)))))))))))))))))))))))))
                                               ("2"
                                                (hide-all-but
                                                 (1
                                                  "pumname"
                                                  "signame"
                                                  "altb"
                                                  "Pinc"))
                                                (("2"
                                                  (lemma
                                                   "partition_union_map_inv_def")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (inst - "a" "b")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (inst - "P" "Q")
                                                          (("2"
                                                            (inst - "0" "0")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (replace
                                                                 "pumname")
                                                                (("1"
                                                                  (replace
                                                                   "signame")
                                                                  (("1"
                                                                    (case
                                                                     "pum(0) = 0")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (ground)
                                                                        (("1"
                                                                          (hide
                                                                           2)
                                                                          (("1"
                                                                            (typepred
                                                                             "pum")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "1")
                                                                              (("1"
                                                                                (expand
                                                                                 "strictly_increasing?")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "0"
                                                                                   "1")
                                                                                  (("1"
                                                                                    (ground)
                                                                                    nil)))))))))))))))
                                                                     ("2"
                                                                      (hide 2)
                                                                      (("2"
                                                                        (hide
                                                                         -1)
                                                                        (("2"
                                                                          (typepred
                                                                           "pum")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "0")
                                                                            (("2"
                                                                              (reveal
                                                                               "PQname")
                                                                              (("2"
                                                                                (typepred
                                                                                 "PQ")
                                                                                (("2"
                                                                                  (expand
                                                                                   "strictly_increasing?")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "0"
                                                                                     "pum(0)")
                                                                                    (("2"
                                                                                      (ground)
                                                                                      nil)))))))))))))))))))))))))
                                                             ("2"
                                                              (assert)
                                                              nil)))))))))))))))
                                               ("3"
                                                (assert)
                                                nil))))))))))))))))))))))))))))))))))))))))))))
    nil)
   nil nil)
  (Rie_sum_diff_extend_union-6 nil 3494857312
   (";;; Proof Rie_sum_diff_extend_union-5 for formula integral_def.Rie_sum_diff_extend_union"
    (case "FORALL (a, b:T, f, g: [T->real]):
                                                                                                                                             a < b IMPLIES
                                                                                                                                              LET CI = LAMBDA (x:T): a <= x AND x <= b IN
                                                                                                                                                (increasing?[(CI)](restrict[T, ((CI)), T](g)) IMPLIES
                                                                                                                                                  (FORALL (P, Q: partition(a, b)): (strictly_increasing?(P) AND strictly_increasing?(Q)) IMPLIES
                                                                                                                                                     LET PQ:
                                                                                                                                                           {PQ: partition(a, b) |
                                                                                                                                                                    (FORALL (x:T):
                                                                                                                                                                       member(x, PQ) IFF
                                                                                                                                                                        (member(x, P) OR member(x, Q)))
                                                                                                                                                                     AND strictly_increasing?(PQ)}
                                                                                                                                                           = partition_union(a, b)(P, Q)
                                                                                                                                                       IN
                                                                                                                                                       FORALL (xispq: xis?(a, b, PQ), xis: xis?(a, b, P)):
                                                                                                                                                         EXISTS (xis2: xis?(a, b, P)):
                                                                                                                                                           abs(Rie_sum(a, b, g, P, xis, f) -
                                                                                                                                                                Rie_sum(a, b, g, PQ, xispq, f))
                                                                                                                                                            <=
                                                                                                                                                            abs(Rie_sum(a, b, g, P, xis, f) -
                                                                                                                                                                 Rie_sum(a, b, g, P, xis2, f))))")
    (("1" (skeep)
      (("1" (assert)
        (("1" (flatten)
          (("1" (skeep)
            (("1" (inst - "a" "b" "f" "g")
              (("1" (assert)
                (("1"
                  (case "partition_union(a,b)(P,Q) = partition_union(a, b)(strictly_sort(P), strictly_sort(Q))")
                  (("1" (assert)
                    (("1" (inst - "strictly_sort(P)" "strictly_sort(Q)")
                      (("1" (assert)
                        (("1" (skeep)
                          (("1" (lemma "Riemann_sum_strictly_sort")
                            (("1" (inst - "a" "b" "f" "g")
                              (("1" (assert)
                                (("1"
                                  (inst - "P" "Rie_sum(a, b, g, P, xis, f)")
                                  (("1" (flatten)
                                    (("1" (hide -2)
                                      (("1"
                                        (split -)
                                        (("1"
                                          (skolem -1 "xissp")
                                          (("1"
                                            (inst - "xispq" "xissp")
                                            (("1"
                                              (skolem - "xis2sp")
                                              (("1"
                                                (lemma
                                                 "Riemann_sum_strictly_sort")
                                                (("1"
                                                  (inst - "a" "b" "f" "g")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (inst
                                                       -
                                                       "P"
                                                       "Rie_sum(a, b, g, strictly_sort(P), xis2sp, f)")
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (split -)
                                                            (("1"
                                                              (skolem
                                                               -1
                                                               "xis2")
                                                              (("1"
                                                                (inst
                                                                 +
                                                                 "xis2")
                                                                (("1"
                                                                  (assert)
                                                                  nil)))))
                                                             ("2"
                                                              (case
                                                               "partition_union(a,b)(P,Q) = partition_union(a, b)(strictly_sort(P), strictly_sort(Q))")
                                                              (("1"
                                                                (inst
                                                                 +
                                                                 "xis2sp")
                                                                nil)
                                                               ("2"
                                                                (propax)
                                                                nil)))))))))))))))))))
                                             ("2"
                                              (assert)
                                              (("2"
                                                (skeep)
                                                (("2"
                                                  (replace -2 :dir rl)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (typepred "xispq")
                                                      (("2"
                                                        (inst - "ii")
                                                        nil)))))))))))))))
                                         ("2"
                                          (inst + "xis")
                                          nil)))))))))))))))))))))))
                   ("2" (hide 2)
                    (("2" (lemma "partition_strictly_sort_union")
                      (("2" (inst - "a" "b")
                        (("2" (assert)
                          (("2" (inst-cp - "P" "Q")
                            (("2" (inst - "Q" "strictly_sort(P)")
                              (("2" (lemma "partition_union_sym")
                                (("2" (inst - "a" "b")
                                  (("2" (assert)
                                    (("2" (inst-cp - "strictly_sort(P)" "Q")
                                      (("2"
                                        (inst
                                         -
                                         "strictly_sort(P)"
                                         "strictly_sort(Q)")
                                        (("2"
                                          (assert)
                                          nil)))))))))))))))))))))))
                   ("3" (lemma "partition_strictly_sort")
                    (("3" (inst - "a" "b")
                      (("3" (assert) (("3" (inst - "Q") nil)))))))
                   ("4" (lemma "partition_strictly_sort")
                    (("4" (inst - "a" "b")
                      (("4" (assert)
                        (("4" (inst - "P") nil)))))))))))))))))))))
     ("2" (hide 2)
      (("2"
        (case "FORALL (a, b:T, f, g: [T->real]):
                                                                                                                                                                 a < b IMPLIES
                                                                                                                                                                  LET CI = LAMBDA (x:T): a <= x AND x <= b IN
                                                                                                                                                                    (increasing?[(CI)](restrict[T, ((CI)), T](g)) IMPLIES
                                                                                                                                                                      (FORALL (P, Q: partition(a, b)):
                                                                                                                                                                         (strictly_increasing?(P) AND strictly_increasing?(Q))
                                                                                                                                                                          IMPLIES
                                                                                                                                                                          LET PQ:
                                                                                                                                                                                {PQ: partition(a, b) |
                                                                                                                                                                                         (FORALL (x:T):
                                                                                                                                                                                            member(x, PQ) IFF
                                                                                                                                                                                             (member(x, P) OR member(x, Q)))
                                                                                                                                                                                          AND strictly_increasing?(PQ)}
                                                                                                                                                                                = partition_union(a, b)(P, Q)
                                                                                                                                                                            IN
                                                                                                                                                                            FORALL (xispq: xis?(a, b, PQ), xis: xis?(a, b, P)):Rie_sum(a, b, g, P, xis, f) >=
                                                                                                                                                                                     Rie_sum(a, b, g, PQ, xispq, f) IMPLIES
                                                                                                                                                                              EXISTS (xis2: xis?(a, b, P)):
                                                                                                                                                                                     Rie_sum(a, b, g, PQ, xispq, f) >=
                                                                                                                                                                                      Rie_sum(a, b, g, P, xis2, f)))")
        (("1" (skeep)
          (("1" (assert)
            (("1" (flatten)
              (("1" (skeep)
                (("1" (skeep)
                  (("1"
                    (case "Rie_sum(a, b, g, P, xis, f) >=
                                                                                                                                                                                                        Rie_sum(a, b, g, partition_union(a, b)(P, Q), xispq, f)")
                    (("1" (inst - "a" "b" "f" "g")
                      (("1" (assert)
                        (("1" (inst - "P" "Q")
                          (("1" (assert)
                            (("1" (inst - "xispq" "xis")
                              (("1" (assert)
                                (("1" (skosimp*)
                                  (("1" (inst + "xis2!1")
                                    (("1" (expand "abs")
                                      (("1"
                                        (lift-if)
                                        (("1"
                                          (ground)
                                          nil)))))))))))))))))))))
                     ("2" (inst - "a" "b" "(LAMBDA x: -f(x))" "g")
                      (("2" (assert)
                        (("2" (inst - "P" "Q")
                          (("2" (assert)
                            (("2" (inst - "xispq" "xis")
                              (("2"
                                (case "FORALL (ZZ:partition(a,b),xizz:xis?(a,b,ZZ)): Rie_sum(a,b,g,ZZ,xizz,(LAMBDA x:-f(x))) = -Rie_sum(a,b,g,ZZ,xizz,f)")
                                (("1" (split -)
                                  (("1" (skeep -)
                                    (("1" (inst + "xis2")
                                      (("1"
                                        (inst-cp - "P" "xis")
                                        (("1"
                                          (inst-cp
                                           -
                                           "partition_union(a,b)(P,Q)"
                                           "xispq")
                                          (("1"
                                            (inst - "P" "xis2")
                                            (("1"
                                              (expand "abs")
                                              (("1"
                                                (lift-if)
                                                (("1"
                                                  (ground)
                                                  nil)))))))))))))))
                                   ("2" (inst-cp - "P" "xis")
                                    (("2"
                                      (inst-cp
                                       -
                                       "partition_union(a,b)(P,Q)"
                                       "xispq")
                                      (("2" (assert) nil)))))))
                                 ("2" (hide-all-but 1)
                                  (("2" (skeep)
                                    (("2" (expand "Rie_sum")
                                      (("2"
                                        (lemma
                                         "sigma_scal[below(ZZ`length-1)]")
                                        (("2"
                                          (inst
                                           -
                                           "LAMBDA (n: below(ZZ`length - 1)):
                                                                                                                                                                                       g(ZZ`seq(1 + n)) * f(xizz`seq(n)) -
                                                                                                                                                                                        g(ZZ`seq(n)) * f(xizz`seq(n))"
                                           "-1"
                                           "ZZ`length-2"
                                           "0")
                                          (("2"
                                            (assert)
                                            nil)))))))))))))))))))))))))))))))))))
         ("2" (hide 2)
          (("2" (skeep)
            (("2" (assert)
              (("2" (flatten)
                (("2" (label "altb" -1)
                  (("2" (label "ginc" -2)
                    (("2" (skeep)
                      (("2" (label "Pinc" -3)
                        (("2" (label "Qinc" -4)
                          (("2" (skeep)
                            (("2" (label "RSge" -5)
                              (("2" (name "PQ" "partition_union(a,b)(P,Q)")
                                (("2" (label "PQname" -1)
                                  (("2" (replace "PQname")
                                    (("2"
                                      (name
                                       "pum"
                                       "partition_union_map(a,b,P,Q)")
                                      (("2"
                                        (label "pumname" -1)
                                        (("2"
                                          (name
                                           "sig"
                                           "partition_union_map_inv(a,b,P,Q)")
                                          (("2"
                                            (label "signame" -1)
                                            (("2"
                                              (case
                                               "sig(0) = 0 AND pum(0) = 0")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (label "sig0" -1)
                                                  (("1"
                                                    (label "pum0" -2)
                                                    (("1"
                                                      (case
                                                       "FORALL (ii:below(P`length-1)): EXISTS (jj:below(PQ`length-1)): (pum(ii)<=jj AND jj<pum(ii+1) AND (FORALL (zz:below(PQ`length-1)): pum(ii)<=zz AND zz<pum(ii+1) IMPLIES f(xispq`seq(zz)) >= f(xispq`seq(jj))))")
                                                      (("1"
                                                        (name
                                                         "xis2"
                                                         "(# length := P`length-1, seq := (LAMBDA (ii:nat): IF ii<P`length-1 THEN LET jj = choose({jj:below(PQ`length-1) | (pum(ii) <= jj AND
                                                                                                                                  jj < pum(ii + 1) AND
                                                                                                                                   (FORALL (zz: below(PQ`length - 1)):
                                                                                                                                      pum(ii) <= zz AND zz < pum(ii + 1) IMPLIES
                                                                                                                                       f(xispq`seq(zz)) >= f(xispq`seq(jj))))}) IN xispq`seq(jj) ELSE default[T] ENDIF) #)")
                                                        (("1"
                                                          (stop-rewrite
                                                           "xis_lem")
                                                          (("1"
                                                            (inst + "xis2")
                                                            (("1"
                                                              (hide -1)
                                                              (("1"
                                                                (lemma
                                                                 "Rie_sum_extend_union")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "a"
                                                                   "b"
                                                                   "f"
                                                                   "g")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "P"
                                                                       "Q")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "xis2")
                                                                          (("1"
                                                                            (replace
                                                                             -1
                                                                             +)
                                                                            (("1"
                                                                              (hide
                                                                               -1)
                                                                              (("1"
                                                                                (expand
                                                                                 "Rie_sum"
                                                                                 +)
                                                                                (("1"
                                                                                  (case
                                                                                   "FORALL (nn:nat): nn<= PQ`length-2 IMPLIES sigma[below(PQ`length - 1)]
                                                                                                                                                                                                (0, nn,
                                                                                                                                                                                                 LAMBDA (n: below(PQ`length - 1)):
                                                                                                                                                                                                   f(xispq`seq(n)) * g(PQ`seq(1 + n)) -
                                                                                                                                                                                                    f(xispq`seq(n)) * g(PQ`seq(n)))
                                                                                                                                                                                             >=
                                                                                                                                                                                             sigma[below(partition_union(a, b)(P, Q)`length - 1)]
                                                                                                                                                                                                 (0, nn,
                                                                                                                                                                                                  LAMBDA (n: below(partition_union(a, b)(P, Q)`length - 1)):
                                                                                                                                                                                                    f(xis2`seq(partition_union_map_inv(a, b, P, Q)(n))) *
                                                                                                                                                                                                     g(partition_union(a, b)(P, Q)`seq(1 + n))
                                                                                                                                                                                                     -
                                                                                                                                                                                                     f(xis2`seq(partition_union_map_inv(a, b, P, Q)(n))) *
                                                                                                                                                                                                      g(partition_union(a, b)(P, Q)`seq(n)))")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "PQ`length-2")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil)))
                                                                                   ("2"
                                                                                    (hide
                                                                                     2)
                                                                                    (("2"
                                                                                      (induct
                                                                                       "nn")
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "sigma"
                                                                                           +)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "sigma"
                                                                                             +)
                                                                                            (("1"
                                                                                              (replace
                                                                                               "signame")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 "PQname")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "xis2"
                                                                                                   +)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (name
                                                                                                       "rr"
                                                                                                       "choose({jj: below(PQ`length - 1) |
                                                                                                                                                                                                                      jj < pum(1 + sig(0)) AND
                                                                                                                                                                                                                       (FORALL (zz: below(PQ`length - 1)):
                                                                                                                                                                                                                          zz < pum(1 + sig(0)) IMPLIES
                                                                                                                                                                                                                           f(xispq`seq(zz)) >= f(xispq`seq(jj)))})")
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (typepred
                                                                                                           "rr")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "0")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "g(PQ`seq(1)) >= g(PQ`seq(0))")
                                                                                                                (("1"
                                                                                                                  (mult-by
                                                                                                                   -4
                                                                                                                   "g(PQ`seq(1))-g(PQ`seq(0))")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil)))
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "increasing?"
                                                                                                                     "ginc")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       "ginc"
                                                                                                                       "PQ`seq(0)"
                                                                                                                       "PQ`seq(1)")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "restrict")
                                                                                                                          (("1"
                                                                                                                            (typepred
                                                                                                                             "PQ")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "increasing?")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "0"
                                                                                                                                 "1")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil)))))))))))
                                                                                                                       ("2"
                                                                                                                        (typepred
                                                                                                                         "PQ")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "1")
                                                                                                                          nil)))))))))))))))))))
                                                                                                       ("2"
                                                                                                        (hide
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "nonempty?")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "empty?")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -3
                                                                                                               "sig(0)")
                                                                                                              (("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "jj!1")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "member")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil)))))))))))))))))))))))))))))))
                                                                                       ("2"
                                                                                        (skeep)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "sigma"
                                                                                             +)
                                                                                            (("2"
                                                                                              (case
                                                                                               "f(xispq`seq(1 + j)) * g(PQ`seq(2 + j))
                                                                                                                                                                                                    - f(xispq`seq(1 + j)) * g(PQ`seq(1 + j))>=f(xis2`seq(partition_union_map_inv(a, b, P, Q)(1 + j))) *
                                                                                                                                                                                                      g(partition_union(a, b)(P, Q)`seq(2 + j))
                                                                                                                                                                                                     -
                                                                                                                                                                                                     f(xis2`seq(partition_union_map_inv(a, b, P, Q)(1 + j))) *
                                                                                                                                                                                                      g(partition_union(a, b)(P, Q)`seq(1 + j))")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     "PQname")
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       "signame")
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "sig(1 + j) < P`length - 1")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "xis2"
                                                                                                           +)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (name
                                                                                                               "rr"
                                                                                                               "choose({jj: below(PQ`length - 1) |
                                                                                                                                                                                                                                                  (pum(sig(1 + j)) <= jj AND
                                                                                                                                                                                                                                                    jj < pum(1 + sig(1 + j)) AND
                                                                                                                                                                                                                                                     (FORALL (zz: below(PQ`length - 1)):
                                                                                                                                                                                                                                                        pum(sig(1 + j)) <= zz AND
                                                                                                                                                                                                                                                         zz < pum(1 + sig(1 + j))
                                                                                                                                                                                                                                                         IMPLIES
                                                                                                                                                                                                                                                         f(xispq`seq(zz)) >= f(xispq`seq(jj))))})")
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (typepred
                                                                                                                   "rr")
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "g(PQ`seq(2+j))>=g(PQ`seq(1+j))")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "1+j")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (split
                                                                                                                           -)
                                                                                                                          (("1"
                                                                                                                            (mult-by
                                                                                                                             -1
                                                                                                                             "g(PQ`seq(2+j))-g(PQ`seq(1+j))")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil)))
                                                                                                                           ("2"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("2"
                                                                                                                              (typepred
                                                                                                                               "pum")
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "sig(1+j)")
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "P`seq(sig(1+j)) <= PQ`seq(1+j)")
                                                                                                                                  (("1"
                                                                                                                                    (typepred
                                                                                                                                     "PQ")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "strictly_increasing?")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "1+j"
                                                                                                                                         "pum(sig(1+j))")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (ground)
                                                                                                                                            nil)))))))))
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (typepred
                                                                                                                                       "sig")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "1+j")
                                                                                                                                        (("2"
                                                                                                                                          (ground)
                                                                                                                                          nil)))))))))))))))
                                                                                                                           ("3"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("3"
                                                                                                                              (typepred
                                                                                                                               "pum")
                                                                                                                              (("3"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "1+sig(1+j)")
                                                                                                                                (("3"
                                                                                                                                  (case
                                                                                                                                   "P`seq(1+sig(1+j)) > PQ`seq(1+j)")
                                                                                                                                  (("1"
                                                                                                                                    (typepred
                                                                                                                                     "PQ")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "strictly_increasing?")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "pum(1+sig(1+j))"
                                                                                                                                         "1+j")
                                                                                                                                        (("1"
                                                                                                                                          (ground)
                                                                                                                                          nil)))))))
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (typepred
                                                                                                                                       "sig")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "1+j")
                                                                                                                                        (("2"
                                                                                                                                          (ground)
                                                                                                                                          nil)))))))))))))))))))))
                                                                                                                     ("2"
                                                                                                                      (hide
                                                                                                                       2)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "increasing?"
                                                                                                                         "ginc")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           "ginc"
                                                                                                                           "PQ`seq(1+j)"
                                                                                                                           "PQ`seq(2+j)")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "restrict")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (typepred
                                                                                                                                 "PQ")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "increasing?")
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "1+j"
                                                                                                                                     "2+j")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil)))))))))))
                                                                                                                           ("2"
                                                                                                                            (typepred
                                                                                                                             "PQ")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "2+j")
                                                                                                                              nil)))
                                                                                                                           ("3"
                                                                                                                            (typepred
                                                                                                                             "PQ")
                                                                                                                            (("3"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "1+j")
                                                                                                                              nil)))))))))))))))
                                                                                                               ("2"
                                                                                                                (hide
                                                                                                                 2)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "nonempty?")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "empty?")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -4
                                                                                                                       "sig(1+j)")
                                                                                                                      (("2"
                                                                                                                        (skosimp*)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "jj!1")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "member")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil)))))))))))))))))))))
                                                                                                         ("2"
                                                                                                          (hide
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (case
                                                                                                             "sig(1+j) = P`length-1")
                                                                                                            (("1"
                                                                                                              (typepred
                                                                                                               "sig")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "1+j")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (typepred
                                                                                                                     "PQ")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "strictly_increasing?")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "1+j"
                                                                                                                         "PQ`length-1")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (ground)
                                                                                                                            nil)))))))))))))))
                                                                                                             ("2"
                                                                                                              (assert)
                                                                                                              nil)))))))))))))))))))))))
                                                                                       ("3"
                                                                                        (hide
                                                                                         2)
                                                                                        (("3"
                                                                                          (skosimp*)
                                                                                          (("3"
                                                                                            (assert)
                                                                                            nil)))))
                                                                                       ("4"
                                                                                        (hide
                                                                                         3)
                                                                                        (("4"
                                                                                          (skosimp*)
                                                                                          (("4"
                                                                                            (assert)
                                                                                            nil)))))
                                                                                       ("5"
                                                                                        (hide
                                                                                         2)
                                                                                        (("5"
                                                                                          (skosimp*)
                                                                                          (("5"
                                                                                            (assert)
                                                                                            nil)))))
                                                                                       ("6"
                                                                                        (hide
                                                                                         3)
                                                                                        (("6"
                                                                                          (skosimp*)
                                                                                          (("6"
                                                                                            (assert)
                                                                                            nil)))))))))
                                                                                   ("3"
                                                                                    (hide
                                                                                     2)
                                                                                    (("3"
                                                                                      (skosimp*)
                                                                                      (("3"
                                                                                        (assert)
                                                                                        nil)))))
                                                                                   ("4"
                                                                                    (hide
                                                                                     2)
                                                                                    (("4"
                                                                                      (skosimp*)
                                                                                      (("4"
                                                                                        (assert)
                                                                                        nil)))))))))))))
                                                                           ("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (expand
                                                                                 "xis2")
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil)))))))))))))
                                                                     ("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (hide
                                                                         -1)
                                                                        (("2"
                                                                          (skosimp*)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (ground)
                                                                              nil)))))))))))))))))
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (hide -1)
                                                                (("2"
                                                                  (label
                                                                   "exlem"
                                                                   -1)
                                                                  (("2"
                                                                    (hide -1)
                                                                    (("2"
                                                                      (split)
                                                                      (("1"
                                                                        (skosimp*)
                                                                        (("1"
                                                                          (expand
                                                                           "xis2"
                                                                           +)
                                                                          (("1"
                                                                            (lift-if)
                                                                            (("1"
                                                                              (ground)
                                                                              nil)))))))
                                                                       ("2"
                                                                        (skosimp*)
                                                                        (("2"
                                                                          (expand
                                                                           "xis2")
                                                                          (("2"
                                                                            (name
                                                                             "rr"
                                                                             "choose({jj: below(PQ`length - 1) |
                                                                                                                                                                         (pum(ii!1) <= jj AND
                                                                                                                                                                           jj < pum(1 + ii!1) AND
                                                                                                                                                                            (FORALL (zz: below(PQ`length - 1)):
                                                                                                                                                                               pum(ii!1) <= zz AND zz < pum(1 + ii!1) IMPLIES
                                                                                                                                                                                f(xispq`seq(zz)) >= f(xispq`seq(jj))))})")
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (typepred
                                                                                 "rr")
                                                                                (("1"
                                                                                  (typepred
                                                                                   "xispq")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "rr")
                                                                                    (("1"
                                                                                      (replace
                                                                                       "PQname")
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (case
                                                                                           "PQ`seq(rr) >= P`seq(ii!1) AND PQ`seq(1+rr) <= P`seq(1+ii!1)")
                                                                                          (("1"
                                                                                            (ground)
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("2"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (typepred
                                                                                                       "pum")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "ii!1")
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           "PQname")
                                                                                                          (("1"
                                                                                                            (typepred
                                                                                                             "PQ")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "increasing?")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "pum(ii!1)"
                                                                                                                 "rr")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil)))))))))))))
                                                                                                     ("2"
                                                                                                      (typepred
                                                                                                       "pum")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "1+ii!1")
                                                                                                        (("2"
                                                                                                          (typepred
                                                                                                           "PQ")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "increasing?")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "1+rr"
                                                                                                               "pum(1+ii!1)")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil)))))))))))))))))))))))))))
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil)))))))))
                                                                             ("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (expand
                                                                                 "nonempty?")
                                                                                (("2"
                                                                                  (expand
                                                                                   "empty?")
                                                                                  (("2"
                                                                                    (reveal
                                                                                     "exlem")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "ii!1")
                                                                                      (("2"
                                                                                        (skosimp*)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -4
                                                                                           "jj!1")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "member")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil)))))))))))))))))))))))))))))))))))))
                                                         ("2"
                                                          (hide 2)
                                                          (("2"
                                                            (skosimp*)
                                                            (("2"
                                                              (expand
                                                               "nonempty?")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "ii!1")
                                                                (("2"
                                                                  (skosimp*)
                                                                  (("2"
                                                                    (expand
                                                                     "empty?")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "jj!1")
                                                                      (("2"
                                                                        (expand
                                                                         "member")
                                                                        (("2"
                                                                          (stop-rewrite
                                                                           "xis_lem")
                                                                          (("2"
                                                                            (replace
                                                                             -2)
                                                                            (("2"
                                                                              (replace
                                                                               -3)
                                                                              (("2"
                                                                                (replace
                                                                                 -4)
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil)))))))))))))))))))))))))
                                                         ("3"
                                                          (hide 2)
                                                          (("3"
                                                            (skosimp*)
                                                            (("3"
                                                              (assert)
                                                              nil)))))
                                                         ("4"
                                                          (hide 2)
                                                          (("4"
                                                            (skosimp*)
                                                            (("4"
                                                              (assert)
                                                              nil)))))
                                                         ("5"
                                                          (skosimp*)
                                                          (("5"
                                                            (assert)
                                                            nil)))
                                                         ("6"
                                                          (skosimp*)
                                                          (("6"
                                                            (assert)
                                                            nil)))))
                                                       ("2"
                                                        (hide 2)
                                                        (("2"
                                                          (skeep)
                                                          (("2"
                                                            (typepred "ii")
                                                            (("2"
                                                              (label
                                                               "iitp"
                                                               -1)
                                                              (("2"
                                                                (case
                                                                 "FORALL (qq:below(PQ`length-1)): pum(ii)<=qq AND qq<pum(ii+1) IMPLIES (EXISTS (jj:below(PQ`length-1)): (pum(ii)<=jj AND jj<=qq AND (FORALL (zz:below(PQ`length-1)): pum(ii)<=zz AND zz<=qq IMPLIES f(xispq`seq(zz)) >= f(xispq`seq(jj)))))")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "pum(ii+1)-1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (split
                                                                       -)
                                                                      (("1"
                                                                        (skosimp*)
                                                                        (("1"
                                                                          (inst
                                                                           +
                                                                           "jj!1")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (skosimp*)
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "zz!1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil)))))))))))
                                                                       ("2"
                                                                        (hide
                                                                         2)
                                                                        (("2"
                                                                          (lemma
                                                                           "partition_union_map_increasing")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "a"
                                                                             "b")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "P"
                                                                                 "Q"
                                                                                 "ii"
                                                                                 "1+ii")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil)))))))))))))))
                                                                   ("2"
                                                                    (hide 2)
                                                                    (("2"
                                                                      (typepred
                                                                       "pum(1+ii)")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (lemma
                                                                           "partition_union_map_increasing")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "a"
                                                                             "b")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "P"
                                                                                 "Q"
                                                                                 "0"
                                                                                 "1+ii")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil)))))))))))))))))
                                                                 ("2"
                                                                  (hide 2)
                                                                  (("2"
                                                                    (induct
                                                                     "qq")
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (inst
                                                                         +
                                                                         "0")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (skosimp*)
                                                                            (("1"
                                                                              (assert)
                                                                              nil)))))
                                                                         ("2"
                                                                          (assert)
                                                                          nil)))))
                                                                     ("2"
                                                                      (skolem
                                                                       1
                                                                       "rr")
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (label
                                                                           "iirr1"
                                                                           -3)
                                                                          (("2"
                                                                            (label
                                                                             "rr1ii1"
                                                                             -4)
                                                                            (("2"
                                                                              (label
                                                                               "rrlt"
                                                                               -1)
                                                                              (("2"
                                                                                (case
                                                                                 "pum(ii) <= rr AND rr < pum(ii + 1)")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (label
                                                                                       "iirr"
                                                                                       -1)
                                                                                      (("1"
                                                                                        (label
                                                                                         "rrii1"
                                                                                         -2)
                                                                                        (("1"
                                                                                          (skosimp*)
                                                                                          (("1"
                                                                                            (label
                                                                                             "iijj"
                                                                                             -4)
                                                                                            (("1"
                                                                                              (label
                                                                                               "jjrr"
                                                                                               -5)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "f(xispq`seq(rr+1)) < f(xispq`seq(jj!1))")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "rr+1")
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     "iirr1")
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil)))
                                                                                                       ("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "zz!1")
                                                                                                          (("2"
                                                                                                            (ground)
                                                                                                            nil)))))))))
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    nil)))
                                                                                                 ("2"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "jj!1")
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     "iijj")
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -6)
                                                                                                        (("1"
                                                                                                          (ground)
                                                                                                          nil)))
                                                                                                       ("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "zz!1")
                                                                                                          (("2"
                                                                                                            (ground)
                                                                                                            nil)))))))))))))))))))))))))))
                                                                                 ("2"
                                                                                  (case
                                                                                   "pum(ii) = rr+1")
                                                                                  (("1"
                                                                                    (inst
                                                                                     +
                                                                                     "rr+1")
                                                                                    (("1"
                                                                                      (hide-all-but
                                                                                       (-1
                                                                                        +))
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (skosimp*)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil)))))))
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil)))
                                                                                   ("2"
                                                                                    (hide
                                                                                     3)
                                                                                    (("2"
                                                                                      (hide
                                                                                       -2)
                                                                                      (("2"
                                                                                        (ground)
                                                                                        nil)))))))))))))))))))
                                                                     ("3"
                                                                      (hide-all-but
                                                                       1)
                                                                      (("3"
                                                                        (ground)
                                                                        nil)))))))))))))))))))))))))
                                               ("2"
                                                (hide-all-but
                                                 (1
                                                  "pumname"
                                                  "signame"
                                                  "altb"
                                                  "Pinc"))
                                                (("2"
                                                  (lemma
                                                   "partition_union_map_inv_def")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (inst - "a" "b")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (inst - "P" "Q")
                                                          (("2"
                                                            (inst - "0" "0")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (replace
                                                                 "pumname")
                                                                (("1"
                                                                  (replace
                                                                   "signame")
                                                                  (("1"
                                                                    (case
                                                                     "pum(0) = 0")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (ground)
                                                                        (("1"
                                                                          (hide
                                                                           2)
                                                                          (("1"
                                                                            (typepred
                                                                             "pum")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "1")
                                                                              (("1"
                                                                                (expand
                                                                                 "strictly_increasing?")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "0"
                                                                                   "1")
                                                                                  (("1"
                                                                                    (ground)
                                                                                    nil)))))))))))))))
                                                                     ("2"
                                                                      (hide 2)
                                                                      (("2"
                                                                        (hide
                                                                         -1)
                                                                        (("2"
                                                                          (typepred
                                                                           "pum")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "0")
                                                                            (("2"
                                                                              (reveal
                                                                               "PQname")
                                                                              (("2"
                                                                                (typepred
                                                                                 "PQ")
                                                                                (("2"
                                                                                  (expand
                                                                                   "strictly_increasing?")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "0"
                                                                                     "pum(0)")
                                                                                    (("2"
                                                                                      (ground)
                                                                                      nil)))))))))))))))))))))))))
                                                             ("2"
                                                              (assert)
                                                              nil)))))))))))))))
                                               ("3"
                                                (assert)
                                                nil))))))))))))))))))))))))))))))))))))))))))))
    ";;; developed with shostak decision procedures")
   nil nil)
  (Rie_sum_diff_extend_union-5 nil 3494856998
   (""
    (case "FORALL (a, b:T, f, g: [T->real]):
                                                                                                                                      a < b IMPLIES
                                                                                                                                       LET CI = LAMBDA (x:T): a <= x AND x <= b IN
                                                                                                                                         (increasing?[(CI)](restrict[T, ((CI)), real](g)) IMPLIES
                                                                                                                                           (FORALL (P, Q: partition(a, b)): (strictly_increasing?(P) AND strictly_increasing?(Q)) IMPLIES
                                                                                                                                              LET PQ:
                                                                                                                                                    {PQ: partition(a, b) |
                                                                                                                                                             (FORALL (x:T):
                                                                                                                                                                member(x, PQ) IFF
                                                                                                                                                                 (member(x, P) OR member(x, Q)))
                                                                                                                                                              AND strictly_increasing?(PQ)}
                                                                                                                                                    = partition_union(a, b)(P, Q)
                                                                                                                                                IN
                                                                                                                                                FORALL (xispq: xis?(a, b, PQ), xis: xis?(a, b, P)):
                                                                                                                                                  EXISTS (xis2: xis?(a, b, P)):
                                                                                                                                                    abs(Rie_sum(a, b, g, P, xis, f) -
                                                                                                                                                         Rie_sum(a, b, g, PQ, xispq, f))
                                                                                                                                                     <=
                                                                                                                                                     abs(Rie_sum(a, b, g, P, xis, f) -
                                                                                                                                                          Rie_sum(a, b, g, P, xis2, f))))")
    (("1" (skeep)
      (("1" (assert)
        (("1" (flatten)
          (("1" (skeep)
            (("1" (inst - "a" "b" "f" "g")
              (("1" (assert)
                (("1"
                  (case "partition_union(a,b)(P,Q) = partition_union(a, b)(strictly_sort(P), strictly_sort(Q))")
                  (("1" (assert)
                    (("1" (inst - "strictly_sort(P)" "strictly_sort(Q)")
                      (("1" (assert)
                        (("1" (skeep)
                          (("1" (lemma "Riemann_sum_strictly_sort")
                            (("1" (inst - "a" "b" "f" "g")
                              (("1" (assert)
                                (("1"
                                  (inst - "P" "Rie_sum(a, b, g, P, xis, f)")
                                  (("1" (flatten)
                                    (("1" (hide -2)
                                      (("1"
                                        (split -)
                                        (("1"
                                          (skolem -1 "xissp")
                                          (("1"
                                            (inst - "xispq" "xissp")
                                            (("1"
                                              (skolem - "xis2sp")
                                              (("1"
                                                (lemma
                                                 "Riemann_sum_strictly_sort")
                                                (("1"
                                                  (inst - "a" "b" "f" "g")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (inst
                                                       -
                                                       "P"
                                                       "Rie_sum(a, b, g, strictly_sort(P), xis2sp, f)")
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (split -)
                                                            (("1"
                                                              (skolem
                                                               -1
                                                               "xis2")
                                                              (("1"
                                                                (inst
                                                                 +
                                                                 "xis2")
                                                                (("1"
                                                                  (assert)
                                                                  nil)))))
                                                             ("2"
                                                              (case
                                                               "partition_union(a,b)(P,Q) = partition_union(a, b)(strictly_sort(P), strictly_sort(Q))")
                                                              (("1"
                                                                (inst
                                                                 +
                                                                 "xis2sp")
                                                                nil)
                                                               ("2"
                                                                (propax)
                                                                nil)))))))))))))))))))
                                             ("2"
                                              (assert)
                                              (("2"
                                                (skeep)
                                                (("2"
                                                  (replace -2 :dir rl)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (typepred "xispq")
                                                      (("2"
                                                        (inst - "ii")
                                                        nil)))))))))))))))
                                         ("2"
                                          (inst + "xis")
                                          nil)))))))))))))))))))))))
                   ("2" (hide 2)
                    (("2" (lemma "partition_strictly_sort_union")
                      (("2" (inst - "a" "b")
                        (("2" (assert)
                          (("2" (inst-cp - "P" "Q")
                            (("2" (inst - "Q" "strictly_sort(P)")
                              (("2" (lemma "partition_union_sym")
                                (("2" (inst - "a" "b")
                                  (("2" (assert)
                                    (("2" (inst-cp - "strictly_sort(P)" "Q")
                                      (("2"
                                        (inst
                                         -
                                         "strictly_sort(P)"
                                         "strictly_sort(Q)")
                                        (("2"
                                          (assert)
                                          nil)))))))))))))))))))))))
                   ("3" (lemma "partition_strictly_sort")
                    (("3" (inst - "a" "b")
                      (("3" (assert) (("3" (inst - "Q") nil)))))))
                   ("4" (lemma "partition_strictly_sort")
                    (("4" (inst - "a" "b")
                      (("4" (assert)
                        (("4" (inst - "P") nil)))))))))))))))))))))
     ("2" (hide 2)
      (("2"
        (case "FORALL (a, b:T, f, g: [T->real]):
                                                                                                                                                        a < b IMPLIES
                                                                                                                                                         LET CI = LAMBDA (x:T): a <= x AND x <= b IN
                                                                                                                                                           (increasing?[(CI)](restrict[T, ((CI)), T](g)) IMPLIES
                                                                                                                                                             (FORALL (P, Q: partition(a, b)):
                                                                                                                                                                (strictly_increasing?(P) AND strictly_increasing?(Q))
                                                                                                                                                                 IMPLIES
                                                                                                                                                                 LET PQ:
                                                                                                                                                                       {PQ: partition(a, b) |
                                                                                                                                                                                (FORALL (x:T):
                                                                                                                                                                                   member(x, PQ) IFF
                                                                                                                                                                                    (member(x, P) OR member(x, Q)))
                                                                                                                                                                                 AND strictly_increasing?(PQ)}
                                                                                                                                                                       = partition_union(a, b)(P, Q)
                                                                                                                                                                   IN
                                                                                                                                                                   FORALL (xispq: xis?(a, b, PQ), xis: xis?(a, b, P)):Rie_sum(a, b, g, P, xis, f) >=
                                                                                                                                                                            Rie_sum(a, b, g, PQ, xispq, f) IMPLIES
                                                                                                                                                                     EXISTS (xis2: xis?(a, b, P)):
                                                                                                                                                                            Rie_sum(a, b, g, PQ, xispq, f) >=
                                                                                                                                                                             Rie_sum(a, b, g, P, xis2, f)))")
        (("1" (skeep)
          (("1" (assert)
            (("1" (flatten)
              (("1" (skeep)
                (("1" (skeep)
                  (("1"
                    (case "Rie_sum(a, b, g, P, xis, f) >=
                                                                                                                                                                                             Rie_sum(a, b, g, partition_union(a, b)(P, Q), xispq, f)")
                    (("1" (inst - "a" "b" "f" "g")
                      (("1" (assert)
                        (("1" (inst - "P" "Q")
                          (("1" (assert)
                            (("1" (inst - "xispq" "xis")
                              (("1" (assert)
                                (("1" (skosimp*)
                                  (("1" (inst + "xis2!1")
                                    (("1" (expand "abs")
                                      (("1"
                                        (lift-if)
                                        (("1"
                                          (ground)
                                          nil)))))))))))))))))))))
                     ("2" (inst - "a" "b" "(LAMBDA x: -f(x))" "g")
                      (("2" (assert)
                        (("2" (inst - "P" "Q")
                          (("2" (assert)
                            (("2" (inst - "xispq" "xis")
                              (("2"
                                (case "FORALL (ZZ:partition(a,b),xizz:xis?(a,b,ZZ)): Rie_sum(a,b,g,ZZ,xizz,(LAMBDA x:-f(x))) = -Rie_sum(a,b,g,ZZ,xizz,f)")
                                (("1" (split -)
                                  (("1" (skeep -)
                                    (("1" (inst + "xis2")
                                      (("1"
                                        (inst-cp - "P" "xis")
                                        (("1"
                                          (inst-cp
                                           -
                                           "partition_union(a,b)(P,Q)"
                                           "xispq")
                                          (("1"
                                            (inst - "P" "xis2")
                                            (("1"
                                              (expand "abs")
                                              (("1"
                                                (lift-if)
                                                (("1"
                                                  (ground)
                                                  nil)))))))))))))))
                                   ("2" (inst-cp - "P" "xis")
                                    (("2"
                                      (inst-cp
                                       -
                                       "partition_union(a,b)(P,Q)"
                                       "xispq")
                                      (("2" (assert) nil)))))))
                                 ("2" (hide-all-but 1)
                                  (("2" (skeep)
                                    (("2" (expand "Rie_sum")
                                      (("2"
                                        (lemma
                                         "sigma_scal[below(ZZ`length-1)]")
                                        (("2"
                                          (inst
                                           -
                                           "LAMBDA (n: below(ZZ`length - 1)):
                                                                                                                                                                             g(ZZ`seq(1 + n)) * f(xizz`seq(n)) -
                                                                                                                                                                              g(ZZ`seq(n)) * f(xizz`seq(n))"
                                           "-1"
                                           "ZZ`length-2"
                                           "0")
                                          (("2"
                                            (assert)
                                            nil)))))))))))))))))))))))))))))))))))
         ("2" (hide 2)
          (("2" (skeep)
            (("2" (assert)
              (("2" (flatten)
                (("2" (label "altb" -1)
                  (("2" (label "ginc" -2)
                    (("2" (skeep)
                      (("2" (label "Pinc" -3)
                        (("2" (label "Qinc" -4)
                          (("2" (skeep)
                            (("2" (label "RSge" -5)
                              (("2" (name "PQ" "partition_union(a,b)(P,Q)")
                                (("2" (label "PQname" -1)
                                  (("2" (replace "PQname")
                                    (("2"
                                      (name
                                       "pum"
                                       "partition_union_map(a,b,P,Q)")
                                      (("2"
                                        (label "pumname" -1)
                                        (("2"
                                          (name
                                           "sig"
                                           "partition_union_map_inv(a,b,P,Q)")
                                          (("2"
                                            (label "signame" -1)
                                            (("2"
                                              (case
                                               "sig(0) = 0 AND pum(0) = 0")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (label "sig0" -1)
                                                  (("1"
                                                    (label "pum0" -2)
                                                    (("1"
                                                      (case
                                                       "FORALL (ii:below(P`length-1)): EXISTS (jj:below(PQ`length-1)): (pum(ii)<=jj AND jj<pum(ii+1) AND (FORALL (zz:below(PQ`length-1)): pum(ii)<=zz AND zz<pum(ii+1) IMPLIES f(xispq`seq(zz)) >= f(xispq`seq(jj))))")
                                                      (("1"
                                                        (name
                                                         "xis2"
                                                         "(# length := P`length-1, seq := (LAMBDA (ii:nat): IF ii<P`length-1 THEN LET jj = choose({jj:below(PQ`length-1) | (pum(ii) <= jj AND
                                                                                                                   jj < pum(ii + 1) AND
                                                                                                                    (FORALL (zz: below(PQ`length - 1)):
                                                                                                                       pum(ii) <= zz AND zz < pum(ii + 1) IMPLIES
                                                                                                                        f(xispq`seq(zz)) >= f(xispq`seq(jj))))}) IN xispq`seq(jj) ELSE default[T] ENDIF) #)")
                                                        (("1"
                                                          (stop-rewrite
                                                           "xis_lem")
                                                          (("1"
                                                            (inst + "xis2")
                                                            (("1"
                                                              (hide -1)
                                                              (("1"
                                                                (lemma
                                                                 "Rie_sum_extend_union")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "a"
                                                                   "b"
                                                                   "f"
                                                                   "g")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "P"
                                                                       "Q")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "xis2")
                                                                          (("1"
                                                                            (replace
                                                                             -1
                                                                             +)
                                                                            (("1"
                                                                              (hide
                                                                               -1)
                                                                              (("1"
                                                                                (expand
                                                                                 "Rie_sum"
                                                                                 +)
                                                                                (("1"
                                                                                  (case
                                                                                   "FORALL (nn:nat): nn<= PQ`length-2 IMPLIES sigma[below(PQ`length - 1)]
                                                                                                                                                                         (0, nn,
                                                                                                                                                                          LAMBDA (n: below(PQ`length - 1)):
                                                                                                                                                                            f(xispq`seq(n)) * g(PQ`seq(1 + n)) -
                                                                                                                                                                             f(xispq`seq(n)) * g(PQ`seq(n)))
                                                                                                                                                                      >=
                                                                                                                                                                      sigma[below(partition_union(a, b)(P, Q)`length - 1)]
                                                                                                                                                                          (0, nn,
                                                                                                                                                                           LAMBDA (n: below(partition_union(a, b)(P, Q)`length - 1)):
                                                                                                                                                                             f(xis2`seq(partition_union_map_inv(a, b, P, Q)(n))) *
                                                                                                                                                                              g(partition_union(a, b)(P, Q)`seq(1 + n))
                                                                                                                                                                              -
                                                                                                                                                                              f(xis2`seq(partition_union_map_inv(a, b, P, Q)(n))) *
                                                                                                                                                                               g(partition_union(a, b)(P, Q)`seq(n)))")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "PQ`length-2")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil)))
                                                                                   ("2"
                                                                                    (hide
                                                                                     2)
                                                                                    (("2"
                                                                                      (induct
                                                                                       "nn")
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "sigma"
                                                                                           +)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "sigma"
                                                                                             +)
                                                                                            (("1"
                                                                                              (replace
                                                                                               "signame")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 "PQname")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "xis2"
                                                                                                   +)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (name
                                                                                                       "rr"
                                                                                                       "choose({jj: below(PQ`length - 1) |
                                                                                                                                                                                           jj < pum(1 + sig(0)) AND
                                                                                                                                                                                            (FORALL (zz: below(PQ`length - 1)):
                                                                                                                                                                                               zz < pum(1 + sig(0)) IMPLIES
                                                                                                                                                                                                f(xispq`seq(zz)) >= f(xispq`seq(jj)))})")
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (typepred
                                                                                                           "rr")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "0")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "g(PQ`seq(1)) >= g(PQ`seq(0))")
                                                                                                                (("1"
                                                                                                                  (mult-by
                                                                                                                   -4
                                                                                                                   "g(PQ`seq(1))-g(PQ`seq(0))")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil)))
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "increasing?"
                                                                                                                     "ginc")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       "ginc"
                                                                                                                       "PQ`seq(0)"
                                                                                                                       "PQ`seq(1)")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "restrict")
                                                                                                                          (("1"
                                                                                                                            (typepred
                                                                                                                             "PQ")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "increasing?")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "0"
                                                                                                                                 "1")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil)))))))))))
                                                                                                                       ("2"
                                                                                                                        (typepred
                                                                                                                         "PQ")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "1")
                                                                                                                          nil)))))))))))))))))))
                                                                                                       ("2"
                                                                                                        (hide
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "nonempty?")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "empty?")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -3
                                                                                                               "sig(0)")
                                                                                                              (("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "jj!1")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "member")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil)))))))))))))))))))))))))))))))
                                                                                       ("2"
                                                                                        (skeep)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "sigma"
                                                                                             +)
                                                                                            (("2"
                                                                                              (case
                                                                                               "f(xispq`seq(1 + j)) * g(PQ`seq(2 + j))
                                                                                                                                                                         - f(xispq`seq(1 + j)) * g(PQ`seq(1 + j))>=f(xis2`seq(partition_union_map_inv(a, b, P, Q)(1 + j))) *
                                                                                                                                                                           g(partition_union(a, b)(P, Q)`seq(2 + j))
                                                                                                                                                                          -
                                                                                                                                                                          f(xis2`seq(partition_union_map_inv(a, b, P, Q)(1 + j))) *
                                                                                                                                                                           g(partition_union(a, b)(P, Q)`seq(1 + j))")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     "PQname")
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       "signame")
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "sig(1 + j) < P`length - 1")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "xis2"
                                                                                                           +)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (name
                                                                                                               "rr"
                                                                                                               "choose({jj: below(PQ`length - 1) |
                                                                                                                                                                                                                   (pum(sig(1 + j)) <= jj AND
                                                                                                                                                                                                                     jj < pum(1 + sig(1 + j)) AND
                                                                                                                                                                                                                      (FORALL (zz: below(PQ`length - 1)):
                                                                                                                                                                                                                         pum(sig(1 + j)) <= zz AND
                                                                                                                                                                                                                          zz < pum(1 + sig(1 + j))
                                                                                                                                                                                                                          IMPLIES
                                                                                                                                                                                                                          f(xispq`seq(zz)) >= f(xispq`seq(jj))))})")
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (typepred
                                                                                                                   "rr")
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "g(PQ`seq(2+j))>=g(PQ`seq(1+j))")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "1+j")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (split
                                                                                                                           -)
                                                                                                                          (("1"
                                                                                                                            (mult-by
                                                                                                                             -1
                                                                                                                             "g(PQ`seq(2+j))-g(PQ`seq(1+j))")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil)))
                                                                                                                           ("2"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("2"
                                                                                                                              (typepred
                                                                                                                               "pum")
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "sig(1+j)")
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "P`seq(sig(1+j)) <= PQ`seq(1+j)")
                                                                                                                                  (("1"
                                                                                                                                    (typepred
                                                                                                                                     "PQ")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "strictly_increasing?")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "1+j"
                                                                                                                                         "pum(sig(1+j))")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (ground)
                                                                                                                                            nil)))))))))
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (typepred
                                                                                                                                       "sig")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "1+j")
                                                                                                                                        (("2"
                                                                                                                                          (ground)
                                                                                                                                          nil)))))))))))))))
                                                                                                                           ("3"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("3"
                                                                                                                              (typepred
                                                                                                                               "pum")
                                                                                                                              (("3"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "1+sig(1+j)")
                                                                                                                                (("3"
                                                                                                                                  (case
                                                                                                                                   "P`seq(1+sig(1+j)) > PQ`seq(1+j)")
                                                                                                                                  (("1"
                                                                                                                                    (typepred
                                                                                                                                     "PQ")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "strictly_increasing?")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "pum(1+sig(1+j))"
                                                                                                                                         "1+j")
                                                                                                                                        (("1"
                                                                                                                                          (ground)
                                                                                                                                          nil)))))))
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (typepred
                                                                                                                                       "sig")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "1+j")
                                                                                                                                        (("2"
                                                                                                                                          (ground)
                                                                                                                                          nil)))))))))))))))))))))
                                                                                                                     ("2"
                                                                                                                      (hide
                                                                                                                       2)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "increasing?"
                                                                                                                         "ginc")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           "ginc"
                                                                                                                           "PQ`seq(1+j)"
                                                                                                                           "PQ`seq(2+j)")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "restrict")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (typepred
                                                                                                                                 "PQ")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "increasing?")
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "1+j"
                                                                                                                                     "2+j")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil)))))))))))
                                                                                                                           ("2"
                                                                                                                            (typepred
                                                                                                                             "PQ")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "2+j")
                                                                                                                              nil)))
                                                                                                                           ("3"
                                                                                                                            (typepred
                                                                                                                             "PQ")
                                                                                                                            (("3"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "1+j")
                                                                                                                              nil)))))))))))))))
                                                                                                               ("2"
                                                                                                                (hide
                                                                                                                 2)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "nonempty?")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "empty?")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -4
                                                                                                                       "sig(1+j)")
                                                                                                                      (("2"
                                                                                                                        (skosimp*)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "jj!1")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "member")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil)))))))))))))))))))))
                                                                                                         ("2"
                                                                                                          (hide
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (case
                                                                                                             "sig(1+j) = P`length-1")
                                                                                                            (("1"
                                                                                                              (typepred
                                                                                                               "sig")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "1+j")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (typepred
                                                                                                                     "PQ")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "strictly_increasing?")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "1+j"
                                                                                                                         "PQ`length-1")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (ground)
                                                                                                                            nil)))))))))))))))
                                                                                                             ("2"
                                                                                                              (assert)
                                                                                                              nil)))))))))))))))))))))))
                                                                                       ("3"
                                                                                        (hide
                                                                                         2)
                                                                                        (("3"
                                                                                          (skosimp*)
                                                                                          (("3"
                                                                                            (assert)
                                                                                            nil)))))
                                                                                       ("4"
                                                                                        (hide
                                                                                         3)
                                                                                        (("4"
                                                                                          (skosimp*)
                                                                                          (("4"
                                                                                            (assert)
                                                                                            nil)))))
                                                                                       ("5"
                                                                                        (hide
                                                                                         2)
                                                                                        (("5"
                                                                                          (skosimp*)
                                                                                          (("5"
                                                                                            (assert)
                                                                                            nil)))))
                                                                                       ("6"
                                                                                        (hide
                                                                                         3)
                                                                                        (("6"
                                                                                          (skosimp*)
                                                                                          (("6"
                                                                                            (assert)
                                                                                            nil)))))))))
                                                                                   ("3"
                                                                                    (hide
                                                                                     2)
                                                                                    (("3"
                                                                                      (skosimp*)
                                                                                      (("3"
                                                                                        (assert)
                                                                                        nil)))))
                                                                                   ("4"
                                                                                    (hide
                                                                                     2)
                                                                                    (("4"
                                                                                      (skosimp*)
                                                                                      (("4"
                                                                                        (assert)
                                                                                        nil)))))))))))))
                                                                           ("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (expand
                                                                                 "xis2")
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil)))))))))))))
                                                                     ("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (hide
                                                                         -1)
                                                                        (("2"
                                                                          (skosimp*)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (ground)
                                                                              nil)))))))))))))))))
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (hide -1)
                                                                (("2"
                                                                  (label
                                                                   "exlem"
                                                                   -1)
                                                                  (("2"
                                                                    (hide -1)
                                                                    (("2"
                                                                      (split)
                                                                      (("1"
                                                                        (skosimp*)
                                                                        (("1"
                                                                          (expand
                                                                           "xis2"
                                                                           +)
                                                                          (("1"
                                                                            (lift-if)
                                                                            (("1"
                                                                              (ground)
                                                                              nil)))))))
                                                                       ("2"
                                                                        (skosimp*)
                                                                        (("2"
                                                                          (expand
                                                                           "xis2")
                                                                          (("2"
                                                                            (name
                                                                             "rr"
                                                                             "choose({jj: below(PQ`length - 1) |
                                                                                                                                                    (pum(ii!1) <= jj AND
                                                                                                                                                      jj < pum(1 + ii!1) AND
                                                                                                                                                       (FORALL (zz: below(PQ`length - 1)):
                                                                                                                                                          pum(ii!1) <= zz AND zz < pum(1 + ii!1) IMPLIES
                                                                                                                                                           f(xispq`seq(zz)) >= f(xispq`seq(jj))))})")
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (typepred
                                                                                 "rr")
                                                                                (("1"
                                                                                  (typepred
                                                                                   "xispq")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "rr")
                                                                                    (("1"
                                                                                      (replace
                                                                                       "PQname")
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (case
                                                                                           "PQ`seq(rr) >= P`seq(ii!1) AND PQ`seq(1+rr) <= P`seq(1+ii!1)")
                                                                                          (("1"
                                                                                            (ground)
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("2"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (typepred
                                                                                                       "pum")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "ii!1")
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           "PQname")
                                                                                                          (("1"
                                                                                                            (typepred
                                                                                                             "PQ")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "increasing?")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "pum(ii!1)"
                                                                                                                 "rr")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil)))))))))))))
                                                                                                     ("2"
                                                                                                      (typepred
                                                                                                       "pum")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "1+ii!1")
                                                                                                        (("2"
                                                                                                          (typepred
                                                                                                           "PQ")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "increasing?")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "1+rr"
                                                                                                               "pum(1+ii!1)")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil)))))))))))))))))))))))))))
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil)))))))))
                                                                             ("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (expand
                                                                                 "nonempty?")
                                                                                (("2"
                                                                                  (expand
                                                                                   "empty?")
                                                                                  (("2"
                                                                                    (reveal
                                                                                     "exlem")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "ii!1")
                                                                                      (("2"
                                                                                        (skosimp*)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -4
                                                                                           "jj!1")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "member")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil)))))))))))))))))))))))))))))))))))))
                                                         ("2"
                                                          (hide 2)
                                                          (("2"
                                                            (skosimp*)
                                                            (("2"
                                                              (expand
                                                               "nonempty?")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "ii!1")
                                                                (("2"
                                                                  (skosimp*)
                                                                  (("2"
                                                                    (expand
                                                                     "empty?")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "jj!1")
                                                                      (("2"
                                                                        (expand
                                                                         "member")
                                                                        (("2"
                                                                          (stop-rewrite
                                                                           "xis_lem")
                                                                          (("2"
                                                                            (replace
                                                                             -2)
                                                                            (("2"
                                                                              (replace
                                                                               -3)
                                                                              (("2"
                                                                                (replace
                                                                                 -4)
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil)))))))))))))))))))))))))
                                                         ("3"
                                                          (hide 2)
                                                          (("3"
                                                            (skosimp*)
                                                            (("3"
                                                              (assert)
                                                              nil)))))
                                                         ("4"
                                                          (hide 2)
                                                          (("4"
                                                            (skosimp*)
                                                            (("4"
                                                              (assert)
                                                              nil)))))
                                                         ("5"
                                                          (skosimp*)
                                                          (("5"
                                                            (assert)
                                                            nil)))
                                                         ("6"
                                                          (skosimp*)
                                                          (("6"
                                                            (assert)
                                                            nil)))))
                                                       ("2"
                                                        (hide 2)
                                                        (("2"
                                                          (skeep)
                                                          (("2"
                                                            (typepred "ii")
                                                            (("2"
                                                              (label
                                                               "iitp"
                                                               -1)
                                                              (("2"
                                                                (case
                                                                 "FORALL (qq:below(PQ`length-1)): pum(ii)<=qq AND qq<pum(ii+1) IMPLIES (EXISTS (jj:below(PQ`length-1)): (pum(ii)<=jj AND jj<=qq AND (FORALL (zz:below(PQ`length-1)): pum(ii)<=zz AND zz<=qq IMPLIES f(xispq`seq(zz)) >= f(xispq`seq(jj)))))")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "pum(ii+1)-1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (split
                                                                       -)
                                                                      (("1"
                                                                        (skosimp*)
                                                                        (("1"
                                                                          (inst
                                                                           +
                                                                           "jj!1")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (skosimp*)
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "zz!1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil)))))))))))
                                                                       ("2"
                                                                        (hide
                                                                         2)
                                                                        (("2"
                                                                          (lemma
                                                                           "partition_union_map_increasing")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "a"
                                                                             "b")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "P"
                                                                                 "Q"
                                                                                 "ii"
                                                                                 "1+ii")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil)))))))))))))))
                                                                   ("2"
                                                                    (hide 2)
                                                                    (("2"
                                                                      (typepred
                                                                       "pum(1+ii)")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (lemma
                                                                           "partition_union_map_increasing")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "a"
                                                                             "b")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "P"
                                                                                 "Q"
                                                                                 "0"
                                                                                 "1+ii")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil)))))))))))))))))
                                                                 ("2"
                                                                  (hide 2)
                                                                  (("2"
                                                                    (induct
                                                                     "qq")
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (inst
                                                                         +
                                                                         "0")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (skosimp*)
                                                                            (("1"
                                                                              (assert)
                                                                              nil)))))
                                                                         ("2"
                                                                          (assert)
                                                                          nil)))))
                                                                     ("2"
                                                                      (skolem
                                                                       1
                                                                       "rr")
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (label
                                                                           "iirr1"
                                                                           -3)
                                                                          (("2"
                                                                            (label
                                                                             "rr1ii1"
                                                                             -4)
                                                                            (("2"
                                                                              (label
                                                                               "rrlt"
                                                                               -1)
                                                                              (("2"
                                                                                (case
                                                                                 "pum(ii) <= rr AND rr < pum(ii + 1)")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (label
                                                                                       "iirr"
                                                                                       -1)
                                                                                      (("1"
                                                                                        (label
                                                                                         "rrii1"
                                                                                         -2)
                                                                                        (("1"
                                                                                          (skosimp*)
                                                                                          (("1"
                                                                                            (label
                                                                                             "iijj"
                                                                                             -4)
                                                                                            (("1"
                                                                                              (label
                                                                                               "jjrr"
                                                                                               -5)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "f(xispq`seq(rr+1)) < f(xispq`seq(jj!1))")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "rr+1")
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     "iirr1")
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil)))
                                                                                                       ("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "zz!1")
                                                                                                          (("2"
                                                                                                            (ground)
                                                                                                            nil)))))))))
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    nil)))
                                                                                                 ("2"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "jj!1")
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     "iijj")
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -6)
                                                                                                        (("1"
                                                                                                          (ground)
                                                                                                          nil)))
                                                                                                       ("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "zz!1")
                                                                                                          (("2"
                                                                                                            (ground)
                                                                                                            nil)))))))))))))))))))))))))))
                                                                                 ("2"
                                                                                  (case
                                                                                   "pum(ii) = rr+1")
                                                                                  (("1"
                                                                                    (inst
                                                                                     +
                                                                                     "rr+1")
                                                                                    (("1"
                                                                                      (hide-all-but
                                                                                       (-1
                                                                                        +))
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (skosimp*)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil)))))))
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil)))
                                                                                   ("2"
                                                                                    (hide
                                                                                     3)
                                                                                    (("2"
                                                                                      (hide
                                                                                       -2)
                                                                                      (("2"
                                                                                        (ground)
                                                                                        nil)))))))))))))))))))
                                                                     ("3"
                                                                      (hide-all-but
                                                                       1)
                                                                      (("3"
                                                                        (ground)
                                                                        nil)))))))))))))))))))))))))
                                               ("2"
                                                (hide-all-but
                                                 (1
                                                  "pumname"
                                                  "signame"
                                                  "altb"
                                                  "Pinc"))
                                                (("2"
                                                  (lemma
                                                   "partition_union_map_inv_def")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (inst - "a" "b")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (inst - "P" "Q")
                                                          (("2"
                                                            (inst - "0" "0")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (replace
                                                                 "pumname")
                                                                (("1"
                                                                  (replace
                                                                   "signame")
                                                                  (("1"
                                                                    (case
                                                                     "pum(0) = 0")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (ground)
                                                                        (("1"
                                                                          (hide
                                                                           2)
                                                                          (("1"
                                                                            (typepred
                                                                             "pum")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "1")
                                                                              (("1"
                                                                                (expand
                                                                                 "strictly_increasing?")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "0"
                                                                                   "1")
                                                                                  (("1"
                                                                                    (ground)
                                                                                    nil)))))))))))))))
                                                                     ("2"
                                                                      (hide 2)
                                                                      (("2"
                                                                        (hide
                                                                         -1)
                                                                        (("2"
                                                                          (typepred
                                                                           "pum")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "0")
                                                                            (("2"
                                                                              (reveal
                                                                               "PQname")
                                                                              (("2"
                                                                                (typepred
                                                                                 "PQ")
                                                                                (("2"
                                                                                  (expand
                                                                                   "strictly_increasing?")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "0"
                                                                                     "pum(0)")
                                                                                    (("2"
                                                                                      (ground)
                                                                                      nil)))))))))))))))))))))))))
                                                             ("2"
                                                              (assert)
                                                              nil)))))))))))))))
                                               ("3"
                                                (assert)
                                                nil))))))))))))))))))))))))))))))))))))))))))))
    nil)
   nil nil)
  (Rie_sum_diff_extend_union-4 nil 3494856904
   (""
    (case "FORALL (a, b:T, f, g: [T->real]):
                                                                                                                               a < b IMPLIES
                                                                                                                                LET CI = LAMBDA (x:T): a <= x AND x <= b IN
                                                                                                                                  (increasing?[(CI)](restrict[T, ((CI)), real](g)) IMPLIES
                                                                                                                                    (FORALL (P, Q: partition(a, b)): (strictly_increasing?(P) AND strictly_increasing?(Q)) IMPLIES
                                                                                                                                       LET PQ:
                                                                                                                                             {PQ: partition(a, b) |
                                                                                                                                                      (FORALL (x:T):
                                                                                                                                                         member(x, PQ) IFF
                                                                                                                                                          (member(x, P) OR member(x, Q)))
                                                                                                                                                       AND strictly_increasing?(PQ)}
                                                                                                                                             = partition_union(a, b)(P, Q)
                                                                                                                                         IN
                                                                                                                                         FORALL (xispq: xis?(a, b, PQ), xis: xis?(a, b, P)):
                                                                                                                                           EXISTS (xis2: xis?(a, b, P)):
                                                                                                                                             abs(Rie_sum(a, b, g, P, xis, f) -
                                                                                                                                                  Rie_sum(a, b, g, PQ, xispq, f))
                                                                                                                                              <=
                                                                                                                                              abs(Rie_sum(a, b, g, P, xis, f) -
                                                                                                                                                   Rie_sum(a, b, g, P, xis2, f))))")
    (("1" (skeep)
      (("1" (assert)
        (("1" (flatten)
          (("1" (skeep)
            (("1" (inst - "a" "b" "f" "g")
              (("1" (assert)
                (("1"
                  (case "partition_union(a,b)(P,Q) = partition_union(a, b)(strictly_sort(P), strictly_sort(Q))")
                  (("1" (assert)
                    (("1" (inst - "strictly_sort(P)" "strictly_sort(Q)")
                      (("1" (assert)
                        (("1" (skeep)
                          (("1" (lemma "Riemann_sum_strictly_sort")
                            (("1" (inst - "a" "b" "f" "g")
                              (("1" (assert)
                                (("1"
                                  (inst - "P" "Rie_sum(a, b, g, P, xis, f)")
                                  (("1" (flatten)
                                    (("1" (hide -2)
                                      (("1"
                                        (split -)
                                        (("1"
                                          (skolem -1 "xissp")
                                          (("1"
                                            (inst - "xispq" "xissp")
                                            (("1"
                                              (skolem - "xis2sp")
                                              (("1"
                                                (lemma
                                                 "Riemann_sum_strictly_sort")
                                                (("1"
                                                  (inst - "a" "b" "f" "g")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (inst
                                                       -
                                                       "P"
                                                       "Rie_sum(a, b, g, strictly_sort(P), xis2sp, f)")
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (split -)
                                                            (("1"
                                                              (skolem
                                                               -1
                                                               "xis2")
                                                              (("1"
                                                                (inst
                                                                 +
                                                                 "xis2")
                                                                (("1"
                                                                  (assert)
                                                                  nil)))))
                                                             ("2"
                                                              (case
                                                               "partition_union(a,b)(P,Q) = partition_union(a, b)(strictly_sort(P), strictly_sort(Q))")
                                                              (("1"
                                                                (inst
                                                                 +
                                                                 "xis2sp")
                                                                nil)
                                                               ("2"
                                                                (propax)
                                                                nil)))))))))))))))))))
                                             ("2"
                                              (assert)
                                              (("2"
                                                (skeep)
                                                (("2"
                                                  (replace -2 :dir rl)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (typepred "xispq")
                                                      (("2"
                                                        (inst - "ii")
                                                        nil)))))))))))))))
                                         ("2"
                                          (inst + "xis")
                                          nil)))))))))))))))))))))))
                   ("2" (hide 2)
                    (("2" (lemma "partition_strictly_sort_union")
                      (("2" (inst - "a" "b")
                        (("2" (assert)
                          (("2" (inst-cp - "P" "Q")
                            (("2" (inst - "Q" "strictly_sort(P)")
                              (("2" (lemma "partition_union_sym")
                                (("2" (inst - "a" "b")
                                  (("2" (assert)
                                    (("2" (inst-cp - "strictly_sort(P)" "Q")
                                      (("2"
                                        (inst
                                         -
                                         "strictly_sort(P)"
                                         "strictly_sort(Q)")
                                        (("2"
                                          (assert)
                                          nil)))))))))))))))))))))))
                   ("3" (lemma "partition_strictly_sort")
                    (("3" (inst - "a" "b")
                      (("3" (assert) (("3" (inst - "Q") nil)))))))
                   ("4" (lemma "partition_strictly_sort")
                    (("4" (inst - "a" "b")
                      (("4" (assert)
                        (("4" (inst - "P") nil)))))))))))))))))))))
     ("2" (hide 2)
      (("2"
        (case "FORALL (a, b:T, f, g: [T->T]):
                                                                                                                                               a < b IMPLIES
                                                                                                                                                LET CI = LAMBDA (x:T): a <= x AND x <= b IN
                                                                                                                                                  (increasing?[(CI)](restrict[T, ((CI)), T](g)) IMPLIES
                                                                                                                                                    (FORALL (P, Q: partition(a, b)):
                                                                                                                                                       (strictly_increasing?(P) AND strictly_increasing?(Q))
                                                                                                                                                        IMPLIES
                                                                                                                                                        LET PQ:
                                                                                                                                                              {PQ: partition(a, b) |
                                                                                                                                                                       (FORALL (x:T):
                                                                                                                                                                          member(x, PQ) IFF
                                                                                                                                                                           (member(x, P) OR member(x, Q)))
                                                                                                                                                                        AND strictly_increasing?(PQ)}
                                                                                                                                                              = partition_union(a, b)(P, Q)
                                                                                                                                                          IN
                                                                                                                                                          FORALL (xispq: xis?(a, b, PQ), xis: xis?(a, b, P)):Rie_sum(a, b, g, P, xis, f) >=
                                                                                                                                                                   Rie_sum(a, b, g, PQ, xispq, f) IMPLIES
                                                                                                                                                            EXISTS (xis2: xis?(a, b, P)):
                                                                                                                                                                   Rie_sum(a, b, g, PQ, xispq, f) >=
                                                                                                                                                                    Rie_sum(a, b, g, P, xis2, f)))")
        (("1" (skeep)
          (("1" (assert)
            (("1" (flatten)
              (("1" (skeep)
                (("1" (skeep)
                  (("1"
                    (case "Rie_sum(a, b, g, P, xis, f) >=
                                                                                                                                                                                  Rie_sum(a, b, g, partition_union(a, b)(P, Q), xispq, f)")
                    (("1" (inst - "a" "b" "f" "g")
                      (("1" (assert)
                        (("1" (inst - "P" "Q")
                          (("1" (assert)
                            (("1" (inst - "xispq" "xis")
                              (("1" (assert)
                                (("1" (skosimp*)
                                  (("1" (inst + "xis2!1")
                                    (("1" (expand "abs")
                                      (("1"
                                        (lift-if)
                                        (("1"
                                          (ground)
                                          nil)))))))))))))))))))))
                     ("2" (inst - "a" "b" "(LAMBDA x: -f(x))" "g")
                      (("2" (assert)
                        (("2" (inst - "P" "Q")
                          (("2" (assert)
                            (("2" (inst - "xispq" "xis")
                              (("2"
                                (case "FORALL (ZZ:partition(a,b),xizz:xis?(a,b,ZZ)): Rie_sum(a,b,g,ZZ,xizz,(LAMBDA x:-f(x))) = -Rie_sum(a,b,g,ZZ,xizz,f)")
                                (("1" (split -)
                                  (("1" (skeep -)
                                    (("1" (inst + "xis2")
                                      (("1"
                                        (inst-cp - "P" "xis")
                                        (("1"
                                          (inst-cp
                                           -
                                           "partition_union(a,b)(P,Q)"
                                           "xispq")
                                          (("1"
                                            (inst - "P" "xis2")
                                            (("1"
                                              (expand "abs")
                                              (("1"
                                                (lift-if)
                                                (("1"
                                                  (ground)
                                                  nil)))))))))))))))
                                   ("2" (inst-cp - "P" "xis")
                                    (("2"
                                      (inst-cp
                                       -
                                       "partition_union(a,b)(P,Q)"
                                       "xispq")
                                      (("2" (assert) nil)))))))
                                 ("2" (hide-all-but 1)
                                  (("2" (skeep)
                                    (("2" (expand "Rie_sum")
                                      (("2"
                                        (lemma
                                         "sigma_scal[below(ZZ`length-1)]")
                                        (("2"
                                          (inst
                                           -
                                           "LAMBDA (n: below(ZZ`length - 1)):
                                                                                                                                                                   g(ZZ`seq(1 + n)) * f(xizz`seq(n)) -
                                                                                                                                                                    g(ZZ`seq(n)) * f(xizz`seq(n))"
                                           "-1"
                                           "ZZ`length-2"
                                           "0")
                                          (("2"
                                            (assert)
                                            nil)))))))))))))))))))))))))))))))))))
         ("2" (hide 2)
          (("2" (skeep)
            (("2" (assert)
              (("2" (flatten)
                (("2" (label "altb" -1)
                  (("2" (label "ginc" -2)
                    (("2" (skeep)
                      (("2" (label "Pinc" -3)
                        (("2" (label "Qinc" -4)
                          (("2" (skeep)
                            (("2" (label "RSge" -5)
                              (("2" (name "PQ" "partition_union(a,b)(P,Q)")
                                (("2" (label "PQname" -1)
                                  (("2" (replace "PQname")
                                    (("2"
                                      (name
                                       "pum"
                                       "partition_union_map(a,b,P,Q)")
                                      (("2"
                                        (label "pumname" -1)
                                        (("2"
                                          (name
                                           "sig"
                                           "partition_union_map_inv(a,b,P,Q)")
                                          (("2"
                                            (label "signame" -1)
                                            (("2"
                                              (case
                                               "sig(0) = 0 AND pum(0) = 0")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (label "sig0" -1)
                                                  (("1"
                                                    (label "pum0" -2)
                                                    (("1"
                                                      (case
                                                       "FORALL (ii:below(P`length-1)): EXISTS (jj:below(PQ`length-1)): (pum(ii)<=jj AND jj<pum(ii+1) AND (FORALL (zz:below(PQ`length-1)): pum(ii)<=zz AND zz<pum(ii+1) IMPLIES f(xispq`seq(zz)) >= f(xispq`seq(jj))))")
                                                      (("1"
                                                        (name
                                                         "xis2"
                                                         "(# length := P`length-1, seq := (LAMBDA (ii:nat): IF ii<P`length-1 THEN LET jj = choose({jj:below(PQ`length-1) | (pum(ii) <= jj AND
                                                                                                    jj < pum(ii + 1) AND
                                                                                                     (FORALL (zz: below(PQ`length - 1)):
                                                                                                        pum(ii) <= zz AND zz < pum(ii + 1) IMPLIES
                                                                                                         f(xispq`seq(zz)) >= f(xispq`seq(jj))))}) IN xispq`seq(jj) ELSE default[T] ENDIF) #)")
                                                        (("1"
                                                          (stop-rewrite
                                                           "xis_lem")
                                                          (("1"
                                                            (inst + "xis2")
                                                            (("1"
                                                              (hide -1)
                                                              (("1"
                                                                (lemma
                                                                 "Rie_sum_extend_union")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "a"
                                                                   "b"
                                                                   "f"
                                                                   "g")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "P"
                                                                       "Q")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "xis2")
                                                                          (("1"
                                                                            (replace
                                                                             -1
                                                                             +)
                                                                            (("1"
                                                                              (hide
                                                                               -1)
                                                                              (("1"
                                                                                (expand
                                                                                 "Rie_sum"
                                                                                 +)
                                                                                (("1"
                                                                                  (case
                                                                                   "FORALL (nn:nat): nn<= PQ`length-2 IMPLIES sigma[below(PQ`length - 1)]
                                                                                                                                                  (0, nn,
                                                                                                                                                   LAMBDA (n: below(PQ`length - 1)):
                                                                                                                                                     f(xispq`seq(n)) * g(PQ`seq(1 + n)) -
                                                                                                                                                      f(xispq`seq(n)) * g(PQ`seq(n)))
                                                                                                                                               >=
                                                                                                                                               sigma[below(partition_union(a, b)(P, Q)`length - 1)]
                                                                                                                                                   (0, nn,
                                                                                                                                                    LAMBDA (n: below(partition_union(a, b)(P, Q)`length - 1)):
                                                                                                                                                      f(xis2`seq(partition_union_map_inv(a, b, P, Q)(n))) *
                                                                                                                                                       g(partition_union(a, b)(P, Q)`seq(1 + n))
                                                                                                                                                       -
                                                                                                                                                       f(xis2`seq(partition_union_map_inv(a, b, P, Q)(n))) *
                                                                                                                                                        g(partition_union(a, b)(P, Q)`seq(n)))")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "PQ`length-2")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil)))
                                                                                   ("2"
                                                                                    (hide
                                                                                     2)
                                                                                    (("2"
                                                                                      (induct
                                                                                       "nn")
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "sigma"
                                                                                           +)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "sigma"
                                                                                             +)
                                                                                            (("1"
                                                                                              (replace
                                                                                               "signame")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 "PQname")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "xis2"
                                                                                                   +)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (name
                                                                                                       "rr"
                                                                                                       "choose({jj: below(PQ`length - 1) |
                                                                                                                                                                jj < pum(1 + sig(0)) AND
                                                                                                                                                                 (FORALL (zz: below(PQ`length - 1)):
                                                                                                                                                                    zz < pum(1 + sig(0)) IMPLIES
                                                                                                                                                                     f(xispq`seq(zz)) >= f(xispq`seq(jj)))})")
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (typepred
                                                                                                           "rr")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "0")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "g(PQ`seq(1)) >= g(PQ`seq(0))")
                                                                                                                (("1"
                                                                                                                  (mult-by
                                                                                                                   -4
                                                                                                                   "g(PQ`seq(1))-g(PQ`seq(0))")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil)))
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "increasing?"
                                                                                                                     "ginc")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       "ginc"
                                                                                                                       "PQ`seq(0)"
                                                                                                                       "PQ`seq(1)")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "restrict")
                                                                                                                          (("1"
                                                                                                                            (typepred
                                                                                                                             "PQ")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "increasing?")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "0"
                                                                                                                                 "1")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil)))))))))))
                                                                                                                       ("2"
                                                                                                                        (typepred
                                                                                                                         "PQ")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "1")
                                                                                                                          nil)))))))))))))))))))
                                                                                                       ("2"
                                                                                                        (hide
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "nonempty?")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "empty?")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -3
                                                                                                               "sig(0)")
                                                                                                              (("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "jj!1")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "member")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil)))))))))))))))))))))))))))))))
                                                                                       ("2"
                                                                                        (skeep)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "sigma"
                                                                                             +)
                                                                                            (("2"
                                                                                              (case
                                                                                               "f(xispq`seq(1 + j)) * g(PQ`seq(2 + j))
                                                                                                                                              - f(xispq`seq(1 + j)) * g(PQ`seq(1 + j))>=f(xis2`seq(partition_union_map_inv(a, b, P, Q)(1 + j))) *
                                                                                                                                                g(partition_union(a, b)(P, Q)`seq(2 + j))
                                                                                                                                               -
                                                                                                                                               f(xis2`seq(partition_union_map_inv(a, b, P, Q)(1 + j))) *
                                                                                                                                                g(partition_union(a, b)(P, Q)`seq(1 + j))")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     "PQname")
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       "signame")
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "sig(1 + j) < P`length - 1")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "xis2"
                                                                                                           +)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (name
                                                                                                               "rr"
                                                                                                               "choose({jj: below(PQ`length - 1) |
                                                                                                                                                                                    (pum(sig(1 + j)) <= jj AND
                                                                                                                                                                                      jj < pum(1 + sig(1 + j)) AND
                                                                                                                                                                                       (FORALL (zz: below(PQ`length - 1)):
                                                                                                                                                                                          pum(sig(1 + j)) <= zz AND
                                                                                                                                                                                           zz < pum(1 + sig(1 + j))
                                                                                                                                                                                           IMPLIES
                                                                                                                                                                                           f(xispq`seq(zz)) >= f(xispq`seq(jj))))})")
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (typepred
                                                                                                                   "rr")
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "g(PQ`seq(2+j))>=g(PQ`seq(1+j))")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "1+j")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (split
                                                                                                                           -)
                                                                                                                          (("1"
                                                                                                                            (mult-by
                                                                                                                             -1
                                                                                                                             "g(PQ`seq(2+j))-g(PQ`seq(1+j))")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil)))
                                                                                                                           ("2"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("2"
                                                                                                                              (typepred
                                                                                                                               "pum")
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "sig(1+j)")
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "P`seq(sig(1+j)) <= PQ`seq(1+j)")
                                                                                                                                  (("1"
                                                                                                                                    (typepred
                                                                                                                                     "PQ")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "strictly_increasing?")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "1+j"
                                                                                                                                         "pum(sig(1+j))")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (ground)
                                                                                                                                            nil)))))))))
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (typepred
                                                                                                                                       "sig")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "1+j")
                                                                                                                                        (("2"
                                                                                                                                          (ground)
                                                                                                                                          nil)))))))))))))))
                                                                                                                           ("3"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("3"
                                                                                                                              (typepred
                                                                                                                               "pum")
                                                                                                                              (("3"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "1+sig(1+j)")
                                                                                                                                (("3"
                                                                                                                                  (case
                                                                                                                                   "P`seq(1+sig(1+j)) > PQ`seq(1+j)")
                                                                                                                                  (("1"
                                                                                                                                    (typepred
                                                                                                                                     "PQ")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "strictly_increasing?")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "pum(1+sig(1+j))"
                                                                                                                                         "1+j")
                                                                                                                                        (("1"
                                                                                                                                          (ground)
                                                                                                                                          nil)))))))
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (typepred
                                                                                                                                       "sig")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "1+j")
                                                                                                                                        (("2"
                                                                                                                                          (ground)
                                                                                                                                          nil)))))))))))))))))))))
                                                                                                                     ("2"
                                                                                                                      (hide
                                                                                                                       2)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "increasing?"
                                                                                                                         "ginc")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           "ginc"
                                                                                                                           "PQ`seq(1+j)"
                                                                                                                           "PQ`seq(2+j)")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "restrict")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (typepred
                                                                                                                                 "PQ")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "increasing?")
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "1+j"
                                                                                                                                     "2+j")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil)))))))))))
                                                                                                                           ("2"
                                                                                                                            (typepred
                                                                                                                             "PQ")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "2+j")
                                                                                                                              nil)))
                                                                                                                           ("3"
                                                                                                                            (typepred
                                                                                                                             "PQ")
                                                                                                                            (("3"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "1+j")
                                                                                                                              nil)))))))))))))))
                                                                                                               ("2"
                                                                                                                (hide
                                                                                                                 2)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "nonempty?")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "empty?")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -4
                                                                                                                       "sig(1+j)")
                                                                                                                      (("2"
                                                                                                                        (skosimp*)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "jj!1")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "member")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil)))))))))))))))))))))
                                                                                                         ("2"
                                                                                                          (hide
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (case
                                                                                                             "sig(1+j) = P`length-1")
                                                                                                            (("1"
                                                                                                              (typepred
                                                                                                               "sig")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "1+j")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (typepred
                                                                                                                     "PQ")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "strictly_increasing?")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "1+j"
                                                                                                                         "PQ`length-1")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (ground)
                                                                                                                            nil)))))))))))))))
                                                                                                             ("2"
                                                                                                              (assert)
                                                                                                              nil)))))))))))))))))))))))
                                                                                       ("3"
                                                                                        (hide
                                                                                         2)
                                                                                        (("3"
                                                                                          (skosimp*)
                                                                                          (("3"
                                                                                            (assert)
                                                                                            nil)))))
                                                                                       ("4"
                                                                                        (hide
                                                                                         3)
                                                                                        (("4"
                                                                                          (skosimp*)
                                                                                          (("4"
                                                                                            (assert)
                                                                                            nil)))))
                                                                                       ("5"
                                                                                        (hide
                                                                                         2)
                                                                                        (("5"
                                                                                          (skosimp*)
                                                                                          (("5"
                                                                                            (assert)
                                                                                            nil)))))
                                                                                       ("6"
                                                                                        (hide
                                                                                         3)
                                                                                        (("6"
                                                                                          (skosimp*)
                                                                                          (("6"
                                                                                            (assert)
                                                                                            nil)))))))))
                                                                                   ("3"
                                                                                    (hide
                                                                                     2)
                                                                                    (("3"
                                                                                      (skosimp*)
                                                                                      (("3"
                                                                                        (assert)
                                                                                        nil)))))
                                                                                   ("4"
                                                                                    (hide
                                                                                     2)
                                                                                    (("4"
                                                                                      (skosimp*)
                                                                                      (("4"
                                                                                        (assert)
                                                                                        nil)))))))))))))
                                                                           ("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (expand
                                                                                 "xis2")
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil)))))))))))))
                                                                     ("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (hide
                                                                         -1)
                                                                        (("2"
                                                                          (skosimp*)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (ground)
                                                                              nil)))))))))))))))))
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (hide -1)
                                                                (("2"
                                                                  (label
                                                                   "exlem"
                                                                   -1)
                                                                  (("2"
                                                                    (hide -1)
                                                                    (("2"
                                                                      (split)
                                                                      (("1"
                                                                        (skosimp*)
                                                                        (("1"
                                                                          (expand
                                                                           "xis2"
                                                                           +)
                                                                          (("1"
                                                                            (lift-if)
                                                                            (("1"
                                                                              (ground)
                                                                              nil)))))))
                                                                       ("2"
                                                                        (skosimp*)
                                                                        (("2"
                                                                          (expand
                                                                           "xis2")
                                                                          (("2"
                                                                            (name
                                                                             "rr"
                                                                             "choose({jj: below(PQ`length - 1) |
                                                                                                                               (pum(ii!1) <= jj AND
                                                                                                                                 jj < pum(1 + ii!1) AND
                                                                                                                                  (FORALL (zz: below(PQ`length - 1)):
                                                                                                                                     pum(ii!1) <= zz AND zz < pum(1 + ii!1) IMPLIES
                                                                                                                                      f(xispq`seq(zz)) >= f(xispq`seq(jj))))})")
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (typepred
                                                                                 "rr")
                                                                                (("1"
                                                                                  (typepred
                                                                                   "xispq")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "rr")
                                                                                    (("1"
                                                                                      (replace
                                                                                       "PQname")
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (case
                                                                                           "PQ`seq(rr) >= P`seq(ii!1) AND PQ`seq(1+rr) <= P`seq(1+ii!1)")
                                                                                          (("1"
                                                                                            (ground)
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("2"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (typepred
                                                                                                       "pum")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "ii!1")
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           "PQname")
                                                                                                          (("1"
                                                                                                            (typepred
                                                                                                             "PQ")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "increasing?")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "pum(ii!1)"
                                                                                                                 "rr")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil)))))))))))))
                                                                                                     ("2"
                                                                                                      (typepred
                                                                                                       "pum")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "1+ii!1")
                                                                                                        (("2"
                                                                                                          (typepred
                                                                                                           "PQ")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "increasing?")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "1+rr"
                                                                                                               "pum(1+ii!1)")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil)))))))))))))))))))))))))))
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil)))))))))
                                                                             ("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (expand
                                                                                 "nonempty?")
                                                                                (("2"
                                                                                  (expand
                                                                                   "empty?")
                                                                                  (("2"
                                                                                    (reveal
                                                                                     "exlem")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "ii!1")
                                                                                      (("2"
                                                                                        (skosimp*)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -4
                                                                                           "jj!1")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "member")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil)))))))))))))))))))))))))))))))))))))
                                                         ("2"
                                                          (hide 2)
                                                          (("2"
                                                            (skosimp*)
                                                            (("2"
                                                              (expand
                                                               "nonempty?")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "ii!1")
                                                                (("2"
                                                                  (skosimp*)
                                                                  (("2"
                                                                    (expand
                                                                     "empty?")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "jj!1")
                                                                      (("2"
                                                                        (expand
                                                                         "member")
                                                                        (("2"
                                                                          (stop-rewrite
                                                                           "xis_lem")
                                                                          (("2"
                                                                            (replace
                                                                             -2)
                                                                            (("2"
                                                                              (replace
                                                                               -3)
                                                                              (("2"
                                                                                (replace
                                                                                 -4)
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil)))))))))))))))))))))))))
                                                         ("3"
                                                          (hide 2)
                                                          (("3"
                                                            (skosimp*)
                                                            (("3"
                                                              (assert)
                                                              nil)))))
                                                         ("4"
                                                          (hide 2)
                                                          (("4"
                                                            (skosimp*)
                                                            (("4"
                                                              (assert)
                                                              nil)))))
                                                         ("5"
                                                          (skosimp*)
                                                          (("5"
                                                            (assert)
                                                            nil)))
                                                         ("6"
                                                          (skosimp*)
                                                          (("6"
                                                            (assert)
                                                            nil)))))
                                                       ("2"
                                                        (hide 2)
                                                        (("2"
                                                          (skeep)
                                                          (("2"
                                                            (typepred "ii")
                                                            (("2"
                                                              (label
                                                               "iitp"
                                                               -1)
                                                              (("2"
                                                                (case
                                                                 "FORALL (qq:below(PQ`length-1)): pum(ii)<=qq AND qq<pum(ii+1) IMPLIES (EXISTS (jj:below(PQ`length-1)): (pum(ii)<=jj AND jj<=qq AND (FORALL (zz:below(PQ`length-1)): pum(ii)<=zz AND zz<=qq IMPLIES f(xispq`seq(zz)) >= f(xispq`seq(jj)))))")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "pum(ii+1)-1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (split
                                                                       -)
                                                                      (("1"
                                                                        (skosimp*)
                                                                        (("1"
                                                                          (inst
                                                                           +
                                                                           "jj!1")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (skosimp*)
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "zz!1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil)))))))))))
                                                                       ("2"
                                                                        (hide
                                                                         2)
                                                                        (("2"
                                                                          (lemma
                                                                           "partition_union_map_increasing")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "a"
                                                                             "b")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "P"
                                                                                 "Q"
                                                                                 "ii"
                                                                                 "1+ii")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil)))))))))))))))
                                                                   ("2"
                                                                    (hide 2)
                                                                    (("2"
                                                                      (typepred
                                                                       "pum(1+ii)")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (lemma
                                                                           "partition_union_map_increasing")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "a"
                                                                             "b")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "P"
                                                                                 "Q"
                                                                                 "0"
                                                                                 "1+ii")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil)))))))))))))))))
                                                                 ("2"
                                                                  (hide 2)
                                                                  (("2"
                                                                    (induct
                                                                     "qq")
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (inst
                                                                         +
                                                                         "0")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (skosimp*)
                                                                            (("1"
                                                                              (assert)
                                                                              nil)))))
                                                                         ("2"
                                                                          (assert)
                                                                          nil)))))
                                                                     ("2"
                                                                      (skolem
                                                                       1
                                                                       "rr")
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (label
                                                                           "iirr1"
                                                                           -3)
                                                                          (("2"
                                                                            (label
                                                                             "rr1ii1"
                                                                             -4)
                                                                            (("2"
                                                                              (label
                                                                               "rrlt"
                                                                               -1)
                                                                              (("2"
                                                                                (case
                                                                                 "pum(ii) <= rr AND rr < pum(ii + 1)")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (label
                                                                                       "iirr"
                                                                                       -1)
                                                                                      (("1"
                                                                                        (label
                                                                                         "rrii1"
                                                                                         -2)
                                                                                        (("1"
                                                                                          (skosimp*)
                                                                                          (("1"
                                                                                            (label
                                                                                             "iijj"
                                                                                             -4)
                                                                                            (("1"
                                                                                              (label
                                                                                               "jjrr"
                                                                                               -5)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "f(xispq`seq(rr+1)) < f(xispq`seq(jj!1))")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "rr+1")
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     "iirr1")
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil)))
                                                                                                       ("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "zz!1")
                                                                                                          (("2"
                                                                                                            (ground)
                                                                                                            nil)))))))))
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    nil)))
                                                                                                 ("2"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "jj!1")
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     "iijj")
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -6)
                                                                                                        (("1"
                                                                                                          (ground)
                                                                                                          nil)))
                                                                                                       ("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "zz!1")
                                                                                                          (("2"
                                                                                                            (ground)
                                                                                                            nil)))))))))))))))))))))))))))
                                                                                 ("2"
                                                                                  (case
                                                                                   "pum(ii) = rr+1")
                                                                                  (("1"
                                                                                    (inst
                                                                                     +
                                                                                     "rr+1")
                                                                                    (("1"
                                                                                      (hide-all-but
                                                                                       (-1
                                                                                        +))
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (skosimp*)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil)))))))
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil)))
                                                                                   ("2"
                                                                                    (hide
                                                                                     3)
                                                                                    (("2"
                                                                                      (hide
                                                                                       -2)
                                                                                      (("2"
                                                                                        (ground)
                                                                                        nil)))))))))))))))))))
                                                                     ("3"
                                                                      (hide-all-but
                                                                       1)
                                                                      (("3"
                                                                        (ground)
                                                                        nil)))))))))))))))))))))))))
                                               ("2"
                                                (hide-all-but
                                                 (1
                                                  "pumname"
                                                  "signame"
                                                  "altb"
                                                  "Pinc"))
                                                (("2"
                                                  (lemma
                                                   "partition_union_map_inv_def")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (inst - "a" "b")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (inst - "P" "Q")
                                                          (("2"
                                                            (inst - "0" "0")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (replace
                                                                 "pumname")
                                                                (("1"
                                                                  (replace
                                                                   "signame")
                                                                  (("1"
                                                                    (case
                                                                     "pum(0) = 0")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (ground)
                                                                        (("1"
                                                                          (hide
                                                                           2)
                                                                          (("1"
                                                                            (typepred
                                                                             "pum")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "1")
                                                                              (("1"
                                                                                (expand
                                                                                 "strictly_increasing?")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "0"
                                                                                   "1")
                                                                                  (("1"
                                                                                    (ground)
                                                                                    nil)))))))))))))))
                                                                     ("2"
                                                                      (hide 2)
                                                                      (("2"
                                                                        (hide
                                                                         -1)
                                                                        (("2"
                                                                          (typepred
                                                                           "pum")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "0")
                                                                            (("2"
                                                                              (reveal
                                                                               "PQname")
                                                                              (("2"
                                                                                (typepred
                                                                                 "PQ")
                                                                                (("2"
                                                                                  (expand
                                                                                   "strictly_increasing?")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "0"
                                                                                     "pum(0)")
                                                                                    (("2"
                                                                                      (ground)
                                                                                      nil)))))))))))))))))))))))))
                                                             ("2"
                                                              (assert)
                                                              nil)))))))))))))))
                                               ("3"
                                                (assert)
                                                nil))))))))))))))))))))))))))))))))))))))))))))
    nil)
   nil nil)
  (Rie_sum_diff_extend_union-3 nil 3494856764
   (";;; Proof Rie_sum_diff_extend_union-2 for formula integral_def.Rie_sum_diff_extend_union"
    (case "FORALL (a, b:T, f, g: [T->real]):
                                                                                                                        a < b IMPLIES
                                                                                                                         LET CI = LAMBDA (x:T): a <= x AND x <= b IN
                                                                                                                           (increasing?[(CI)](restrict[T, ((CI)), real](g)) IMPLIES
                                                                                                                             (FORALL (P, Q: partition(a, b)): (strictly_increasing?(P) AND strictly_increasing?(Q)) IMPLIES
                                                                                                                                LET PQ:
                                                                                                                                      {PQ: partition(a, b) |
                                                                                                                                               (FORALL (x:T):
                                                                                                                                                  member(x, PQ) IFF
                                                                                                                                                   (member(x, P) OR member(x, Q)))
                                                                                                                                                AND strictly_increasing?(PQ)}
                                                                                                                                      = partition_union(a, b)(P, Q)
                                                                                                                                  IN
                                                                                                                                  FORALL (xispq: xis?(a, b, PQ), xis: xis?(a, b, P)):
                                                                                                                                    EXISTS (xis2: xis?(a, b, P)):
                                                                                                                                      abs(Rie_sum(a, b, g, P, xis, f) -
                                                                                                                                           Rie_sum(a, b, g, PQ, xispq, f))
                                                                                                                                       <=
                                                                                                                                       abs(Rie_sum(a, b, g, P, xis, f) -
                                                                                                                                            Rie_sum(a, b, g, P, xis2, f))))")
    (("1" (skeep)
      (("1" (assert)
        (("1" (flatten)
          (("1" (skeep)
            (("1" (inst - "a" "b" "f" "g")
              (("1" (assert)
                (("1"
                  (case "partition_union(a,b)(P,Q) = partition_union(a, b)(strictly_sort(P), strictly_sort(Q))")
                  (("1" (assert)
                    (("1" (inst - "strictly_sort(P)" "strictly_sort(Q)")
                      (("1" (assert)
                        (("1" (skeep)
                          (("1" (lemma "Riemann_sum_strictly_sort")
                            (("1" (inst - "a" "b" "f" "g")
                              (("1" (assert)
                                (("1"
                                  (inst - "P" "Rie_sum(a, b, g, P, xis, f)")
                                  (("1" (flatten)
                                    (("1" (hide -2)
                                      (("1"
                                        (split -)
                                        (("1"
                                          (skolem -1 "xissp")
                                          (("1"
                                            (inst - "xispq" "xissp")
                                            (("1"
                                              (skolem - "xis2sp")
                                              (("1"
                                                (lemma
                                                 "Riemann_sum_strictly_sort")
                                                (("1"
                                                  (inst - "a" "b" "f" "g")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (inst
                                                       -
                                                       "P"
                                                       "Rie_sum(a, b, g, strictly_sort(P), xis2sp, f)")
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (split -)
                                                            (("1"
                                                              (skolem
                                                               -1
                                                               "xis2")
                                                              (("1"
                                                                (inst
                                                                 +
                                                                 "xis2")
                                                                (("1"
                                                                  (assert)
                                                                  nil)))))
                                                             ("2"
                                                              (case
                                                               "partition_union(a,b)(P,Q) = partition_union(a, b)(strictly_sort(P), strictly_sort(Q))")
                                                              (("1"
                                                                (inst
                                                                 +
                                                                 "xis2sp")
                                                                nil)
                                                               ("2"
                                                                (propax)
                                                                nil)))))))))))))))))))
                                             ("2"
                                              (assert)
                                              (("2"
                                                (skeep)
                                                (("2"
                                                  (replace -2 :dir rl)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (typepred "xispq")
                                                      (("2"
                                                        (inst - "ii")
                                                        nil)))))))))))))))
                                         ("2"
                                          (inst + "xis")
                                          nil)))))))))))))))))))))))
                   ("2" (hide 2)
                    (("2" (lemma "partition_strictly_sort_union")
                      (("2" (inst - "a" "b")
                        (("2" (assert)
                          (("2" (inst-cp - "P" "Q")
                            (("2" (inst - "Q" "strictly_sort(P)")
                              (("2" (lemma "partition_union_sym")
                                (("2" (inst - "a" "b")
                                  (("2" (assert)
                                    (("2" (inst-cp - "strictly_sort(P)" "Q")
                                      (("2"
                                        (inst
                                         -
                                         "strictly_sort(P)"
                                         "strictly_sort(Q)")
                                        (("2"
                                          (assert)
                                          nil)))))))))))))))))))))))
                   ("3" (lemma "partition_strictly_sort")
                    (("3" (inst - "a" "b")
                      (("3" (assert) (("3" (inst - "Q") nil)))))))
                   ("4" (lemma "partition_strictly_sort")
                    (("4" (inst - "a" "b")
                      (("4" (assert)
                        (("4" (inst - "P") nil)))))))))))))))))))))
     ("2" (hide 2)
      (("2"
        (case "FORALL (a, b:T, f, g: [T->T]):
                                                                                                                                      a < b IMPLIES
                                                                                                                                       LET CI = LAMBDA (x:T): a <= x AND x <= b IN
                                                                                                                                         (increasing?[(CI)](restrict[T, ((CI)), T](g)) IMPLIES
                                                                                                                                           (FORALL (P, Q: partition(a, b)):
                                                                                                                                              (strictly_increasing?(P) AND strictly_increasing?(Q))
                                                                                                                                               IMPLIES
                                                                                                                                               LET PQ:
                                                                                                                                                     {PQ: partition(a, b) |
                                                                                                                                                              (FORALL (x:T):
                                                                                                                                                                 member(x, PQ) IFF
                                                                                                                                                                  (member(x, P) OR member(x, Q)))
                                                                                                                                                               AND strictly_increasing?(PQ)}
                                                                                                                                                     = partition_union(a, b)(P, Q)
                                                                                                                                                 IN
                                                                                                                                                 FORALL (xispq: xis?(a, b, PQ), xis: xis?(a, b, P)):Rie_sum(a, b, g, P, xis, f) >=
                                                                                                                                                          Rie_sum(a, b, g, PQ, xispq, f) IMPLIES
                                                                                                                                                   EXISTS (xis2: xis?(a, b, P)):
                                                                                                                                                          Rie_sum(a, b, g, PQ, xispq, f) >=
                                                                                                                                                           Rie_sum(a, b, g, P, xis2, f)))")
        (("1" (skeep)
          (("1" (assert)
            (("1" (flatten)
              (("1" (skeep)
                (("1" (skeep)
                  (("1"
                    (case "Rie_sum(a, b, g, P, xis, f) >=
                                                                                                                                                                       Rie_sum(a, b, g, partition_union(a, b)(P, Q), xispq, f)")
                    (("1" (inst - "a" "b" "f" "g")
                      (("1" (assert)
                        (("1" (inst - "P" "Q")
                          (("1" (assert)
                            (("1" (inst - "xispq" "xis")
                              (("1" (assert)
                                (("1" (skosimp*)
                                  (("1" (inst + "xis2!1")
                                    (("1" (expand "abs")
                                      (("1"
                                        (lift-if)
                                        (("1"
                                          (ground)
                                          nil)))))))))))))))))))))
                     ("2" (inst - "a" "b" "(LAMBDA x: -f(x))" "g")
                      (("2" (assert)
                        (("2" (inst - "P" "Q")
                          (("2" (assert)
                            (("2" (inst - "xispq" "xis")
                              (("2"
                                (case "FORALL (ZZ:partition(a,b),xizz:xis?(a,b,ZZ)): Rie_sum(a,b,g,ZZ,xizz,(LAMBDA x:-f(x))) = -Rie_sum(a,b,g,ZZ,xizz,f)")
                                (("1" (split -)
                                  (("1" (skeep -)
                                    (("1" (inst + "xis2")
                                      (("1"
                                        (inst-cp - "P" "xis")
                                        (("1"
                                          (inst-cp
                                           -
                                           "partition_union(a,b)(P,Q)"
                                           "xispq")
                                          (("1"
                                            (inst - "P" "xis2")
                                            (("1"
                                              (expand "abs")
                                              (("1"
                                                (lift-if)
                                                (("1"
                                                  (ground)
                                                  nil)))))))))))))))
                                   ("2" (inst-cp - "P" "xis")
                                    (("2"
                                      (inst-cp
                                       -
                                       "partition_union(a,b)(P,Q)"
                                       "xispq")
                                      (("2" (assert) nil)))))))
                                 ("2" (hide-all-but 1)
                                  (("2" (skeep)
                                    (("2" (expand "Rie_sum")
                                      (("2"
                                        (lemma
                                         "sigma_scal[below(ZZ`length-1)]")
                                        (("2"
                                          (inst
                                           -
                                           "LAMBDA (n: below(ZZ`length - 1)):
                                                                                                                                                         g(ZZ`seq(1 + n)) * f(xizz`seq(n)) -
                                                                                                                                                          g(ZZ`seq(n)) * f(xizz`seq(n))"
                                           "-1"
                                           "ZZ`length-2"
                                           "0")
                                          (("2"
                                            (assert)
                                            nil)))))))))))))))))))))))))))))))))))
         ("2" (hide 2)
          (("2" (skeep)
            (("2" (assert)
              (("2" (flatten)
                (("2" (label "altb" -1)
                  (("2" (label "ginc" -2)
                    (("2" (skeep)
                      (("2" (label "Pinc" -3)
                        (("2" (label "Qinc" -4)
                          (("2" (skeep)
                            (("2" (label "RSge" -5)
                              (("2" (name "PQ" "partition_union(a,b)(P,Q)")
                                (("2" (label "PQname" -1)
                                  (("2" (replace "PQname")
                                    (("2"
                                      (name
                                       "pum"
                                       "partition_union_map(a,b,P,Q)")
                                      (("2"
                                        (label "pumname" -1)
                                        (("2"
                                          (name
                                           "sig"
                                           "partition_union_map_inv(a,b,P,Q)")
                                          (("2"
                                            (label "signame" -1)
                                            (("2"
                                              (case
                                               "sig(0) = 0 AND pum(0) = 0")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (label "sig0" -1)
                                                  (("1"
                                                    (label "pum0" -2)
                                                    (("1"
                                                      (case
                                                       "FORALL (ii:below(P`length-1)): EXISTS (jj:below(PQ`length-1)): (pum(ii)<=jj AND jj<pum(ii+1) AND (FORALL (zz:below(PQ`length-1)): pum(ii)<=zz AND zz<pum(ii+1) IMPLIES f(xispq`seq(zz)) >= f(xispq`seq(jj))))")
                                                      (("1"
                                                        (name
                                                         "xis2"
                                                         "(# length := P`length-1, seq := (LAMBDA (ii:nat): IF ii<P`length-1 THEN LET jj = choose({jj:below(PQ`length-1) | (pum(ii) <= jj AND
                                                                                     jj < pum(ii + 1) AND
                                                                                      (FORALL (zz: below(PQ`length - 1)):
                                                                                         pum(ii) <= zz AND zz < pum(ii + 1) IMPLIES
                                                                                          f(xispq`seq(zz)) >= f(xispq`seq(jj))))}) IN xispq`seq(jj) ELSE default[T] ENDIF) #)")
                                                        (("1"
                                                          (stop-rewrite
                                                           "xis_lem")
                                                          (("1"
                                                            (inst + "xis2")
                                                            (("1"
                                                              (hide -1)
                                                              (("1"
                                                                (lemma
                                                                 "Rie_sum_extend_union")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "a"
                                                                   "b"
                                                                   "f"
                                                                   "g")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "P"
                                                                       "Q")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "xis2")
                                                                          (("1"
                                                                            (replace
                                                                             -1
                                                                             +)
                                                                            (("1"
                                                                              (hide
                                                                               -1)
                                                                              (("1"
                                                                                (expand
                                                                                 "Rie_sum"
                                                                                 +)
                                                                                (("1"
                                                                                  (case
                                                                                   "FORALL (nn:nat): nn<= PQ`length-2 IMPLIES sigma[below(PQ`length - 1)]
                                                                                                                           (0, nn,
                                                                                                                            LAMBDA (n: below(PQ`length - 1)):
                                                                                                                              f(xispq`seq(n)) * g(PQ`seq(1 + n)) -
                                                                                                                               f(xispq`seq(n)) * g(PQ`seq(n)))
                                                                                                                        >=
                                                                                                                        sigma[below(partition_union(a, b)(P, Q)`length - 1)]
                                                                                                                            (0, nn,
                                                                                                                             LAMBDA (n: below(partition_union(a, b)(P, Q)`length - 1)):
                                                                                                                               f(xis2`seq(partition_union_map_inv(a, b, P, Q)(n))) *
                                                                                                                                g(partition_union(a, b)(P, Q)`seq(1 + n))
                                                                                                                                -
                                                                                                                                f(xis2`seq(partition_union_map_inv(a, b, P, Q)(n))) *
                                                                                                                                 g(partition_union(a, b)(P, Q)`seq(n)))")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "PQ`length-2")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil)))
                                                                                   ("2"
                                                                                    (hide
                                                                                     2)
                                                                                    (("2"
                                                                                      (induct
                                                                                       "nn")
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "sigma"
                                                                                           +)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "sigma"
                                                                                             +)
                                                                                            (("1"
                                                                                              (replace
                                                                                               "signame")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 "PQname")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "xis2"
                                                                                                   +)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (name
                                                                                                       "rr"
                                                                                                       "choose({jj: below(PQ`length - 1) |
                                                                                                                                     jj < pum(1 + sig(0)) AND
                                                                                                                                      (FORALL (zz: below(PQ`length - 1)):
                                                                                                                                         zz < pum(1 + sig(0)) IMPLIES
                                                                                                                                          f(xispq`seq(zz)) >= f(xispq`seq(jj)))})")
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (typepred
                                                                                                           "rr")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "0")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "g(PQ`seq(1)) >= g(PQ`seq(0))")
                                                                                                                (("1"
                                                                                                                  (mult-by
                                                                                                                   -4
                                                                                                                   "g(PQ`seq(1))-g(PQ`seq(0))")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil)))
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "increasing?"
                                                                                                                     "ginc")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       "ginc"
                                                                                                                       "PQ`seq(0)"
                                                                                                                       "PQ`seq(1)")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "restrict")
                                                                                                                          (("1"
                                                                                                                            (typepred
                                                                                                                             "PQ")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "increasing?")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "0"
                                                                                                                                 "1")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil)))))))))))
                                                                                                                       ("2"
                                                                                                                        (typepred
                                                                                                                         "PQ")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "1")
                                                                                                                          nil)))))))))))))))))))
                                                                                                       ("2"
                                                                                                        (hide
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "nonempty?")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "empty?")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -3
                                                                                                               "sig(0)")
                                                                                                              (("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "jj!1")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "member")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil)))))))))))))))))))))))))))))))
                                                                                       ("2"
                                                                                        (skeep)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "sigma"
                                                                                             +)
                                                                                            (("2"
                                                                                              (case
                                                                                               "f(xispq`seq(1 + j)) * g(PQ`seq(2 + j))
                                                                                                                   - f(xispq`seq(1 + j)) * g(PQ`seq(1 + j))>=f(xis2`seq(partition_union_map_inv(a, b, P, Q)(1 + j))) *
                                                                                                                     g(partition_union(a, b)(P, Q)`seq(2 + j))
                                                                                                                    -
                                                                                                                    f(xis2`seq(partition_union_map_inv(a, b, P, Q)(1 + j))) *
                                                                                                                     g(partition_union(a, b)(P, Q)`seq(1 + j))")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     "PQname")
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       "signame")
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "sig(1 + j) < P`length - 1")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "xis2"
                                                                                                           +)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (name
                                                                                                               "rr"
                                                                                                               "choose({jj: below(PQ`length - 1) |
                                                                                                                                                     (pum(sig(1 + j)) <= jj AND
                                                                                                                                                       jj < pum(1 + sig(1 + j)) AND
                                                                                                                                                        (FORALL (zz: below(PQ`length - 1)):
                                                                                                                                                           pum(sig(1 + j)) <= zz AND
                                                                                                                                                            zz < pum(1 + sig(1 + j))
                                                                                                                                                            IMPLIES
                                                                                                                                                            f(xispq`seq(zz)) >= f(xispq`seq(jj))))})")
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (typepred
                                                                                                                   "rr")
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "g(PQ`seq(2+j))>=g(PQ`seq(1+j))")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "1+j")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (split
                                                                                                                           -)
                                                                                                                          (("1"
                                                                                                                            (mult-by
                                                                                                                             -1
                                                                                                                             "g(PQ`seq(2+j))-g(PQ`seq(1+j))")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil)))
                                                                                                                           ("2"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("2"
                                                                                                                              (typepred
                                                                                                                               "pum")
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "sig(1+j)")
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "P`seq(sig(1+j)) <= PQ`seq(1+j)")
                                                                                                                                  (("1"
                                                                                                                                    (typepred
                                                                                                                                     "PQ")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "strictly_increasing?")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "1+j"
                                                                                                                                         "pum(sig(1+j))")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (ground)
                                                                                                                                            nil)))))))))
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (typepred
                                                                                                                                       "sig")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "1+j")
                                                                                                                                        (("2"
                                                                                                                                          (ground)
                                                                                                                                          nil)))))))))))))))
                                                                                                                           ("3"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("3"
                                                                                                                              (typepred
                                                                                                                               "pum")
                                                                                                                              (("3"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "1+sig(1+j)")
                                                                                                                                (("3"
                                                                                                                                  (case
                                                                                                                                   "P`seq(1+sig(1+j)) > PQ`seq(1+j)")
                                                                                                                                  (("1"
                                                                                                                                    (typepred
                                                                                                                                     "PQ")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "strictly_increasing?")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "pum(1+sig(1+j))"
                                                                                                                                         "1+j")
                                                                                                                                        (("1"
                                                                                                                                          (ground)
                                                                                                                                          nil)))))))
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (typepred
                                                                                                                                       "sig")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "1+j")
                                                                                                                                        (("2"
                                                                                                                                          (ground)
                                                                                                                                          nil)))))))))))))))))))))
                                                                                                                     ("2"
                                                                                                                      (hide
                                                                                                                       2)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "increasing?"
                                                                                                                         "ginc")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           "ginc"
                                                                                                                           "PQ`seq(1+j)"
                                                                                                                           "PQ`seq(2+j)")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "restrict")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (typepred
                                                                                                                                 "PQ")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "increasing?")
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "1+j"
                                                                                                                                     "2+j")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil)))))))))))
                                                                                                                           ("2"
                                                                                                                            (typepred
                                                                                                                             "PQ")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "2+j")
                                                                                                                              nil)))
                                                                                                                           ("3"
                                                                                                                            (typepred
                                                                                                                             "PQ")
                                                                                                                            (("3"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "1+j")
                                                                                                                              nil)))))))))))))))
                                                                                                               ("2"
                                                                                                                (hide
                                                                                                                 2)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "nonempty?")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "empty?")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -4
                                                                                                                       "sig(1+j)")
                                                                                                                      (("2"
                                                                                                                        (skosimp*)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "jj!1")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "member")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil)))))))))))))))))))))
                                                                                                         ("2"
                                                                                                          (hide
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (case
                                                                                                             "sig(1+j) = P`length-1")
                                                                                                            (("1"
                                                                                                              (typepred
                                                                                                               "sig")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "1+j")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (typepred
                                                                                                                     "PQ")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "strictly_increasing?")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "1+j"
                                                                                                                         "PQ`length-1")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (ground)
                                                                                                                            nil)))))))))))))))
                                                                                                             ("2"
                                                                                                              (assert)
                                                                                                              nil)))))))))))))))))))))))
                                                                                       ("3"
                                                                                        (hide
                                                                                         2)
                                                                                        (("3"
                                                                                          (skosimp*)
                                                                                          (("3"
                                                                                            (assert)
                                                                                            nil)))))
                                                                                       ("4"
                                                                                        (hide
                                                                                         3)
                                                                                        (("4"
                                                                                          (skosimp*)
                                                                                          (("4"
                                                                                            (assert)
                                                                                            nil)))))
                                                                                       ("5"
                                                                                        (hide
                                                                                         2)
                                                                                        (("5"
                                                                                          (skosimp*)
                                                                                          (("5"
                                                                                            (assert)
                                                                                            nil)))))
                                                                                       ("6"
                                                                                        (hide
                                                                                         3)
                                                                                        (("6"
                                                                                          (skosimp*)
                                                                                          (("6"
                                                                                            (assert)
                                                                                            nil)))))))))
                                                                                   ("3"
                                                                                    (hide
                                                                                     2)
                                                                                    (("3"
                                                                                      (skosimp*)
                                                                                      (("3"
                                                                                        (assert)
                                                                                        nil)))))
                                                                                   ("4"
                                                                                    (hide
                                                                                     2)
                                                                                    (("4"
                                                                                      (skosimp*)
                                                                                      (("4"
                                                                                        (assert)
                                                                                        nil)))))))))))))
                                                                           ("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (expand
                                                                                 "xis2")
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil)))))))))))))
                                                                     ("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (hide
                                                                         -1)
                                                                        (("2"
                                                                          (skosimp*)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (ground)
                                                                              nil)))))))))))))))))
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (hide -1)
                                                                (("2"
                                                                  (label
                                                                   "exlem"
                                                                   -1)
                                                                  (("2"
                                                                    (hide -1)
                                                                    (("2"
                                                                      (split)
                                                                      (("1"
                                                                        (skosimp*)
                                                                        (("1"
                                                                          (expand
                                                                           "xis2"
                                                                           +)
                                                                          (("1"
                                                                            (lift-if)
                                                                            (("1"
                                                                              (ground)
                                                                              nil)))))))
                                                                       ("2"
                                                                        (skosimp*)
                                                                        (("2"
                                                                          (expand
                                                                           "xis2")
                                                                          (("2"
                                                                            (name
                                                                             "rr"
                                                                             "choose({jj: below(PQ`length - 1) |
                                                                                                          (pum(ii!1) <= jj AND
                                                                                                            jj < pum(1 + ii!1) AND
                                                                                                             (FORALL (zz: below(PQ`length - 1)):
                                                                                                                pum(ii!1) <= zz AND zz < pum(1 + ii!1) IMPLIES
                                                                                                                 f(xispq`seq(zz)) >= f(xispq`seq(jj))))})")
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (typepred
                                                                                 "rr")
                                                                                (("1"
                                                                                  (typepred
                                                                                   "xispq")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "rr")
                                                                                    (("1"
                                                                                      (replace
                                                                                       "PQname")
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (case
                                                                                           "PQ`seq(rr) >= P`seq(ii!1) AND PQ`seq(1+rr) <= P`seq(1+ii!1)")
                                                                                          (("1"
                                                                                            (ground)
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("2"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (typepred
                                                                                                       "pum")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "ii!1")
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           "PQname")
                                                                                                          (("1"
                                                                                                            (typepred
                                                                                                             "PQ")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "increasing?")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "pum(ii!1)"
                                                                                                                 "rr")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil)))))))))))))
                                                                                                     ("2"
                                                                                                      (typepred
                                                                                                       "pum")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "1+ii!1")
                                                                                                        (("2"
                                                                                                          (typepred
                                                                                                           "PQ")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "increasing?")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "1+rr"
                                                                                                               "pum(1+ii!1)")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil)))))))))))))))))))))))))))
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil)))))))))
                                                                             ("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (expand
                                                                                 "nonempty?")
                                                                                (("2"
                                                                                  (expand
                                                                                   "empty?")
                                                                                  (("2"
                                                                                    (reveal
                                                                                     "exlem")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "ii!1")
                                                                                      (("2"
                                                                                        (skosimp*)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -4
                                                                                           "jj!1")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "member")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil)))))))))))))))))))))))))))))))))))))
                                                         ("2"
                                                          (hide 2)
                                                          (("2"
                                                            (skosimp*)
                                                            (("2"
                                                              (expand
                                                               "nonempty?")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "ii!1")
                                                                (("2"
                                                                  (skosimp*)
                                                                  (("2"
                                                                    (expand
                                                                     "empty?")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "jj!1")
                                                                      (("2"
                                                                        (expand
                                                                         "member")
                                                                        (("2"
                                                                          (stop-rewrite
                                                                           "xis_lem")
                                                                          (("2"
                                                                            (replace
                                                                             -2)
                                                                            (("2"
                                                                              (replace
                                                                               -3)
                                                                              (("2"
                                                                                (replace
                                                                                 -4)
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil)))))))))))))))))))))))))
                                                         ("3"
                                                          (hide 2)
                                                          (("3"
                                                            (skosimp*)
                                                            (("3"
                                                              (assert)
                                                              nil)))))
                                                         ("4"
                                                          (hide 2)
                                                          (("4"
                                                            (skosimp*)
                                                            (("4"
                                                              (assert)
                                                              nil)))))
                                                         ("5"
                                                          (skosimp*)
                                                          (("5"
                                                            (assert)
                                                            nil)))
                                                         ("6"
                                                          (skosimp*)
                                                          (("6"
                                                            (assert)
                                                            nil)))))
                                                       ("2"
                                                        (hide 2)
                                                        (("2"
                                                          (skeep)
                                                          (("2"
                                                            (typepred "ii")
                                                            (("2"
                                                              (label
                                                               "iitp"
                                                               -1)
                                                              (("2"
                                                                (case
                                                                 "FORALL (qq:below(PQ`length-1)): pum(ii)<=qq AND qq<pum(ii+1) IMPLIES (EXISTS (jj:below(PQ`length-1)): (pum(ii)<=jj AND jj<=qq AND (FORALL (zz:below(PQ`length-1)): pum(ii)<=zz AND zz<=qq IMPLIES f(xispq`seq(zz)) >= f(xispq`seq(jj)))))")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "pum(ii+1)-1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (split
                                                                       -)
                                                                      (("1"
                                                                        (skosimp*)
                                                                        (("1"
                                                                          (inst
                                                                           +
                                                                           "jj!1")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (skosimp*)
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "zz!1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil)))))))))))
                                                                       ("2"
                                                                        (hide
                                                                         2)
                                                                        (("2"
                                                                          (lemma
                                                                           "partition_union_map_increasing")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "a"
                                                                             "b")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "P"
                                                                                 "Q"
                                                                                 "ii"
                                                                                 "1+ii")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil)))))))))))))))
                                                                   ("2"
                                                                    (hide 2)
                                                                    (("2"
                                                                      (typepred
                                                                       "pum(1+ii)")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (lemma
                                                                           "partition_union_map_increasing")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "a"
                                                                             "b")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "P"
                                                                                 "Q"
                                                                                 "0"
                                                                                 "1+ii")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil)))))))))))))))))
                                                                 ("2"
                                                                  (hide 2)
                                                                  (("2"
                                                                    (induct
                                                                     "qq")
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (inst
                                                                         +
                                                                         "0")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (skosimp*)
                                                                            (("1"
                                                                              (assert)
                                                                              nil)))))
                                                                         ("2"
                                                                          (assert)
                                                                          nil)))))
                                                                     ("2"
                                                                      (skolem
                                                                       1
                                                                       "rr")
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (label
                                                                           "iirr1"
                                                                           -3)
                                                                          (("2"
                                                                            (label
                                                                             "rr1ii1"
                                                                             -4)
                                                                            (("2"
                                                                              (label
                                                                               "rrlt"
                                                                               -1)
                                                                              (("2"
                                                                                (case
                                                                                 "pum(ii) <= rr AND rr < pum(ii + 1)")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (label
                                                                                       "iirr"
                                                                                       -1)
                                                                                      (("1"
                                                                                        (label
                                                                                         "rrii1"
                                                                                         -2)
                                                                                        (("1"
                                                                                          (skosimp*)
                                                                                          (("1"
                                                                                            (label
                                                                                             "iijj"
                                                                                             -4)
                                                                                            (("1"
                                                                                              (label
                                                                                               "jjrr"
                                                                                               -5)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "f(xispq`seq(rr+1)) < f(xispq`seq(jj!1))")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "rr+1")
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     "iirr1")
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil)))
                                                                                                       ("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "zz!1")
                                                                                                          (("2"
                                                                                                            (ground)
                                                                                                            nil)))))))))
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    nil)))
                                                                                                 ("2"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "jj!1")
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     "iijj")
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -6)
                                                                                                        (("1"
                                                                                                          (ground)
                                                                                                          nil)))
                                                                                                       ("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "zz!1")
                                                                                                          (("2"
                                                                                                            (ground)
                                                                                                            nil)))))))))))))))))))))))))))
                                                                                 ("2"
                                                                                  (case
                                                                                   "pum(ii) = rr+1")
                                                                                  (("1"
                                                                                    (inst
                                                                                     +
                                                                                     "rr+1")
                                                                                    (("1"
                                                                                      (hide-all-but
                                                                                       (-1
                                                                                        +))
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (skosimp*)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil)))))))
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil)))
                                                                                   ("2"
                                                                                    (hide
                                                                                     3)
                                                                                    (("2"
                                                                                      (hide
                                                                                       -2)
                                                                                      (("2"
                                                                                        (ground)
                                                                                        nil)))))))))))))))))))
                                                                     ("3"
                                                                      (hide-all-but
                                                                       1)
                                                                      (("3"
                                                                        (ground)
                                                                        nil)))))))))))))))))))))))))
                                               ("2"
                                                (hide-all-but
                                                 (1
                                                  "pumname"
                                                  "signame"
                                                  "altb"
                                                  "Pinc"))
                                                (("2"
                                                  (lemma
                                                   "partition_union_map_inv_def")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (inst - "a" "b")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (inst - "P" "Q")
                                                          (("2"
                                                            (inst - "0" "0")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (replace
                                                                 "pumname")
                                                                (("1"
                                                                  (replace
                                                                   "signame")
                                                                  (("1"
                                                                    (case
                                                                     "pum(0) = 0")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (ground)
                                                                        (("1"
                                                                          (hide
                                                                           2)
                                                                          (("1"
                                                                            (typepred
                                                                             "pum")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "1")
                                                                              (("1"
                                                                                (expand
                                                                                 "strictly_increasing?")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "0"
                                                                                   "1")
                                                                                  (("1"
                                                                                    (ground)
                                                                                    nil)))))))))))))))
                                                                     ("2"
                                                                      (hide 2)
                                                                      (("2"
                                                                        (hide
                                                                         -1)
                                                                        (("2"
                                                                          (typepred
                                                                           "pum")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "0")
                                                                            (("2"
                                                                              (reveal
                                                                               "PQname")
                                                                              (("2"
                                                                                (typepred
                                                                                 "PQ")
                                                                                (("2"
                                                                                  (expand
                                                                                   "strictly_increasing?")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "0"
                                                                                     "pum(0)")
                                                                                    (("2"
                                                                                      (ground)
                                                                                      nil)))))))))))))))))))))))))
                                                             ("2"
                                                              (assert)
                                                              nil)))))))))))))))
                                               ("3"
                                                (assert)
                                                nil))))))))))))))))))))))))))))))))))))))))))))
    ";;; developed with shostak decision procedures")
   nil nil)
  (Rie_sum_diff_extend_union-2 nil 3492512970
   (""
    (case "FORALL (a, b: real, f, g: [real -> real]):
                                                                                                                 a < b IMPLIES
                                                                                                                  LET CI = LAMBDA (x: real): a <= x AND x <= b IN
                                                                                                                    (increasing?[(CI)](restrict[real, ((CI)), real](g)) IMPLIES
                                                                                                                      (FORALL (P, Q: partition(a, b)): (strictly_increasing?(P) AND strictly_increasing?(Q)) IMPLIES
                                                                                                                         LET PQ:
                                                                                                                               {PQ: partition(a, b) |
                                                                                                                                        (FORALL (x: real):
                                                                                                                                           member(x, PQ) IFF
                                                                                                                                            (member(x, P) OR member(x, Q)))
                                                                                                                                         AND strictly_increasing?(PQ)}
                                                                                                                               = partition_union(a, b)(P, Q)
                                                                                                                           IN
                                                                                                                           FORALL (xispq: xis?(a, b, PQ), xis: xis?(a, b, P)):
                                                                                                                             EXISTS (xis2: xis?(a, b, P)):
                                                                                                                               abs(Rie_sum(a, b, g, P, xis, f) -
                                                                                                                                    Rie_sum(a, b, g, PQ, xispq, f))
                                                                                                                                <=
                                                                                                                                abs(Rie_sum(a, b, g, P, xis, f) -
                                                                                                                                     Rie_sum(a, b, g, P, xis2, f))))")
    (("1" (skeep)
      (("1" (assert)
        (("1" (flatten)
          (("1" (skeep)
            (("1" (inst - "a" "b" "f" "g")
              (("1" (assert)
                (("1"
                  (case "partition_union(a,b)(P,Q) = partition_union(a, b)(strictly_sort(P), strictly_sort(Q))")
                  (("1" (assert)
                    (("1" (inst - "strictly_sort(P)" "strictly_sort(Q)")
                      (("1" (assert)
                        (("1" (skeep)
                          (("1" (lemma "Riemann_sum_strictly_sort")
                            (("1" (inst - "a" "b" "f" "g")
                              (("1" (assert)
                                (("1"
                                  (inst - "P" "Rie_sum(a, b, g, P, xis, f)")
                                  (("1" (flatten)
                                    (("1" (hide -2)
                                      (("1"
                                        (split -)
                                        (("1"
                                          (skolem -1 "xissp")
                                          (("1"
                                            (inst - "xispq" "xissp")
                                            (("1"
                                              (skolem - "xis2sp")
                                              (("1"
                                                (lemma
                                                 "Riemann_sum_strictly_sort")
                                                (("1"
                                                  (inst - "a" "b" "f" "g")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (inst
                                                       -
                                                       "P"
                                                       "Rie_sum(a, b, g, strictly_sort(P), xis2sp, f)")
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (split -)
                                                            (("1"
                                                              (skolem
                                                               -1
                                                               "xis2")
                                                              (("1"
                                                                (inst
                                                                 +
                                                                 "xis2")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (case
                                                               "partition_union(a,b)(P,Q) = partition_union(a, b)(strictly_sort(P), strictly_sort(Q))")
                                                              (("1"
                                                                (inst
                                                                 +
                                                                 "xis2sp")
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (assert)
                                              (("2"
                                                (skeep)
                                                (("2"
                                                  (replace -2 :dir rl)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (typepred "xispq")
                                                      (("2"
                                                        (inst - "ii")
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2" (inst + "xis") nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide 2)
                    (("2" (lemma "partition_strictly_sort_union")
                      (("2" (inst - "a" "b")
                        (("2" (assert)
                          (("2" (inst-cp - "P" "Q")
                            (("2" (inst - "Q" "strictly_sort(P)")
                              (("2" (lemma "partition_union_sym")
                                (("2" (inst - "a" "b")
                                  (("2" (assert)
                                    (("2" (inst-cp - "strictly_sort(P)" "Q")
                                      (("2"
                                        (inst
                                         -
                                         "strictly_sort(P)"
                                         "strictly_sort(Q)")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (lemma "partition_strictly_sort")
                    (("3" (inst - "a" "b")
                      (("3" (assert) (("3" (inst - "Q") nil nil)) nil)) nil))
                    nil)
                   ("4" (lemma "partition_strictly_sort")
                    (("4" (inst - "a" "b")
                      (("4" (assert) (("4" (inst - "P") nil nil)) nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (hide 2)
      (("2"
        (case "FORALL (a, b: real, f, g: [real -> real]):
                                                                                                                             a < b IMPLIES
                                                                                                                              LET CI = LAMBDA (x: real): a <= x AND x <= b IN
                                                                                                                                (increasing?[(CI)](restrict[real, ((CI)), real](g)) IMPLIES
                                                                                                                                  (FORALL (P, Q: partition(a, b)):
                                                                                                                                     (strictly_increasing?(P) AND strictly_increasing?(Q))
                                                                                                                                      IMPLIES
                                                                                                                                      LET PQ:
                                                                                                                                            {PQ: partition(a, b) |
                                                                                                                                                     (FORALL (x: real):
                                                                                                                                                        member(x, PQ) IFF
                                                                                                                                                         (member(x, P) OR member(x, Q)))
                                                                                                                                                      AND strictly_increasing?(PQ)}
                                                                                                                                            = partition_union(a, b)(P, Q)
                                                                                                                                        IN
                                                                                                                                        FORALL (xispq: xis?(a, b, PQ), xis: xis?(a, b, P)):Rie_sum(a, b, g, P, xis, f) >=
                                                                                                                                                 Rie_sum(a, b, g, PQ, xispq, f) IMPLIES
                                                                                                                                          EXISTS (xis2: xis?(a, b, P)):
                                                                                                                                                 Rie_sum(a, b, g, PQ, xispq, f) >=
                                                                                                                                                  Rie_sum(a, b, g, P, xis2, f)))")
        (("1" (skeep)
          (("1" (assert)
            (("1" (flatten)
              (("1" (skeep)
                (("1" (skeep)
                  (("1"
                    (case "Rie_sum(a, b, g, P, xis, f) >=
                                                                                                                                                            Rie_sum(a, b, g, partition_union(a, b)(P, Q), xispq, f)")
                    (("1" (inst - "a" "b" "f" "g")
                      (("1" (assert)
                        (("1" (inst - "P" "Q")
                          (("1" (assert)
                            (("1" (inst - "xispq" "xis")
                              (("1" (assert)
                                (("1" (skosimp*)
                                  (("1" (inst + "xis2!1")
                                    (("1" (expand "abs")
                                      (("1"
                                        (lift-if)
                                        (("1" (ground) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (inst - "a" "b" "(LAMBDA x: -f(x))" "g")
                      (("2" (assert)
                        (("2" (inst - "P" "Q")
                          (("2" (assert)
                            (("2" (inst - "xispq" "xis")
                              (("2"
                                (case "FORALL (ZZ:partition(a,b),xizz:xis?(a,b,ZZ)): Rie_sum(a,b,g,ZZ,xizz,(LAMBDA x:-f(x))) = -Rie_sum(a,b,g,ZZ,xizz,f)")
                                (("1" (split -)
                                  (("1" (skeep -)
                                    (("1" (inst + "xis2")
                                      (("1"
                                        (inst-cp - "P" "xis")
                                        (("1"
                                          (inst-cp
                                           -
                                           "partition_union(a,b)(P,Q)"
                                           "xispq")
                                          (("1"
                                            (inst - "P" "xis2")
                                            (("1"
                                              (expand "abs")
                                              (("1"
                                                (lift-if)
                                                (("1" (ground) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (inst-cp - "P" "xis")
                                    (("2"
                                      (inst-cp
                                       -
                                       "partition_union(a,b)(P,Q)"
                                       "xispq")
                                      (("2" (assert) nil nil)) nil))
                                    nil))
                                  nil)
                                 ("2" (hide-all-but 1)
                                  (("2" (skeep)
                                    (("2" (expand "Rie_sum")
                                      (("2"
                                        (lemma
                                         "sigma_scal[below(ZZ`length-1)]")
                                        (("2"
                                          (inst
                                           -
                                           "LAMBDA (n: below(ZZ`length - 1)):
                                                                                                                                               g(ZZ`seq(1 + n)) * f(xizz`seq(n)) -
                                                                                                                                                g(ZZ`seq(n)) * f(xizz`seq(n))"
                                           "-1"
                                           "ZZ`length-2"
                                           "0")
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide 2)
          (("2" (skeep)
            (("2" (assert)
              (("2" (flatten)
                (("2" (label "altb" -1)
                  (("2" (label "ginc" -2)
                    (("2" (skeep)
                      (("2" (label "Pinc" -3)
                        (("2" (label "Qinc" -4)
                          (("2" (skeep)
                            (("2" (label "RSge" -5)
                              (("2" (name "PQ" "partition_union(a,b)(P,Q)")
                                (("2" (label "PQname" -1)
                                  (("2" (replace "PQname")
                                    (("2"
                                      (name
                                       "pum"
                                       "partition_union_map(a,b,P,Q)")
                                      (("2"
                                        (label "pumname" -1)
                                        (("2"
                                          (name
                                           "sig"
                                           "partition_union_map_inv(a,b,P,Q)")
                                          (("2"
                                            (label "signame" -1)
                                            (("2"
                                              (case
                                               "sig(0) = 0 AND pum(0) = 0")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (label "sig0" -1)
                                                  (("1"
                                                    (label "pum0" -2)
                                                    (("1"
                                                      (case
                                                       "FORALL (ii:below(P`length-1)): EXISTS (jj:below(PQ`length-1)): (pum(ii)<=jj AND jj<pum(ii+1) AND (FORALL (zz:below(PQ`length-1)): pum(ii)<=zz AND zz<pum(ii+1) IMPLIES f(xispq`seq(zz)) >= f(xispq`seq(jj))))")
                                                      (("1"
                                                        (name
                                                         "xis2"
                                                         "(# length := P`length-1, seq := (LAMBDA (ii:nat): IF ii<P`length-1 THEN LET jj = choose({jj:below(PQ`length-1) | (pum(ii) <= jj AND
                                                                      jj < pum(ii + 1) AND
                                                                       (FORALL (zz: below(PQ`length - 1)):
                                                                          pum(ii) <= zz AND zz < pum(ii + 1) IMPLIES
                                                                           f(xispq`seq(zz)) >= f(xispq`seq(jj))))}) IN xispq`seq(jj) ELSE default[real] ENDIF) #)")
                                                        (("1"
                                                          (stop-rewrite
                                                           "xis_lem")
                                                          (("1"
                                                            (inst + "xis2")
                                                            (("1"
                                                              (hide -1)
                                                              (("1"
                                                                (lemma
                                                                 "Rie_sum_extend_union")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "a"
                                                                   "b"
                                                                   "f"
                                                                   "g")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "P"
                                                                       "Q")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "xis2")
                                                                          (("1"
                                                                            (replace
                                                                             -1
                                                                             +)
                                                                            (("1"
                                                                              (hide
                                                                               -1)
                                                                              (("1"
                                                                                (expand
                                                                                 "Rie_sum"
                                                                                 +)
                                                                                (("1"
                                                                                  (case
                                                                                   "FORALL (nn:nat): nn<= PQ`length-2 IMPLIES sigma[below(PQ`length - 1)]
                                                                                                    (0, nn,
                                                                                                     LAMBDA (n: below(PQ`length - 1)):
                                                                                                       f(xispq`seq(n)) * g(PQ`seq(1 + n)) -
                                                                                                        f(xispq`seq(n)) * g(PQ`seq(n)))
                                                                                                 >=
                                                                                                 sigma[below(partition_union(a, b)(P, Q)`length - 1)]
                                                                                                     (0, nn,
                                                                                                      LAMBDA (n: below(partition_union(a, b)(P, Q)`length - 1)):
                                                                                                        f(xis2`seq(partition_union_map_inv(a, b, P, Q)(n))) *
                                                                                                         g(partition_union(a, b)(P, Q)`seq(1 + n))
                                                                                                         -
                                                                                                         f(xis2`seq(partition_union_map_inv(a, b, P, Q)(n))) *
                                                                                                          g(partition_union(a, b)(P, Q)`seq(n)))")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "PQ`length-2")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     2)
                                                                                    (("2"
                                                                                      (induct
                                                                                       "nn")
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "sigma"
                                                                                           +)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "sigma"
                                                                                             +)
                                                                                            (("1"
                                                                                              (replace
                                                                                               "signame")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 "PQname")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "xis2"
                                                                                                   +)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (name
                                                                                                       "rr"
                                                                                                       "choose({jj: below(PQ`length - 1) |
                                                                                                          jj < pum(1 + sig(0)) AND
                                                                                                           (FORALL (zz: below(PQ`length - 1)):
                                                                                                              zz < pum(1 + sig(0)) IMPLIES
                                                                                                               f(xispq`seq(zz)) >= f(xispq`seq(jj)))})")
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (typepred
                                                                                                           "rr")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "0")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "g(PQ`seq(1)) >= g(PQ`seq(0))")
                                                                                                                (("1"
                                                                                                                  (mult-by
                                                                                                                   -4
                                                                                                                   "g(PQ`seq(1))-g(PQ`seq(0))")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "increasing?"
                                                                                                                     "ginc")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       "ginc"
                                                                                                                       "PQ`seq(0)"
                                                                                                                       "PQ`seq(1)")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "restrict")
                                                                                                                          (("1"
                                                                                                                            (typepred
                                                                                                                             "PQ")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "increasing?")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "0"
                                                                                                                                 "1")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (typepred
                                                                                                                         "PQ")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "1")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "nonempty?")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "empty?")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -3
                                                                                                               "sig(0)")
                                                                                                              (("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "jj!1")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "member")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (skeep)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "sigma"
                                                                                             +)
                                                                                            (("2"
                                                                                              (case
                                                                                               "f(xispq`seq(1 + j)) * g(PQ`seq(2 + j))
                                                                                        - f(xispq`seq(1 + j)) * g(PQ`seq(1 + j))>=f(xis2`seq(partition_union_map_inv(a, b, P, Q)(1 + j))) *
                                                                                          g(partition_union(a, b)(P, Q)`seq(2 + j))
                                                                                         -
                                                                                         f(xis2`seq(partition_union_map_inv(a, b, P, Q)(1 + j))) *
                                                                                          g(partition_union(a, b)(P, Q)`seq(1 + j))")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     "PQname")
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       "signame")
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "sig(1 + j) < P`length - 1")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "xis2"
                                                                                                           +)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (name
                                                                                                               "rr"
                                                                                                               "choose({jj: below(PQ`length - 1) |
                                                                                                                      (pum(sig(1 + j)) <= jj AND
                                                                                                                        jj < pum(1 + sig(1 + j)) AND
                                                                                                                         (FORALL (zz: below(PQ`length - 1)):
                                                                                                                            pum(sig(1 + j)) <= zz AND
                                                                                                                             zz < pum(1 + sig(1 + j))
                                                                                                                             IMPLIES
                                                                                                                             f(xispq`seq(zz)) >= f(xispq`seq(jj))))})")
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (typepred
                                                                                                                   "rr")
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "g(PQ`seq(2+j))>=g(PQ`seq(1+j))")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "1+j")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (split
                                                                                                                           -)
                                                                                                                          (("1"
                                                                                                                            (mult-by
                                                                                                                             -1
                                                                                                                             "g(PQ`seq(2+j))-g(PQ`seq(1+j))")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("2"
                                                                                                                              (typepred
                                                                                                                               "pum")
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "sig(1+j)")
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "P`seq(sig(1+j)) <= PQ`seq(1+j)")
                                                                                                                                  (("1"
                                                                                                                                    (typepred
                                                                                                                                     "PQ")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "strictly_increasing?")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "1+j"
                                                                                                                                         "pum(sig(1+j))")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (ground)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (typepred
                                                                                                                                       "sig")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "1+j")
                                                                                                                                        (("2"
                                                                                                                                          (ground)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("3"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("3"
                                                                                                                              (typepred
                                                                                                                               "pum")
                                                                                                                              (("3"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "1+sig(1+j)")
                                                                                                                                (("3"
                                                                                                                                  (case
                                                                                                                                   "P`seq(1+sig(1+j)) > PQ`seq(1+j)")
                                                                                                                                  (("1"
                                                                                                                                    (typepred
                                                                                                                                     "PQ")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "strictly_increasing?")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "pum(1+sig(1+j))"
                                                                                                                                         "1+j")
                                                                                                                                        (("1"
                                                                                                                                          (ground)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (typepred
                                                                                                                                       "sig")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "1+j")
                                                                                                                                        (("2"
                                                                                                                                          (ground)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (hide
                                                                                                                       2)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "increasing?"
                                                                                                                         "ginc")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           "ginc"
                                                                                                                           "PQ`seq(1+j)"
                                                                                                                           "PQ`seq(2+j)")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "restrict")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (typepred
                                                                                                                                 "PQ")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "increasing?")
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "1+j"
                                                                                                                                     "2+j")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (typepred
                                                                                                                             "PQ")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "2+j")
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("3"
                                                                                                                            (typepred
                                                                                                                             "PQ")
                                                                                                                            (("3"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "1+j")
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide
                                                                                                                 2)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "nonempty?")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "empty?")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -4
                                                                                                                       "sig(1+j)")
                                                                                                                      (("2"
                                                                                                                        (skosimp*)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "jj!1")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "member")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (case
                                                                                                             "sig(1+j) = P`length-1")
                                                                                                            (("1"
                                                                                                              (typepred
                                                                                                               "sig")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "1+j")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (typepred
                                                                                                                     "PQ")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "strictly_increasing?")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "1+j"
                                                                                                                         "PQ`length-1")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (ground)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("3"
                                                                                        (hide
                                                                                         2)
                                                                                        (("3"
                                                                                          (skosimp*)
                                                                                          (("3"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("4"
                                                                                        (hide
                                                                                         3)
                                                                                        (("4"
                                                                                          (skosimp*)
                                                                                          (("4"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("5"
                                                                                        (hide
                                                                                         2)
                                                                                        (("5"
                                                                                          (skosimp*)
                                                                                          (("5"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("6"
                                                                                        (hide
                                                                                         3)
                                                                                        (("6"
                                                                                          (skosimp*)
                                                                                          (("6"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (hide
                                                                                     2)
                                                                                    (("3"
                                                                                      (skosimp*)
                                                                                      (("3"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("4"
                                                                                    (hide
                                                                                     2)
                                                                                    (("4"
                                                                                      (skosimp*)
                                                                                      (("4"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (expand
                                                                                 "xis2")
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (hide
                                                                         -1)
                                                                        (("2"
                                                                          (skosimp*)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (ground)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (hide -1)
                                                                (("2"
                                                                  (label
                                                                   "exlem"
                                                                   -1)
                                                                  (("2"
                                                                    (hide -1)
                                                                    (("2"
                                                                      (split)
                                                                      (("1"
                                                                        (skosimp*)
                                                                        (("1"
                                                                          (expand
                                                                           "xis2"
                                                                           +)
                                                                          (("1"
                                                                            (lift-if)
                                                                            (("1"
                                                                              (ground)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (skosimp*)
                                                                        (("2"
                                                                          (expand
                                                                           "xis2")
                                                                          (("2"
                                                                            (name
                                                                             "rr"
                                                                             "choose({jj: below(PQ`length - 1) |
                                                                                     (pum(ii!1) <= jj AND
                                                                                       jj < pum(1 + ii!1) AND
                                                                                        (FORALL (zz: below(PQ`length - 1)):
                                                                                           pum(ii!1) <= zz AND zz < pum(1 + ii!1) IMPLIES
                                                                                            f(xispq`seq(zz)) >= f(xispq`seq(jj))))})")
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (typepred
                                                                                 "rr")
                                                                                (("1"
                                                                                  (typepred
                                                                                   "xispq")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "rr")
                                                                                    (("1"
                                                                                      (replace
                                                                                       "PQname")
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (case
                                                                                           "PQ`seq(rr) >= P`seq(ii!1) AND PQ`seq(1+rr) <= P`seq(1+ii!1)")
                                                                                          (("1"
                                                                                            (ground)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("2"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (typepred
                                                                                                       "pum")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "ii!1")
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           "PQname")
                                                                                                          (("1"
                                                                                                            (typepred
                                                                                                             "PQ")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "increasing?")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "pum(ii!1)"
                                                                                                                 "rr")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (typepred
                                                                                                       "pum")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "1+ii!1")
                                                                                                        (("2"
                                                                                                          (typepred
                                                                                                           "PQ")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "increasing?")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "1+rr"
                                                                                                               "pum(1+ii!1)")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (expand
                                                                                 "nonempty?")
                                                                                (("2"
                                                                                  (expand
                                                                                   "empty?")
                                                                                  (("2"
                                                                                    (reveal
                                                                                     "exlem")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "ii!1")
                                                                                      (("2"
                                                                                        (skosimp*)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -4
                                                                                           "jj!1")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "member")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide 2)
                                                          (("2"
                                                            (skosimp*)
                                                            (("2"
                                                              (expand
                                                               "nonempty?")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "ii!1")
                                                                (("2"
                                                                  (skosimp*)
                                                                  (("2"
                                                                    (expand
                                                                     "empty?")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "jj!1")
                                                                      (("2"
                                                                        (expand
                                                                         "member")
                                                                        (("2"
                                                                          (stop-rewrite
                                                                           "xis_lem")
                                                                          (("2"
                                                                            (replace
                                                                             -2)
                                                                            (("2"
                                                                              (replace
                                                                               -3)
                                                                              (("2"
                                                                                (replace
                                                                                 -4)
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("3"
                                                          (hide 2)
                                                          (("3"
                                                            (skosimp*)
                                                            (("3"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("4"
                                                          (hide 2)
                                                          (("4"
                                                            (skosimp*)
                                                            (("4"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("5"
                                                          (skosimp*)
                                                          (("5"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("6"
                                                          (skosimp*)
                                                          (("6"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide 2)
                                                        (("2"
                                                          (skeep)
                                                          (("2"
                                                            (typepred "ii")
                                                            (("2"
                                                              (label
                                                               "iitp"
                                                               -1)
                                                              (("2"
                                                                (case
                                                                 "FORALL (qq:below(PQ`length-1)): pum(ii)<=qq AND qq<pum(ii+1) IMPLIES (EXISTS (jj:below(PQ`length-1)): (pum(ii)<=jj AND jj<=qq AND (FORALL (zz:below(PQ`length-1)): pum(ii)<=zz AND zz<=qq IMPLIES f(xispq`seq(zz)) >= f(xispq`seq(jj)))))")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "pum(ii+1)-1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (split
                                                                       -)
                                                                      (("1"
                                                                        (skosimp*)
                                                                        (("1"
                                                                          (inst
                                                                           +
                                                                           "jj!1")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (skosimp*)
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "zz!1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide
                                                                         2)
                                                                        (("2"
                                                                          (lemma
                                                                           "partition_union_map_increasing")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "a"
                                                                             "b")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "P"
                                                                                 "Q"
                                                                                 "ii"
                                                                                 "1+ii")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide 2)
                                                                    (("2"
                                                                      (typepred
                                                                       "pum(1+ii)")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (lemma
                                                                           "partition_union_map_increasing")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "a"
                                                                             "b")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "P"
                                                                                 "Q"
                                                                                 "0"
                                                                                 "1+ii")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide 2)
                                                                  (("2"
                                                                    (induct
                                                                     "qq")
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (inst
                                                                         +
                                                                         "0")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (skosimp*)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (skolem
                                                                       1
                                                                       "rr")
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (label
                                                                           "iirr1"
                                                                           -3)
                                                                          (("2"
                                                                            (label
                                                                             "rr1ii1"
                                                                             -4)
                                                                            (("2"
                                                                              (label
                                                                               "rrlt"
                                                                               -1)
                                                                              (("2"
                                                                                (case
                                                                                 "pum(ii) <= rr AND rr < pum(ii + 1)")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (label
                                                                                       "iirr"
                                                                                       -1)
                                                                                      (("1"
                                                                                        (label
                                                                                         "rrii1"
                                                                                         -2)
                                                                                        (("1"
                                                                                          (skosimp*)
                                                                                          (("1"
                                                                                            (label
                                                                                             "iijj"
                                                                                             -4)
                                                                                            (("1"
                                                                                              (label
                                                                                               "jjrr"
                                                                                               -5)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "f(xispq`seq(rr+1)) < f(xispq`seq(jj!1))")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "rr+1")
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     "iirr1")
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "zz!1")
                                                                                                          (("2"
                                                                                                            (ground)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "jj!1")
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     "iijj")
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -6)
                                                                                                        (("1"
                                                                                                          (ground)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "zz!1")
                                                                                                          (("2"
                                                                                                            (ground)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (case
                                                                                   "pum(ii) = rr+1")
                                                                                  (("1"
                                                                                    (inst
                                                                                     +
                                                                                     "rr+1")
                                                                                    (("1"
                                                                                      (hide-all-but
                                                                                       (-1
                                                                                        +))
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (skosimp*)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     3)
                                                                                    (("2"
                                                                                      (hide
                                                                                       -2)
                                                                                      (("2"
                                                                                        (ground)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (hide-all-but
                                                                       1)
                                                                      (("3"
                                                                        (ground)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide-all-but
                                                 (1
                                                  "pumname"
                                                  "signame"
                                                  "altb"
                                                  "Pinc"))
                                                (("2"
                                                  (lemma
                                                   "partition_union_map_inv_def")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (inst - "a" "b")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (inst - "P" "Q")
                                                          (("2"
                                                            (inst - "0" "0")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (replace
                                                                 "pumname")
                                                                (("1"
                                                                  (replace
                                                                   "signame")
                                                                  (("1"
                                                                    (case
                                                                     "pum(0) = 0")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (ground)
                                                                        (("1"
                                                                          (hide
                                                                           2)
                                                                          (("1"
                                                                            (typepred
                                                                             "pum")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "1")
                                                                              (("1"
                                                                                (expand
                                                                                 "strictly_increasing?")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "0"
                                                                                   "1")
                                                                                  (("1"
                                                                                    (ground)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide 2)
                                                                      (("2"
                                                                        (hide
                                                                         -1)
                                                                        (("2"
                                                                          (typepred
                                                                           "pum")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "0")
                                                                            (("2"
                                                                              (reveal
                                                                               "PQname")
                                                                              (("2"
                                                                                (typepred
                                                                                 "PQ")
                                                                                (("2"
                                                                                  (expand
                                                                                   "strictly_increasing?")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "0"
                                                                                     "pum(0)")
                                                                                    (("2"
                                                                                      (ground)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((member const-decl "bool" fseqs structures)
    (strictly_increasing? const-decl "bool" sort_fseq structures)
    (increasing? const-decl "bool" sort_fseq structures)
    (fseq type-eq-decl nil fseqs structures)
    (barray type-eq-decl nil fseqs structures)
    (increasing? const-decl "bool" real_fun_preds reals)
    (strictly_sort const-decl "{ss: fseq |
   strictly_increasing?(ss) AND
    (FORALL (x: T): member(x, s) IFF member(x, ss))}" sort_fseq structures)
    (sigma_scal formula-decl nil sigma reals)
    (T_high type-eq-decl nil sigma reals) (T_low type-eq-decl nil sigma reals)
    (default const-decl "T" fseqs structures)
    (sigma def-decl "real" sigma reals))
   nil)
  (Rie_sum_diff_extend_union-1 nil 3491905819
   (""
    (case "FORALL (a, b: real, f, g: [real -> real]):
                                    a < b AND increasing?[(LAMBDA (x: real): a <= x AND x <= b)]
             (restrict[real, (LAMBDA (x: real): a <= x AND x <= b), real]
                  (g)) IMPLIES
                                     (FORALL (P, Q: partition(a, b), (xis: xis?(a, b, P))): strictly_increasing?(P) IMPLIES
                                        LET PQ:
                                              {PQ: partition(a, b) |
                                                       (FORALL (x: real):
                                                          member(x, PQ) IFF
                                                           (member(x, P) OR member(x, Q)))
                                                        AND strictly_increasing?(PQ)}
                                              = partition_union(a, b)(P, Q)
                                          IN
                                          FORALL (xispq1: xis?(a, b, PQ)):
                                            EXISTS (xispq2: xis?(a, b, PQ)):
                                              abs(Rie_sum(a, b, g, P, xis, f) -
                                               Rie_sum(a, b, g, PQ, xispq1, f))
                                               <=
                                               sigma[below(PQ`length - 1)]
                                                   (0, PQ`length - 2,
                                                    LAMBDA (n: below(PQ`length - 1)):
                                                      abs(f(xispq2`seq(n)) - f(xispq1`seq(n))) *
                                                       (g(PQ`seq(n + 1)) - g(PQ`seq(n)))))")
    (("1" (skeep)
      (("1" (skeep)
        (("1" (inst - "a" "b" "f" "g")
          (("1" (assert)
            (("1" (label "main1" 1)
              (("1" (label "hyp" -1)
                (("1" (hide ("main1" "hyp"))
                  (("1" (lemma "Riemann_sum_strictly_sort")
                    (("1" (inst - "a" "b" "f" "g")
                      (("1" (assert)
                        (("1" (inst - "P" "Rie_sum(a, b, g, P, xis, f)")
                          (("1" (skolem -1 "xisss")
                            (("1" (reveal "hyp")
                              (("1" (copy "hyp")
                                (("1" (hide "hyp")
                                  (("1" (label "hyp2" -1)
                                    (("1"
                                      (inst - "strictly_sort(P)" "Q" "xisss")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (hide "hyp2")
                                          (("1"
                                            (reveal "main1")
                                            (("1"
                                              (skeep)
                                              (("1"
                                                (hide "main1")
                                                (("1"
                                                  (lemma
                                                   "partition_strictly_sort_union")
                                                  (("1"
                                                    (inst - "a" "b")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (inst - "P" "Q")
                                                        (("1"
                                                          (reveal "hyp2")
                                                          (("1"
                                                            (copy "hyp2")
                                                            (("1"
                                                              (hide "hyp2")
                                                              (("1"
                                                                (label
                                                                 "hyp3"
                                                                 -1)
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "xispq1")
                                                                  (("1"
                                                                    (skosimp*)
                                                                    (("1"
                                                                      (hide
                                                                       "hyp3")
                                                                      (("1"
                                                                        (reveal
                                                                         "main1")
                                                                        (("1"
                                                                          (hide
                                                                           2)
                                                                          (("1"
                                                                            (inst
                                                                             +
                                                                             "xispq2!1")
                                                                            (("1"
                                                                              (name
                                                                               "GG"
                                                                               "(LAMBDA (n: below(partition_union(a, b)(P, Q)`length - 1)):
                                                                               abs(f(xispq2!1`seq(n)) - f(xispq1`seq(n))) *
                                                                                g(partition_union(a, b)(P, Q)`seq(1 + n))
                                                                                -
                                                                                abs(f(xispq2!1`seq(n)) - f(xispq1`seq(n))) *
                                                                                 g(partition_union(a, b)(P, Q)`seq(n)))")
                                                                              (("1"
                                                                                (replace
                                                                                 -1)
                                                                                (("1"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("1"
                                                                                    (hide
                                                                                     "main1")
                                                                                    (("1"
                                                                                      (reveal
                                                                                       "hyp3")
                                                                                      (("1"
                                                                                        (name
                                                                                         "FF"
                                                                                         "(LAMBDA (n:
                                                                                       below(partition_union(a, b)
                                                                                                            (strictly_sort(P), Q)`length
                                                                                              - 1)):
                                                                               abs(f(xispq2!1`seq(n)) - f(xispq1`seq(n))) *
                                                                                g(partition_union(a, b)(P, Q)`seq(1 + n))
                                                                                -
                                                                                abs(f(xispq2!1`seq(n)) - f(xispq1`seq(n))) *
                                                                                 g(partition_union(a, b)(P, Q)`seq(n)))")
                                                                                        (("1"
                                                                                          (replace
                                                                                           -3
                                                                                           :dir
                                                                                           rl)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("1"
                                                                                                (reveal
                                                                                                 "main1")
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   (2
                                                                                                    3))
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -3
                                                                                                     :dir
                                                                                                     rl)
                                                                                                    (("1"
                                                                                                      (name
                                                                                                       "CC1"
                                                                                                       "Rie_sum(a, b, g, P, xis, f) -
                          Rie_sum(a, b, g, partition_union(a, b)(P, Q), xispq1, f)")
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (case
                                                                                                             "sigma[below(partition_union(a, b)(strictly_sort(P), Q)`length - 1)]
                                                                            (0, partition_union(a, b)(P, Q)`length - 2, FF) = sigma[below(partition_union(a, b)(P, Q)`length - 1)]
                                                                            (0, partition_union(a, b)(P, Q)`length - 2, GG)")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide
                                                                                                               "main1")
                                                                                                              (("2"
                                                                                                                (hide
                                                                                                                 "hyp3")
                                                                                                                (("2"
                                                                                                                  (case
                                                                                                                   "NOT FF = GG")
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     2)
                                                                                                                    (("1"
                                                                                                                      (decompose-equality
                                                                                                                       +)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "FF"
                                                                                                                         +)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "GG"
                                                                                                                           +)
                                                                                                                          (("1"
                                                                                                                            (propax)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (replace
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (case
                                                                                                                         "FORALL (nn:below(partition_union(a, b)(P, Q)`length - 1)): sigma[below(partition_union(a, b)(strictly_sort(P), Q)`length - 1)]
                                                                                             (0, nn, GG)
                                                                                          =
                                                                                          sigma[below(partition_union(a, b)(P, Q)`length - 1)]
                                                                                              (0, nn, GG)")
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "partition_union(a, b)(P, Q)`length - 2")
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (hide
                                                                                                                           2)
                                                                                                                          (("2"
                                                                                                                            (induct
                                                                                                                             "nn")
                                                                                                                            (("1"
                                                                                                                              (flatten)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "sigma"
                                                                                                                                 +)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "sigma"
                                                                                                                                   +)
                                                                                                                                  (("1"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (skolem
                                                                                                                               1
                                                                                                                               "nn")
                                                                                                                              (("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "sigma"
                                                                                                                                   +)
                                                                                                                                  (("2"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (hide
                                                                                                                         2)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("3"
                                                                                                                    (hide
                                                                                                                     2)
                                                                                                                    (("3"
                                                                                                                      (skosimp*)
                                                                                                                      (("3"
                                                                                                                        (ground)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (skeep)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (typepred
                                                                                     "xispq2!1")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "ii")
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (skeep)
                                                                      (("2"
                                                                        (typepred
                                                                         "xispq1")
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "ii")
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide -1)
                                          (("2"
                                            (lemma
                                             "partition_strictly_sort_union")
                                            (("2"
                                              (inst - "a" "b")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (inst - "P" "Q")
                                                  (("2" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (lemma "Riemann?_Rie")
                            (("2" (inst - "a" "b" "f" "g")
                              (("2" (split -)
                                (("1" (inst - "P" "xis") nil nil)
                                 ("2" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (hide 2)
              (("2" (hide -1)
                (("2" (skosimp*)
                  (("2" (lemma "partition_strictly_sort_union")
                    (("2" (inst - "a" "b")
                      (("2" (assert)
                        (("2" (inst - "P!1" "Q!1") (("2" (assert) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("3" (hide -1)
              (("3" (lemma "partition_strictly_sort_union")
                (("3" (inst - "a" "b") (("3" (assert) nil nil)) nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (hide 2)
      (("2" (skeep)
        (("2" (skeep)
          (("2" (name "PQ" "partition_union(a,b)(P,Q)")
            (("2" (replace -1)
              (("2" (assert)
                (("1" (skeep)
                  (("1" (typepred "xispq1") (("1" (postpone) nil nil)) nil))
                  nil)
                 ("2" (postpone) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)))

