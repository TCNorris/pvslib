derivatives_subtype [T: TYPE FROM real, S: TYPE FROM T ] % Welcome
% T - larger domain of differentiation
% S - smaller domain of differentitation

      	      : THEORY
	      
%Created by            Ricky Bulter
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%| This relates the derivative   |%
%| of a function on a smaller    |%
%| domain to the derivative on   |%
%| a larger domain               |%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Update by:    	    J Tanner Slagel
%	                   Mar 2020
%           %- Added some lemmas -%          

%-----     %
  BEGIN
%     -----%

%-------------------------------------------------------------------------
%%Assume that the domain is a derivative domain, and does not have one
%  element. 
%-------------------------------------------------------------------------

  ASSUMING
    IMPORTING deriv_domain_def

    deriv_domain     : ASSUMPTION deriv_domain?[T]
    not_one_element  : ASSUMPTION not_one_element?[T]

  ENDASSUMING

%-------------------------------------------------------------------------
%%Importing derivatives on domain T, and general derivative theory
%  to talk about derivatives on domain S.
%-------------------------------------------------------------------------

  IMPORTING derivatives[T], derivatives

%-------------------------------------------------------------------------
%%Define f
%-------------------------------------------------------------------------

  f: VAR [T -> real]

%-------------------------------------------------------------------------
%%If a function is derivable on a larger domain, and the smaller
%  sub-domain is a derivative domain, then the function is derivable
%  on the smaller domain 
%-------------------------------------------------------------------------

  derivable_subtype: LEMMA
    derivable?[T](f) AND deriv_domain?[S] AND not_one_element?[S] 
      IMPLIES derivable?[S](f)

%-------------------------------------------------------------------------
%%The derivative of a function on a subdomain is the same as the
%  derivative on the larger domain, given that the subdomain is an open
%  set
%-------------------------------------------------------------------------

  deriv_subtype: LEMMA
    derivable?[T](f) AND del_neigh_all?[S] AND not_one_element?[S] 
      IMPLIES deriv[S](f) = (LAMBDA (s:S): deriv[T](f)(s))

%-------------------------------------------------------------------------
%%The assumption in deriv_subtype can be weakened to allow S
%  to be a derivative domain with not one element. 
%-------------------------------------------------------------------------

  deriv_subtype_dd: LEMMA
    derivable?[T](f) AND deriv_domain?[S] AND not_one_element?[S] 
           IMPLIES deriv[S](f) = (LAMBDA (s:S): deriv[T](f)(s))

%-------------------------------------------------------------------------
%%This is a trivial rewriting of the deriv_subtype lemma,
%  but in terms of a function g with domain S, that agrees with f on S.
%-------------------------------------------------------------------------

  deriv_subtype_eq: LEMMA
    FORALL(g:[S->real]):
      ((derivable?[T](f) AND deriv_domain?[S] AND not_one_element?[S])
      AND (LAMBDA(s:S): f(s)) = g)
        IMPLIES
	  (derivable?[S](g) AND
	  deriv[S](g) = (LAMBDA(s:S): deriv[T](f)(s)))

%-------------------------------------------------------------------------
%%If the subdomain contains all elements of the larger domain around a
%  point, then derivability at the point is equivalent regardless of the
%  which domain is being considered  (T or S)
%-------------------------------------------------------------------------

  derivable_subtype_del: LEMMA
    FORALL(g:[S->real],
    x:{xx:S | EXISTS(del:posreal):
              FORALL(y:T): abs(xx-y)<del IMPLIES
		member[T](y,fullset[S])}):
       ((deriv_domain?[S] AND not_one_element?[S])
       AND (LAMBDA(s:S): f(s)) = g)
         IMPLIES (derivable?[S](g,x) IFF derivable?[T](f,x))

%-------------------------------------------------------------------------
%%If the subdomain contains all elements of the larger domain around a
%  point, then the derivative at the point is equivalent regardless of the
%  which domain is being considered  (T or S)
%-------------------------------------------------------------------------

  deriv_subtype_del: LEMMA
    FORALL(g:[S->real],
    x:{xx:S | EXISTS(del:posreal):
              FORALL(y:T): abs(xx-y)<del IMPLIES
	        member[T](y,fullset[S])}):
       (((deriv_domain?[S] AND not_one_element?[S])
       AND (LAMBDA(s:S): f(s)) = g)
       AND (derivable?[S](g,x) OR derivable?[T](f,x)))
	  IMPLIES (deriv[S](g,x) = deriv[T](f,x))

  %~~~       End     ~~~%    
  END derivatives_subtype
