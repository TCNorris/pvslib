derivatives_subtype [T: TYPE FROM real, S: TYPE FROM T ] : THEORY
BEGIN

  ASSUMING
    IMPORTING deriv_domain_def

    deriv_domain     : ASSUMPTION deriv_domain?[T]

    not_one_element  : ASSUMPTION not_one_element?[T]

  ENDASSUMING

  IMPORTING derivatives[T], derivatives

  f: VAR [T -> real]

  derivable_subtype: LEMMA derivable?[T](f) AND deriv_domain?[S] AND not_one_element?[S] 
           IMPLIES derivable?[S](f)


  deriv_subtype: LEMMA derivable?[T](f) AND del_neigh_all?[S] AND not_one_element?[S] 
           IMPLIES deriv[S](f) = (LAMBDA (s:S): deriv[T](f)(s))

  deriv_subtype_dd: LEMMA derivable?[T](f) AND deriv_domain?[S] AND not_one_element?[S] 
           IMPLIES deriv[S](f) = (LAMBDA (s:S): deriv[T](f)(s))


END derivatives_subtype
