(real_fun_continuity_equiv
 (real_fun_continuity_equiv_TCC1 0
  (real_fun_continuity_equiv_TCC1-1 nil 3464084093
   ("" (lemma "real_metric_space") (("" (inst - "fullset[real]") nil nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil) (fullset const-decl "set" sets nil)
    (real_metric_space formula-decl nil real_metric_space nil))
   nil
   (real_fun_continuity_equiv assuming
    "continuity_ms_def[real, real_metric_space.real_dist, real, real_metric_space.real_dist].continuity_ms_def"
    "fullset_metric_space1: ASSUMPTION metric_spaces_def[continuity_ms_def.T1, continuity_ms_def.d1].metric_space?(sets[continuity_ms_def.T1].fullset)")))
 (real_fun_continuity_equiv 0
  (real_fun_continuity_equiv-1 nil 3464084093
   ("" (skeep)
    (("" (expand "continuous?")
      (("" (expand "continuous?")
        (("" (prop)
          (("1" (skeep)
            (("1" (inst - "x0")
              (("1" (skosimp*)
                (("1" (expand "continuous_at?")
                  (("1" (inst - "epsilon!1")
                    (("1" (skosimp*)
                      (("1" (inst + "delta!1")
                        (("1" (skosimp*)
                          (("1" (inst - "x!1")
                            (("1" (expand "member")
                              (("1" (expand "ball")
                                (("1" (expand "real_dist")
                                  (("1" (split)
                                    (("1" (grind) nil nil)
                                     ("2" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "fullset") (("2" (propax) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 2)
                (("2" (expand "fullset") (("2" (propax) nil nil)) nil)) nil))
              nil))
            nil)
           ("2" (expand "continuous_at?")
            (("2" (skosimp*)
              (("2" (inst - "x!1")
                (("2" (inst - "epsilon!1")
                  (("2" (skosimp*)
                    (("2" (inst + "delta!1")
                      (("2" (skosimp*)
                        (("2" (inst - "y!1")
                          (("2" (expand "member")
                            (("2" (expand "ball")
                              (("2" (expand "real_dist")
                                (("2" (grind) nil nil)) nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((continuous? const-decl "bool" continuous_functions nil)
    (continuous? const-decl "bool" continuity_ms_def nil)
    (x0 skolem-const-decl "real" real_fun_continuity_equiv nil)
    (fullset const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (continuous_at? const-decl "bool" continuity_ms_def nil)
    (x!1 skolem-const-decl "real" real_fun_continuity_equiv nil)
    (ball const-decl "set[T]" metric_spaces nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (real_dist const-decl "nnreal" real_metric_space nil)
    (member const-decl "bool" sets nil) (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (continuous? const-decl "bool" continuity_ms_def nil)
    (continuous? const-decl "bool" continuous_functions nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   shostak)))

