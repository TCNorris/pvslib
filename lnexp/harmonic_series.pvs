harmonic_series : THEORY
  BEGIN

  IMPORTING series@series, expt

  n, m : VAR nat

  harmonic_seq: sequence[real] = LAMBDA n: 1 / (n + 1)

  harmonic_bounds : LEMMA
    m + 1 <= 2^(n+1) IMPLIES 1 / 2^(n+1) <= harmonic_seq(m)

  harmonic_sections : LEMMA
    sigma(2^n, 2^(n+1) - 1, harmonic_seq) >= 1/2

  harmonic_lower_bound : LEMMA
    series(harmonic_seq)(2^n - 1) >= 1 + n / 2

  harmonic_series_diverges : THEOREM
    NOT convergent?(series(harmonic_seq))

  a : VAR posreal

  hathat_lt1 : LEMMA
    n > 1 IMPLIES (a <= 1 IFF n^^a <= n)

  inverse_power_convergence : THEOREM
    a < 1 IMPLIES NOT convergent?(series(LAMBDA n: 1 / (n+1)^^a))

  END harmonic_series
