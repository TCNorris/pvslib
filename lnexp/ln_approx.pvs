ln_approx: THEORY
%-----------------------------------------------------------------------------
%      ln_approx by David Lester  Manchester Univ
%                    Cesar Munoz  NASA
%	       Anthony Narkawicz  NASA
%                    Aaron Dutle  NASA
%      ---------
%      Defines upper and lower bounds on ln:
%           - ln_lb(a,n) <= ln(a) <= ln_ub(a,n)
%-----------------------------------------------------------------------------

BEGIN

  IMPORTING ln_series,reals@log_nat, reals@log_int

  m,n:  VAR nat
  x:    VAR real
  px:   VAR posreal
  pn:   VAR posnat
  xgt1,ygt1: VAR {x:posreal | x > 1}
  xge1,yge1: VAR {x:posreal | x>=1} 
  x12, y12: VAR {x:posreal | x >= 1 AND x<=2}
  xlg2, ylg2: VAR {x:posreal | x>1 AND x<=2} 

  a(xlg2): {x:posreal | x>0 AND x<= 1/3} = 
      (xlg2-1)/(xlg2+1) 

  split_log: LEMMA ln(xlg2) = ln(1+a(xlg2))-ln(1-a(xlg2))
  
  ln12_alt_seq(ax:{x:real | x>=0 AND x<=1/3}): sequence[real] = (LAMBDA (n:nat): IF even?(n) THEN 0 ELSE 2*ax^n/n ENDIF)

  ln12_alt_converges: LEMMA conv_series?(ln12_alt_seq(a(xlg2))) 

  ln12_alt_equals: LEMMA ln(xlg2) = inf_sum(ln12_alt_seq(a(xlg2)))

  ln12_lb: LEMMA series( ln12_alt_seq(a(xlg2)))(2*n+1)<=ln(xlg2)

  ln12_ub: LEMMA series( ln12_alt_seq(a(xlg2)))(2*n+1) + 1/(6*(n+1))*9^(-n)>=ln(xlg2)

  ln_alt_series_it(px,n,x): RECURSIVE real =
    IF n=0 THEN 1 + x 
    ELSE ln_alt_series_it(px, n-1, px*px*(1/(2*n+1)+ x)) 
    ENDIF MEASURE n

  ln_alt_series(xlg2,n): posreal =
     LET A = a(xlg2) IN 
     2*A*ln_alt_series_it(A,n,0)

  ln_alt_series_equal: LEMMA 
    ln_alt_series(xlg2,n) = series( ln12_alt_seq(a(xlg2)))(2*n+1)

  ln12_alt_lb(x12, n): {x: real |0<=x AND  x<=ln(x12)} = 
      IF x12 = 1 THEN 0 
      ELSE ln_alt_series(x12,n) 
      ENDIF
  ln12_alt_ub(x12, n): {x: real |0<=x AND  x>=ln(x12)} = 
      IF x12 = 1 THEN 0 
      ELSE ln_alt_series(x12,n) +  1/(6*(n+1))*9^(-n)
      ENDIF

  ln12_alt_lb_increasing: LEMMA 
    x12<=y12 IMPLIES ln12_alt_lb(x12, n)<= ln12_alt_lb(y12, n)

  ln12_alt_ub_increasing: LEMMA 
    x12<=y12 IMPLIES ln12_alt_ub(x12, n)<= ln12_alt_ub(y12, n)

  ln_2m_lb(n,m): {x:real | x<=m*ln(2)} = 
        IF m=0 THEN 0
        ELSE m*ln12_alt_lb(2,n)
        ENDIF 

  ln_2m_ub(n,m): {x:real | x>=m*ln(2)} = 
        IF m=0 THEN 0
        ELSE m*ln12_alt_ub(2,n)
        ENDIF 

  ln_gt1_alt_lb(xge1,n): {x:nnreal | x<=ln(xge1)} = 
        LET (N,Y) = log_nat(xge1, 2) IN
        ln_2m_lb(n,N)+ ln12_alt_lb(Y,n)

  ln_gt1_alt_ub(xge1,n): {x:nnreal | x>=ln(xge1)} = 
        LET (N,Y) = log_nat(xge1, 2) IN
        ln_2m_ub(n,N)+ ln12_alt_ub(Y,n) 

  ln_gt1_alt_lb_increasing: LEMMA  
    xge1 <= yge1 IMPLIES ln_gt1_alt_lb(xge1,n) <= ln_gt1_alt_lb(yge1,n)

  ln_gt1_alt_ub_increasing: LEMMA 
    xge1 <= yge1 IMPLIES ln_gt1_alt_ub(xge1,n) <= ln_gt1_alt_ub(yge1,n)

  ln_lb(px,n): real = IF    px < 1 THEN -ln_gt1_alt_ub(1/px,n )
                      ELSE ln_gt1_alt_lb(px, n)    ENDIF

  ln_ub(px,n): real = IF    px < 1 THEN -ln_gt1_alt_lb(1/px, n)
                      ELSE ln_gt1_alt_ub(px, n)    ENDIF

  ln_lb_increasing: LEMMA FORALL (px,py:posreal): 
    px <= py IMPLIES ln_lb(px,n) <= ln_lb(py,n)

  ln_ub_increasing: LEMMA FORALL (px,py:posreal): 
    px <= py IMPLIES ln_ub(px,n) <= ln_ub(py,n)

  ln_bounds: LEMMA ln_lb(px,n) <= ln(px) AND ln(px) <= ln_ub(px,n)

  %%% Relationship of floor(ln(px)/ln(py)) to log_nat

  floor_eq_log_nat_ge_1: LEMMA
    FORALL ((xp:real|xp>=1),(np:posnat|np>1)):
    floor(ln(xp)/ln(np)) = log_nat(xp,np)`1

END ln_approx
