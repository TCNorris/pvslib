(sturmsquarefree
 (sturm_sequence?_TCC1 0
  (sturm_sequence?_TCC1-1 nil 3583755671 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (^ const-decl "real" exponentiation nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (rat_max application-judgement "{s: rat | s >= q AND s >= r}" real_defs
     nil)
    (int_max application-judgement "{k: int | i <= k AND j <= k}" real_defs
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (/= const-decl "boolean" notequal nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   nil
   (sturm_sequence? subtype
    "real_defs.max((number_fields.-)(sturmsquarefree.n(0), 1), 0)" "nat")))
 (sturm_sequence?_TCC2 0
  (sturm_sequence?_TCC2-1 nil 3583755671 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (poly_deriv const-decl "real" polynomials reals)
    (^ const-decl "real" exponentiation nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (/= const-decl "boolean" notequal nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (int_max application-judgement "{k: int | i <= k AND j <= k}" real_defs
     nil)
    (rat_max application-judgement "{s: rat | s >= q AND s >= r}" real_defs
     nil)
    (real_plus_real_is_real application-judgement "real" reals nil))
   nil
   (sturm_sequence? subtype "(number_fields.-)(sturmsquarefree.i, 1)" "nat")))
 (sturm_sequence_degree_1 0
  (sturm_sequence_degree_1-2 "" 3790098756
   ("" (skeep)
    (("" (expand "sturm_sequence?")
      (("" (assert)
        (("" (split +)
          (("1" (skeep) (("1" (assert) nil nil)) nil)
           ("2" (skeep)
            (("2" (case "i = 1")
              (("1" (replaces -1)
                (("1" (replace -5)
                  (("1" (expand "poly_deriv" -2) (("1" (assert) nil nil))
                    nil))
                  nil))
                nil)
               ("2" (assert) nil nil))
              nil))
            nil)
           ("3" (skeep) (("3" (assert) nil nil)) nil)
           ("4" (skeep)
            (("4" (assert) (("4" (replace -2) (("4" (grind) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (sturm_sequence_degree_1-1 nil 3588942625
   ("" (skeep)
    (("" (expand "sturm_sequence?")
      (("" (assert)
        (("" (split +)
          (("1" (skeep) (("1" (assert) nil nil)) nil)
           ("2" (skeep)
            (("2" (case "i = 1")
              (("1" (replaces -1)
                (("1" (replace -5)
                  (("1" (expand "poly_deriv" -2) (("1" (assert) nil nil))
                    nil))
                  nil))
                nil)
               ("2" (assert) nil nil))
              nil))
            nil)
           ("3" (skeep) (("3" (assert) nil nil)) nil)
           ("4" (skeep)
            (("4" (assert)
              (("4" (replaces -1)
                (("4" (replace -2) (("4" (grind) nil nil)) nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((sturm_sequence? const-decl "bool" sturmsquarefree nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (poly_deriv const-decl "real" polynomials reals)
    (TRUE const-decl "bool" booleans nil)
    (expt def-decl "real" exponentiation nil)
    (^ const-decl "real" exponentiation nil)
    (sigma def-decl "real" sigma reals)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (sign_ext const-decl
     "{sig: real | (sig = -1 OR sig = 1 OR sig = 0) AND sig * x = abs(x)}"
     sign reals)
    (max_npreal_0 formula-decl nil min_max reals)
    (int_minus_int_is_int application-judgement "int" integers nil))
   shostak))
 (sturm_seq_repeated_root 0
  (sturm_seq_repeated_root-1 nil 3584191381
   ("" (skeep)
    ((""
      (case "FORALL (i:nat): i-1>=0 AND i+1<=m AND polynomial(p(i),n(i))(x)=0 IMPLIES (polynomial(p(i-1),n(i-1))(x)=0 IFF polynomial(p(i+1),n(i+1))(x)=0)")
      (("1" (skeep)
        (("1"
          (case "FORALL (j:nat): i-j>=0 IMPLIES FORALL (k:nat): k<=j IMPLIES polynomial(p(i-k), n(i-k))(x) = 0")
          (("1"
            (case "FORALL (j:nat): i+j<=m IMPLIES FORALL (k:nat): k<=j IMPLIES  polynomial(p(i+k), n(i+k))(x) = 0")
            (("1" (skeep)
              (("1" (case "j>=i")
                (("1" (inst - "j-i")
                  (("1" (assert)
                    (("1" (inst - "j-i") (("1" (assert) nil nil)) nil)) nil)
                   ("2" (assert) nil nil))
                  nil)
                 ("2" (inst -2 "i-j")
                  (("1" (assert)
                    (("1" (inst -2 "i-j") (("1" (assert) nil nil)) nil)) nil)
                   ("2" (assert) nil nil))
                  nil))
                nil))
              nil)
             ("2" (hide (-1 2))
              (("2" (induct "j")
                (("1" (assert) (("1" (skeep) (("1" (assert) nil nil)) nil))
                  nil)
                 ("2" (assert)
                  (("2" (skosimp*)
                    (("2" (assert)
                      (("2" (case "k!1=0 OR k!1=1")
                        (("1" (ground) nil nil)
                         ("2" (flatten)
                          (("2" (inst-cp - "k!1-1")
                            (("2" (inst - "k!1-2")
                              (("1" (assert)
                                (("1" (assert)
                                  (("1" (inst - "i-1+k!1")
                                    (("1" (assert) nil nil)) nil))
                                  nil))
                                nil)
                               ("2" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (hide 2)
            (("2" (induct "j")
              (("1" (assert) (("1" (skosimp*) (("1" (assert) nil nil)) nil))
                nil)
               ("2" (skosimp*)
                (("2" (assert)
                  (("2" (case "k!1=0")
                    (("1" (assert) nil nil)
                     ("2" (assert)
                      (("2" (inst-cp - "k!1-1")
                        (("2" (case "k!1=1")
                          (("1" (hide -2)
                            (("1" (assert)
                              (("1" (inst - "i") (("1" (assert) nil nil))
                                nil))
                              nil))
                            nil)
                           ("2" (inst - "k!1-2")
                            (("1" (assert)
                              (("1" (inst - "i-k!1+1")
                                (("1" (assert) nil nil)) nil))
                              nil)
                             ("2" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("3" (skosimp*) (("3" (assert) nil nil)) nil)
               ("4" (assert) (("4" (skosimp*) (("4" (assert) nil nil)) nil))
                nil)
               ("5" (skosimp*) (("5" (assert) nil nil)) nil)
               ("6" (skosimp*) (("6" (assert) nil nil)) nil)
               ("7" (skosimp*) (("7" (assert) nil nil)) nil))
              nil))
            nil)
           ("3" (skosimp*) (("3" (assert) nil nil)) nil))
          nil))
        nil)
       ("2" (hide 2)
        (("2" (skeep)
          (("2" (assert)
            (("2" (expand "sturm_sequence?")
              (("2" (flatten)
                (("2" (inst - "x" "i")
                  (("2" (assert)
                    (("2" (expand "sign_ext" -7)
                      (("2" (lift-if)
                        (("2" (lift-if)
                          (("2" (lift-if)
                            (("2" (lift-if)
                              (("2" (assert) (("2" (ground) nil nil)) nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((IFF const-decl "[bool, bool -> bool]" booleans nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (sequence type-eq-decl nil sequences nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (<= const-decl "bool" reals nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (k!1 skolem-const-decl "nat" sturmsquarefree nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (pred type-eq-decl nil defined_types nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (m skolem-const-decl "nat" sturmsquarefree nil)
    (j skolem-const-decl "upto(m)" sturmsquarefree nil)
    (i skolem-const-decl "nat" sturmsquarefree nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (k!1 skolem-const-decl "nat" sturmsquarefree nil)
    (sturm_sequence? const-decl "bool" sturmsquarefree nil)
    (sign_ext const-decl
     "{sig: real | (sig = -1 OR sig = 1 OR sig = 0) AND sig * x = abs(x)}"
     sign reals)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   shostak))
 (sturm_seq_last_nonzero 0
  (sturm_seq_last_nonzero-2 "" 3790098758
   ("" (skeep)
    (("" (skeep)
      (("" (case "NOT FORALL (xyzp:real): polynomial(p(m),n(m))(xyzp) = 0")
        (("1" (skeep)
          (("1" (expand "sturm_sequence?")
            (("1" (flatten)
              (("1" (inst -6 "xyz" "xyzp")
                (("1" (expand "sign_ext" -6)
                  (("1" (assert)
                    (("1" (lift-if) (("1" (assert) nil nil)) nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (lemma "polynomial_eq_coeff")
          (("2" (inst - "p(m)" "LAMBDA (i:nat): 0" "n(m)")
            (("2" (assert)
              (("2" (flatten)
                (("2" (hide -2)
                  (("2" (split -)
                    (("1" (inst - "n(m)")
                      (("1" (expand "sturm_sequence?")
                        (("1" (flatten)
                          (("1" (inst -5 "m") (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil)
                     ("2" (decompose-equality 1)
                      (("2" (inst - "x!1")
                        (("2" (assert)
                          (("2" (replaces -1)
                            (("2" (expand "polynomial" +)
                              (("2" (rewrite "sigma_restrict_eq_0")
                                (("2" (skosimp*)
                                  (("2" (assert)
                                    (("2" (lift-if) (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (sturm_seq_last_nonzero-1 nil 3588410248
   ("" (skeep)
    (("" (skeep)
      (("" (case "NOT FORALL (xyzp:real): polynomial(p(m),n(m))(xyzp) = 0")
        (("1" (skeep)
          (("1" (expand "sturm_sequence?")
            (("1" (flatten)
              (("1" (inst -6 "xyz" "xyzp")
                (("1" (expand "sign_ext" -6)
                  (("1" (assert)
                    (("1" (assert)
                      (("1" (lift-if) (("1" (assert) nil nil)) nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (lemma "polynomial_eq_coeff")
          (("2" (inst - "p(m)" "LAMBDA (i:nat): 0" "n(m)")
            (("2" (assert)
              (("2" (flatten)
                (("2" (hide -2)
                  (("2" (split -)
                    (("1" (inst - "n(m)")
                      (("1" (expand "sturm_sequence?")
                        (("1" (flatten)
                          (("1" (inst -5 "m") (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil)
                     ("2" (decompose-equality 1)
                      (("2" (inst - "x!1")
                        (("2" (assert)
                          (("2" (replaces -1)
                            (("2" (expand "polynomial" +)
                              (("2" (rewrite "sigma_restrict_eq_0")
                                (("2" (skosimp*)
                                  (("2" (assert)
                                    (("2" (lift-if) (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((polynomial_eq_coeff formula-decl nil polynomials reals)
    (T_low type-eq-decl nil sigma reals) (T_high type-eq-decl nil sigma reals)
    (^ const-decl "real" exponentiation nil)
    (/= const-decl "boolean" notequal nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (sigma_restrict_eq_0 formula-decl nil sigma reals)
    (real_times_real_is_real application-judgement "real" reals nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (sign_ext const-decl
     "{sig: real | (sig = -1 OR sig = 1 OR sig = 0) AND sig * x = abs(x)}"
     sign reals)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sturm_sequence? const-decl "bool" sturmsquarefree nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (sequence type-eq-decl nil sequences nil)
    (polynomial const-decl "[real -> real]" polynomials reals))
   shostak))
 (sturm_seq_first_signs_eq 0
  (sturm_seq_first_signs_eq-2 "" 3790098767
   ("" (skeep)
    ((""
      (case "NOT (polynomial(p(0), n(0))(x) /= 0 AND
                                    polynomial(p(0), n(0))(y) /= 0)")
      (("1" (hide 2)
        (("1" (inst-cp - "x")
          (("1" (inst - "y") (("1" (ground) nil nil)) nil)) nil))
        nil)
       ("2" (flatten)
        (("2" (assert)
          (("2" (inst-cp - "b")
            (("2" (assert)
              (("2" (flatten)
                (("2"
                  (case "polynomial(poly_deriv(p(0)),max(n(0)-1,0))(b) = 0")
                  (("1" (expand "sturm_sequence?")
                    (("1" (flatten)
                      (("1" (inst -8 "b")
                        (("1" (assert)
                          (("1" (expand "sign_ext" -8)
                            (("1" (lift-if) (("1" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (lemma "poly_continuous")
                    (("2"
                      (inst - "poly_deriv(p(0))" "max(n(0)-1,0)" "b"
                       "abs(polynomial(poly_deriv(p(0)),n(0)-1)(b))")
                      (("1" (skeep -)
                        (("1"
                          (case "EXISTS (deltiv:posreal): FORALL (x1:real): abs(b-x1)<deltiv IMPLIES (abs(b-x1)<delta AND x < x1 AND x1 < y)")
                          (("1"
                            (case "sign_ext(polynomial(p(0), n(0))(x)) =
                                     -sign_ext(polynomial(poly_deriv(p(0)), max(n(0)-1,0))(b))
                                     AND
                                     sign_ext(polynomial(p(0), n(0))(y)) =
                                      sign_ext(polynomial(poly_deriv(p(0)), max(n(0)-1,0))(b))")
                            (("1" (hide (-2 -3))
                              (("1" (flatten)
                                (("1" (expand "sturm_sequence?")
                                  (("1" (flatten)
                                    (("1" (inst -9 "b")
                                      (("1" (assert) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 6)
                              (("2"
                                (case "polynomial(poly_deriv(p(0)), max(n(0)-1,0))(b)>0")
                                (("1" (skeep -2)
                                  (("1"
                                    (case "FORALL (x1,x2:real): abs(x1-b)<deltiv AND abs(x2-b)<deltiv AND x1<x2 IMPLIES polynomial(p(0),n(0))(x1) < polynomial(p(0),n(0))(x2)")
                                    (("1" (inst-cp - "b-deltiv/2" "b")
                                      (("1"
                                        (inst-cp - "b" "b+deltiv/2")
                                        (("1"
                                          (label "hyplem" -1)
                                          (("1"
                                            (hide "hyplem")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (split +)
                                                (("1"
                                                  (expand "sign_ext")
                                                  (("1"
                                                    (lift-if)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (split 1)
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          (("2"
                                                            (hide -1)
                                                            (("2"
                                                              (split -)
                                                              (("1"
                                                                (replace -7)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (lemma
                                                                     "poly_intermediate_value_dec")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "p(0)"
                                                                       "0"
                                                                       "n(0)"
                                                                       "x"
                                                                       "b-deltiv/2")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (split
                                                                           -)
                                                                          (("1"
                                                                            (skeep
                                                                             -1)
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "cc")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "cc")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "cc")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (inst
                                                                             -
                                                                             "b-deltiv/2")
                                                                            (("2"
                                                                              (split
                                                                               -)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand "sign_ext")
                                                  (("2"
                                                    (lift-if)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (split 1)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (hide -3)
                                                            (("1"
                                                              (split -)
                                                              (("1"
                                                                (replace -8)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (lemma
                                                                     "poly_intermediate_value_dec")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "p(0)"
                                                                       "0"
                                                                       "n(0)"
                                                                       "b+deltiv/2"
                                                                       "y")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (split
                                                                           -)
                                                                          (("1"
                                                                            (skeep
                                                                             -1)
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "cc")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "cc")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "cc")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (inst
                                                                             -
                                                                             "b+deltiv/2")
                                                                            (("2"
                                                                              (split
                                                                               -)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (skeep)
                                      (("2"
                                        (lemma "poly_strictly_increasing")
                                        (("2"
                                          (inst - "p(0)" "n(0)" "x1" "x2")
                                          (("2"
                                            (assert)
                                            (("2"
                                              (case "n(0)=0")
                                              (("1"
                                                (replaces -1)
                                                (("1"
                                                  (expand "polynomial")
                                                  (("1"
                                                    (expand "sigma")
                                                    (("1"
                                                      (expand "sigma")
                                                      (("1" (propax) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (assert)
                                                (("2"
                                                  (skeep)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (inst - "c")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (split -)
                                                          (("1"
                                                            (inst - "c")
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "abs")
                                                                  (("1"
                                                                    (lift-if)
                                                                    (("1"
                                                                      (ground)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "abs"
                                                             (-1
                                                              -2
                                                              -3
                                                              -4
                                                              -5
                                                              1))
                                                            (("2"
                                                              (lift-if)
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (case "polynomial(poly_deriv(p(0)), max(n(0)-1,0))(b)<0")
                                  (("1" (hide 1)
                                    (("1" (skeep -2)
                                      (("1"
                                        (case
                                         "FORALL (x1,x2:real): abs(x1-b)<deltiv AND abs(x2-b)<deltiv AND x1<x2 IMPLIES polynomial(p(0),n(0))(x1) > polynomial(p(0),n(0))(x2)")
                                        (("1"
                                          (inst-cp - "b-deltiv/2" "b")
                                          (("1"
                                            (inst-cp - "b" "b+deltiv/2")
                                            (("1"
                                              (label "hyplem" -1)
                                              (("1"
                                                (hide "hyplem")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (split +)
                                                    (("1"
                                                      (expand "sign_ext")
                                                      (("1"
                                                        (lift-if)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (split 1)
                                                            (("1"
                                                              (replace -9)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (lemma
                                                                   "poly_intermediate_value_inc")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "p(0)"
                                                                     "0"
                                                                     "n(0)"
                                                                     "x"
                                                                     "b-deltiv/2")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (split
                                                                         -)
                                                                        (("1"
                                                                          (skeep
                                                                           -1)
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "cc")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "cc")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "cc")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (inst
                                                                           -
                                                                           "b-deltiv/2")
                                                                          (("2"
                                                                            (split
                                                                             -3)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (hide-all-but
                                                                                 2)
                                                                                (("1"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (assert)
                                                                          (("3"
                                                                            (hide-all-but
                                                                             2)
                                                                            (("3"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand "sign_ext")
                                                      (("2"
                                                        (lift-if)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (split 1)
                                                            (("1"
                                                              (propax)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (hide -2)
                                                                (("2"
                                                                  (split -)
                                                                  (("1"
                                                                    (replace
                                                                     -7)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (lemma
                                                                         "poly_intermediate_value_inc")
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "p(0)"
                                                                           "0"
                                                                           "n(0)"
                                                                           "b+deltiv/2"
                                                                           "y")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (split
                                                                               -)
                                                                              (("1"
                                                                                (skeep
                                                                                 -1)
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "cc")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "cc")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "cc")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (inst
                                                                                 -
                                                                                 "b+deltiv/2")
                                                                                (("2"
                                                                                  (split
                                                                                   -)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("2"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide-all-but
                                                                     1)
                                                                    (("2"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (skeep)
                                          (("2"
                                            (lemma "poly_strictly_decreasing")
                                            (("2"
                                              (inst - "p(0)" "n(0)" "x1" "x2")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (case "n(0)=0")
                                                  (("1"
                                                    (replaces -1)
                                                    (("1"
                                                      (expand "polynomial")
                                                      (("1"
                                                        (expand "sigma")
                                                        (("1"
                                                          (expand "sigma")
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    (("2"
                                                      (skeep)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (inst - "c")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (split -)
                                                              (("1"
                                                                (inst - "c")
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "abs")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "abs"
                                                                 (-1
                                                                  -2
                                                                  -3
                                                                  -4
                                                                  -5
                                                                  1))
                                                                (("2"
                                                                  (lift-if)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("3" (assert) nil nil))
                            nil)
                           ("2" (inst + "min(delta,min(b-x,y-b))")
                            (("1" (hide-all-but (-2 -3 1))
                              (("1" (grind) nil nil)) nil)
                             ("2" (hide-all-but (-2 -3 1))
                              (("2" (grind) nil nil)) nil))
                            nil))
                          nil))
                        nil)
                       ("2" (expand "abs" 1)
                        (("2" (lift-if)
                          (("2" (assert)
                            (("2" (split 1)
                              (("1" (propax) nil nil)
                               ("2" (flatten)
                                (("2" (expand "sturm_sequence?")
                                  (("2" (flatten)
                                    (("2" (inst -7 "b")
                                      (("2"
                                        (assert)
                                        (("2"
                                          (case "n(0) = 0")
                                          (("1"
                                            (replaces -1)
                                            (("1"
                                              (expand "polynomial" (-3 4))
                                              (("1"
                                                (expand "sigma")
                                                (("1"
                                                  (expand "sigma")
                                                  (("1" (propax) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand "max")
                                            (("2"
                                              (expand "sign_ext" -7)
                                              (("2"
                                                (lift-if)
                                                (("2"
                                                  (lift-if)
                                                  (("2"
                                                    (lift-if)
                                                    (("2"
                                                      (lift-if)
                                                      (("2"
                                                        (lift-if)
                                                        (("2"
                                                          (lift-if)
                                                          (("2"
                                                            (lift-if)
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("3" (assert)
                        (("3" (case "n(0) = 0")
                          (("1" (replace -1)
                            (("1" (assert)
                              (("1" (expand "polynomial" (-4 3))
                                (("1" (expand "sigma")
                                  (("1" (expand "sigma")
                                    (("1" (propax) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (assert) nil nil))
                          nil))
                        nil)
                       ("4" (assert) nil nil))
                      nil))
                    nil)
                   ("3" (assert) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (sturm_seq_first_signs_eq-1 nil 3587370024
   ("" (skeep)
    ((""
      (case "NOT (polynomial(p(0), n(0))(x) /= 0 AND
                                    polynomial(p(0), n(0))(y) /= 0)")
      (("1" (hide 2)
        (("1" (inst-cp - "x")
          (("1" (inst - "y") (("1" (ground) nil nil)) nil)) nil))
        nil)
       ("2" (flatten)
        (("2" (assert)
          (("2" (inst-cp - "b")
            (("2" (assert)
              (("2" (flatten)
                (("2"
                  (case "polynomial(poly_deriv(p(0)),max(n(0)-1,0))(b) = 0")
                  (("1" (expand "sturm_sequence?")
                    (("1" (flatten)
                      (("1" (inst -8 "b")
                        (("1" (assert)
                          (("1" (expand "sign_ext" -8)
                            (("1" (assert)
                              (("1" (lift-if) (("1" (assert) nil nil)) nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (lemma "poly_continuous")
                    (("2"
                      (inst - "poly_deriv(p(0))" "max(n(0)-1,0)" "b"
                       "abs(polynomial(poly_deriv(p(0)),n(0)-1)(b))")
                      (("1" (skeep -)
                        (("1"
                          (case "EXISTS (deltiv:posreal): FORALL (x1:real): abs(b-x1)<deltiv IMPLIES (abs(b-x1)<delta AND x < x1 AND x1 < y)")
                          (("1"
                            (case "sign_ext(polynomial(p(0), n(0))(x)) =
                                     -sign_ext(polynomial(poly_deriv(p(0)), max(n(0)-1,0))(b))
                                     AND
                                     sign_ext(polynomial(p(0), n(0))(y)) =
                                      sign_ext(polynomial(poly_deriv(p(0)), max(n(0)-1,0))(b))")
                            (("1" (hide (-2 -3))
                              (("1" (flatten)
                                (("1" (expand "sturm_sequence?")
                                  (("1" (flatten)
                                    (("1" (inst -9 "b")
                                      (("1" (assert) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 6)
                              (("2"
                                (case "polynomial(poly_deriv(p(0)), max(n(0)-1,0))(b)>0")
                                (("1" (skeep -2)
                                  (("1"
                                    (case "FORALL (x1,x2:real): abs(x1-b)<deltiv AND abs(x2-b)<deltiv AND x1<x2 IMPLIES polynomial(p(0),n(0))(x1) < polynomial(p(0),n(0))(x2)")
                                    (("1" (inst-cp - "b-deltiv/2" "b")
                                      (("1"
                                        (inst-cp - "b" "b+deltiv/2")
                                        (("1"
                                          (label "hyplem" -1)
                                          (("1"
                                            (hide "hyplem")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (split +)
                                                (("1"
                                                  (expand "sign_ext")
                                                  (("1"
                                                    (lift-if)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (split 1)
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          (("2"
                                                            (hide -1)
                                                            (("2"
                                                              (split -)
                                                              (("1"
                                                                (replace -7)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (lemma
                                                                     "poly_intermediate_value_dec")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "p(0)"
                                                                       "0"
                                                                       "n(0)"
                                                                       "x"
                                                                       "b-deltiv/2")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (split
                                                                           -)
                                                                          (("1"
                                                                            (skeep
                                                                             -1)
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "cc")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "cc")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "cc")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (inst
                                                                             -
                                                                             "b-deltiv/2")
                                                                            (("2"
                                                                              (split
                                                                               -)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand "sign_ext")
                                                  (("2"
                                                    (lift-if)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (split 1)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (hide -3)
                                                            (("1"
                                                              (split -)
                                                              (("1"
                                                                (replace -8)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (lemma
                                                                     "poly_intermediate_value_dec")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "p(0)"
                                                                       "0"
                                                                       "n(0)"
                                                                       "b+deltiv/2"
                                                                       "y")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (split
                                                                           -)
                                                                          (("1"
                                                                            (skeep
                                                                             -1)
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "cc")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "cc")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "cc")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (inst
                                                                             -
                                                                             "b+deltiv/2")
                                                                            (("2"
                                                                              (split
                                                                               -)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (skeep)
                                      (("2"
                                        (lemma "poly_strictly_increasing")
                                        (("2"
                                          (inst - "p(0)" "n(0)" "x1" "x2")
                                          (("2"
                                            (assert)
                                            (("2"
                                              (case "n(0)=0")
                                              (("1"
                                                (replaces -1)
                                                (("1"
                                                  (expand "polynomial")
                                                  (("1"
                                                    (expand "sigma")
                                                    (("1"
                                                      (expand "sigma")
                                                      (("1" (propax) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (assert)
                                                (("2"
                                                  (skeep)
                                                  (("2"
                                                    (expand "max")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (inst - "c")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (split -)
                                                            (("1"
                                                              (inst - "c")
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "abs")
                                                                    (("1"
                                                                      (lift-if)
                                                                      (("1"
                                                                        (ground)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               "abs"
                                                               (-1
                                                                -2
                                                                -3
                                                                -4
                                                                -5
                                                                1))
                                                              (("2"
                                                                (lift-if)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (case "polynomial(poly_deriv(p(0)), max(n(0)-1,0))(b)<0")
                                  (("1" (hide 1)
                                    (("1" (skeep -2)
                                      (("1"
                                        (case
                                         "FORALL (x1,x2:real): abs(x1-b)<deltiv AND abs(x2-b)<deltiv AND x1<x2 IMPLIES polynomial(p(0),n(0))(x1) > polynomial(p(0),n(0))(x2)")
                                        (("1"
                                          (inst-cp - "b-deltiv/2" "b")
                                          (("1"
                                            (inst-cp - "b" "b+deltiv/2")
                                            (("1"
                                              (label "hyplem" -1)
                                              (("1"
                                                (hide "hyplem")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (split +)
                                                    (("1"
                                                      (expand "sign_ext")
                                                      (("1"
                                                        (lift-if)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (split 1)
                                                            (("1"
                                                              (replace -9)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (lemma
                                                                   "poly_intermediate_value_inc")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "p(0)"
                                                                     "0"
                                                                     "n(0)"
                                                                     "x"
                                                                     "b-deltiv/2")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (split
                                                                         -)
                                                                        (("1"
                                                                          (skeep
                                                                           -1)
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "cc")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "cc")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "cc")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (inst
                                                                           -
                                                                           "b-deltiv/2")
                                                                          (("2"
                                                                            (split
                                                                             -3)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (hide-all-but
                                                                                 2)
                                                                                (("1"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (assert)
                                                                          (("3"
                                                                            (hide-all-but
                                                                             2)
                                                                            (("3"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand "sign_ext")
                                                      (("2"
                                                        (lift-if)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (split 1)
                                                            (("1"
                                                              (propax)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (hide -2)
                                                                (("2"
                                                                  (split -)
                                                                  (("1"
                                                                    (replace
                                                                     -7)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (lemma
                                                                         "poly_intermediate_value_inc")
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "p(0)"
                                                                           "0"
                                                                           "n(0)"
                                                                           "b+deltiv/2"
                                                                           "y")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (split
                                                                               -)
                                                                              (("1"
                                                                                (skeep
                                                                                 -1)
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "cc")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "cc")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "cc")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (inst
                                                                                 -
                                                                                 "b+deltiv/2")
                                                                                (("2"
                                                                                  (split
                                                                                   -)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("2"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide-all-but
                                                                     1)
                                                                    (("2"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (skeep)
                                          (("2"
                                            (lemma "poly_strictly_decreasing")
                                            (("2"
                                              (inst - "p(0)" "n(0)" "x1" "x2")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (case "n(0)=0")
                                                  (("1"
                                                    (replaces -1)
                                                    (("1"
                                                      (expand "polynomial")
                                                      (("1"
                                                        (expand "sigma")
                                                        (("1"
                                                          (expand "sigma")
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    (("2"
                                                      (skeep)
                                                      (("2"
                                                        (expand "max")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (inst - "c")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (split -)
                                                                (("1"
                                                                  (inst - "c")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (expand
                                                                         "abs")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "abs"
                                                                   (-1
                                                                    -2
                                                                    -3
                                                                    -4
                                                                    -5
                                                                    1))
                                                                  (("2"
                                                                    (lift-if)
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("3" (assert) nil nil))
                            nil)
                           ("2" (inst + "min(delta,min(b-x,y-b))")
                            (("1" (hide-all-but (-2 -3 1))
                              (("1" (grind) nil nil)) nil)
                             ("2" (hide-all-but (-2 -3 1))
                              (("2" (grind) nil nil)) nil))
                            nil))
                          nil))
                        nil)
                       ("2" (expand "abs" 1)
                        (("2" (lift-if)
                          (("2" (assert)
                            (("2" (split 1)
                              (("1" (propax) nil nil)
                               ("2" (flatten)
                                (("2" (expand "sturm_sequence?")
                                  (("2" (flatten)
                                    (("2" (inst -7 "b")
                                      (("2"
                                        (assert)
                                        (("2"
                                          (case "n(0) = 0")
                                          (("1"
                                            (replaces -1)
                                            (("1"
                                              (expand "polynomial" (-3 4))
                                              (("1"
                                                (expand "sigma")
                                                (("1"
                                                  (expand "sigma")
                                                  (("1" (propax) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand "max")
                                            (("2"
                                              (expand "sign_ext" -7)
                                              (("2"
                                                (lift-if)
                                                (("2"
                                                  (lift-if)
                                                  (("2"
                                                    (lift-if)
                                                    (("2"
                                                      (lift-if)
                                                      (("2"
                                                        (lift-if)
                                                        (("2"
                                                          (lift-if)
                                                          (("2"
                                                            (lift-if)
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("3" (assert)
                        (("3" (case "n(0) = 0")
                          (("1" (replace -1)
                            (("1" (assert)
                              (("1" (expand "polynomial" (-4 3))
                                (("1" (expand "sigma")
                                  (("1" (expand "sigma")
                                    (("1" (propax) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (assert) nil nil))
                          nil))
                        nil)
                       ("4" (assert) nil nil))
                      nil))
                    nil)
                   ("3" (assert) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((polynomial const-decl "[real -> real]" polynomials reals)
    (sequence type-eq-decl nil sequences nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (number nonempty-type-decl nil numbers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (int_max application-judgement "{k: int | i <= k AND j <= k}" real_defs
     nil)
    (rat_max application-judgement "{s: rat | s >= q AND s >= r}" real_defs
     nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (poly_deriv const-decl "real" polynomials reals)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (sign_ext const-decl
     "{sig: real | (sig = -1 OR sig = 1 OR sig = 0) AND sig * x = abs(x)}"
     sign reals)
    (sturm_sequence? const-decl "bool" sturmsquarefree nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (n skolem-const-decl "[nat -> nat]" sturmsquarefree nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (p skolem-const-decl "[nat -> [nat -> real]]" sturmsquarefree nil)
    (b skolem-const-decl "real" sturmsquarefree nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (< const-decl "bool" reals nil)
    (poly_strictly_decreasing formula-decl nil polynomials reals)
    (poly_intermediate_value_inc formula-decl nil polynomials reals)
    (sigma def-decl "real" sigma reals)
    (real_times_real_is_real application-judgement "real" reals nil)
    (TRUE const-decl "bool" booleans nil)
    (max_nnreal_0 formula-decl nil min_max reals)
    (poly_strictly_increasing formula-decl nil polynomials reals)
    (nzreal_times_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal" real_types
     nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (abs_0_rew formula-decl nil abs_rews ints)
    (nonzero_abs_is_pos application-judgement "{y: posreal | y >= x}"
     real_defs nil)
    (poly_intermediate_value_dec formula-decl nil polynomials reals)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (y skolem-const-decl "real" sturmsquarefree nil)
    (x skolem-const-decl "real" sturmsquarefree nil)
    (delta skolem-const-decl "posreal" sturmsquarefree nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (<= const-decl "bool" reals nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers nil)
    (max_npreal_0 formula-decl nil min_max reals)
    (poly_continuous formula-decl nil polynomials reals))
   shostak))
 (sturm_lem_no_roots 0
  (sturm_lem_no_roots-2 "" 3790098768
   ("" (skeep)
    (("" (name "f" "polynomial(p(0),n(0))")
      ((""
        (case "FORALL (j:nat): j<=m IMPLIES  number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x), j)`num =
                            number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(y), j)`num AND sign_ext(number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x), j)`lastnz) = sign_ext(number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(y), j)`lastnz)")
        (("1" (inst - "m")
          (("1" (expand "sturm_sig") (("1" (assert) nil nil)) nil)) nil)
         ("2" (induct "j")
          (("1" (assert)
            (("1" (split)
              (("1" (expand "number_sign_changes") (("1" (propax) nil nil))
                nil)
               ("2" (expand "number_sign_changes")
                (("2" (replace -1)
                  (("2" (lemma "poly_intermediate_value_inc")
                    (("2" (inst - "p(0)" "0" "n(0)" "x" "y")
                      (("2" (assert)
                        (("2" (lemma "poly_intermediate_value_dec")
                          (("2" (inst - "p(0)" "0" "n(0)" "x" "y")
                            (("2" (assert)
                              (("2" (split -)
                                (("1" (skeep -1)
                                  (("1" (inst - "cc" "0")
                                    (("1" (assert) nil nil)) nil))
                                  nil)
                                 ("2" (assert)
                                  (("2" (split -)
                                    (("1" (skeep -1)
                                      (("1"
                                        (inst - "cc" "0")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil)
                                     ("2" (replace -1)
                                      (("2"
                                        (hide-all-but (1 2 3))
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3" (assert)
                                  (("3" (split -)
                                    (("1" (skeep -1)
                                      (("1"
                                        (inst - "cc" "0")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil)
                                     ("2" (expand "sign_ext")
                                      (("2" (assert) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (skolem 1 "jj")
            (("2" (hide 2)
              (("2" (assert)
                (("2" (flatten)
                  (("2" (assert)
                    (("2" (flatten)
                      (("2"
                        (name "G"
                              "LAMBDA (xx:real): LAMBDA (i): polynomial(p(i),n(i))(xx)")
                        (("2" (copy -1)
                          (("2" (decompose-equality -1)
                            (("2" (inst-cp - "x")
                              (("2" (inst - "y")
                                (("2" (replaces -1)
                                  (("2" (replaces -1)
                                    (("2"
                                      (case
                                       "NOT sign_ext(G(x)(1+jj)) = sign_ext(G(y)(1+jj))")
                                      (("1"
                                        (hide 2)
                                        (("1"
                                          (expand "G" 1)
                                          (("1"
                                            (inst-cp - "x" "1+jj")
                                            (("1"
                                              (inst-cp - "y" "1+jj")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (expand "sign_ext" 1)
                                                    (("1"
                                                      (lift-if)
                                                      (("1"
                                                        (lift-if)
                                                        (("1"
                                                          (lift-if)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (ground)
                                                              (("1"
                                                                (lemma
                                                                 "poly_intermediate_value_inc")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "p(1+jj)"
                                                                   "0"
                                                                   "n(1+jj)"
                                                                   "x"
                                                                   "y")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (skeep
                                                                       -1)
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "cc"
                                                                         "1+jj")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (lemma
                                                                 "poly_intermediate_value_dec")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "p(1+jj)"
                                                                   "0"
                                                                   "n(1+jj)"
                                                                   "x"
                                                                   "y")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (skeep
                                                                       -1)
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "cc"
                                                                         "1+jj")
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand "number_sign_changes" +)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (lift-if)
                                            (("2"
                                              (lift-if)
                                              (("2"
                                                (lift-if)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (ground)
                                                    (("1"
                                                      (inst - "y" "1+jj")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand "G" -1)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand "sign_ext" -5)
                                                      (("2"
                                                        (lift-if)
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (inst - "x" "1+jj")
                                                      (("3"
                                                        (assert)
                                                        (("3"
                                                          (expand "G" -1)
                                                          (("3"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("4"
                                                      (lift-if)
                                                      (("4" (assert) nil nil))
                                                      nil)
                                                     ("5"
                                                      (lift-if)
                                                      (("5" (assert) nil nil))
                                                      nil)
                                                     ("6"
                                                      (expand "sign_ext" -5)
                                                      (("6"
                                                        (lift-if)
                                                        (("6"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("7"
                                                      (lift-if)
                                                      (("7" (assert) nil nil))
                                                      nil)
                                                     ("8"
                                                      (lift-if)
                                                      (("8"
                                                        (lift-if)
                                                        (("8"
                                                          (assert)
                                                          (("8"
                                                            (split +)
                                                            (("1"
                                                              (propax)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (lift-if)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("9"
                                                      (lift-if)
                                                      (("9"
                                                        (lift-if)
                                                        (("9"
                                                          (lift-if)
                                                          (("9"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("10"
                                                      (lift-if)
                                                      (("10"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("11"
                                                      (lift-if)
                                                      (("11"
                                                        (lift-if)
                                                        (("11"
                                                          (lift-if)
                                                          (("11"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("12"
                                                      (lift-if)
                                                      (("12"
                                                        (lift-if)
                                                        (("12"
                                                          (lift-if)
                                                          (("12"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (sturm_lem_no_roots-1 nil 3587229961
   ("" (skeep)
    (("" (name "f" "polynomial(p(0),n(0))")
      ((""
        (case "FORALL (j:nat): j<=m IMPLIES  number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x), j)`num =
                            number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(y), j)`num AND sign_ext(number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x), j)`lastnz) = sign_ext(number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(y), j)`lastnz)")
        (("1" (inst - "m")
          (("1" (expand "sturm_sig") (("1" (assert) nil nil)) nil)) nil)
         ("2" (induct "j")
          (("1" (assert)
            (("1" (split)
              (("1" (expand "number_sign_changes") (("1" (propax) nil nil))
                nil)
               ("2" (expand "number_sign_changes")
                (("2" (replace -1)
                  (("2" (lemma "poly_intermediate_value_inc")
                    (("2" (inst - "p(0)" "0" "n(0)" "x" "y")
                      (("2" (assert)
                        (("2" (lemma "poly_intermediate_value_dec")
                          (("2" (inst - "p(0)" "0" "n(0)" "x" "y")
                            (("2" (assert)
                              (("2" (split -)
                                (("1" (skeep -1)
                                  (("1" (inst - "cc" "0")
                                    (("1" (assert) nil nil)) nil))
                                  nil)
                                 ("2" (assert)
                                  (("2" (split -)
                                    (("1" (skeep -1)
                                      (("1"
                                        (inst - "cc" "0")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil)
                                     ("2" (replace -1)
                                      (("2"
                                        (hide-all-but (1 2 3))
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3" (assert)
                                  (("3" (split -)
                                    (("1" (skeep -1)
                                      (("1"
                                        (inst - "cc" "0")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil)
                                     ("2" (expand "sign_ext")
                                      (("2" (assert) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (skolem 1 "jj")
            (("2" (hide 2)
              (("2" (assert)
                (("2" (flatten)
                  (("2" (assert)
                    (("2" (flatten)
                      (("2"
                        (name "G"
                              "LAMBDA (xx:real): LAMBDA (i): polynomial(p(i),n(i))(xx)")
                        (("2" (copy -1)
                          (("2" (decompose-equality -1)
                            (("2" (inst-cp - "x")
                              (("2" (inst - "y")
                                (("2" (replaces -1)
                                  (("2" (replaces -1)
                                    (("2"
                                      (case
                                       "NOT sign_ext(G(x)(1+jj)) = sign_ext(G(y)(1+jj))")
                                      (("1"
                                        (hide 2)
                                        (("1"
                                          (expand "G" 1)
                                          (("1"
                                            (inst-cp - "x" "1+jj")
                                            (("1"
                                              (inst-cp - "y" "1+jj")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (expand "sign_ext" 1)
                                                    (("1"
                                                      (lift-if)
                                                      (("1"
                                                        (lift-if)
                                                        (("1"
                                                          (lift-if)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (ground)
                                                              (("1"
                                                                (lemma
                                                                 "poly_intermediate_value_inc")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "p(1+jj)"
                                                                   "0"
                                                                   "n(1+jj)"
                                                                   "x"
                                                                   "y")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (skeep
                                                                       -1)
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "cc"
                                                                         "1+jj")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (lemma
                                                                 "poly_intermediate_value_dec")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "p(1+jj)"
                                                                   "0"
                                                                   "n(1+jj)"
                                                                   "x"
                                                                   "y")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (skeep
                                                                       -1)
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "cc"
                                                                         "1+jj")
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand "number_sign_changes" +)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (lift-if)
                                            (("2"
                                              (lift-if)
                                              (("2"
                                                (lift-if)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (ground)
                                                    (("1"
                                                      (inst - "y" "1+jj")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand "G" -1)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand "sign_ext" -5)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (lift-if)
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (inst - "x" "1+jj")
                                                      (("3"
                                                        (assert)
                                                        (("3"
                                                          (expand "G" -1)
                                                          (("3"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("4"
                                                      (lift-if)
                                                      (("4" (assert) nil nil))
                                                      nil)
                                                     ("5"
                                                      (lift-if)
                                                      (("5" (assert) nil nil))
                                                      nil)
                                                     ("6"
                                                      (expand "sign_ext" -5)
                                                      (("6"
                                                        (assert)
                                                        (("6"
                                                          (lift-if)
                                                          (("6"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("7"
                                                      (lift-if)
                                                      (("7" (assert) nil nil))
                                                      nil)
                                                     ("8"
                                                      (lift-if)
                                                      (("8"
                                                        (lift-if)
                                                        (("8"
                                                          (assert)
                                                          (("8"
                                                            (split +)
                                                            (("1"
                                                              (propax)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (lift-if)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("9"
                                                      (lift-if)
                                                      (("9"
                                                        (lift-if)
                                                        (("9"
                                                          (lift-if)
                                                          (("9"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("10"
                                                      (lift-if)
                                                      (("10"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("11"
                                                      (lift-if)
                                                      (("11"
                                                        (lift-if)
                                                        (("11"
                                                          (lift-if)
                                                          (("11"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("12"
                                                      (lift-if)
                                                      (("12"
                                                        (lift-if)
                                                        (("12"
                                                          (lift-if)
                                                          (("12"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((polynomial const-decl "[real -> real]" polynomials reals)
    (sequence type-eq-decl nil sequences nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (pred type-eq-decl nil defined_types nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (poly_intermediate_value_dec formula-decl nil polynomials reals)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (poly_intermediate_value_inc formula-decl nil polynomials reals)
    (TRUE const-decl "bool" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (G skolem-const-decl "[real -> [nat -> real]]" sturmsquarefree nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sturm_sig const-decl "nat" sturmsquarefree nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (NSC type-eq-decl nil number_sign_changes nil)
    (number_sign_changes def-decl "NSC" number_sign_changes nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (sign_ext const-decl
     "{sig: real | (sig = -1 OR sig = 1 OR sig = 0) AND sig * x = abs(x)}"
     sign reals))
   shostak))
 (sturm_lem_one_root 0
  (sturm_lem_one_root-3 "" 3790098781
   (""
    (case " FORALL (b: real, dd,j, m: nat, n: [nat -> nat],
                                                                                                                       p: [nat -> [nat -> real]], x, y: real): j<=dd AND
                                                                                                                       x < y AND x < b AND b < y
                                                                                                    AND (FORALL (c: real, i: nat):
                                                                                                          i <= m AND
                                                                                                           x <= c AND c <= y AND polynomial(p(i), n(i))(c) = 0
                                                                                                           IMPLIES c = b) AND (FORALL (c:real): x<=c AND c<=y AND polynomial(p(0),n(0))(c)=0 IMPLIES
                                                                                          (polynomial(p(1),n(1))(c)/=0))
                                                                                                    AND j <= m AND polynomial(p(j), n(j))(b) /= 0 AND sturm_sequence?(p, n, m)
                                                                                                    IMPLIES
                                                                                                    LET nsc =
                                                                                                          LAMBDA (xyz: real, pj: nat):
                                                                                                            number_sign_changes(LAMBDA
                                                                                                                                (i):
                                                                                                                                polynomial(p(i), n(i))(xyz),
                                                                                                                                pj)
                                                                                                      IN
                                                                                                      sign_ext(nsc(x, j)`lastnz) = sign_ext(nsc(y, j)`lastnz)
                                                                                                       AND
                                                                                                        nsc(x, j)`num =
                           nsc(y, j)`num +
                            (IF polynomial(p(0), n(0))(b) = 0 THEN 1 ELSE 0 ENDIF)")
    (("1" (skeep)
      (("1" (inst - "b" "j" "j" "m" "n" "p" "x" "y")
        (("1" (assert)
          (("1" (replace -5) (("1" (replace -6) (("1" (propax) nil nil)) nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (hide 2)
      (("2" (induct "dd")
        (("1" (assert) nil nil)
         ("2" (skeep)
          (("2" (assert)
            (("2" (case "NOT j = 0")
              (("1" (assert) nil nil)
               ("2" (hide -2)
                (("2" (replaces -1)
                  (("2" (expand "number_sign_changes")
                    (("2" (expand "sign_ext" 2)
                      (("2" (lift-if)
                        (("2" (lift-if)
                          (("2" (lift-if)
                            (("2" (lift-if)
                              (("2" (assert)
                                (("2" (ground)
                                  (("1" (lemma "poly_intermediate_value_inc")
                                    (("1" (inst - "p(0)" "0" "n(0)" "x" "y")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (skeep -)
                                          (("1"
                                            (inst - "cc" "0")
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (lemma "poly_intermediate_value_dec")
                                    (("2" (inst - "p(0)" "0" "n(0)" "x" "y")
                                      (("2"
                                        (assert)
                                        (("2"
                                          (skeep -)
                                          (("2"
                                            (inst - "cc" "0")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("3" (lemma "poly_intermediate_value_dec")
                                    (("3" (inst - "p(0)" "0" "n(0)" "x" "y")
                                      (("3"
                                        (assert)
                                        (("3"
                                          (skeep -)
                                          (("3"
                                            (inst - "cc" "0")
                                            (("3" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("4" (inst - "x" "0")
                                    (("4" (assert) nil nil)) nil)
                                   ("5" (inst - "x" "0")
                                    (("5" (assert) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("3" (skolem 1 "jj")
          (("3" (flatten)
            (("3" (skeep)
              (("3" (assert)
                (("3" (case "NOT j = 1+jj")
                  (("1" (inst - "b" "j" "m" "n" "p" "x" "y")
                    (("1" (assert)
                      (("1" (replace -6)
                        (("1" (replace -7) (("1" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil)
                   ("2" (replaces -1)
                    (("2" (assert)
                      (("2" (inst-cp - "x" "jj")
                        (("2" (assert)
                          (("2" (inst-cp - "y" "jj")
                            (("2" (assert)
                              (("2" (inst-cp - "x" "1+jj")
                                (("2" (assert)
                                  (("2" (inst-cp - "y" "1+jj")
                                    (("2" (assert)
                                      (("2"
                                        (case "polynomial(p(jj),n(jj))(b)/=0")
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (inst
                                             -
                                             "b"
                                             "jj"
                                             "m"
                                             "n"
                                             "p"
                                             "x"
                                             "y")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (replace -6)
                                                (("1"
                                                  (replace -7)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (split +)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand
                                                           "number_sign_changes"
                                                           +)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (hide -2)
                                                              (("1"
                                                                (expand
                                                                 "sign_ext"
                                                                 1)
                                                                (("1"
                                                                  (lift-if)
                                                                  (("1"
                                                                    (lift-if)
                                                                    (("1"
                                                                      (lift-if)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (ground)
                                                                          (("1"
                                                                            (lemma
                                                                             "poly_intermediate_value_inc")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "p(1+jj)"
                                                                               "0"
                                                                               "n(1+jj)"
                                                                               "x"
                                                                               "y")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (skeep
                                                                                   -1)
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "cc"
                                                                                     "1+jj")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (lemma
                                                                             "poly_intermediate_value_dec")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "p(1+jj)"
                                                                               "0"
                                                                               "n(1+jj)"
                                                                               "x"
                                                                               "y")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (skeep
                                                                                   -1)
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "cc"
                                                                                     "1+jj")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (invoke
                                                         (name "SQUAB" "%1")
                                                         (! 1 2 2))
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (label
                                                             "SQUABname"
                                                             -1)
                                                            (("2"
                                                              (hide
                                                               "SQUABname")
                                                              (("2"
                                                                (expand
                                                                 "number_sign_changes"
                                                                 +)
                                                                (("2"
                                                                  (expand
                                                                   "sign_ext"
                                                                   -1)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (lift-if)
                                                                      (("2"
                                                                        (lift-if)
                                                                        (("2"
                                                                          (lift-if)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (ground)
                                                                              (("1"
                                                                                (expand
                                                                                 "sign_ext")
                                                                                (("1"
                                                                                  (lift-if)
                                                                                  (("1"
                                                                                    (ground)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "poly_intermediate_value_dec")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "p(1+jj)"
                                                                                         "0"
                                                                                         "n(1+jj)"
                                                                                         "x"
                                                                                         "y")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (skeep
                                                                                             -1)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "cc"
                                                                                               "1+jj")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "sign_ext")
                                                                                (("2"
                                                                                  (lift-if)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (ground)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "poly_intermediate_value_inc")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "p(1+jj)"
                                                                                           "0"
                                                                                           "n(1+jj)"
                                                                                           "x"
                                                                                           "y")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (skeep
                                                                                               -1)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "cc"
                                                                                                 "1+jj")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (lift-if)
                                                                                (("3"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("4"
                                                                                (expand
                                                                                 "sign_ext")
                                                                                (("4"
                                                                                  (lift-if)
                                                                                  (("4"
                                                                                    (assert)
                                                                                    (("4"
                                                                                      (ground)
                                                                                      (("4"
                                                                                        (lemma
                                                                                         "poly_intermediate_value_inc")
                                                                                        (("4"
                                                                                          (inst
                                                                                           -
                                                                                           "p(1+jj)"
                                                                                           "0"
                                                                                           "n(1+jj)"
                                                                                           "x"
                                                                                           "y")
                                                                                          (("4"
                                                                                            (assert)
                                                                                            (("4"
                                                                                              (skeep
                                                                                               -1)
                                                                                              (("4"
                                                                                                (inst
                                                                                                 -
                                                                                                 "cc"
                                                                                                 "1+jj")
                                                                                                (("4"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("5"
                                                                                (expand
                                                                                 "sign_ext")
                                                                                (("5"
                                                                                  (lift-if)
                                                                                  (("5"
                                                                                    (assert)
                                                                                    (("5"
                                                                                      (ground)
                                                                                      (("5"
                                                                                        (lemma
                                                                                         "poly_intermediate_value_dec")
                                                                                        (("5"
                                                                                          (inst
                                                                                           -
                                                                                           "p(1+jj)"
                                                                                           "0"
                                                                                           "n(1+jj)"
                                                                                           "x"
                                                                                           "y")
                                                                                          (("5"
                                                                                            (assert)
                                                                                            (("5"
                                                                                              (skeep
                                                                                               -1)
                                                                                              (("5"
                                                                                                (inst
                                                                                                 -
                                                                                                 "cc"
                                                                                                 "1+jj")
                                                                                                (("5"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("6"
                                                                                (lift-if)
                                                                                (("6"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten)
                                          (("2"
                                            (label "hyplem" -2)
                                            (("2"
                                              (hide "hyplem")
                                              (("2"
                                                (copy -9)
                                                (("2"
                                                  (expand
                                                   "sturm_sequence?"
                                                   -1)
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (hide (-1 -2 -3 -5))
                                                      (("2"
                                                        (inst - "b" "jj")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (case "jj = 0")
                                                            (("1"
                                                              (hide -2)
                                                              (("1"
                                                                (replaces -1)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (split +)
                                                                    (("1"
                                                                      (expand
                                                                       "number_sign_changes"
                                                                       +)
                                                                      (("1"
                                                                        (lift-if)
                                                                        (("1"
                                                                          (expand
                                                                           "sign_ext"
                                                                           +)
                                                                          (("1"
                                                                            (lift-if)
                                                                            (("1"
                                                                              (lift-if)
                                                                              (("1"
                                                                                (lift-if)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (ground)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "poly_intermediate_value_inc")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "p(1)"
                                                                                         "0"
                                                                                         "n(1)"
                                                                                         "x"
                                                                                         "y")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (skeep
                                                                                             -1)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "cc"
                                                                                               "1")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (lemma
                                                                                       "poly_intermediate_value_dec")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "p(1)"
                                                                                         "0"
                                                                                         "n(1)"
                                                                                         "x"
                                                                                         "y")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (skeep
                                                                                             -1)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "cc"
                                                                                               "1")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (case
                                                                       "sign_ext(polynomial(p(0),n(0))(x))/=sign_ext(polynomial(p(0),n(0))(y))")
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (expand
                                                                           "number_sign_changes"
                                                                           2)
                                                                          (("1"
                                                                            (expand
                                                                             "number_sign_changes"
                                                                             2)
                                                                            (("1"
                                                                              (lift-if)
                                                                              (("1"
                                                                                (lift-if)
                                                                                (("1"
                                                                                  (lift-if)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (ground)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "sign_ext")
                                                                                        (("1"
                                                                                          (lift-if)
                                                                                          (("1"
                                                                                            (lift-if)
                                                                                            (("1"
                                                                                              (lift-if)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (ground)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "poly_intermediate_value_dec")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "p(1)"
                                                                                                       "0"
                                                                                                       "n(1)"
                                                                                                       "x"
                                                                                                       "y")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (skeep
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "cc"
                                                                                                             "1")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (lemma
                                                                                                     "poly_intermediate_value_inc")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "p(1)"
                                                                                                       "0"
                                                                                                       "n(1)"
                                                                                                       "x"
                                                                                                       "y")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (skeep
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "cc"
                                                                                                             "1")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (lemma
                                                                                         "sturm_seq_first_signs_eq")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "b"
                                                                                           "m"
                                                                                           "n"
                                                                                           "p"
                                                                                           "x"
                                                                                           "y")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (split
                                                                                               -)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "sign_ext")
                                                                                                  (("1"
                                                                                                    (lift-if)
                                                                                                    (("1"
                                                                                                      (lift-if)
                                                                                                      (("1"
                                                                                                        (lift-if)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (ground)
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "poly_intermediate_value_inc")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "p(1)"
                                                                                                                 "0"
                                                                                                                 "n(1)"
                                                                                                                 "x"
                                                                                                                 "b")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (skeep
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "cc"
                                                                                                                       "1")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (lemma
                                                                                                               "poly_intermediate_value_dec")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "p(1)"
                                                                                                                 "0"
                                                                                                                 "n(1)"
                                                                                                                 "x"
                                                                                                                 "b")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (skeep
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "cc"
                                                                                                                       "1")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (skeep)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "c"
                                                                                                   "0")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (expand
                                                                           "sign_ext"
                                                                           -1)
                                                                          (("2"
                                                                            (lift-if)
                                                                            (("2"
                                                                              (lift-if)
                                                                              (("2"
                                                                                (lift-if)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (ground)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "square_free_max")
                                                                                      (("1"
                                                                                        (case
                                                                                         "n(0) = 0")
                                                                                        (("1"
                                                                                          (replaces
                                                                                           -1)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "polynomial")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "sigma")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "sigma")
                                                                                                (("1"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (inst
                                                                                           -
                                                                                           "p(0)"
                                                                                           "min(y-b,b-x)"
                                                                                           "b"
                                                                                           "0"
                                                                                           "n(0)")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (split
                                                                                               -)
                                                                                              (("1"
                                                                                                (copy
                                                                                                 -12)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "sturm_sequence?"
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       -2)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -2
                                                                                                         "b")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "sign_ext"
                                                                                                             -2)
                                                                                                            (("1"
                                                                                                              (lift-if)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (case
                                                                                                   "x!1 = b")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (case
                                                                                                     "x!1 < b")
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "poly_intermediate_value_inc")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "p(0)"
                                                                                                         "0"
                                                                                                         "n(0)"
                                                                                                         "x"
                                                                                                         "x!1")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (skeep
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "cc"
                                                                                                               "0")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (lemma
                                                                                                       "poly_intermediate_value_dec")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "p(0)"
                                                                                                         "0"
                                                                                                         "n(0)"
                                                                                                         "x!1"
                                                                                                         "y")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (skeep
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "cc"
                                                                                                               "0")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("3"
                                                                                            (assert)
                                                                                            (("3"
                                                                                              (expand
                                                                                               "min"
                                                                                               1)
                                                                                              (("3"
                                                                                                (lift-if)
                                                                                                (("3"
                                                                                                  (ground)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (lemma
                                                                                       "square_free_min")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "p(0)"
                                                                                         "min(y-b,b-x)"
                                                                                         "b"
                                                                                         "0"
                                                                                         "n(0)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (split
                                                                                             -)
                                                                                            (("1"
                                                                                              (copy
                                                                                               -10)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "sturm_sequence?"
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -2)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -2
                                                                                                       "b")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "n(0) = 0")
                                                                                                          (("1"
                                                                                                            (replaces
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "polynomial")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "sigma")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "sigma")
                                                                                                                  (("1"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "max"
                                                                                                             -2)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "sign_ext"
                                                                                                                 -2)
                                                                                                                (("2"
                                                                                                                  (lift-if)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (case
                                                                                                 "x!1 = b")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (case
                                                                                                   "x!1 < b")
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "poly_intermediate_value_dec")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "p(0)"
                                                                                                       "0"
                                                                                                       "n(0)"
                                                                                                       "x"
                                                                                                       "x!1")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (skeep
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "cc"
                                                                                                             "0")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (lemma
                                                                                                     "poly_intermediate_value_inc")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "p(0)"
                                                                                                       "0"
                                                                                                       "n(0)"
                                                                                                       "x!1"
                                                                                                       "y")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (skeep
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "cc"
                                                                                                             "0")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (case
                                                                                           "n(0) = 0")
                                                                                          (("1"
                                                                                            (replaces
                                                                                             -1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "polynomial"
                                                                                               (-1
                                                                                                +))
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "sigma")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "sigma")
                                                                                                  (("1"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (expand
                                                                                           "min"
                                                                                           1)
                                                                                          (("3"
                                                                                            (lift-if)
                                                                                            (("3"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (case
                                                                 "polynomial(p(jj - 1), n(jj - 1))(b) /= 0")
                                                                (("1"
                                                                  (case
                                                                   "sign_ext(polynomial(p(jj - 1), n(jj - 1))(b))=sign_ext(polynomial(p(jj - 1), n(jj - 1))(x)) AND sign_ext(polynomial(p(jj - 1), n(jj - 1))(b))=sign_ext(polynomial(p(jj - 1), n(jj - 1))(y))")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (case
                                                                       "sign_ext(polynomial(p(1 + jj), n(1 + jj))(b))=sign_ext(polynomial(p(1 + jj), n(1 + jj))(x)) AND sign_ext(polynomial(p(1 + jj), n(1 + jj))(b))=sign_ext(polynomial(p(1 + jj), n(1 + jj))(y))")
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (split
                                                                             +)
                                                                            (("1"
                                                                              (expand
                                                                               "number_sign_changes"
                                                                               1)
                                                                              (("1"
                                                                                (lift-if)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (invoke
                                                                                 (name
                                                                                  "SQUAB"
                                                                                  "%1")
                                                                                 (!
                                                                                  1
                                                                                  2
                                                                                  2))
                                                                                (("2"
                                                                                  (replaces
                                                                                   -1)
                                                                                  (("2"
                                                                                    (case
                                                                                     "sign_ext(polynomial(p(jj), n(jj))(x)) =
                                                        - sign_ext(polynomial(p(jj), n(jj))(y))")
                                                                                    (("1"
                                                                                      (case
                                                                                       "number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x),
                                                                                jj-1)`num
                                                             =
                                                             number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(y),
                                                                                 jj-1)`num
                                                              + SQUAB")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "sign_ext")
                                                                                        (("1"
                                                                                          (lift-if)
                                                                                          (("1"
                                                                                            (lift-if)
                                                                                            (("1"
                                                                                              (lift-if)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (ground)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "number_sign_changes"
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "number_sign_changes"
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "sign_ext")
                                                                                                        (("1"
                                                                                                          (lift-if)
                                                                                                          (("1"
                                                                                                            (lift-if)
                                                                                                            (("1"
                                                                                                              (lift-if)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (ground)
                                                                                                                  (("1"
                                                                                                                    (lift-if)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (ground)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "number_sign_changes"
                                                                                                                           (-1
                                                                                                                            +))
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (lift-if)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (expand
                                                                                                                     "number_sign_changes"
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (lift-if)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("3"
                                                                                                                    (lift-if)
                                                                                                                    (("3"
                                                                                                                      (assert)
                                                                                                                      (("3"
                                                                                                                        (ground)
                                                                                                                        (("3"
                                                                                                                          (expand
                                                                                                                           "number_sign_changes"
                                                                                                                           -1)
                                                                                                                          (("3"
                                                                                                                            (assert)
                                                                                                                            (("3"
                                                                                                                              (lift-if)
                                                                                                                              (("3"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (expand
                                                                                                     "number_sign_changes"
                                                                                                     +)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "number_sign_changes"
                                                                                                       +)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "sign_ext")
                                                                                                        (("2"
                                                                                                          (lift-if)
                                                                                                          (("2"
                                                                                                            (lift-if)
                                                                                                            (("2"
                                                                                                              (lift-if)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (ground)
                                                                                                                  (("1"
                                                                                                                    (lift-if)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (ground)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "number_sign_changes"
                                                                                                                           1)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (lift-if)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (expand
                                                                                                                     "number_sign_changes"
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (lift-if)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("3"
                                                                                                                    (lift-if)
                                                                                                                    (("3"
                                                                                                                      (assert)
                                                                                                                      (("3"
                                                                                                                        (ground)
                                                                                                                        (("3"
                                                                                                                          (expand
                                                                                                                           "number_sign_changes"
                                                                                                                           -1)
                                                                                                                          (("3"
                                                                                                                            (assert)
                                                                                                                            (("3"
                                                                                                                              (lift-if)
                                                                                                                              (("3"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("4"
                                                                                                                    (expand
                                                                                                                     "number_sign_changes"
                                                                                                                     -1)
                                                                                                                    (("4"
                                                                                                                      (assert)
                                                                                                                      (("4"
                                                                                                                        (lift-if)
                                                                                                                        (("4"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("5"
                                                                                                                    (lift-if)
                                                                                                                    (("5"
                                                                                                                      (assert)
                                                                                                                      (("5"
                                                                                                                        (split
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "number_sign_changes"
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (lift-if)
                                                                                                                              (("1"
                                                                                                                                (split
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (flatten)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "number_sign_changes"
                                                                                                                                     1)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (lift-if)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (expand
                                                                                                     "number_sign_changes"
                                                                                                     +)
                                                                                                    (("3"
                                                                                                      (expand
                                                                                                       "number_sign_changes"
                                                                                                       +)
                                                                                                      (("3"
                                                                                                        (expand
                                                                                                         "sign_ext")
                                                                                                        (("3"
                                                                                                          (lift-if)
                                                                                                          (("3"
                                                                                                            (lift-if)
                                                                                                            (("3"
                                                                                                              (lift-if)
                                                                                                              (("3"
                                                                                                                (assert)
                                                                                                                (("3"
                                                                                                                  (ground)
                                                                                                                  (("1"
                                                                                                                    (lift-if)
                                                                                                                    (("1"
                                                                                                                      (split
                                                                                                                       2)
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "number_sign_changes"
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (lift-if)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (expand
                                                                                                                     "number_sign_changes"
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (lift-if)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("3"
                                                                                                                    (expand
                                                                                                                     "number_sign_changes"
                                                                                                                     -2)
                                                                                                                    (("3"
                                                                                                                      (assert)
                                                                                                                      (("3"
                                                                                                                        (lift-if)
                                                                                                                        (("3"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("4"
                                                                                                                    (expand
                                                                                                                     "number_sign_changes"
                                                                                                                     -1)
                                                                                                                    (("4"
                                                                                                                      (assert)
                                                                                                                      (("4"
                                                                                                                        (lift-if)
                                                                                                                        (("4"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("5"
                                                                                                                    (lift-if)
                                                                                                                    (("5"
                                                                                                                      (split
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "number_sign_changes"
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (lift-if)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (split
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (flatten)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "number_sign_changes"
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("4"
                                                                                                    (expand
                                                                                                     "number_sign_changes"
                                                                                                     +)
                                                                                                    (("4"
                                                                                                      (expand
                                                                                                       "number_sign_changes"
                                                                                                       +)
                                                                                                      (("4"
                                                                                                        (expand
                                                                                                         "sign_ext")
                                                                                                        (("4"
                                                                                                          (lift-if)
                                                                                                          (("4"
                                                                                                            (lift-if)
                                                                                                            (("4"
                                                                                                              (lift-if)
                                                                                                              (("4"
                                                                                                                (assert)
                                                                                                                (("4"
                                                                                                                  (ground)
                                                                                                                  (("1"
                                                                                                                    (lift-if)
                                                                                                                    (("1"
                                                                                                                      (split
                                                                                                                       2)
                                                                                                                      (("1"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (flatten)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "number_sign_changes"
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (lift-if)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (expand
                                                                                                                     "number_sign_changes"
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (lift-if)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("3"
                                                                                                                    (lift-if)
                                                                                                                    (("3"
                                                                                                                      (split
                                                                                                                       -)
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "number_sign_changes"
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (split
                                                                                                                             -)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "number_sign_changes"
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (lift-if)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (reveal
                                                                                           "hyplem")
                                                                                          (("2"
                                                                                            (inst?)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "jj-1")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -13)
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     -14)
                                                                                                    (("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "SQUAB")
                                                                                                        (("2"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (case
                                                                                       "NOT sign_ext(polynomial(p(jj), n(jj))(x)) =
                                  sign_ext(polynomial(p(jj), n(jj))(y))")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "sign_ext"
                                                                                         (1
                                                                                          2))
                                                                                        (("1"
                                                                                          (lift-if)
                                                                                          (("1"
                                                                                            (lift-if)
                                                                                            (("1"
                                                                                              (lift-if)
                                                                                              (("1"
                                                                                                (ground)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         1)
                                                                                        (("2"
                                                                                          (case
                                                                                           "number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x),
                                                                                  jj-1)`num
                                                               =
                                                               number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(y),
                                                                                   jj-1)`num
                                                                + SQUAB")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "sign_ext")
                                                                                            (("1"
                                                                                              (lift-if)
                                                                                              (("1"
                                                                                                (lift-if)
                                                                                                (("1"
                                                                                                  (lift-if)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (ground)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "number_sign_changes"
                                                                                                         +)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "number_sign_changes"
                                                                                                           +)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "sign_ext")
                                                                                                            (("1"
                                                                                                              (lift-if)
                                                                                                              (("1"
                                                                                                                (lift-if)
                                                                                                                (("1"
                                                                                                                  (lift-if)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (ground)
                                                                                                                      (("1"
                                                                                                                        (lift-if)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (ground)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "number_sign_changes"
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (lift-if)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (lift-if)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (split
                                                                                                                             -)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "number_sign_changes"
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (lift-if)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (expand
                                                                                                                         "number_sign_changes"
                                                                                                                         -1)
                                                                                                                        (("3"
                                                                                                                          (assert)
                                                                                                                          (("3"
                                                                                                                            (lift-if)
                                                                                                                            (("3"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("4"
                                                                                                                        (lift-if)
                                                                                                                        (("4"
                                                                                                                          (split
                                                                                                                           -)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "number_sign_changes"
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (lift-if)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (flatten)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "number_sign_changes"
                                                                                                                               1)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (expand
                                                                                                         "number_sign_changes"
                                                                                                         +)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "number_sign_changes"
                                                                                                           +)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "sign_ext")
                                                                                                            (("2"
                                                                                                              (lift-if)
                                                                                                              (("2"
                                                                                                                (lift-if)
                                                                                                                (("2"
                                                                                                                  (lift-if)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (ground)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "number_sign_changes"
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (lift-if)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (lift-if)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (split
                                                                                                                             -)
                                                                                                                            (("1"
                                                                                                                              (split
                                                                                                                               2)
                                                                                                                              (("1"
                                                                                                                                (propax)
                                                                                                                                nil
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (expand
                                                                                                                                 "number_sign_changes"
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (lift-if)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "number_sign_changes"
                                                                                                                                       1)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (lift-if)
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (expand
                                                                                                                         "number_sign_changes"
                                                                                                                         -1)
                                                                                                                        (("3"
                                                                                                                          (assert)
                                                                                                                          (("3"
                                                                                                                            (lift-if)
                                                                                                                            (("3"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("4"
                                                                                                                        (lift-if)
                                                                                                                        (("4"
                                                                                                                          (split
                                                                                                                           -)
                                                                                                                          (("1"
                                                                                                                            (split
                                                                                                                             2)
                                                                                                                            (("1"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (flatten)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "number_sign_changes"
                                                                                                                                 1)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (lift-if)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (flatten)
                                                                                                                            (("2"
                                                                                                                              (split
                                                                                                                               +)
                                                                                                                              (("1"
                                                                                                                                (propax)
                                                                                                                                nil
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "number_sign_changes"
                                                                                                                                   1)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("3"
                                                                                                        (expand
                                                                                                         "number_sign_changes"
                                                                                                         +)
                                                                                                        (("3"
                                                                                                          (expand
                                                                                                           "number_sign_changes"
                                                                                                           +)
                                                                                                          (("3"
                                                                                                            (expand
                                                                                                             "sign_ext")
                                                                                                            (("3"
                                                                                                              (lift-if)
                                                                                                              (("3"
                                                                                                                (lift-if)
                                                                                                                (("3"
                                                                                                                  (lift-if)
                                                                                                                  (("3"
                                                                                                                    (assert)
                                                                                                                    (("3"
                                                                                                                      (ground)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "number_sign_changes"
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (lift-if)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (lift-if)
                                                                                                                        (("2"
                                                                                                                          (split
                                                                                                                           2)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "number_sign_changes"
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (lift-if)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (propax)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (expand
                                                                                                                         "number_sign_changes"
                                                                                                                         -1)
                                                                                                                        (("3"
                                                                                                                          (assert)
                                                                                                                          (("3"
                                                                                                                            (lift-if)
                                                                                                                            (("3"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("4"
                                                                                                                        (lift-if)
                                                                                                                        (("4"
                                                                                                                          (split
                                                                                                                           +)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "number_sign_changes"
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (lift-if)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (propax)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("4"
                                                                                                        (expand
                                                                                                         "number_sign_changes"
                                                                                                         +)
                                                                                                        (("4"
                                                                                                          (expand
                                                                                                           "number_sign_changes"
                                                                                                           +)
                                                                                                          (("4"
                                                                                                            (expand
                                                                                                             "sign_ext")
                                                                                                            (("4"
                                                                                                              (lift-if)
                                                                                                              (("4"
                                                                                                                (lift-if)
                                                                                                                (("4"
                                                                                                                  (lift-if)
                                                                                                                  (("4"
                                                                                                                    (assert)
                                                                                                                    (("4"
                                                                                                                      (ground)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "number_sign_changes"
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (lift-if)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (lift-if)
                                                                                                                        (("2"
                                                                                                                          (split
                                                                                                                           -)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "number_sign_changes"
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (flatten)
                                                                                                                              (("2"
                                                                                                                                (split
                                                                                                                                 -)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "number_sign_changes"
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (lift-if)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (expand
                                                                                                                         "number_sign_changes"
                                                                                                                         -1)
                                                                                                                        (("3"
                                                                                                                          (assert)
                                                                                                                          (("3"
                                                                                                                            (lift-if)
                                                                                                                            (("3"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("4"
                                                                                                                        (lift-if)
                                                                                                                        (("4"
                                                                                                                          (split
                                                                                                                           -)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "number_sign_changes"
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (flatten)
                                                                                                                            (("2"
                                                                                                                              (split
                                                                                                                               -)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "number_sign_changes"
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (lift-if)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "number_sign_changes"
                                                                                                                                   1)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (hide
                                                                                               2)
                                                                                              (("2"
                                                                                                (reveal
                                                                                                 "hyplem")
                                                                                                (("2"
                                                                                                  (inst?)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "jj-1")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -13)
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           -14)
                                                                                                          (("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "SQUAB")
                                                                                                              (("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (case
                                                                         "FORALL (x1,x2:real): x<=x1 AND x1<x2 AND x2<=y IMPLIES sign_ext(polynomial(p(1 + jj), n(1 + jj))(x1)) =
                              sign_ext(polynomial(p(1 + jj), n(1 + jj))(x2))")
                                                                        (("1"
                                                                          (inst-cp
                                                                           -
                                                                           "x"
                                                                           "b")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "b"
                                                                             "y")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide
                                                                           2)
                                                                          (("2"
                                                                            (skeep)
                                                                            (("2"
                                                                              (label
                                                                               "squiggy"
                                                                               9)
                                                                              (("2"
                                                                                (hide
                                                                                 "squiggy")
                                                                                (("2"
                                                                                  (expand
                                                                                   "sign_ext"
                                                                                   1)
                                                                                  (("2"
                                                                                    (lift-if)
                                                                                    (("2"
                                                                                      (lift-if)
                                                                                      (("2"
                                                                                        (lift-if)
                                                                                        (("2"
                                                                                          (lift-if)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (ground)
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "poly_intermediate_value_inc")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "p(1+jj)"
                                                                                                   "0"
                                                                                                   "n(1+jj)"
                                                                                                   "x1"
                                                                                                   "x2")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (skeep
                                                                                                       -)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "cc"
                                                                                                         "1+jj")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (lemma
                                                                                                 "poly_intermediate_value_dec")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "p(1+jj)"
                                                                                                   "0"
                                                                                                   "n(1+jj)"
                                                                                                   "x1"
                                                                                                   "x2")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (skeep
                                                                                                       -)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "cc"
                                                                                                         "1+jj")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("3"
                                                                                                (inst
                                                                                                 -
                                                                                                 "x2")
                                                                                                (("3"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "x2"
                                                                                                   "1+jj")
                                                                                                  (("3"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("4"
                                                                                                (inst
                                                                                                 -
                                                                                                 "x1"
                                                                                                 "1+jj")
                                                                                                (("4"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("5"
                                                                                                (inst
                                                                                                 -
                                                                                                 "x1"
                                                                                                 "1+jj")
                                                                                                (("5"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (label
                                                                     "squiggy"
                                                                     8)
                                                                    (("2"
                                                                      (hide
                                                                       "squiggy")
                                                                      (("2"
                                                                        (case
                                                                         "FORALL (x1,x2:real): x<=x1 AND x1<x2 AND x2<=y IMPLIES sign_ext(polynomial(p(jj - 1), n(jj - 1))(x1)) =
                            sign_ext(polynomial(p(jj - 1), n(jj - 1))(x2))")
                                                                        (("1"
                                                                          (inst-cp
                                                                           -
                                                                           "x"
                                                                           "b")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "b"
                                                                             "y")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide
                                                                           2)
                                                                          (("2"
                                                                            (skeep)
                                                                            (("2"
                                                                              (expand
                                                                               "sign_ext"
                                                                               1)
                                                                              (("2"
                                                                                (lift-if)
                                                                                (("2"
                                                                                  (lift-if)
                                                                                  (("2"
                                                                                    (lift-if)
                                                                                    (("2"
                                                                                      (lift-if)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (ground)
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "poly_intermediate_value_inc")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "p(jj-1)"
                                                                                               "0"
                                                                                               "n(jj-1)"
                                                                                               "x1"
                                                                                               "x2")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (skeep
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "cc"
                                                                                                     "jj-1")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (lemma
                                                                                             "poly_intermediate_value_dec")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "p(jj-1)"
                                                                                               "0"
                                                                                               "n(jj-1)"
                                                                                               "x1"
                                                                                               "x2")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (skeep
                                                                                                   -)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "cc"
                                                                                                     "jj-1")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (inst
                                                                                             -
                                                                                             "x2"
                                                                                             "jj-1")
                                                                                            (("3"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("4"
                                                                                            (inst
                                                                                             -
                                                                                             "x1"
                                                                                             "jj-1")
                                                                                            (("4"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("5"
                                                                                            (inst
                                                                                             -
                                                                                             "x1"
                                                                                             "jj-1")
                                                                                            (("5"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (hide 7)
                                                                      (("2"
                                                                        (lemma
                                                                         "sturm_seq_repeated_root")
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "m"
                                                                           "n"
                                                                           "p"
                                                                           "b")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "jj-1")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "jj+1")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (sturm_lem_one_root-2 nil 3587808579
   (""
    (case " FORALL (b: real, dd,j, m: nat, n: [nat -> nat],
                                                                                                                       p: [nat -> [nat -> real]], x, y: real): j<=dd AND
                                                                                                                       x < y AND x < b AND b < y
                                                                                                    AND (FORALL (c: real, i: nat):
                                                                                                          i <= m AND
                                                                                                           x <= c AND c <= y AND polynomial(p(i), n(i))(c) = 0
                                                                                                           IMPLIES c = b) AND (FORALL (c:real): x<=c AND c<=y AND polynomial(p(0),n(0))(c)=0 IMPLIES
                                                                                          (polynomial(p(1),n(1))(c)/=0))
                                                                                                    AND j <= m AND polynomial(p(j), n(j))(b) /= 0 AND sturm_sequence?(p, n, m)
                                                                                                    IMPLIES
                                                                                                    LET nsc =
                                                                                                          LAMBDA (xyz: real, pj: nat):
                                                                                                            number_sign_changes(LAMBDA
                                                                                                                                (i):
                                                                                                                                polynomial(p(i), n(i))(xyz),
                                                                                                                                pj)
                                                                                                      IN
                                                                                                      sign_ext(nsc(x, j)`lastnz) = sign_ext(nsc(y, j)`lastnz)
                                                                                                       AND
                                                                                                        nsc(x, j)`num =
                           nsc(y, j)`num +
                            (IF polynomial(p(0), n(0))(b) = 0 THEN 1 ELSE 0 ENDIF)")
    (("1" (skeep)
      (("1" (inst - "b" "j" "j" "m" "n" "p" "x" "y")
        (("1" (assert)
          (("1" (replace -5) (("1" (replace -6) (("1" (propax) nil nil)) nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (hide 2)
      (("2" (induct "dd")
        (("1" (assert) nil nil)
         ("2" (skeep)
          (("2" (assert)
            (("2" (case "NOT j = 0")
              (("1" (assert) nil nil)
               ("2" (hide -2)
                (("2" (replaces -1)
                  (("2" (expand "number_sign_changes")
                    (("2" (expand "sign_ext" 2)
                      (("2" (lift-if)
                        (("2" (lift-if)
                          (("2" (lift-if)
                            (("2" (lift-if)
                              (("2" (assert)
                                (("2" (ground)
                                  (("1" (lemma "poly_intermediate_value_inc")
                                    (("1" (inst - "p(0)" "0" "n(0)" "x" "y")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (skeep -)
                                          (("1"
                                            (inst - "cc" "0")
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (lemma "poly_intermediate_value_dec")
                                    (("2" (inst - "p(0)" "0" "n(0)" "x" "y")
                                      (("2"
                                        (assert)
                                        (("2"
                                          (skeep -)
                                          (("2"
                                            (inst - "cc" "0")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("3" (lemma "poly_intermediate_value_dec")
                                    (("3" (inst - "p(0)" "0" "n(0)" "x" "y")
                                      (("3"
                                        (assert)
                                        (("3"
                                          (skeep -)
                                          (("3"
                                            (inst - "cc" "0")
                                            (("3" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("4" (inst - "x" "0")
                                    (("4" (assert) nil nil)) nil)
                                   ("5" (inst - "x" "0")
                                    (("5" (assert) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("3" (skolem 1 "jj")
          (("3" (flatten)
            (("3" (skeep)
              (("3" (assert)
                (("3" (case "NOT j = 1+jj")
                  (("1" (inst - "b" "j" "m" "n" "p" "x" "y")
                    (("1" (assert)
                      (("1" (replace -6)
                        (("1" (replace -7) (("1" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil)
                   ("2" (replaces -1)
                    (("2" (assert)
                      (("2" (inst-cp - "x" "jj")
                        (("2" (assert)
                          (("2" (inst-cp - "y" "jj")
                            (("2" (assert)
                              (("2" (inst-cp - "x" "1+jj")
                                (("2" (assert)
                                  (("2" (inst-cp - "y" "1+jj")
                                    (("2" (assert)
                                      (("2"
                                        (case "polynomial(p(jj),n(jj))(b)/=0")
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (inst
                                             -
                                             "b"
                                             "jj"
                                             "m"
                                             "n"
                                             "p"
                                             "x"
                                             "y")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (replace -6)
                                                (("1"
                                                  (replace -7)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (split +)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand
                                                           "number_sign_changes"
                                                           +)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (hide -2)
                                                              (("1"
                                                                (expand
                                                                 "sign_ext"
                                                                 1)
                                                                (("1"
                                                                  (lift-if)
                                                                  (("1"
                                                                    (lift-if)
                                                                    (("1"
                                                                      (lift-if)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (ground)
                                                                          (("1"
                                                                            (lemma
                                                                             "poly_intermediate_value_inc")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "p(1+jj)"
                                                                               "0"
                                                                               "n(1+jj)"
                                                                               "x"
                                                                               "y")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (skeep
                                                                                   -1)
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "cc"
                                                                                     "1+jj")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (lemma
                                                                             "poly_intermediate_value_dec")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "p(1+jj)"
                                                                               "0"
                                                                               "n(1+jj)"
                                                                               "x"
                                                                               "y")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (skeep
                                                                                   -1)
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "cc"
                                                                                     "1+jj")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (invoke
                                                         (name "SQUAB" "%1")
                                                         (! 1 2 2))
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (label
                                                             "SQUABname"
                                                             -1)
                                                            (("2"
                                                              (hide
                                                               "SQUABname")
                                                              (("2"
                                                                (expand
                                                                 "number_sign_changes"
                                                                 +)
                                                                (("2"
                                                                  (expand
                                                                   "sign_ext"
                                                                   -1)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (lift-if)
                                                                      (("2"
                                                                        (lift-if)
                                                                        (("2"
                                                                          (lift-if)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (ground)
                                                                              (("1"
                                                                                (expand
                                                                                 "sign_ext")
                                                                                (("1"
                                                                                  (lift-if)
                                                                                  (("1"
                                                                                    (ground)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "poly_intermediate_value_dec")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "p(1+jj)"
                                                                                         "0"
                                                                                         "n(1+jj)"
                                                                                         "x"
                                                                                         "y")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (skeep
                                                                                             -1)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "cc"
                                                                                               "1+jj")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "sign_ext")
                                                                                (("2"
                                                                                  (lift-if)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (ground)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "poly_intermediate_value_inc")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "p(1+jj)"
                                                                                           "0"
                                                                                           "n(1+jj)"
                                                                                           "x"
                                                                                           "y")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (skeep
                                                                                               -1)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "cc"
                                                                                                 "1+jj")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (assert)
                                                                                (("3"
                                                                                  (lift-if)
                                                                                  (("3"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("4"
                                                                                (expand
                                                                                 "sign_ext")
                                                                                (("4"
                                                                                  (lift-if)
                                                                                  (("4"
                                                                                    (assert)
                                                                                    (("4"
                                                                                      (ground)
                                                                                      (("4"
                                                                                        (lemma
                                                                                         "poly_intermediate_value_inc")
                                                                                        (("4"
                                                                                          (inst
                                                                                           -
                                                                                           "p(1+jj)"
                                                                                           "0"
                                                                                           "n(1+jj)"
                                                                                           "x"
                                                                                           "y")
                                                                                          (("4"
                                                                                            (assert)
                                                                                            (("4"
                                                                                              (skeep
                                                                                               -1)
                                                                                              (("4"
                                                                                                (inst
                                                                                                 -
                                                                                                 "cc"
                                                                                                 "1+jj")
                                                                                                (("4"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("5"
                                                                                (expand
                                                                                 "sign_ext")
                                                                                (("5"
                                                                                  (lift-if)
                                                                                  (("5"
                                                                                    (assert)
                                                                                    (("5"
                                                                                      (ground)
                                                                                      (("5"
                                                                                        (lemma
                                                                                         "poly_intermediate_value_dec")
                                                                                        (("5"
                                                                                          (inst
                                                                                           -
                                                                                           "p(1+jj)"
                                                                                           "0"
                                                                                           "n(1+jj)"
                                                                                           "x"
                                                                                           "y")
                                                                                          (("5"
                                                                                            (assert)
                                                                                            (("5"
                                                                                              (skeep
                                                                                               -1)
                                                                                              (("5"
                                                                                                (inst
                                                                                                 -
                                                                                                 "cc"
                                                                                                 "1+jj")
                                                                                                (("5"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("6"
                                                                                (lift-if)
                                                                                (("6"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten)
                                          (("2"
                                            (label "hyplem" -2)
                                            (("2"
                                              (hide "hyplem")
                                              (("2"
                                                (copy -9)
                                                (("2"
                                                  (expand
                                                   "sturm_sequence?"
                                                   -1)
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (hide (-1 -2 -3 -5))
                                                      (("2"
                                                        (inst - "b" "jj")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (case "jj = 0")
                                                            (("1"
                                                              (hide -2)
                                                              (("1"
                                                                (replaces -1)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (split +)
                                                                    (("1"
                                                                      (expand
                                                                       "number_sign_changes"
                                                                       +)
                                                                      (("1"
                                                                        (lift-if)
                                                                        (("1"
                                                                          (expand
                                                                           "sign_ext"
                                                                           +)
                                                                          (("1"
                                                                            (lift-if)
                                                                            (("1"
                                                                              (lift-if)
                                                                              (("1"
                                                                                (lift-if)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (ground)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "poly_intermediate_value_inc")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "p(1)"
                                                                                         "0"
                                                                                         "n(1)"
                                                                                         "x"
                                                                                         "y")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (skeep
                                                                                             -1)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "cc"
                                                                                               "1")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (lemma
                                                                                       "poly_intermediate_value_dec")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "p(1)"
                                                                                         "0"
                                                                                         "n(1)"
                                                                                         "x"
                                                                                         "y")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (skeep
                                                                                             -1)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "cc"
                                                                                               "1")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (case
                                                                       "sign_ext(polynomial(p(0),n(0))(x))/=sign_ext(polynomial(p(0),n(0))(y))")
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (expand
                                                                           "number_sign_changes"
                                                                           2)
                                                                          (("1"
                                                                            (expand
                                                                             "number_sign_changes"
                                                                             2)
                                                                            (("1"
                                                                              (lift-if)
                                                                              (("1"
                                                                                (lift-if)
                                                                                (("1"
                                                                                  (lift-if)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (ground)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "sign_ext")
                                                                                        (("1"
                                                                                          (lift-if)
                                                                                          (("1"
                                                                                            (lift-if)
                                                                                            (("1"
                                                                                              (lift-if)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (ground)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "poly_intermediate_value_dec")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "p(1)"
                                                                                                       "0"
                                                                                                       "n(1)"
                                                                                                       "x"
                                                                                                       "y")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (skeep
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "cc"
                                                                                                             "1")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (lemma
                                                                                                     "poly_intermediate_value_inc")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "p(1)"
                                                                                                       "0"
                                                                                                       "n(1)"
                                                                                                       "x"
                                                                                                       "y")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (skeep
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "cc"
                                                                                                             "1")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (lemma
                                                                                         "sturm_seq_first_signs_eq")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "b"
                                                                                           "m"
                                                                                           "n"
                                                                                           "p"
                                                                                           "x"
                                                                                           "y")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (split
                                                                                               -)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "sign_ext")
                                                                                                  (("1"
                                                                                                    (lift-if)
                                                                                                    (("1"
                                                                                                      (lift-if)
                                                                                                      (("1"
                                                                                                        (lift-if)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (ground)
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "poly_intermediate_value_inc")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "p(1)"
                                                                                                                 "0"
                                                                                                                 "n(1)"
                                                                                                                 "x"
                                                                                                                 "b")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (skeep
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "cc"
                                                                                                                       "1")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (lemma
                                                                                                               "poly_intermediate_value_dec")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "p(1)"
                                                                                                                 "0"
                                                                                                                 "n(1)"
                                                                                                                 "x"
                                                                                                                 "b")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (skeep
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "cc"
                                                                                                                       "1")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (skeep)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "c"
                                                                                                   "0")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (expand
                                                                           "sign_ext"
                                                                           -1)
                                                                          (("2"
                                                                            (lift-if)
                                                                            (("2"
                                                                              (lift-if)
                                                                              (("2"
                                                                                (lift-if)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (ground)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "square_free_max")
                                                                                      (("1"
                                                                                        (case
                                                                                         "n(0) = 0")
                                                                                        (("1"
                                                                                          (replaces
                                                                                           -1)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "polynomial")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "sigma")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "sigma")
                                                                                                (("1"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (inst
                                                                                           -
                                                                                           "p(0)"
                                                                                           "min(y-b,b-x)"
                                                                                           "b"
                                                                                           "0"
                                                                                           "n(0)")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (split
                                                                                               -)
                                                                                              (("1"
                                                                                                (copy
                                                                                                 -12)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "sturm_sequence?"
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       -2)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -2
                                                                                                         "b")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "max"
                                                                                                             -2)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "sign_ext"
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (lift-if)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (case
                                                                                                   "x!1 = b")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (case
                                                                                                     "x!1 < b")
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "poly_intermediate_value_inc")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "p(0)"
                                                                                                         "0"
                                                                                                         "n(0)"
                                                                                                         "x"
                                                                                                         "x!1")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (skeep
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "cc"
                                                                                                               "0")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (lemma
                                                                                                       "poly_intermediate_value_dec")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "p(0)"
                                                                                                         "0"
                                                                                                         "n(0)"
                                                                                                         "x!1"
                                                                                                         "y")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (skeep
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "cc"
                                                                                                               "0")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("3"
                                                                                            (assert)
                                                                                            (("3"
                                                                                              (expand
                                                                                               "min"
                                                                                               1)
                                                                                              (("3"
                                                                                                (lift-if)
                                                                                                (("3"
                                                                                                  (ground)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (lemma
                                                                                       "square_free_min")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "p(0)"
                                                                                         "min(y-b,b-x)"
                                                                                         "b"
                                                                                         "0"
                                                                                         "n(0)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (split
                                                                                             -)
                                                                                            (("1"
                                                                                              (copy
                                                                                               -10)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "sturm_sequence?"
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -2)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -2
                                                                                                       "b")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "n(0) = 0")
                                                                                                          (("1"
                                                                                                            (replaces
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "polynomial")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "sigma")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "sigma")
                                                                                                                  (("1"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "max"
                                                                                                             -2)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "sign_ext"
                                                                                                                 -2)
                                                                                                                (("2"
                                                                                                                  (lift-if)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (case
                                                                                                 "x!1 = b")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (case
                                                                                                   "x!1 < b")
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "poly_intermediate_value_dec")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "p(0)"
                                                                                                       "0"
                                                                                                       "n(0)"
                                                                                                       "x"
                                                                                                       "x!1")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (skeep
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "cc"
                                                                                                             "0")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (lemma
                                                                                                     "poly_intermediate_value_inc")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "p(0)"
                                                                                                       "0"
                                                                                                       "n(0)"
                                                                                                       "x!1"
                                                                                                       "y")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (skeep
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "cc"
                                                                                                             "0")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (case
                                                                                           "n(0) = 0")
                                                                                          (("1"
                                                                                            (replaces
                                                                                             -1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "polynomial"
                                                                                               (-1
                                                                                                +))
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "sigma")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "sigma")
                                                                                                  (("1"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (expand
                                                                                           "min"
                                                                                           1)
                                                                                          (("3"
                                                                                            (lift-if)
                                                                                            (("3"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (case
                                                                 "polynomial(p(jj - 1), n(jj - 1))(b) /= 0")
                                                                (("1"
                                                                  (case
                                                                   "sign_ext(polynomial(p(jj - 1), n(jj - 1))(b))=sign_ext(polynomial(p(jj - 1), n(jj - 1))(x)) AND sign_ext(polynomial(p(jj - 1), n(jj - 1))(b))=sign_ext(polynomial(p(jj - 1), n(jj - 1))(y))")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (case
                                                                       "sign_ext(polynomial(p(1 + jj), n(1 + jj))(b))=sign_ext(polynomial(p(1 + jj), n(1 + jj))(x)) AND sign_ext(polynomial(p(1 + jj), n(1 + jj))(b))=sign_ext(polynomial(p(1 + jj), n(1 + jj))(y))")
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (split
                                                                             +)
                                                                            (("1"
                                                                              (expand
                                                                               "number_sign_changes"
                                                                               1)
                                                                              (("1"
                                                                                (lift-if)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (invoke
                                                                                 (name
                                                                                  "SQUAB"
                                                                                  "%1")
                                                                                 (!
                                                                                  1
                                                                                  2
                                                                                  2))
                                                                                (("2"
                                                                                  (replaces
                                                                                   -1)
                                                                                  (("2"
                                                                                    (case
                                                                                     "sign_ext(polynomial(p(jj), n(jj))(x)) =
                                                        - sign_ext(polynomial(p(jj), n(jj))(y))")
                                                                                    (("1"
                                                                                      (case
                                                                                       "number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x),
                                                                                jj-1)`num
                                                             =
                                                             number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(y),
                                                                                 jj-1)`num
                                                              + SQUAB")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "sign_ext")
                                                                                        (("1"
                                                                                          (lift-if)
                                                                                          (("1"
                                                                                            (lift-if)
                                                                                            (("1"
                                                                                              (lift-if)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (ground)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "number_sign_changes"
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "number_sign_changes"
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "sign_ext")
                                                                                                        (("1"
                                                                                                          (lift-if)
                                                                                                          (("1"
                                                                                                            (lift-if)
                                                                                                            (("1"
                                                                                                              (lift-if)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (ground)
                                                                                                                  (("1"
                                                                                                                    (lift-if)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (ground)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "number_sign_changes"
                                                                                                                           (-1
                                                                                                                            +))
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (lift-if)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (expand
                                                                                                                     "number_sign_changes"
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (lift-if)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("3"
                                                                                                                    (lift-if)
                                                                                                                    (("3"
                                                                                                                      (assert)
                                                                                                                      (("3"
                                                                                                                        (ground)
                                                                                                                        (("3"
                                                                                                                          (expand
                                                                                                                           "number_sign_changes"
                                                                                                                           -1)
                                                                                                                          (("3"
                                                                                                                            (assert)
                                                                                                                            (("3"
                                                                                                                              (lift-if)
                                                                                                                              (("3"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (expand
                                                                                                     "number_sign_changes"
                                                                                                     +)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "number_sign_changes"
                                                                                                       +)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "sign_ext")
                                                                                                        (("2"
                                                                                                          (lift-if)
                                                                                                          (("2"
                                                                                                            (lift-if)
                                                                                                            (("2"
                                                                                                              (lift-if)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (ground)
                                                                                                                  (("1"
                                                                                                                    (lift-if)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (ground)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "number_sign_changes"
                                                                                                                           1)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (lift-if)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (expand
                                                                                                                     "number_sign_changes"
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (lift-if)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("3"
                                                                                                                    (lift-if)
                                                                                                                    (("3"
                                                                                                                      (assert)
                                                                                                                      (("3"
                                                                                                                        (ground)
                                                                                                                        (("3"
                                                                                                                          (expand
                                                                                                                           "number_sign_changes"
                                                                                                                           -1)
                                                                                                                          (("3"
                                                                                                                            (assert)
                                                                                                                            (("3"
                                                                                                                              (lift-if)
                                                                                                                              (("3"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("4"
                                                                                                                    (expand
                                                                                                                     "number_sign_changes"
                                                                                                                     -1)
                                                                                                                    (("4"
                                                                                                                      (assert)
                                                                                                                      (("4"
                                                                                                                        (lift-if)
                                                                                                                        (("4"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("5"
                                                                                                                    (lift-if)
                                                                                                                    (("5"
                                                                                                                      (assert)
                                                                                                                      (("5"
                                                                                                                        (split
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "number_sign_changes"
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (lift-if)
                                                                                                                              (("1"
                                                                                                                                (split
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (flatten)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "number_sign_changes"
                                                                                                                                     1)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (lift-if)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (expand
                                                                                                     "number_sign_changes"
                                                                                                     +)
                                                                                                    (("3"
                                                                                                      (expand
                                                                                                       "number_sign_changes"
                                                                                                       +)
                                                                                                      (("3"
                                                                                                        (expand
                                                                                                         "sign_ext")
                                                                                                        (("3"
                                                                                                          (lift-if)
                                                                                                          (("3"
                                                                                                            (lift-if)
                                                                                                            (("3"
                                                                                                              (lift-if)
                                                                                                              (("3"
                                                                                                                (assert)
                                                                                                                (("3"
                                                                                                                  (ground)
                                                                                                                  (("1"
                                                                                                                    (lift-if)
                                                                                                                    (("1"
                                                                                                                      (split
                                                                                                                       2)
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "number_sign_changes"
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (lift-if)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (expand
                                                                                                                     "number_sign_changes"
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (lift-if)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("3"
                                                                                                                    (expand
                                                                                                                     "number_sign_changes"
                                                                                                                     -2)
                                                                                                                    (("3"
                                                                                                                      (assert)
                                                                                                                      (("3"
                                                                                                                        (lift-if)
                                                                                                                        (("3"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("4"
                                                                                                                    (expand
                                                                                                                     "number_sign_changes"
                                                                                                                     -1)
                                                                                                                    (("4"
                                                                                                                      (assert)
                                                                                                                      (("4"
                                                                                                                        (lift-if)
                                                                                                                        (("4"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("5"
                                                                                                                    (lift-if)
                                                                                                                    (("5"
                                                                                                                      (split
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "number_sign_changes"
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (lift-if)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (split
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (flatten)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "number_sign_changes"
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("4"
                                                                                                    (expand
                                                                                                     "number_sign_changes"
                                                                                                     +)
                                                                                                    (("4"
                                                                                                      (expand
                                                                                                       "number_sign_changes"
                                                                                                       +)
                                                                                                      (("4"
                                                                                                        (expand
                                                                                                         "sign_ext")
                                                                                                        (("4"
                                                                                                          (lift-if)
                                                                                                          (("4"
                                                                                                            (lift-if)
                                                                                                            (("4"
                                                                                                              (lift-if)
                                                                                                              (("4"
                                                                                                                (assert)
                                                                                                                (("4"
                                                                                                                  (ground)
                                                                                                                  (("1"
                                                                                                                    (lift-if)
                                                                                                                    (("1"
                                                                                                                      (split
                                                                                                                       2)
                                                                                                                      (("1"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (flatten)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "number_sign_changes"
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (lift-if)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (expand
                                                                                                                     "number_sign_changes"
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (lift-if)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("3"
                                                                                                                    (lift-if)
                                                                                                                    (("3"
                                                                                                                      (split
                                                                                                                       -)
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "number_sign_changes"
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (split
                                                                                                                             -)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "number_sign_changes"
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (lift-if)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (reveal
                                                                                           "hyplem")
                                                                                          (("2"
                                                                                            (inst?)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "jj-1")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -13)
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     -14)
                                                                                                    (("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "SQUAB")
                                                                                                        (("2"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (case
                                                                                       "NOT sign_ext(polynomial(p(jj), n(jj))(x)) =
                                  sign_ext(polynomial(p(jj), n(jj))(y))")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "sign_ext"
                                                                                         (1
                                                                                          2))
                                                                                        (("1"
                                                                                          (lift-if)
                                                                                          (("1"
                                                                                            (lift-if)
                                                                                            (("1"
                                                                                              (lift-if)
                                                                                              (("1"
                                                                                                (ground)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         1)
                                                                                        (("2"
                                                                                          (case
                                                                                           "number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x),
                                                                                  jj-1)`num
                                                               =
                                                               number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(y),
                                                                                   jj-1)`num
                                                                + SQUAB")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "sign_ext")
                                                                                            (("1"
                                                                                              (lift-if)
                                                                                              (("1"
                                                                                                (lift-if)
                                                                                                (("1"
                                                                                                  (lift-if)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (ground)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "number_sign_changes"
                                                                                                         +)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "number_sign_changes"
                                                                                                           +)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "sign_ext")
                                                                                                            (("1"
                                                                                                              (lift-if)
                                                                                                              (("1"
                                                                                                                (lift-if)
                                                                                                                (("1"
                                                                                                                  (lift-if)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (ground)
                                                                                                                      (("1"
                                                                                                                        (lift-if)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (ground)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "number_sign_changes"
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (lift-if)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (lift-if)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (split
                                                                                                                             -)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "number_sign_changes"
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (lift-if)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (expand
                                                                                                                         "number_sign_changes"
                                                                                                                         -1)
                                                                                                                        (("3"
                                                                                                                          (assert)
                                                                                                                          (("3"
                                                                                                                            (lift-if)
                                                                                                                            (("3"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("4"
                                                                                                                        (lift-if)
                                                                                                                        (("4"
                                                                                                                          (split
                                                                                                                           -)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "number_sign_changes"
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (lift-if)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (flatten)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "number_sign_changes"
                                                                                                                               1)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (expand
                                                                                                         "number_sign_changes"
                                                                                                         +)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "number_sign_changes"
                                                                                                           +)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "sign_ext")
                                                                                                            (("2"
                                                                                                              (lift-if)
                                                                                                              (("2"
                                                                                                                (lift-if)
                                                                                                                (("2"
                                                                                                                  (lift-if)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (ground)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "number_sign_changes"
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (lift-if)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (lift-if)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (split
                                                                                                                             -)
                                                                                                                            (("1"
                                                                                                                              (split
                                                                                                                               2)
                                                                                                                              (("1"
                                                                                                                                (propax)
                                                                                                                                nil
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (expand
                                                                                                                                 "number_sign_changes"
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (lift-if)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "number_sign_changes"
                                                                                                                                       1)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (lift-if)
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (expand
                                                                                                                         "number_sign_changes"
                                                                                                                         -1)
                                                                                                                        (("3"
                                                                                                                          (assert)
                                                                                                                          (("3"
                                                                                                                            (lift-if)
                                                                                                                            (("3"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("4"
                                                                                                                        (lift-if)
                                                                                                                        (("4"
                                                                                                                          (split
                                                                                                                           -)
                                                                                                                          (("1"
                                                                                                                            (split
                                                                                                                             2)
                                                                                                                            (("1"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (flatten)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "number_sign_changes"
                                                                                                                                 1)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (lift-if)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (flatten)
                                                                                                                            (("2"
                                                                                                                              (split
                                                                                                                               +)
                                                                                                                              (("1"
                                                                                                                                (propax)
                                                                                                                                nil
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "number_sign_changes"
                                                                                                                                   1)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("3"
                                                                                                        (expand
                                                                                                         "number_sign_changes"
                                                                                                         +)
                                                                                                        (("3"
                                                                                                          (expand
                                                                                                           "number_sign_changes"
                                                                                                           +)
                                                                                                          (("3"
                                                                                                            (expand
                                                                                                             "sign_ext")
                                                                                                            (("3"
                                                                                                              (lift-if)
                                                                                                              (("3"
                                                                                                                (lift-if)
                                                                                                                (("3"
                                                                                                                  (lift-if)
                                                                                                                  (("3"
                                                                                                                    (assert)
                                                                                                                    (("3"
                                                                                                                      (ground)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "number_sign_changes"
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (lift-if)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (lift-if)
                                                                                                                        (("2"
                                                                                                                          (split
                                                                                                                           2)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "number_sign_changes"
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (lift-if)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (propax)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (expand
                                                                                                                         "number_sign_changes"
                                                                                                                         -1)
                                                                                                                        (("3"
                                                                                                                          (assert)
                                                                                                                          (("3"
                                                                                                                            (lift-if)
                                                                                                                            (("3"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("4"
                                                                                                                        (lift-if)
                                                                                                                        (("4"
                                                                                                                          (split
                                                                                                                           +)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "number_sign_changes"
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (lift-if)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (propax)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("4"
                                                                                                        (expand
                                                                                                         "number_sign_changes"
                                                                                                         +)
                                                                                                        (("4"
                                                                                                          (expand
                                                                                                           "number_sign_changes"
                                                                                                           +)
                                                                                                          (("4"
                                                                                                            (expand
                                                                                                             "sign_ext")
                                                                                                            (("4"
                                                                                                              (lift-if)
                                                                                                              (("4"
                                                                                                                (lift-if)
                                                                                                                (("4"
                                                                                                                  (lift-if)
                                                                                                                  (("4"
                                                                                                                    (assert)
                                                                                                                    (("4"
                                                                                                                      (ground)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "number_sign_changes"
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (lift-if)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (lift-if)
                                                                                                                        (("2"
                                                                                                                          (split
                                                                                                                           -)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "number_sign_changes"
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (flatten)
                                                                                                                              (("2"
                                                                                                                                (split
                                                                                                                                 -)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "number_sign_changes"
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (lift-if)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (expand
                                                                                                                         "number_sign_changes"
                                                                                                                         -1)
                                                                                                                        (("3"
                                                                                                                          (assert)
                                                                                                                          (("3"
                                                                                                                            (lift-if)
                                                                                                                            (("3"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("4"
                                                                                                                        (lift-if)
                                                                                                                        (("4"
                                                                                                                          (split
                                                                                                                           -)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "number_sign_changes"
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (flatten)
                                                                                                                            (("2"
                                                                                                                              (split
                                                                                                                               -)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "number_sign_changes"
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (lift-if)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "number_sign_changes"
                                                                                                                                   1)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (hide
                                                                                               2)
                                                                                              (("2"
                                                                                                (reveal
                                                                                                 "hyplem")
                                                                                                (("2"
                                                                                                  (inst?)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "jj-1")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -13)
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           -14)
                                                                                                          (("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "SQUAB")
                                                                                                              (("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (case
                                                                         "FORALL (x1,x2:real): x<=x1 AND x1<x2 AND x2<=y IMPLIES sign_ext(polynomial(p(1 + jj), n(1 + jj))(x1)) =
                              sign_ext(polynomial(p(1 + jj), n(1 + jj))(x2))")
                                                                        (("1"
                                                                          (inst-cp
                                                                           -
                                                                           "x"
                                                                           "b")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "b"
                                                                             "y")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide
                                                                           2)
                                                                          (("2"
                                                                            (skeep)
                                                                            (("2"
                                                                              (label
                                                                               "squiggy"
                                                                               9)
                                                                              (("2"
                                                                                (hide
                                                                                 "squiggy")
                                                                                (("2"
                                                                                  (expand
                                                                                   "sign_ext"
                                                                                   1)
                                                                                  (("2"
                                                                                    (lift-if)
                                                                                    (("2"
                                                                                      (lift-if)
                                                                                      (("2"
                                                                                        (lift-if)
                                                                                        (("2"
                                                                                          (lift-if)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (ground)
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "poly_intermediate_value_inc")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "p(1+jj)"
                                                                                                   "0"
                                                                                                   "n(1+jj)"
                                                                                                   "x1"
                                                                                                   "x2")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (skeep
                                                                                                       -)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "cc"
                                                                                                         "1+jj")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (lemma
                                                                                                 "poly_intermediate_value_dec")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "p(1+jj)"
                                                                                                   "0"
                                                                                                   "n(1+jj)"
                                                                                                   "x1"
                                                                                                   "x2")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (skeep
                                                                                                       -)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "cc"
                                                                                                         "1+jj")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("3"
                                                                                                (inst
                                                                                                 -
                                                                                                 "x2")
                                                                                                (("3"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "x2"
                                                                                                   "1+jj")
                                                                                                  (("3"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("4"
                                                                                                (inst
                                                                                                 -
                                                                                                 "x1"
                                                                                                 "1+jj")
                                                                                                (("4"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("5"
                                                                                                (inst
                                                                                                 -
                                                                                                 "x1"
                                                                                                 "1+jj")
                                                                                                (("5"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (label
                                                                     "squiggy"
                                                                     8)
                                                                    (("2"
                                                                      (hide
                                                                       "squiggy")
                                                                      (("2"
                                                                        (case
                                                                         "FORALL (x1,x2:real): x<=x1 AND x1<x2 AND x2<=y IMPLIES sign_ext(polynomial(p(jj - 1), n(jj - 1))(x1)) =
                            sign_ext(polynomial(p(jj - 1), n(jj - 1))(x2))")
                                                                        (("1"
                                                                          (inst-cp
                                                                           -
                                                                           "x"
                                                                           "b")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "b"
                                                                             "y")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide
                                                                           2)
                                                                          (("2"
                                                                            (skeep)
                                                                            (("2"
                                                                              (expand
                                                                               "sign_ext"
                                                                               1)
                                                                              (("2"
                                                                                (lift-if)
                                                                                (("2"
                                                                                  (lift-if)
                                                                                  (("2"
                                                                                    (lift-if)
                                                                                    (("2"
                                                                                      (lift-if)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (ground)
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "poly_intermediate_value_inc")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "p(jj-1)"
                                                                                               "0"
                                                                                               "n(jj-1)"
                                                                                               "x1"
                                                                                               "x2")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (skeep
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "cc"
                                                                                                     "jj-1")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (lemma
                                                                                             "poly_intermediate_value_dec")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "p(jj-1)"
                                                                                               "0"
                                                                                               "n(jj-1)"
                                                                                               "x1"
                                                                                               "x2")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (skeep
                                                                                                   -)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "cc"
                                                                                                     "jj-1")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (inst
                                                                                             -
                                                                                             "x2"
                                                                                             "jj-1")
                                                                                            (("3"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("4"
                                                                                            (inst
                                                                                             -
                                                                                             "x1"
                                                                                             "jj-1")
                                                                                            (("4"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("5"
                                                                                            (inst
                                                                                             -
                                                                                             "x1"
                                                                                             "jj-1")
                                                                                            (("5"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (hide 7)
                                                                      (("2"
                                                                        (lemma
                                                                         "sturm_seq_repeated_root")
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "m"
                                                                           "n"
                                                                           "p"
                                                                           "b")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "jj-1")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "jj+1")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (sturm_seq_repeated_root formula-decl nil sturmsquarefree nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (SQUAB skolem-const-decl "nonneg_int" sturmsquarefree nil)
    (odd_plus_even_is_odd application-judgement "odd_int" integers nil)
    (sturm_seq_first_signs_eq formula-decl nil sturmsquarefree nil)
    (square_free_min formula-decl nil more_polynomial_props reals)
    (rat_max application-judgement "{s: rat | s >= q AND s >= r}" real_defs
     nil)
    (int_max application-judgement "{k: int | i <= k AND j <= k}" real_defs
     nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (square_free_max formula-decl nil more_polynomial_props reals)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (y skolem-const-decl "real" sturmsquarefree nil)
    (b skolem-const-decl "real" sturmsquarefree nil)
    (x skolem-const-decl "real" sturmsquarefree nil)
    (> const-decl "bool" reals nil)
    (n skolem-const-decl "[nat -> nat]" sturmsquarefree nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (max_nnreal_0 formula-decl nil min_max reals)
    (abs_nat_rew formula-decl nil abs_rews ints)
    (real_times_real_is_real application-judgement "real" reals nil)
    (sigma def-decl "real" sigma reals)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (poly_intermediate_value_inc formula-decl nil polynomials reals)
    (poly_intermediate_value_dec formula-decl nil polynomials reals)
    (nat_induction formula-decl nil naturalnumbers nil)
    (pred type-eq-decl nil defined_types nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (sequence type-eq-decl nil sequences nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (/= const-decl "boolean" notequal nil)
    (sturm_sequence? const-decl "bool" sturmsquarefree nil)
    (NSC type-eq-decl nil number_sign_changes nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (sign_ext const-decl
     "{sig: real | (sig = -1 OR sig = 1 OR sig = 0) AND sig * x = abs(x)}"
     sign reals)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (number_sign_changes def-decl "NSC" number_sign_changes nil))
   nil)
  (sturm_lem_one_root-1 nil 3587808541
   (""
    (case " FORALL (b: real, dd,j, m: nat, n: [nat -> nat],
                                                                                                  p: [nat -> [nat -> real]], x, y: real): j<=dd AND
                                                                                                  x < y AND x < b AND b < y
                                                                               AND (FORALL (c: real, i: nat):
                                                                                     i <= m AND
                                                                                      x <= c AND c <= y AND polynomial(p(i), n(i))(c) = 0
                                                                                      IMPLIES c = b) AND (FORALL (c:real): x<=c AND c<=y AND polynomial(p(0),n(0))(c)=0 IMPLIES
                                                                     (polynomial(p(1),n(1))(c)/=0))
                                                                               AND j + 1 <= m AND polynomial(p(j + 1), n(j + 1))(b) /= 0 AND sturm_sequence?(p, n, m)
                                                                               IMPLIES
                                                                               LET nsc =
                                                                                     LAMBDA (xyz: real, pj: nat):
                                                                                       number_sign_changes(LAMBDA
                                                                                                           (i):
                                                                                                           polynomial(p(i), n(i))(xyz),
                                                                                                           pj)
                                                                                 IN
                                                                                 sign_ext(nsc(x, j + 1)`lastnz) = sign_ext(nsc(y, j + 1)`lastnz)
                                                                                  AND
                                                                                  nsc(x, j + 1)`num - nsc(x, 1)`num =
                                                                                   nsc(y, j + 1)`num - nsc(y, 1)`num")
    (("1" (skeep)
      (("1" (inst - "b" "j" "j" "m" "n" "p" "x" "y")
        (("1" (assert)
          (("1" (replace -5) (("1" (replace -6) (("1" (propax) nil)))))))))))
     ("2" (hide 2)
      (("2" (induct "dd")
        (("1" (assert) nil)
         ("2" (skeep)
          (("2" (assert)
            (("2" (case "NOT j = 0")
              (("1" (assert) nil)
               ("2" (hide -2)
                (("2" (replaces -1)
                  (("2" (expand "number_sign_changes")
                    (("2" (expand "number_sign_changes")
                      (("2" (assert)
                        (("2" (lift-if)
                          (("2" (lift-if)
                            (("2" (lift-if)
                              (("2" (lift-if)
                                (("2" (lift-if)
                                  (("2" (assert)
                                    (("2" (lift-if)
                                      (("2"
                                        (lift-if)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (case
                                             "NOT sign_ext(polynomial(p(1), n(1))(y)) = sign_ext(polynomial(p(1), n(1))(x))")
                                            (("1"
                                              (hide 3)
                                              (("1"
                                                (expand "sign_ext" 1)
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (lift-if)
                                                    (("1"
                                                      (lift-if)
                                                      (("1"
                                                        (lift-if)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (ground)
                                                            (("1"
                                                              (lemma
                                                               "poly_intermediate_value_dec")
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "p(1)"
                                                                 "0"
                                                                 "n(1)"
                                                                 "x"
                                                                 "y")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (skeep -)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "cc"
                                                                       "1")
                                                                      (("1"
                                                                        (assert)
                                                                        nil)))))))))))
                                                             ("2"
                                                              (lemma
                                                               "poly_intermediate_value_inc")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "p(1)"
                                                                 "0"
                                                                 "n(1)"
                                                                 "x"
                                                                 "y")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (skeep -1)
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "cc"
                                                                       "1")
                                                                      (("2"
                                                                        (assert)
                                                                        nil)))))))))))
                                                             ("3"
                                                              (lemma
                                                               "poly_intermediate_value_inc")
                                                              (("3"
                                                                (inst
                                                                 -
                                                                 "p(1)"
                                                                 "0"
                                                                 "n(1)"
                                                                 "x"
                                                                 "y")
                                                                (("3"
                                                                  (assert)
                                                                  (("3"
                                                                    (skeep -1)
                                                                    (("3"
                                                                      (inst
                                                                       -
                                                                       "cc"
                                                                       "1")
                                                                      (("3"
                                                                        (assert)
                                                                        nil)))))))))))
                                                             ("4"
                                                              (lemma
                                                               "poly_intermediate_value_inc")
                                                              (("4"
                                                                (inst
                                                                 -
                                                                 "p(1)"
                                                                 "0"
                                                                 "n(1)"
                                                                 "x"
                                                                 "y")
                                                                (("4"
                                                                  (assert)
                                                                  (("4"
                                                                    (skeep -1)
                                                                    (("4"
                                                                      (inst
                                                                       -
                                                                       "cc"
                                                                       "1")
                                                                      (("4"
                                                                        (assert)
                                                                        nil)))))))))))
                                                             ("5"
                                                              (lemma
                                                               "poly_intermediate_value_dec")
                                                              (("5"
                                                                (inst
                                                                 -
                                                                 "p(1)"
                                                                 "0"
                                                                 "n(1)"
                                                                 "x"
                                                                 "y")
                                                                (("5"
                                                                  (assert)
                                                                  (("5"
                                                                    (skeep -)
                                                                    (("5"
                                                                      (inst
                                                                       -
                                                                       "cc"
                                                                       "1")
                                                                      (("5"
                                                                        (assert)
                                                                        nil)))))))))))))))))))))))))))
                                             ("2"
                                              (assert)
                                              (("2"
                                                (case
                                                 "polynomial(p(1), n(1))(x) = 0")
                                                (("1"
                                                  (inst - "x" "1")
                                                  (("1" (assert) nil)))
                                                 ("2"
                                                  (case
                                                   "polynomial(p(0), n(0))(x) = 0")
                                                  (("1"
                                                    (inst - "x" "0")
                                                    (("1" (assert) nil)))
                                                   ("2"
                                                    (case
                                                     "polynomial(p(0), n(0))(y) = 0")
                                                    (("1"
                                                      (inst - "y" "0")
                                                      (("1" (assert) nil)))
                                                     ("2"
                                                      (case
                                                       "polynomial(p(1), n(1))(y) = 0")
                                                      (("1"
                                                        (inst - "y" "1")
                                                        (("1" (assert) nil)))
                                                       ("2"
                                                        (assert)
                                                        nil)))))))))))))))))))))))))))))))))))))))))))))))
         ("3" (skolem 1 "jj")
          (("3" (flatten)
            (("3" (skeep)
              (("3" (assert)
                (("3" (case "NOT j = 1+jj")
                  (("1" (inst - "b" "j" "m" "n" "p" "x" "y")
                    (("1" (assert)
                      (("1" (replace -6)
                        (("1" (replace -7) (("1" (propax) nil)))))))))
                   ("2" (replace -1)
                    (("2" (assert)
                      (("2" (inst-cp - "x" "1+jj")
                        (("2" (assert)
                          (("2" (inst-cp - "y" "1+jj")
                            (("2" (assert)
                              (("2" (inst-cp - "x" "2+jj")
                                (("2" (assert)
                                  (("2" (inst-cp - "y" "2+jj")
                                    (("2" (assert)
                                      (("2"
                                        (case
                                         "polynomial(p(1+jj),n(1+jj))(b)/=0")
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (inst
                                             -
                                             "b"
                                             "j-1"
                                             "m"
                                             "n"
                                             "p"
                                             "x"
                                             "y")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (replace -7)
                                                (("1"
                                                  (replace -8)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (split +)
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             "number_sign_changes"
                                                             +)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (hide (-2 -3))
                                                                (("1"
                                                                  (expand
                                                                   "sign_ext"
                                                                   1)
                                                                  (("1"
                                                                    (lift-if)
                                                                    (("1"
                                                                      (lift-if)
                                                                      (("1"
                                                                        (lift-if)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (ground)
                                                                            (("1"
                                                                              (lemma
                                                                               "poly_intermediate_value_inc")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "p(2+jj)"
                                                                                 "0"
                                                                                 "n(2+jj)"
                                                                                 "x"
                                                                                 "y")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (skeep
                                                                                     -1)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "cc"
                                                                                       "2+jj")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil)))))))))))
                                                                             ("2"
                                                                              (lemma
                                                                               "poly_intermediate_value_dec")
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "p(2+jj)"
                                                                                 "0"
                                                                                 "n(2+jj)"
                                                                                 "x"
                                                                                 "y")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (skeep
                                                                                     -1)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "cc"
                                                                                       "2+jj")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil)))))))))))))))))))))))))))))))))
                                                       ("2"
                                                        (expand
                                                         "number_sign_changes"
                                                         +
                                                         (1 3))
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (lift-if)
                                                            (("2"
                                                              (lift-if)
                                                              (("2"
                                                                (lift-if)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (ground)
                                                                    (("1"
                                                                      (lemma
                                                                       "number_sign_changes_lastnz_nonzero")
                                                                      (("1"
                                                                        (copy
                                                                         -2)
                                                                        (("1"
                                                                          (rewrite
                                                                           -2
                                                                           -1)
                                                                          (("1"
                                                                            (inst-cp
                                                                             -
                                                                             "0")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "1")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (inst
                                                                                   -13
                                                                                   "y")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil)))))))))))))))
                                                                     ("2"
                                                                      (expand
                                                                       "number_sign_changes"
                                                                       2)
                                                                      (("2"
                                                                        (lift-if)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (expand
                                                                             "number_sign_changes"
                                                                             -1)
                                                                            (("2"
                                                                              (lift-if)
                                                                              (("2"
                                                                                (case
                                                                                 "FORALL (pj:nat): pj=1+jj OR pj = 2+jj IMPLIES sign_ext(polynomial(p(pj), n(pj))(x)) = sign_ext(polynomial(p(pj), n(pj))(y))")
                                                                                (("1"
                                                                                  (inst-cp
                                                                                   -
                                                                                   "1+jj")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "2+jj")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil)))))
                                                                                 ("2"
                                                                                  (hide
                                                                                   (-1
                                                                                    -2
                                                                                    -3
                                                                                    -4
                                                                                    2
                                                                                    3))
                                                                                  (("2"
                                                                                    (skeep)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "sign_ext"
                                                                                       1)
                                                                                      (("2"
                                                                                        (lift-if)
                                                                                        (("2"
                                                                                          (lift-if)
                                                                                          (("2"
                                                                                            (lift-if)
                                                                                            (("2"
                                                                                              (lift-if)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (split
                                                                                                   +)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (propax)
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (lemma
                                                                                                         "poly_intermediate_value_inc")
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "p(pj)"
                                                                                                           "0"
                                                                                                           "n(pj)"
                                                                                                           "x"
                                                                                                           "y")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (skeep
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "cc"
                                                                                                                 "pj")
                                                                                                                (("2"
                                                                                                                  (ground)
                                                                                                                  nil)))))))))))))))
                                                                                                   ("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (split
                                                                                                         +)
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (split
                                                                                                             +)
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "poly_intermediate_value_dec")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "p(pj)"
                                                                                                                 "0"
                                                                                                                 "n(pj)"
                                                                                                                 "x"
                                                                                                                 "y")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (skeep
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "cc"
                                                                                                                       "pj")
                                                                                                                      (("1"
                                                                                                                        (ground)
                                                                                                                        nil)))))))))))
                                                                                                             ("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (split
                                                                                                                 +)
                                                                                                                (("1"
                                                                                                                  (propax)
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (lemma
                                                                                                                   "poly_intermediate_value_dec")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "p(pj)"
                                                                                                                     "0"
                                                                                                                     "n(pj)"
                                                                                                                     "x"
                                                                                                                     "y")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil)))))))))))))
                                                                                                         ("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (split
                                                                                                             +)
                                                                                                            (("1"
                                                                                                              (ground)
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (ground)
                                                                                                                nil)))))))))))))))))))))))))))))))))))))))))))
                                                                     ("3"
                                                                      (lemma
                                                                       "number_sign_changes_lastnz_nonzero")
                                                                      (("3"
                                                                        (copy
                                                                         -2)
                                                                        (("3"
                                                                          (rewrite
                                                                           -2
                                                                           -1)
                                                                          (("3"
                                                                            (inst-cp
                                                                             -
                                                                             "0")
                                                                            (("3"
                                                                              (inst
                                                                               -
                                                                               "1")
                                                                              (("3"
                                                                                (assert)
                                                                                (("3"
                                                                                  (inst
                                                                                   -13
                                                                                   "x")
                                                                                  (("3"
                                                                                    (assert)
                                                                                    nil)))))))))))))))
                                                                     ("4"
                                                                      (expand
                                                                       "number_sign_changes"
                                                                       2)
                                                                      (("4"
                                                                        (lift-if)
                                                                        (("4"
                                                                          (expand
                                                                           "number_sign_changes"
                                                                           -1)
                                                                          (("4"
                                                                            (lift-if)
                                                                            (("4"
                                                                              (case
                                                                               "FORALL (pj:nat): pj=1+jj OR pj = 2+jj IMPLIES sign_ext(polynomial(p(pj), n(pj))(x)) = sign_ext(polynomial(p(pj), n(pj))(y))")
                                                                              (("1"
                                                                                (inst-cp
                                                                                 -
                                                                                 "1+jj")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "2+jj")
                                                                                  (("1"
                                                                                    (ground)
                                                                                    nil)))))
                                                                               ("2"
                                                                                (hide
                                                                                 (-1
                                                                                  -2
                                                                                  -3
                                                                                  -4
                                                                                  2
                                                                                  3))
                                                                                (("2"
                                                                                  (skeep)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "sign_ext"
                                                                                     1)
                                                                                    (("2"
                                                                                      (lift-if)
                                                                                      (("2"
                                                                                        (lift-if)
                                                                                        (("2"
                                                                                          (lift-if)
                                                                                          (("2"
                                                                                            (lift-if)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (split
                                                                                                 +)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (split
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (propax)
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (lemma
                                                                                                       "poly_intermediate_value_inc")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "p(pj)"
                                                                                                         "0"
                                                                                                         "n(pj)"
                                                                                                         "x"
                                                                                                         "y")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (skeep
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "cc"
                                                                                                               "pj")
                                                                                                              (("2"
                                                                                                                (ground)
                                                                                                                nil)))))))))))))))
                                                                                                 ("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           +)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "poly_intermediate_value_dec")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "p(pj)"
                                                                                                               "0"
                                                                                                               "n(pj)"
                                                                                                               "x"
                                                                                                               "y")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (skeep
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "cc"
                                                                                                                     "pj")
                                                                                                                    (("1"
                                                                                                                      (ground)
                                                                                                                      nil)))))))))))
                                                                                                           ("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (split
                                                                                                               +)
                                                                                                              (("1"
                                                                                                                (propax)
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (lemma
                                                                                                                 "poly_intermediate_value_dec")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "p(pj)"
                                                                                                                   "0"
                                                                                                                   "n(pj)"
                                                                                                                   "x"
                                                                                                                   "y")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil)))))))))))))
                                                                                                       ("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (split
                                                                                                           +)
                                                                                                          (("1"
                                                                                                            (ground)
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (ground)
                                                                                                              nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                         ("2"
                                          (flatten)
                                          (("2"
                                            (label "hyplem" -3)
                                            (("2"
                                              (hide "hyplem")
                                              (("2"
                                                (copy -10)
                                                (("2"
                                                  (expand
                                                   "sturm_sequence?"
                                                   -1)
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (hide (-1 -2 -4))
                                                      (("2"
                                                        (inst - "b" "1+jj")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (case
                                                             "polynomial(p(jj), n(jj))(b) = 0")
                                                            (("1"
                                                              (replaces -1)
                                                              (("1"
                                                                (expand
                                                                 "sign_ext")
                                                                (("1"
                                                                  (lift-if)
                                                                  (("1"
                                                                    (assert)
                                                                    nil)))))))
                                                             ("2"
                                                              (inst-cp
                                                               -
                                                               "x"
                                                               "jj")
                                                              (("2"
                                                                (inst-cp
                                                                 -
                                                                 "y"
                                                                 "jj")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (case
                                                                     "FORALL (pj:nat,x1,x2:real): ((pj=jj OR pj = 2+jj) AND (x<=x1 AND x1<=y AND x<=x2 AND x2<=y)) IMPLIES sign_ext(polynomial(p(pj), n(pj))(x1)) = sign_ext(polynomial(p(pj), n(pj))(x2))")
                                                                    (("1"
                                                                      (inst-cp
                                                                       -
                                                                       "jj"
                                                                       "x"
                                                                       "b")
                                                                      (("1"
                                                                        (inst-cp
                                                                         -
                                                                         "jj"
                                                                         "b"
                                                                         "y")
                                                                        (("1"
                                                                          (inst-cp
                                                                           -
                                                                           "2+jj"
                                                                           "x"
                                                                           "b")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "2+jj"
                                                                             "b"
                                                                             "y")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (split
                                                                                 +)
                                                                                (("1"
                                                                                  (expand
                                                                                   "number_sign_changes"
                                                                                   1)
                                                                                  (("1"
                                                                                    (lift-if)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil)))))
                                                                                 ("2"
                                                                                  (case
                                                                                   "jj = 0")
                                                                                  (("1"
                                                                                    (replaces
                                                                                     -1)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "sign_ext")
                                                                                        (("1"
                                                                                          (lift-if)
                                                                                          (("1"
                                                                                            (lift-if)
                                                                                            (("1"
                                                                                              (lift-if)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (ground)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "polynomial(p(1), n(1))(x) > 0")
                                                                                                    (("1"
                                                                                                      (case
                                                                                                       "polynomial(p(1), n(1))(y) < 0")
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "NOT number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x), 1)`num = 0")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "number_sign_changes"
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "number_sign_changes"
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "sign_ext"
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (propax)
                                                                                                                  nil)))))))))
                                                                                                         ("2"
                                                                                                          (case
                                                                                                           "NOT number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(y), 1)`num = 1")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "number_sign_changes"
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "number_sign_changes"
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "sign_ext"
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil)))))))
                                                                                                           ("2"
                                                                                                            (case
                                                                                                             "NOT number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x), 2)`num = 1")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "number_sign_changes"
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "number_sign_changes"
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "number_sign_changes"
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "sign_ext"
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil)))))))))
                                                                                                             ("2"
                                                                                                              (case
                                                                                                               "NOT number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(y), 2)`num = 1")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "number_sign_changes"
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "number_sign_changes"
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "number_sign_changes"
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "sign_ext"
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil)))))))))
                                                                                                               ("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (postpone)
                                                                                                                  nil)))))))))))
                                                                                                       ("2"
                                                                                                        (postpone)
                                                                                                        nil)))
                                                                                                     ("2"
                                                                                                      (postpone)
                                                                                                      nil)))
                                                                                                   ("2"
                                                                                                    (postpone)
                                                                                                    nil)))))))))))))))))
                                                                                   ("2"
                                                                                    (postpone)
                                                                                    nil)))))))))))))))
                                                                     ("2"
                                                                      (postpone)
                                                                      nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
    nil)
   nil nil))
 (sturm_lem_edge_root 0
  (sturm_lem_edge_root-2 "" 3790098789
   (""
    (case "FORALL (dd,j, m: nat, n: [nat -> nat], p: [nat -> [nat -> real]],
                                          x, y: real): j<=dd AND
                                         x < y
                                     AND (FORALL (c: real, i: nat):
                                           i <= m AND
                                            x <= c AND c <= y AND polynomial(p(i), n(i))(c) = 0
                                            IMPLIES c = y)
                                     AND (FORALL (c: real):
                                           x <= c AND c <= y AND polynomial(p(0), n(0))(c) = 0 IMPLIES
                                            (polynomial(p(1), n(1))(c) /= 0))
                                     AND j<= m AND polynomial(p(j), n(j))(y) /= 0
                                     AND sturm_sequence?(p, n, m) AND p(1) = poly_deriv(p(0))
                              AND n(1) = n(0) - 1
                                     IMPLIES
                                     LET nsc =
                                           LAMBDA (xyz: real, pj: nat):
                                             number_sign_changes(LAMBDA
                                                                 (i):
                                                                 polynomial(p(i), n(i))(xyz),
                                                                 pj)
                                       IN
                                       sign_ext(nsc(x, j)`lastnz) = sign_ext(nsc(y, j)`lastnz) AND
                                        nsc(x, j)`num =
                                         nsc(y, j)`num +
                                          (IF polynomial(p(0), n(0))(y) = 0 THEN 1 ELSE 0 ENDIF)")
    (("1" (skeep)
      (("1" (inst - "j" "j" "m" "n" "p" "x" "y")
        (("1" (assert)
          (("1" (replace -3) (("1" (replace -4) (("1" (propax) nil nil)) nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (hide 2)
      (("2" (induct "dd")
        (("1" (assert) nil nil)
         ("2" (skeep)
          (("2" (assert)
            (("2" (case "NOT j = 0")
              (("1" (assert) nil nil)
               ("2" (hide -2)
                (("2" (replaces -1)
                  (("2" (expand "number_sign_changes")
                    (("2" (expand "sign_ext" 2)
                      (("2" (lift-if)
                        (("2" (lift-if)
                          (("2" (lift-if)
                            (("2" (lift-if)
                              (("2" (assert)
                                (("2" (ground)
                                  (("1" (lemma "poly_intermediate_value_inc")
                                    (("1" (inst - "p(0)" "0" "n(0)" "x" "y")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (skeep -)
                                          (("1"
                                            (inst - "cc" "0")
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (lemma "poly_intermediate_value_dec")
                                    (("2" (inst - "p(0)" "0" "n(0)" "x" "y")
                                      (("2"
                                        (assert)
                                        (("2"
                                          (skeep -)
                                          (("2"
                                            (inst - "cc" "0")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("3" (inst - "x" "0")
                                    (("3" (assert) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("3" (skolem 1 "jj")
          (("3" (flatten)
            (("3" (skeep)
              (("3" (assert)
                (("3" (case "NOT j = 1+jj")
                  (("1" (inst - "j" "m" "n" "p" "x" "y")
                    (("1" (assert)
                      (("1" (replace -4)
                        (("1" (replace -5) (("1" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil)
                   ("2" (replaces -1)
                    (("2" (assert)
                      (("2" (inst-cp - "x" "jj")
                        (("2" (assert)
                          (("2" (inst-cp - "x" "1+jj")
                            (("2" (assert)
                              (("2" (case "polynomial(p(jj),n(jj))(y)/=0")
                                (("1" (flatten)
                                  (("1" (inst - "jj" "m" "n" "p" "x" "y")
                                    (("1" (assert)
                                      (("1"
                                        (replace -4)
                                        (("1"
                                          (replace -5)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (split +)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand
                                                   "number_sign_changes"
                                                   +)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (hide -2)
                                                      (("1"
                                                        (expand "sign_ext" 1)
                                                        (("1"
                                                          (lift-if)
                                                          (("1"
                                                            (lift-if)
                                                            (("1"
                                                              (lift-if)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (ground)
                                                                  (("1"
                                                                    (lemma
                                                                     "poly_intermediate_value_inc")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "p(1+jj)"
                                                                       "0"
                                                                       "n(1+jj)"
                                                                       "x"
                                                                       "y")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (skeep
                                                                           -1)
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "cc"
                                                                             "1+jj")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (lemma
                                                                     "poly_intermediate_value_dec")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "p(1+jj)"
                                                                       "0"
                                                                       "n(1+jj)"
                                                                       "x"
                                                                       "y")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (skeep
                                                                           -1)
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "cc"
                                                                             "1+jj")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (invoke
                                                 (name "SQUAB" "%1")
                                                 (! 1 2 2))
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (label "SQUABname" -1)
                                                    (("2"
                                                      (hide "SQUABname")
                                                      (("2"
                                                        (expand
                                                         "number_sign_changes"
                                                         +)
                                                        (("2"
                                                          (expand
                                                           "sign_ext"
                                                           -1)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (lift-if)
                                                              (("2"
                                                                (lift-if)
                                                                (("2"
                                                                  (lift-if)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (ground)
                                                                      (("1"
                                                                        (expand
                                                                         "sign_ext")
                                                                        (("1"
                                                                          (lift-if)
                                                                          (("1"
                                                                            (ground)
                                                                            (("1"
                                                                              (lemma
                                                                               "poly_intermediate_value_dec")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "p(1+jj)"
                                                                                 "0"
                                                                                 "n(1+jj)"
                                                                                 "x"
                                                                                 "y")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (skeep
                                                                                     -1)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "cc"
                                                                                       "1+jj")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (expand
                                                                         "sign_ext")
                                                                        (("2"
                                                                          (lift-if)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (ground)
                                                                              (("2"
                                                                                (lemma
                                                                                 "poly_intermediate_value_inc")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "p(1+jj)"
                                                                                   "0"
                                                                                   "n(1+jj)"
                                                                                   "x"
                                                                                   "y")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (skeep
                                                                                       -1)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "cc"
                                                                                         "1+jj")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("3"
                                                                        (lift-if)
                                                                        (("3"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("4"
                                                                        (expand
                                                                         "sign_ext")
                                                                        (("4"
                                                                          (lift-if)
                                                                          (("4"
                                                                            (assert)
                                                                            (("4"
                                                                              (ground)
                                                                              (("4"
                                                                                (lemma
                                                                                 "poly_intermediate_value_inc")
                                                                                (("4"
                                                                                  (inst
                                                                                   -
                                                                                   "p(1+jj)"
                                                                                   "0"
                                                                                   "n(1+jj)"
                                                                                   "x"
                                                                                   "y")
                                                                                  (("4"
                                                                                    (assert)
                                                                                    (("4"
                                                                                      (skeep
                                                                                       -1)
                                                                                      (("4"
                                                                                        (inst
                                                                                         -
                                                                                         "cc"
                                                                                         "1+jj")
                                                                                        (("4"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("5"
                                                                        (expand
                                                                         "sign_ext")
                                                                        (("5"
                                                                          (lift-if)
                                                                          (("5"
                                                                            (assert)
                                                                            (("5"
                                                                              (ground)
                                                                              (("5"
                                                                                (lemma
                                                                                 "poly_intermediate_value_dec")
                                                                                (("5"
                                                                                  (inst
                                                                                   -
                                                                                   "p(1+jj)"
                                                                                   "0"
                                                                                   "n(1+jj)"
                                                                                   "x"
                                                                                   "y")
                                                                                  (("5"
                                                                                    (assert)
                                                                                    (("5"
                                                                                      (skeep
                                                                                       -1)
                                                                                      (("5"
                                                                                        (inst
                                                                                         -
                                                                                         "cc"
                                                                                         "1+jj")
                                                                                        (("5"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("6"
                                                                        (lift-if)
                                                                        (("6"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (flatten)
                                  (("2" (label "hyplem" -2)
                                    (("2" (hide "hyplem")
                                      (("2"
                                        (split +)
                                        (("1"
                                          (expand "number_sign_changes" +)
                                          (("1"
                                            (lift-if)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "sign_ext" +)
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (lift-if)
                                                    (("1"
                                                      (lift-if)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (ground)
                                                          (("1"
                                                            (lemma
                                                             "poly_intermediate_value_inc")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "p(1+jj)"
                                                                 "0"
                                                                 "n(1+jj)"
                                                                 "x"
                                                                 "y")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (skeep -)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "cc"
                                                                       "1+jj")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (lemma
                                                             "poly_intermediate_value_dec")
                                                            (("2"
                                                              (inst
                                                               -
                                                               "p(1+jj)"
                                                               "0"
                                                               "n(1+jj)"
                                                               "x"
                                                               "y")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (skeep -)
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "cc"
                                                                     "1+jj")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (invoke
                                           (name "SQUAB" "%1")
                                           (! 1 2 2))
                                          (("2"
                                            (replaces -1)
                                            (("2"
                                              (case "jj = 0")
                                              (("1"
                                                (replaces -1)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (case "NOT SQUAB = 1")
                                                    (("1"
                                                      (expand "SQUAB" 1)
                                                      (("1" (propax) nil nil))
                                                      nil)
                                                     ("2"
                                                      (replaces -1)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (expand
                                                           "number_sign_changes"
                                                           1)
                                                          (("2"
                                                            (expand
                                                             "number_sign_changes"
                                                             1)
                                                            (("2"
                                                              (expand
                                                               "sign_ext")
                                                              (("2"
                                                                (lift-if)
                                                                (("2"
                                                                  (lift-if)
                                                                  (("2"
                                                                    (lift-if)
                                                                    (("2"
                                                                      (lift-if)
                                                                      (("2"
                                                                        (lift-if)
                                                                        (("2"
                                                                          (lift-if)
                                                                          (("2"
                                                                            (lift-if)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (ground)
                                                                                (("1"
                                                                                  (copy
                                                                                   -9)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "sturm_sequence?"
                                                                                     -1)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (hide
                                                                                         (-1
                                                                                          -2
                                                                                          -4
                                                                                          -5))
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "y")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -4)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "n(0) = 0")
                                                                                                (("1"
                                                                                                  (replaces
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "polynomial"
                                                                                                     (-4
                                                                                                      2))
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "sigma")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "sigma")
                                                                                                        (("1"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "sign_ext"
                                                                                                     -1
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (lift-if)
                                                                                                      (("2"
                                                                                                        (ground)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "sign_ext"
                                                                                                           -2)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "poly_strictly_decreasing")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "p(0)"
                                                                                                               "n(0)"
                                                                                                               "x"
                                                                                                               "y")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (skeep)
                                                                                                                  (("1"
                                                                                                                    (lemma
                                                                                                                     "poly_intermediate_value_dec")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "poly_deriv(p(0))"
                                                                                                                       "0"
                                                                                                                       "n(0)-1"
                                                                                                                       "c"
                                                                                                                       "y")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (skeep
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "cc"
                                                                                                                             "1")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (lemma
                                                                                                           "poly_intermediate_value_inc")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "p(1)"
                                                                                                             "0"
                                                                                                             "n(1)"
                                                                                                             "x"
                                                                                                             "y")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (skeep
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "cc"
                                                                                                                   "1")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (lemma
                                                                                   "poly_strictly_increasing")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "p(0)"
                                                                                     "n(0)"
                                                                                     "x"
                                                                                     "y")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (skeep)
                                                                                        (("2"
                                                                                          (inst-cp
                                                                                           -
                                                                                           "c"
                                                                                           "1")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "poly_intermediate_value_dec")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "p(1)"
                                                                                                 "0"
                                                                                                 "n(1)"
                                                                                                 "x"
                                                                                                 "c")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (skeep
                                                                                                     -)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "cc"
                                                                                                       "1")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (assert)
                                                (("2"
                                                  (case
                                                   "polynomial(p(jj-1),n(jj-1))(y) = 0")
                                                  (("1"
                                                    (lemma
                                                     "sturm_seq_repeated_root")
                                                    (("1"
                                                      (inst - "m" "n" "p" "y")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (inst - "jj-1")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (inst - "1+jj")
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    (("2"
                                                      (case
                                                       "sign_ext(polynomial(p(jj - 1), n(jj - 1))(y)) = sign_ext(polynomial(p(jj - 1), n(jj - 1))(x))")
                                                      (("1"
                                                        (case
                                                         "sign_ext(polynomial(p(jj + 1), n(jj + 1))(y)) = sign_ext(polynomial(p(jj + 1), n(jj + 1))(x))")
                                                        (("1"
                                                          (case
                                                           "sign_ext(polynomial(p(jj + 1), n(jj + 1))(y)) = -sign_ext(polynomial(p(jj - 1), n(jj - 1))(y))")
                                                          (("1"
                                                            (case
                                                             "number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x),
                                                                                                           jj-1)`num
                                                                                        =
                                                                                        number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(y),
                                                                                                            jj-1)`num
                                                                                         + SQUAB")
                                                            (("1"
                                                              (expand
                                                               "sign_ext")
                                                              (("1"
                                                                (lift-if)
                                                                (("1"
                                                                  (lift-if)
                                                                  (("1"
                                                                    (lift-if)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (ground)
                                                                        (("1"
                                                                          (expand
                                                                           "number_sign_changes"
                                                                           +)
                                                                          (("1"
                                                                            (expand
                                                                             "number_sign_changes"
                                                                             +)
                                                                            (("1"
                                                                              (expand
                                                                               "sign_ext")
                                                                              (("1"
                                                                                (lift-if)
                                                                                (("1"
                                                                                  (lift-if)
                                                                                  (("1"
                                                                                    (lift-if)
                                                                                    (("1"
                                                                                      (lift-if)
                                                                                      (("1"
                                                                                        (lift-if)
                                                                                        (("1"
                                                                                          (lift-if)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (lift-if)
                                                                                              (("1"
                                                                                                (lift-if)
                                                                                                (("1"
                                                                                                  (lift-if)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (ground)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "number_sign_changes"
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (lift-if)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (lift-if)
                                                                                                        (("2"
                                                                                                          (split
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "number_sign_changes"
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (lift-if)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("3"
                                                                                                        (expand
                                                                                                         "number_sign_changes"
                                                                                                         -1)
                                                                                                        (("3"
                                                                                                          (lift-if)
                                                                                                          (("3"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("4"
                                                                                                        (lift-if)
                                                                                                        (("4"
                                                                                                          (assert)
                                                                                                          (("4"
                                                                                                            (split
                                                                                                             -)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "number_sign_changes"
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (lift-if)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("5"
                                                                                                        (lift-if)
                                                                                                        (("5"
                                                                                                          (split
                                                                                                           +)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "number_sign_changes"
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (lift-if)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("6"
                                                                                                        (expand
                                                                                                         "number_sign_changes"
                                                                                                         -1)
                                                                                                        (("6"
                                                                                                          (lift-if)
                                                                                                          (("6"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("7"
                                                                                                        (expand
                                                                                                         "number_sign_changes"
                                                                                                         -2)
                                                                                                        (("7"
                                                                                                          (lift-if)
                                                                                                          (("7"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("8"
                                                                                                        (expand
                                                                                                         "number_sign_changes"
                                                                                                         -1)
                                                                                                        (("8"
                                                                                                          (lift-if)
                                                                                                          (("8"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("9"
                                                                                                        (hide
                                                                                                         -2)
                                                                                                        (("9"
                                                                                                          (lift-if)
                                                                                                          (("9"
                                                                                                            (split
                                                                                                             -)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "number_sign_changes"
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (lift-if)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "number_sign_changes"
                                                                           +)
                                                                          (("2"
                                                                            (expand
                                                                             "number_sign_changes"
                                                                             +)
                                                                            (("2"
                                                                              (expand
                                                                               "sign_ext")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (lift-if)
                                                                                  (("2"
                                                                                    (lift-if)
                                                                                    (("2"
                                                                                      (lift-if)
                                                                                      (("2"
                                                                                        (lift-if)
                                                                                        (("2"
                                                                                          (lift-if)
                                                                                          (("2"
                                                                                            (lift-if)
                                                                                            (("2"
                                                                                              (lift-if)
                                                                                              (("2"
                                                                                                (lift-if)
                                                                                                (("2"
                                                                                                  (lift-if)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (lift-if)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (lift-if)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (ground)
                                                                                                              (("1"
                                                                                                                (lift-if)
                                                                                                                (("1"
                                                                                                                  (ground)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "number_sign_changes"
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (lift-if)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (expand
                                                                                                                 "number_sign_changes"
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (lift-if)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("3"
                                                                                                                (lift-if)
                                                                                                                (("3"
                                                                                                                  (assert)
                                                                                                                  (("3"
                                                                                                                    (split
                                                                                                                     -)
                                                                                                                    (("1"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (flatten)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "number_sign_changes"
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (lift-if)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("4"
                                                                                                                (expand
                                                                                                                 "number_sign_changes"
                                                                                                                 -1)
                                                                                                                (("4"
                                                                                                                  (lift-if)
                                                                                                                  (("4"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("5"
                                                                                                                (hide
                                                                                                                 -2)
                                                                                                                (("5"
                                                                                                                  (lift-if)
                                                                                                                  (("5"
                                                                                                                    (assert)
                                                                                                                    (("5"
                                                                                                                      (split
                                                                                                                       -)
                                                                                                                      (("1"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (flatten)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "number_sign_changes"
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (lift-if)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("6"
                                                                                                                (expand
                                                                                                                 "number_sign_changes"
                                                                                                                 -1)
                                                                                                                (("6"
                                                                                                                  (lift-if)
                                                                                                                  (("6"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("7"
                                                                                                                (lift-if)
                                                                                                                (("7"
                                                                                                                  (split
                                                                                                                   -)
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "number_sign_changes"
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (lift-if)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (flatten)
                                                                                                                    (("2"
                                                                                                                      (split
                                                                                                                       -)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "number_sign_changes"
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (lift-if)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (flatten)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "number_sign_changes"
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (lift-if)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("8"
                                                                                                                (expand
                                                                                                                 "number_sign_changes"
                                                                                                                 -1)
                                                                                                                (("8"
                                                                                                                  (lift-if)
                                                                                                                  (("8"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("9"
                                                                                                                (lift-if)
                                                                                                                (("9"
                                                                                                                  (split
                                                                                                                   -)
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "number_sign_changes"
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (lift-if)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (flatten)
                                                                                                                    (("2"
                                                                                                                      (split
                                                                                                                       -)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "number_sign_changes"
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (lift-if)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (flatten)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "number_sign_changes"
                                                                                                                           2)
                                                                                                                          (("2"
                                                                                                                            (lift-if)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide 4)
                                                              (("2"
                                                                (reveal
                                                                 "hyplem")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "jj-1"
                                                                   "m"
                                                                   "n"
                                                                   "p"
                                                                   "x"
                                                                   "y")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (replace
                                                                       -8)
                                                                      (("2"
                                                                        (replace
                                                                         -9)
                                                                        (("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (expand
                                                                             "SQUAB")
                                                                            (("2"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide 4)
                                                            (("2"
                                                              (copy -9)
                                                              (("2"
                                                                (expand
                                                                 "sturm_sequence?"
                                                                 -1)
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "y"
                                                                     "jj")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "sign_ext"
                                                           1)
                                                          (("2"
                                                            (lift-if)
                                                            (("2"
                                                              (lift-if)
                                                              (("2"
                                                                (lift-if)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (ground)
                                                                    (("1"
                                                                      (lemma
                                                                       "poly_intermediate_value_dec")
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "p(1+jj)"
                                                                         "0"
                                                                         "n(1+jj)"
                                                                         "x"
                                                                         "y")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (skeep
                                                                             -1)
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "cc"
                                                                               "1+jj")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (lemma
                                                                       "poly_intermediate_value_inc")
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "p(1+jj)"
                                                                         "0"
                                                                         "n(1+jj)"
                                                                         "x"
                                                                         "y")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (skeep
                                                                             -1)
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "cc"
                                                                               "1+jj")
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand "sign_ext" 1)
                                                        (("2"
                                                          (lift-if)
                                                          (("2"
                                                            (lift-if)
                                                            (("2"
                                                              (lift-if)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (ground)
                                                                  (("1"
                                                                    (lemma
                                                                     "poly_intermediate_value_dec")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "p(jj-1)"
                                                                       "0"
                                                                       "n(jj-1)"
                                                                       "x"
                                                                       "y")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (skeep
                                                                           -)
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "cc"
                                                                             "jj-1")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (lemma
                                                                     "poly_intermediate_value_inc")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "p(jj-1)"
                                                                       "0"
                                                                       "n(jj-1)"
                                                                       "x"
                                                                       "y")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (skeep
                                                                           -)
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "cc"
                                                                             "jj-1")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("3"
                                                                    (inst
                                                                     -
                                                                     "x"
                                                                     "jj-1")
                                                                    (("3"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (sturm_lem_edge_root-1 nil 3587920247
   (""
    (case "FORALL (dd,j, m: nat, n: [nat -> nat], p: [nat -> [nat -> real]],
                                          x, y: real): j<=dd AND
                                         x < y
                                     AND (FORALL (c: real, i: nat):
                                           i <= m AND
                                            x <= c AND c <= y AND polynomial(p(i), n(i))(c) = 0
                                            IMPLIES c = y)
                                     AND (FORALL (c: real):
                                           x <= c AND c <= y AND polynomial(p(0), n(0))(c) = 0 IMPLIES
                                            (polynomial(p(1), n(1))(c) /= 0))
                                     AND j<= m AND polynomial(p(j), n(j))(y) /= 0
                                     AND sturm_sequence?(p, n, m) AND p(1) = poly_deriv(p(0))
                              AND n(1) = n(0) - 1
                                     IMPLIES
                                     LET nsc =
                                           LAMBDA (xyz: real, pj: nat):
                                             number_sign_changes(LAMBDA
                                                                 (i):
                                                                 polynomial(p(i), n(i))(xyz),
                                                                 pj)
                                       IN
                                       sign_ext(nsc(x, j)`lastnz) = sign_ext(nsc(y, j)`lastnz) AND
                                        nsc(x, j)`num =
                                         nsc(y, j)`num +
                                          (IF polynomial(p(0), n(0))(y) = 0 THEN 1 ELSE 0 ENDIF)")
    (("1" (skeep)
      (("1" (inst - "j" "j" "m" "n" "p" "x" "y")
        (("1" (assert)
          (("1" (replace -3) (("1" (replace -4) (("1" (propax) nil nil)) nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (hide 2)
      (("2" (induct "dd")
        (("1" (assert) nil nil)
         ("2" (skeep)
          (("2" (assert)
            (("2" (case "NOT j = 0")
              (("1" (assert) nil nil)
               ("2" (hide -2)
                (("2" (replaces -1)
                  (("2" (expand "number_sign_changes")
                    (("2" (expand "sign_ext" 2)
                      (("2" (lift-if)
                        (("2" (lift-if)
                          (("2" (lift-if)
                            (("2" (lift-if)
                              (("2" (assert)
                                (("2" (ground)
                                  (("1" (lemma "poly_intermediate_value_inc")
                                    (("1" (inst - "p(0)" "0" "n(0)" "x" "y")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (skeep -)
                                          (("1"
                                            (inst - "cc" "0")
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (lemma "poly_intermediate_value_dec")
                                    (("2" (inst - "p(0)" "0" "n(0)" "x" "y")
                                      (("2"
                                        (assert)
                                        (("2"
                                          (skeep -)
                                          (("2"
                                            (inst - "cc" "0")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("3" (inst - "x" "0")
                                    (("3" (assert) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("3" (skolem 1 "jj")
          (("3" (flatten)
            (("3" (skeep)
              (("3" (assert)
                (("3" (case "NOT j = 1+jj")
                  (("1" (inst - "j" "m" "n" "p" "x" "y")
                    (("1" (assert)
                      (("1" (replace -4)
                        (("1" (replace -5) (("1" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil)
                   ("2" (replaces -1)
                    (("2" (assert)
                      (("2" (inst-cp - "x" "jj")
                        (("2" (assert)
                          (("2" (inst-cp - "x" "1+jj")
                            (("2" (assert)
                              (("2" (case "polynomial(p(jj),n(jj))(y)/=0")
                                (("1" (flatten)
                                  (("1" (inst - "jj" "m" "n" "p" "x" "y")
                                    (("1" (assert)
                                      (("1"
                                        (replace -4)
                                        (("1"
                                          (replace -5)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (split +)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand
                                                   "number_sign_changes"
                                                   +)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (hide -2)
                                                      (("1"
                                                        (expand "sign_ext" 1)
                                                        (("1"
                                                          (lift-if)
                                                          (("1"
                                                            (lift-if)
                                                            (("1"
                                                              (lift-if)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (ground)
                                                                  (("1"
                                                                    (lemma
                                                                     "poly_intermediate_value_inc")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "p(1+jj)"
                                                                       "0"
                                                                       "n(1+jj)"
                                                                       "x"
                                                                       "y")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (skeep
                                                                           -1)
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "cc"
                                                                             "1+jj")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (lemma
                                                                     "poly_intermediate_value_dec")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "p(1+jj)"
                                                                       "0"
                                                                       "n(1+jj)"
                                                                       "x"
                                                                       "y")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (skeep
                                                                           -1)
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "cc"
                                                                             "1+jj")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (invoke
                                                 (name "SQUAB" "%1")
                                                 (! 1 2 2))
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (label "SQUABname" -1)
                                                    (("2"
                                                      (hide "SQUABname")
                                                      (("2"
                                                        (expand
                                                         "number_sign_changes"
                                                         +)
                                                        (("2"
                                                          (expand
                                                           "sign_ext"
                                                           -1)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (lift-if)
                                                              (("2"
                                                                (lift-if)
                                                                (("2"
                                                                  (lift-if)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (ground)
                                                                      (("1"
                                                                        (expand
                                                                         "sign_ext")
                                                                        (("1"
                                                                          (lift-if)
                                                                          (("1"
                                                                            (ground)
                                                                            (("1"
                                                                              (lemma
                                                                               "poly_intermediate_value_dec")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "p(1+jj)"
                                                                                 "0"
                                                                                 "n(1+jj)"
                                                                                 "x"
                                                                                 "y")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (skeep
                                                                                     -1)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "cc"
                                                                                       "1+jj")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (expand
                                                                         "sign_ext")
                                                                        (("2"
                                                                          (lift-if)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (ground)
                                                                              (("2"
                                                                                (lemma
                                                                                 "poly_intermediate_value_inc")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "p(1+jj)"
                                                                                   "0"
                                                                                   "n(1+jj)"
                                                                                   "x"
                                                                                   "y")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (skeep
                                                                                       -1)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "cc"
                                                                                         "1+jj")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("3"
                                                                        (assert)
                                                                        (("3"
                                                                          (lift-if)
                                                                          (("3"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("4"
                                                                        (expand
                                                                         "sign_ext")
                                                                        (("4"
                                                                          (lift-if)
                                                                          (("4"
                                                                            (assert)
                                                                            (("4"
                                                                              (ground)
                                                                              (("4"
                                                                                (lemma
                                                                                 "poly_intermediate_value_inc")
                                                                                (("4"
                                                                                  (inst
                                                                                   -
                                                                                   "p(1+jj)"
                                                                                   "0"
                                                                                   "n(1+jj)"
                                                                                   "x"
                                                                                   "y")
                                                                                  (("4"
                                                                                    (assert)
                                                                                    (("4"
                                                                                      (skeep
                                                                                       -1)
                                                                                      (("4"
                                                                                        (inst
                                                                                         -
                                                                                         "cc"
                                                                                         "1+jj")
                                                                                        (("4"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("5"
                                                                        (expand
                                                                         "sign_ext")
                                                                        (("5"
                                                                          (lift-if)
                                                                          (("5"
                                                                            (assert)
                                                                            (("5"
                                                                              (ground)
                                                                              (("5"
                                                                                (lemma
                                                                                 "poly_intermediate_value_dec")
                                                                                (("5"
                                                                                  (inst
                                                                                   -
                                                                                   "p(1+jj)"
                                                                                   "0"
                                                                                   "n(1+jj)"
                                                                                   "x"
                                                                                   "y")
                                                                                  (("5"
                                                                                    (assert)
                                                                                    (("5"
                                                                                      (skeep
                                                                                       -1)
                                                                                      (("5"
                                                                                        (inst
                                                                                         -
                                                                                         "cc"
                                                                                         "1+jj")
                                                                                        (("5"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("6"
                                                                        (lift-if)
                                                                        (("6"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (flatten)
                                  (("2" (label "hyplem" -2)
                                    (("2" (hide "hyplem")
                                      (("2"
                                        (split +)
                                        (("1"
                                          (expand "number_sign_changes" +)
                                          (("1"
                                            (lift-if)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "sign_ext" +)
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (lift-if)
                                                    (("1"
                                                      (lift-if)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (ground)
                                                          (("1"
                                                            (lemma
                                                             "poly_intermediate_value_inc")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "p(1+jj)"
                                                                 "0"
                                                                 "n(1+jj)"
                                                                 "x"
                                                                 "y")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (skeep -)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "cc"
                                                                       "1+jj")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (lemma
                                                             "poly_intermediate_value_dec")
                                                            (("2"
                                                              (inst
                                                               -
                                                               "p(1+jj)"
                                                               "0"
                                                               "n(1+jj)"
                                                               "x"
                                                               "y")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (skeep -)
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "cc"
                                                                     "1+jj")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (invoke
                                           (name "SQUAB" "%1")
                                           (! 1 2 2))
                                          (("2"
                                            (replaces -1)
                                            (("2"
                                              (case "jj = 0")
                                              (("1"
                                                (replaces -1)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (case "NOT SQUAB = 1")
                                                    (("1"
                                                      (expand "SQUAB" 1)
                                                      (("1" (propax) nil nil))
                                                      nil)
                                                     ("2"
                                                      (replaces -1)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (expand
                                                           "number_sign_changes"
                                                           1)
                                                          (("2"
                                                            (expand
                                                             "number_sign_changes"
                                                             1)
                                                            (("2"
                                                              (expand
                                                               "sign_ext")
                                                              (("2"
                                                                (lift-if)
                                                                (("2"
                                                                  (lift-if)
                                                                  (("2"
                                                                    (lift-if)
                                                                    (("2"
                                                                      (lift-if)
                                                                      (("2"
                                                                        (lift-if)
                                                                        (("2"
                                                                          (lift-if)
                                                                          (("2"
                                                                            (lift-if)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (ground)
                                                                                (("1"
                                                                                  (copy
                                                                                   -9)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "sturm_sequence?"
                                                                                     -1)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (hide
                                                                                         (-1
                                                                                          -2
                                                                                          -4
                                                                                          -5))
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "y")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -4)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "n(0) = 0")
                                                                                                (("1"
                                                                                                  (replaces
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "polynomial"
                                                                                                     (-4
                                                                                                      2))
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "sigma")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "sigma")
                                                                                                        (("1"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "sign_ext"
                                                                                                     -1
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (lift-if)
                                                                                                      (("2"
                                                                                                        (ground)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "sign_ext"
                                                                                                           -2)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "poly_strictly_decreasing")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "p(0)"
                                                                                                               "n(0)"
                                                                                                               "x"
                                                                                                               "y")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (skeep)
                                                                                                                  (("1"
                                                                                                                    (lemma
                                                                                                                     "poly_intermediate_value_dec")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "poly_deriv(p(0))"
                                                                                                                       "0"
                                                                                                                       "n(0)-1"
                                                                                                                       "c"
                                                                                                                       "y")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (skeep
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "cc"
                                                                                                                             "1")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (lemma
                                                                                                           "poly_intermediate_value_inc")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "p(1)"
                                                                                                             "0"
                                                                                                             "n(1)"
                                                                                                             "x"
                                                                                                             "y")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (skeep
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "cc"
                                                                                                                   "1")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (lemma
                                                                                   "poly_strictly_increasing")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "p(0)"
                                                                                     "n(0)"
                                                                                     "x"
                                                                                     "y")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (skeep)
                                                                                        (("2"
                                                                                          (inst-cp
                                                                                           -
                                                                                           "c"
                                                                                           "1")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "poly_intermediate_value_dec")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "p(1)"
                                                                                                 "0"
                                                                                                 "n(1)"
                                                                                                 "x"
                                                                                                 "c")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (skeep
                                                                                                     -)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "cc"
                                                                                                       "1")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (assert)
                                                (("2"
                                                  (case
                                                   "polynomial(p(jj-1),n(jj-1))(y) = 0")
                                                  (("1"
                                                    (lemma
                                                     "sturm_seq_repeated_root")
                                                    (("1"
                                                      (inst - "m" "n" "p" "y")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (inst - "jj-1")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (inst - "1+jj")
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    (("2"
                                                      (case
                                                       "sign_ext(polynomial(p(jj - 1), n(jj - 1))(y)) = sign_ext(polynomial(p(jj - 1), n(jj - 1))(x))")
                                                      (("1"
                                                        (case
                                                         "sign_ext(polynomial(p(jj + 1), n(jj + 1))(y)) = sign_ext(polynomial(p(jj + 1), n(jj + 1))(x))")
                                                        (("1"
                                                          (case
                                                           "sign_ext(polynomial(p(jj + 1), n(jj + 1))(y)) = -sign_ext(polynomial(p(jj - 1), n(jj - 1))(y))")
                                                          (("1"
                                                            (case
                                                             "number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x),
                                                                                                           jj-1)`num
                                                                                        =
                                                                                        number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(y),
                                                                                                            jj-1)`num
                                                                                         + SQUAB")
                                                            (("1"
                                                              (expand
                                                               "sign_ext")
                                                              (("1"
                                                                (lift-if)
                                                                (("1"
                                                                  (lift-if)
                                                                  (("1"
                                                                    (lift-if)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (ground)
                                                                        (("1"
                                                                          (expand
                                                                           "number_sign_changes"
                                                                           +)
                                                                          (("1"
                                                                            (expand
                                                                             "number_sign_changes"
                                                                             +)
                                                                            (("1"
                                                                              (expand
                                                                               "sign_ext")
                                                                              (("1"
                                                                                (lift-if)
                                                                                (("1"
                                                                                  (lift-if)
                                                                                  (("1"
                                                                                    (lift-if)
                                                                                    (("1"
                                                                                      (lift-if)
                                                                                      (("1"
                                                                                        (lift-if)
                                                                                        (("1"
                                                                                          (lift-if)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (lift-if)
                                                                                              (("1"
                                                                                                (lift-if)
                                                                                                (("1"
                                                                                                  (lift-if)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (ground)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "number_sign_changes"
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (lift-if)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (lift-if)
                                                                                                        (("2"
                                                                                                          (split
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "number_sign_changes"
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (lift-if)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("3"
                                                                                                        (expand
                                                                                                         "number_sign_changes"
                                                                                                         -1)
                                                                                                        (("3"
                                                                                                          (lift-if)
                                                                                                          (("3"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("4"
                                                                                                        (lift-if)
                                                                                                        (("4"
                                                                                                          (assert)
                                                                                                          (("4"
                                                                                                            (split
                                                                                                             -)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "number_sign_changes"
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (lift-if)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("5"
                                                                                                        (lift-if)
                                                                                                        (("5"
                                                                                                          (split
                                                                                                           +)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "number_sign_changes"
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (lift-if)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("6"
                                                                                                        (expand
                                                                                                         "number_sign_changes"
                                                                                                         -1)
                                                                                                        (("6"
                                                                                                          (lift-if)
                                                                                                          (("6"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("7"
                                                                                                        (expand
                                                                                                         "number_sign_changes"
                                                                                                         -2)
                                                                                                        (("7"
                                                                                                          (lift-if)
                                                                                                          (("7"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("8"
                                                                                                        (expand
                                                                                                         "number_sign_changes"
                                                                                                         -1)
                                                                                                        (("8"
                                                                                                          (lift-if)
                                                                                                          (("8"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("9"
                                                                                                        (hide
                                                                                                         -2)
                                                                                                        (("9"
                                                                                                          (lift-if)
                                                                                                          (("9"
                                                                                                            (split
                                                                                                             -)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "number_sign_changes"
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (lift-if)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "number_sign_changes"
                                                                           +)
                                                                          (("2"
                                                                            (expand
                                                                             "number_sign_changes"
                                                                             +)
                                                                            (("2"
                                                                              (expand
                                                                               "sign_ext")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (lift-if)
                                                                                  (("2"
                                                                                    (lift-if)
                                                                                    (("2"
                                                                                      (lift-if)
                                                                                      (("2"
                                                                                        (lift-if)
                                                                                        (("2"
                                                                                          (lift-if)
                                                                                          (("2"
                                                                                            (lift-if)
                                                                                            (("2"
                                                                                              (lift-if)
                                                                                              (("2"
                                                                                                (lift-if)
                                                                                                (("2"
                                                                                                  (lift-if)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (lift-if)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (lift-if)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (ground)
                                                                                                              (("1"
                                                                                                                (lift-if)
                                                                                                                (("1"
                                                                                                                  (ground)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "number_sign_changes"
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (lift-if)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (expand
                                                                                                                 "number_sign_changes"
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (lift-if)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("3"
                                                                                                                (lift-if)
                                                                                                                (("3"
                                                                                                                  (assert)
                                                                                                                  (("3"
                                                                                                                    (split
                                                                                                                     -)
                                                                                                                    (("1"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (flatten)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "number_sign_changes"
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (lift-if)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("4"
                                                                                                                (expand
                                                                                                                 "number_sign_changes"
                                                                                                                 -1)
                                                                                                                (("4"
                                                                                                                  (lift-if)
                                                                                                                  (("4"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("5"
                                                                                                                (hide
                                                                                                                 -2)
                                                                                                                (("5"
                                                                                                                  (lift-if)
                                                                                                                  (("5"
                                                                                                                    (assert)
                                                                                                                    (("5"
                                                                                                                      (split
                                                                                                                       -)
                                                                                                                      (("1"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (flatten)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "number_sign_changes"
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (lift-if)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("6"
                                                                                                                (expand
                                                                                                                 "number_sign_changes"
                                                                                                                 -1)
                                                                                                                (("6"
                                                                                                                  (lift-if)
                                                                                                                  (("6"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("7"
                                                                                                                (lift-if)
                                                                                                                (("7"
                                                                                                                  (split
                                                                                                                   -)
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "number_sign_changes"
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (lift-if)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (flatten)
                                                                                                                    (("2"
                                                                                                                      (split
                                                                                                                       -)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "number_sign_changes"
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (lift-if)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (flatten)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "number_sign_changes"
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (lift-if)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("8"
                                                                                                                (expand
                                                                                                                 "number_sign_changes"
                                                                                                                 -1)
                                                                                                                (("8"
                                                                                                                  (lift-if)
                                                                                                                  (("8"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("9"
                                                                                                                (lift-if)
                                                                                                                (("9"
                                                                                                                  (split
                                                                                                                   -)
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "number_sign_changes"
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (lift-if)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (flatten)
                                                                                                                    (("2"
                                                                                                                      (split
                                                                                                                       -)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "number_sign_changes"
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (lift-if)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (flatten)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "number_sign_changes"
                                                                                                                           2)
                                                                                                                          (("2"
                                                                                                                            (lift-if)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide 4)
                                                              (("2"
                                                                (reveal
                                                                 "hyplem")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "jj-1"
                                                                   "m"
                                                                   "n"
                                                                   "p"
                                                                   "x"
                                                                   "y")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (replace
                                                                       -8)
                                                                      (("2"
                                                                        (replace
                                                                         -9)
                                                                        (("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (expand
                                                                             "SQUAB")
                                                                            (("2"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide 4)
                                                            (("2"
                                                              (copy -9)
                                                              (("2"
                                                                (expand
                                                                 "sturm_sequence?"
                                                                 -1)
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "y"
                                                                     "jj")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "sign_ext"
                                                           1)
                                                          (("2"
                                                            (lift-if)
                                                            (("2"
                                                              (lift-if)
                                                              (("2"
                                                                (lift-if)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (ground)
                                                                    (("1"
                                                                      (lemma
                                                                       "poly_intermediate_value_dec")
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "p(1+jj)"
                                                                         "0"
                                                                         "n(1+jj)"
                                                                         "x"
                                                                         "y")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (skeep
                                                                             -1)
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "cc"
                                                                               "1+jj")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (lemma
                                                                       "poly_intermediate_value_inc")
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "p(1+jj)"
                                                                         "0"
                                                                         "n(1+jj)"
                                                                         "x"
                                                                         "y")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (skeep
                                                                             -1)
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "cc"
                                                                               "1+jj")
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand "sign_ext" 1)
                                                        (("2"
                                                          (lift-if)
                                                          (("2"
                                                            (lift-if)
                                                            (("2"
                                                              (lift-if)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (ground)
                                                                  (("1"
                                                                    (lemma
                                                                     "poly_intermediate_value_dec")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "p(jj-1)"
                                                                       "0"
                                                                       "n(jj-1)"
                                                                       "x"
                                                                       "y")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (skeep
                                                                           -)
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "cc"
                                                                             "jj-1")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (lemma
                                                                     "poly_intermediate_value_inc")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "p(jj-1)"
                                                                       "0"
                                                                       "n(jj-1)"
                                                                       "x"
                                                                       "y")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (skeep
                                                                           -)
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "cc"
                                                                             "jj-1")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("3"
                                                                    (inst
                                                                     -
                                                                     "x"
                                                                     "jj-1")
                                                                    (("3"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (odd_plus_even_is_odd application-judgement "odd_int" integers nil)
    (poly_strictly_increasing formula-decl nil polynomials reals)
    (rat_max application-judgement "{s: rat | s >= q AND s >= r}" real_defs
     nil)
    (int_max application-judgement "{k: int | i <= k AND j <= k}" real_defs
     nil)
    (max_nnreal_0 formula-decl nil min_max reals)
    (poly_strictly_decreasing formula-decl nil polynomials reals)
    (sigma def-decl "real" sigma reals)
    (SQUAB skolem-const-decl "nonneg_int" sturmsquarefree nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (sturm_seq_repeated_root formula-decl nil sturmsquarefree nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (poly_intermediate_value_inc formula-decl nil polynomials reals)
    (poly_intermediate_value_dec formula-decl nil polynomials reals)
    (nat_induction formula-decl nil naturalnumbers nil)
    (pred type-eq-decl nil defined_types nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (sequence type-eq-decl nil sequences nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (/= const-decl "boolean" notequal nil)
    (sturm_sequence? const-decl "bool" sturmsquarefree nil)
    (poly_deriv const-decl "real" polynomials reals)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (NSC type-eq-decl nil number_sign_changes nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (sign_ext const-decl
     "{sig: real | (sig = -1 OR sig = 1 OR sig = 0) AND sig * x = abs(x)}"
     sign reals)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (number_sign_changes def-decl "NSC" number_sign_changes nil))
   nil))
 (roots_between_enum_TCC1 0
  (roots_between_enum_TCC1-1 nil 3588321675 ("" (subtype-tcc) nil nil)
   ((/= const-decl "boolean" notequal nil)
    (^ const-decl "real" exponentiation nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (poly_deriv const-decl "real" polynomials reals)
    (sturm_sequence? const-decl "bool" sturmsquarefree nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (rat_max application-judgement "{s: rat | s >= q AND s >= r}" real_defs
     nil)
    (int_max application-judgement "{k: int | i <= k AND j <= k}" real_defs
     nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil
   (roots_between_enum subtype "0"
    "naturalnumbers.below(sturmsquarefree.K)")))
 (roots_between_enum_TCC2 0
  (roots_between_enum_TCC2-1 nil 3588321675 ("" (subtype-tcc) nil nil)
   ((/= const-decl "boolean" notequal nil)
    (^ const-decl "real" exponentiation nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (poly_deriv const-decl "real" polynomials reals)
    (sturm_sequence? const-decl "bool" sturmsquarefree nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (rat_max application-judgement "{s: rat | s >= q AND s >= r}" real_defs
     nil)
    (int_max application-judgement "{k: int | i <= k AND j <= k}" real_defs
     nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil
   (roots_between_enum subtype "(number_fields.-)(sturmsquarefree.K, 1)"
    "naturalnumbers.below(sturmsquarefree.K)")))
 (roots_between_enum 0
  (roots_between_enum-1 nil 3588493021
   ("" (skeep)
    ((""
      (name "IGGY"
            "LAMBDA (b:real): ((x<=b AND b<=y) AND (b=x OR b=y OR (EXISTS (j:nat): j<=m AND polynomial(p(j), n(j))(b) = 0)))")
      (("" (case "is_finite[real](IGGY)")
        (("1" (copy -1)
          (("1" (lemma "card_bij_inv[real]")
            (("1" (name "K" "card(IGGY)")
              (("1" (inst - "K" "IGGY")
                (("1" (assert)
                  (("1" (label "fbij" -2)
                    (("1" (skeep)
                      (("1" (name "newenum" "sort_array[K,real,<=].sort(f)")
                        (("1" (case "K>=2")
                          (("1" (inst + "K" "newenum")
                            (("1"
                              (case "NOT (FORALL (i, j: below(K)): i < j IMPLIES newenum(i) < newenum(j))")
                              (("1" (hide 2)
                                (("1" (skeep)
                                  (("1" (case "NOT newenum(i) = newenum(j)")
                                    (("1" (assert)
                                      (("1"
                                        (typepred "newenum")
                                        (("1"
                                          (expand "sorted?")
                                          (("1"
                                            (inst - "i" "j")
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (typepred "newenum")
                                      (("2"
                                        (expand "permutation_of?")
                                        (("2"
                                          (skosimp*)
                                          (("2"
                                            (expand "bijective?" -1)
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (expand "surjective?")
                                                (("2"
                                                  (inst-cp - "j")
                                                  (("2"
                                                    (inst - "i")
                                                    (("2"
                                                      (skosimp*)
                                                      (("2"
                                                        (inst-cp - "x!1")
                                                        (("2"
                                                          (inst - "x!2")
                                                          (("2"
                                                            (replace -2)
                                                            (("2"
                                                              (replace -3)
                                                              (("2"
                                                                (copy "fbij")
                                                                (("2"
                                                                  (expand
                                                                   "bijective?"
                                                                   -1)
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (expand
                                                                       "injective?"
                                                                       -1)
                                                                      (("2"
                                                                        (inst-cp
                                                                         -
                                                                         "x!1"
                                                                         "x!2")
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (replace -1)
                                (("2" (case "NOT newenum(0)=x")
                                  (("1" (hide 2)
                                    (("1" (copy "fbij")
                                      (("1"
                                        (expand "bijective?" -1)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (expand "surjective?" -2)
                                            (("1"
                                              (inst - "x")
                                              (("1"
                                                (skosimp*)
                                                (("1"
                                                  (typepred "newenum")
                                                  (("1"
                                                    (expand "permutation_of?")
                                                    (("1"
                                                      (skeep -1)
                                                      (("1"
                                                        (copy -2)
                                                        (("1"
                                                          (inst - "x!1")
                                                          (("1"
                                                            (replace -6)
                                                            (("1"
                                                              (inst
                                                               -
                                                               "0"
                                                               "f_1(x!1)")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replace
                                                                   -1
                                                                   :dir
                                                                   rl)
                                                                  (("1"
                                                                    (expand
                                                                     "bijective?"
                                                                     -2)
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (expand
                                                                         "surjective?"
                                                                         -3)
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "0")
                                                                          (("1"
                                                                            (skosimp*)
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "x!2")
                                                                              (("1"
                                                                                (replace
                                                                                 -3)
                                                                                (("1"
                                                                                  (replace
                                                                                   -4
                                                                                   :dir
                                                                                   rl)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (typepred
                                                                                       "f(x!2)")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "IGGY"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand "IGGY" 1)
                                                (("2" (propax) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (assert)
                                    (("2" (case "NOT newenum(K-1) = y")
                                      (("1"
                                        (hide 2)
                                        (("1"
                                          (copy "fbij")
                                          (("1"
                                            (expand "bijective?" -1)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (expand "surjective?" -2)
                                                (("1"
                                                  (inst - "y")
                                                  (("1"
                                                    (skosimp*)
                                                    (("1"
                                                      (typepred "newenum")
                                                      (("1"
                                                        (expand
                                                         "permutation_of?")
                                                        (("1"
                                                          (skeep -1)
                                                          (("1"
                                                            (copy -2)
                                                            (("1"
                                                              (inst - "x!1")
                                                              (("1"
                                                                (replace -6)
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "f_1(x!1)"
                                                                   "K-1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (replace
                                                                       -1
                                                                       :dir
                                                                       rl)
                                                                      (("1"
                                                                        (expand
                                                                         "bijective?"
                                                                         -2)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (expand
                                                                             "surjective?"
                                                                             -3)
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "K-1")
                                                                              (("1"
                                                                                (skosimp*)
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "x!2")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -3)
                                                                                    (("1"
                                                                                      (typepred
                                                                                       "f(x!2)")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "IGGY"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (expand "IGGY" 1)
                                                    (("2" (propax) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (assert)
                                        (("2"
                                          (skeep)
                                          (("2"
                                            (copy "fbij")
                                            (("2"
                                              (expand "bijective?" -1)
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (expand "surjective?" -2)
                                                  (("2"
                                                    (case "NOT IGGY(b)")
                                                    (("1"
                                                      (expand "IGGY" 1)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (inst + "j")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (inst - "b")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (skosimp*)
                                                          (("2"
                                                            (typepred
                                                             "newenum")
                                                            (("2"
                                                              (expand
                                                               "permutation_of?")
                                                              (("2"
                                                                (skeep -1)
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "x!1")
                                                                  (("2"
                                                                    (inst
                                                                     +
                                                                     "f_1(x!1)")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("3" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (expand "bijective?")
                              (("2" (flatten)
                                (("2" (expand "surjective?")
                                  (("2" (inst-cp - "x")
                                    (("1" (inst - "y")
                                      (("1"
                                        (skosimp*)
                                        (("1" (assert) nil nil))
                                        nil)
                                       ("2"
                                        (expand "IGGY" 1)
                                        (("2" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2" (expand "IGGY" 1)
                                      (("2" (propax) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (propax) nil nil))
              nil))
            nil))
          nil)
         ("2" (hide 2)
          (("2"
            (name "IGGYk" "LAMBDA (k:nat): (LAMBDA (b: real):
                           ((x <= b AND b <= y) AND
                             (b = x OR
                               b = y OR
                                (EXISTS (j: nat):
                                   j <= k-1 AND polynomial(p(j), n(j))(b) = 0))))")
            (("2"
              (case "FORALL (k:nat): k<=m+1 IMPLIES is_finite[real](IGGYk(k))")
              (("1" (inst - "m+1")
                (("1" (case "IGGYk(m+1) = IGGY")
                  (("1" (assert) nil nil)
                   ("2" (decompose-equality 1)
                    (("2" (expand "IGGYk" 1)
                      (("2" (expand "IGGY" 1) (("2" (propax) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (induct "k")
                (("1" (assert)
                  (("1"
                    (case "NOT (IGGYk(0) = (LAMBDA (b:real): b = x OR b = y))")
                    (("1" (decompose-equality 1)
                      (("1" (expand "IGGYk" 1)
                        (("1" (hide (-1 -2 -4))
                          (("1" (iff) (("1" (grind) nil nil)) nil)) nil))
                        nil))
                      nil)
                     ("2" (replace -1)
                      (("2" (hide-all-but (-4 1))
                        (("2" (rewrite "is_finite_surj" :dir rl)
                          (("2"
                            (inst + "2"
                             "LAMBDA (i:below(2)): IF i = 0 THEN x ELSE y ENDIF")
                            (("2" (expand "surjective?")
                              (("2" (skosimp*)
                                (("2" (typepred "y!1")
                                  (("2" (ground)
                                    (("1" (inst + "0")
                                      (("1" (assert) nil nil)) nil)
                                     ("2" (inst + "1")
                                      (("2" (assert) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide 2)
                  (("2" (skeep)
                    (("2"
                      (name "Sjp" "(LAMBDA (b: real):
                                   ((x <= b AND b <= y) AND
                                     ((j <= m AND polynomial(p(j), n(j))(b) = 0))))")
                      (("2" (case "IGGYk(1+j) = union(IGGYk(j),Sjp)")
                        (("1" (lemma "finite_union[real]")
                          (("1" (inst - "IGGYk(j)" "Sjp")
                            (("1" (assert) nil nil)
                             ("2" (assert)
                              (("2"
                                (name "Sj" "(LAMBDA (b: real):
                                                   polynomial(p(j), n(j))(b) = 0)")
                                (("2" (case "is_finite[real](Sj)")
                                  (("1" (lemma "finite_subset[real]")
                                    (("1" (inst - "Sj" "Sjp")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (hide-all-but 1)
                                          (("1"
                                            (expand "subset?")
                                            (("1"
                                              (expand "Sjp")
                                              (("1"
                                                (expand "Sj")
                                                (("1"
                                                  (grind
                                                   :exclude
                                                   "polynomial")
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (case "FORALL (kk:nat,a:[nat->real]): (EXISTS (i:nat):i<=kk AND a(i)/=0) IMPLIES is_finite[real](LAMBDA (b:real): polynomial(a,kk)(b)=0)")
                                    (("1" (inst - "n(j)" "p(j)")
                                      (("1"
                                        (split -)
                                        (("1" (assert) nil nil)
                                         ("2"
                                          (inst + "n(j)")
                                          (("2"
                                            (expand "sturm_sequence?")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (inst - "j")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (inst - "j")
                                                      (("2" (assert) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (hide-all-but 1)
                                      (("2"
                                        (induct "kk")
                                        (("1"
                                          (skeep)
                                          (("1"
                                            (skeep -1)
                                            (("1"
                                              (case "i = 0")
                                              (("1"
                                                (replaces -1)
                                                (("1"
                                                  (hide -)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (lemma
                                                       "finite_emptyset[real]")
                                                      (("1"
                                                        (invoke
                                                         (case "%1 = %2")
                                                         (! -1 1)
                                                         (! 2 1))
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (hide (-1 3))
                                                          (("2"
                                                            (decompose-equality
                                                             1)
                                                            (("2"
                                                              (expand
                                                               "polynomial")
                                                              (("2"
                                                                (expand
                                                                 "sigma")
                                                                (("2"
                                                                  (expand
                                                                   "sigma")
                                                                  (("2"
                                                                    (expand
                                                                     "emptyset")
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (skeep)
                                          (("2"
                                            (skeep)
                                            (("2"
                                              (case
                                               "EXISTS (z:real): polynomial(a,j!1+1)(z)=0")
                                              (("1"
                                                (skeep -1)
                                                (("1"
                                                  (lemma
                                                   "polynomial_zero_factor")
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (replace -2)
                                                      (("1"
                                                        (skeep -1)
                                                        (("1"
                                                          (invoke
                                                           (name "IP" "%1")
                                                           (! 1 1))
                                                          (("1"
                                                            (replace -1)
                                                            (("1"
                                                              (inst -4 "g")
                                                              (("1"
                                                                (split -4)
                                                                (("1"
                                                                  (invoke
                                                                   (name
                                                                    "IG"
                                                                    "%1")
                                                                   (! -1 1))
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (case
                                                                       "IP = union(IG,singleton(z))")
                                                                      (("1"
                                                                        (lemma
                                                                         "finite_union[real]")
                                                                        (("1"
                                                                          (inst?)
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide
                                                                         2)
                                                                        (("2"
                                                                          (decompose-equality
                                                                           1)
                                                                          (("2"
                                                                            (iff)
                                                                            (("2"
                                                                              (expand
                                                                               "IP"
                                                                               +)
                                                                              (("2"
                                                                                (expand
                                                                                 "IG"
                                                                                 +)
                                                                                (("2"
                                                                                  (expand
                                                                                   "union"
                                                                                   +)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "singleton"
                                                                                     +)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "member"
                                                                                       +)
                                                                                      (("2"
                                                                                        (ground)
                                                                                        (("1"
                                                                                          (inst-cp
                                                                                           -
                                                                                           "x!1")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (inst
                                                                                           -
                                                                                           "x!1")
                                                                                          (("2"
                                                                                            (replaces
                                                                                             -1)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (lemma
                                                                   "polynomial_eq_coeff")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "a"
                                                                     "LAMBDA (i:nat): 0"
                                                                     "j!1+1")
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (hide
                                                                         -2)
                                                                        (("2"
                                                                          (split
                                                                           -1)
                                                                          (("1"
                                                                            (skosimp*)
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "i!1")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (decompose-equality
                                                                             1)
                                                                            (("2"
                                                                              (case
                                                                               "polynomial(LAMBDA (i: nat): 0, 1 + j!1)(x!1) = 0")
                                                                              (("1"
                                                                                (replaces
                                                                                 -1)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "x!1")
                                                                                    (("1"
                                                                                      (case
                                                                                       "polynomial(g, j!1)(x!1) = 0")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (expand
                                                                                         "polynomial"
                                                                                         1)
                                                                                        (("2"
                                                                                          (rewrite
                                                                                           "sigma_restrict_eq_0")
                                                                                          (("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 +
                                                                                                 "i!1")
                                                                                                (("2"
                                                                                                  (lift-if)
                                                                                                  (("2"
                                                                                                    (ground)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "polynomial"
                                                                                 1)
                                                                                (("2"
                                                                                  (rewrite
                                                                                   "sigma_restrict_eq_0")
                                                                                  (("2"
                                                                                    (skosimp*)
                                                                                    (("2"
                                                                                      (lift-if)
                                                                                      (("2"
                                                                                        (ground)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (lemma
                                                 "finite_emptyset[real]")
                                                (("2"
                                                  (invoke
                                                   (case "%1 = %2")
                                                   (! -1 1)
                                                   (! 2 1))
                                                  (("1" (assert) nil nil)
                                                   ("2"
                                                    (decompose-equality 1)
                                                    (("2"
                                                      (iff)
                                                      (("2"
                                                        (expand "emptyset" 1)
                                                        (("2"
                                                          (inst + "x!1")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("3" (assert) nil nil))
                            nil))
                          nil)
                         ("2" (assert)
                          (("2" (decompose-equality 1)
                            (("2" (iff)
                              (("2" (expand "union" +)
                                (("2" (expand "member" +)
                                  (("2" (split +)
                                    (("1" (flatten)
                                      (("1"
                                        (expand "IGGYk" -1)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (expand "IGGYk" 1)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (skosimp*)
                                                    (("1"
                                                      (case "NOT j!1 = j")
                                                      (("1"
                                                        (inst + "j!1")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand "Sjp" +)
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (flatten)
                                      (("2"
                                        (split -)
                                        (("1"
                                          (expand "IGGYk" (-1 1))
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (skosimp*)
                                                    (("1"
                                                      (inst + "j!1")
                                                      (("1" (assert) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand "Sjp" -1)
                                          (("2"
                                            (expand "IGGYk" 1)
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (flatten)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (inst + "j")
                                                      (("2" (assert) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((polynomial const-decl "[real -> real]" polynomials reals)
    (sequence type-eq-decl nil sequences nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (IGGYk skolem-const-decl "[nat -> [real -> boolean]]" sturmsquarefree nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (finite_union judgement-tcc nil finite_sets nil)
    (Sj skolem-const-decl "[real -> boolean]" sturmsquarefree nil)
    (member const-decl "bool" sets nil) (subset? const-decl "bool" sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (finite_subset formula-decl nil finite_sets nil)
    (polynomial_zero_factor formula-decl nil polynomials reals)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (polynomial_eq_coeff formula-decl nil polynomials reals)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (i!1 skolem-const-decl "nat" sturmsquarefree nil)
    (j!1 skolem-const-decl "nat" sturmsquarefree nil)
    (T_low type-eq-decl nil sigma reals) (T_high type-eq-decl nil sigma reals)
    (^ const-decl "real" exponentiation nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (sigma_restrict_eq_0 formula-decl nil sigma reals)
    (subrange type-eq-decl nil integers nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (nonempty_singleton_finite application-judgement "non_empty_finite_set"
     finite_sets nil)
    (nonempty_union2 application-judgement "(nonempty?)" sets nil)
    (singleton? const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (IG skolem-const-decl "[real -> boolean]" sturmsquarefree nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (IP skolem-const-decl "[real -> boolean]" sturmsquarefree nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (finite_emptyset judgement-tcc nil finite_sets nil)
    (sigma def-decl "real" sigma reals)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (emptyset const-decl "set" sets nil) (TRUE const-decl "bool" booleans nil)
    (sturm_sequence? const-decl "bool" sturmsquarefree nil)
    (/= const-decl "boolean" notequal nil)
    (Sjp skolem-const-decl "[real -> boolean]" sturmsquarefree nil)
    (j skolem-const-decl "nat" sturmsquarefree nil)
    (union const-decl "set" sets nil)
    (is_finite_surj formula-decl nil finite_sets nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (pred type-eq-decl nil defined_types nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Card const-decl "nat" finite_sets nil)
    (card const-decl "{n: nat | n = Card(S)}" finite_sets nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (injective? const-decl "bool" functions nil)
    (surjective? const-decl "bool" functions nil)
    (bijective? const-decl "bool" functions nil)
    (x skolem-const-decl "real" sturmsquarefree nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (y skolem-const-decl "real" sturmsquarefree nil)
    (b skolem-const-decl "real" sturmsquarefree nil)
    (K skolem-const-decl "{n: nat | n = Card(IGGY)}" sturmsquarefree nil)
    (IGGY skolem-const-decl "[real -> boolean]" sturmsquarefree nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (below type-eq-decl nil nat_types nil)
    (sort const-decl "{a | permutation_of?(A, a) AND sorted?(a)}"
      sort_array structures)
    (sorted? const-decl "bool" sort_array structures)
    (permutation_of? const-decl "bool" permutations structures)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (card_bij_inv formula-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil))
   shostak))
 (sturm_lem_no_roots_full 0
  (sturm_lem_no_roots_full-1 nil 3588350899
   ("" (skeep)
    (("" (case "NOT EXISTS (j:nat): j<=m AND polynomial(p(j),n(j))(x)=0")
      (("1" (lemma "sturm_lem_no_roots")
        (("1" (inst?)
          (("1" (assert)
            (("1" (skeep)
              (("1" (case "NOT c = x")
                (("1" (inst - "c" "i") (("1" (assert) nil nil)) nil)
                 ("2" (inst + "i") (("2" (assert) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (label "BL" -1)
        (("2" (hide "BL")
          (("2" (label "mp" -1)
            (("2" (hide "mp")
              (("2" (label "sf" -4)
                (("2"
                  (case "EXISTS (epsil:posreal): FORALL (delt:posreal,i:nat): delt<epsil AND i<=m IMPLIES polynomial(p(i), n(i))(x-delt) /= 0")
                  (("1" (skeep -1)
                    (("1" (label "hyplem" -1)
                      (("1" (copy "hyplem")
                        (("1" (hide "hyplem")
                          (("1" (inst - "epsil/2" _)
                            (("1" (lemma "sturm_lem_one_root")
                              (("1"
                                (inst - "x" "m" "m" "n" "p" "x-epsil/2" "y")
                                (("1" (assert)
                                  (("1" (split -)
                                    (("1" (flatten)
                                      (("1"
                                        (hide -1)
                                        (("1"
                                          (invoke
                                           (name "SQUAB" "%1")
                                           (! -1 2 2))
                                          (("1"
                                            (replace -1)
                                            (("1"
                                              (lemma "sturm_lem_edge_root")
                                              (("1"
                                                (inst
                                                 -
                                                 "m"
                                                 "m"
                                                 "n"
                                                 "p"
                                                 "x-epsil/2"
                                                 "x")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (split -)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (hide -1)
                                                        (("1"
                                                          (replace -2)
                                                          (("1"
                                                            (expand
                                                             "sturm_sig")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide 2)
                                                      (("2"
                                                        (skeep)
                                                        (("2"
                                                          (reveal "hyplem")
                                                          (("2"
                                                            (inst - "x-c" "i")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (hide 2)
                                                      (("3"
                                                        (skeep)
                                                        (("3"
                                                          (inst "sf" "c")
                                                          (("3"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("4"
                                                      (lemma
                                                       "sturm_seq_last_nonzero")
                                                      (("4"
                                                        (inst?)
                                                        (("4"
                                                          (assert)
                                                          (("4"
                                                            (replace "sf")
                                                            (("4"
                                                              (reveal "mp")
                                                              (("4"
                                                                (assert)
                                                                (("4"
                                                                  (inst - "x")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (skeep)
                                      (("2"
                                        (case "c < x")
                                        (("1"
                                          (reveal "hyplem")
                                          (("1"
                                            (inst - "x-c" "i")
                                            (("1" (assert) nil nil)
                                             ("2" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (inst - "c" "i")
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("3" (skeep)
                                      (("3"
                                        (inst "sf" "c")
                                        (("3" (assert) nil nil))
                                        nil))
                                      nil)
                                     ("4" (lemma "sturm_seq_last_nonzero")
                                      (("4"
                                        (inst?)
                                        (("4"
                                          (assert)
                                          (("4"
                                            (reveal "mp")
                                            (("4"
                                              (assert)
                                              (("4"
                                                (replace "sf")
                                                (("4" (inst - "x") nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (lemma "roots_between_enum")
                    (("2" (inst - "m" "n" "p" "x-1" "y")
                      (("2" (assert)
                        (("2" (skosimp*)
                          (("2" (reveal "BL")
                            (("2" (skosimp*)
                              (("2" (copy -6)
                                (("2" (inst -1 "x" "j!1")
                                  (("2" (assert)
                                    (("2" (skosimp*)
                                      (("2"
                                        (copy -4)
                                        (("2"
                                          (inst - "i!1-1" "i!1")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (inst
                                               +
                                               "min(enum!1(i!1)-enum!1(i!1-1),1/2)")
                                              (("1"
                                                (skeep)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (copy -8)
                                                    (("1"
                                                      (inst - "x-delt" "i")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (skosimp*)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (case
                                                               "i!2 < i!1")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "i!2"
                                                                   "i!1-1")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (inst
                                                                 -
                                                                 "i!1"
                                                                 "i!2")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand "min" 1)
                                                (("2"
                                                  (lift-if)
                                                  (("2" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((polynomial const-decl "[real -> real]" polynomials reals)
    (sequence type-eq-decl nil sequences nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (sturm_lem_no_roots formula-decl nil sturmsquarefree nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil) (< const-decl "bool" reals nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (sturm_lem_one_root formula-decl nil sturmsquarefree nil)
    (c skolem-const-decl "real" sturmsquarefree nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (sturm_lem_edge_root formula-decl nil sturmsquarefree nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (sturm_seq_last_nonzero formula-decl nil sturmsquarefree nil)
    (c skolem-const-decl "real" sturmsquarefree nil)
    (x skolem-const-decl "real" sturmsquarefree nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (sturm_sig const-decl "nat" sturmsquarefree nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal" real_types
     nil)
    (K!1 skolem-const-decl "{K: nat | K >= 2}" sturmsquarefree nil)
    (below type-eq-decl nil naturalnumbers nil)
    (i!1 skolem-const-decl "below(K!1)" sturmsquarefree nil)
    (posrat_div_posrat_is_posrat application-judgement "posrat" rationals nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (enum!1 skolem-const-decl "[below(K!1) -> real]" sturmsquarefree nil)
    (roots_between_enum formula-decl nil sturmsquarefree nil))
   shostak))
 (sturm_square_free 0
  (sturm_square_free-3 "" 3790098799
   ("" (skeep)
    (("" (label "mylem" -4)
      (("" (label "mp" -1)
        (("" (hide "mp")
          ((""
            (name "FFF" "LAMBDA (xx,yy:real): (LET nsc =
                                                      LAMBDA (xyz: real):
                                                        number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(xyz),
                                                                            m),
                                                    Nroots = nsc(xx)`num - nsc(yy)`num
                                                  IN
                                                  Nroots >= 0 AND
                                                   (EXISTS (bij:
                                                              [below(Nroots) ->
                                                                 {xr: real |
                                                                          xx < xr AND
                                                                           xr <= yy AND
                                                                            polynomial(p(0), n(0))(xr) = 0}]):
                                                      bijective?(bij)))")
            (("" (label "FFFname" -1)
              (("" (hide "FFFname")
                (("" (case "FFF(x,y)")
                  (("1" (expand "FFF") (("1" (assert) nil nil)) nil)
                   ("2" (hide 2)
                    (("2" (lemma "roots_between_enum")
                      (("2" (inst?)
                        (("2" (inst - "x" "y")
                          (("2" (assert)
                            (("2" (skeep -1)
                              (("2" (label "rij" -1)
                                (("2" (label "rbj" -4)
                                  (("2"
                                    (name "Gseq"
                                          "LAMBDA (j:upto(K)): IF j = 0 THEN x ELSIF j = K THEN y ELSE (enum(j-1)+enum(j))/2 ENDIF")
                                    (("1"
                                      (case
                                       "FORALL (j:below(K)): x <= enum(j) AND enum(j)<=y")
                                      (("1"
                                        (case
                                         "FORALL (x1,x2,x3:real): x1<x2 AND x2<x3 AND FFF(x1,x2) AND FFF(x2,x3) IMPLIES FFF(x1,x3)")
                                        (("1"
                                          (case
                                           "FORALL (j:nat):j<K IMPLIES FFF(Gseq(j),Gseq(j+1))")
                                          (("1"
                                            (case
                                             "FORALL (j:nat):j<K IMPLIES FFF(x,Gseq(j+1))")
                                            (("1"
                                              (inst - "K-1")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand "Gseq" -1)
                                                  (("1" (propax) nil nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (induct "j")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (inst - "0")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand "Gseq" -1 1)
                                                      (("1" (propax) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (skosimp*)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (inst - "1+j!1")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (inst
                                                         -
                                                         "x"
                                                         "Gseq(1+j!1)"
                                                         "Gseq(2+j!1)")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (split 2)
                                                            (("1"
                                                              (expand
                                                               "Gseq"
                                                               1)
                                                              (("1"
                                                                (inst-cp
                                                                 -
                                                                 "0"
                                                                 "1+j!1")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "0"
                                                                   "j!1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (ground)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               "Gseq"
                                                               1)
                                                              (("2"
                                                                (lift-if)
                                                                (("2"
                                                                  (ground)
                                                                  (("1"
                                                                    (inst-cp
                                                                     -
                                                                     "j!1"
                                                                     "K-1")
                                                                    (("1"
                                                                      (inst-cp
                                                                       -
                                                                       "1+j!1"
                                                                       "K-1")
                                                                      (("1"
                                                                        (ground)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (inst-cp
                                                                     -
                                                                     "j!1"
                                                                     "1+j!1")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "1+j!1"
                                                                       "2+j!1")
                                                                      (("2"
                                                                        (ground)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (skosimp*)
                                                (("3" (assert) nil nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (skosimp*)
                                              (("3" (assert) nil nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide -1)
                                            (("2"
                                              (skeep)
                                              (("2"
                                                (case "j = 0")
                                                (("1"
                                                  (hide 2)
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand "Gseq" 1 1)
                                                        (("1"
                                                          (expand
                                                           "FFF"
                                                           1
                                                           :assert?
                                                           none)
                                                          (("1"
                                                            (skoletin 1)
                                                            (("1"
                                                              (skoletin 1)
                                                              (("1"
                                                                (case
                                                                 "Nroots = 0")
                                                                (("1"
                                                                  (case
                                                                   "NOT EXISTS (bb:real): x < bb AND bb <= Gseq(1) AND polynomial(p(0),n(0))(bb) = 0")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (inst
                                                                       2
                                                                       "LAMBDA (ii:below(Nroots)): 0")
                                                                      (("1"
                                                                        (expand
                                                                         "bijective?")
                                                                        (("1"
                                                                          (split
                                                                           +)
                                                                          (("1"
                                                                            (expand
                                                                             "injective?")
                                                                            (("1"
                                                                              (skosimp*)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "surjective?")
                                                                            (("2"
                                                                              (skosimp*)
                                                                              (("2"
                                                                                (inst
                                                                                 2
                                                                                 "y!1")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide
                                                                         2)
                                                                        (("2"
                                                                          (skosimp*)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (skeep -1)
                                                                    (("2"
                                                                      (hide +)
                                                                      (("2"
                                                                        (expand
                                                                         "Gseq"
                                                                         -2)
                                                                        (("2"
                                                                          (inst-cp
                                                                           "rbj"
                                                                           "bb"
                                                                           "0")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (copy
                                                                               "rij")
                                                                              (("2"
                                                                                (case
                                                                                 "bb<=y")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (skosimp*)
                                                                                    (("1"
                                                                                      (inst-cp
                                                                                       -
                                                                                       "0"
                                                                                       "i!1")
                                                                                      (("1"
                                                                                        (inst-cp
                                                                                         -
                                                                                         "1"
                                                                                         "i!1")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (inst-cp
                                                                                     -
                                                                                     "0"
                                                                                     "K-1")
                                                                                    (("2"
                                                                                      (split
                                                                                       -)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "1"
                                                                                         "K-1")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide 2)
                                                                  (("2"
                                                                    (lemma
                                                                     "sturm_lem_no_roots_full")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "m"
                                                                       "n"
                                                                       "p"
                                                                       "x"
                                                                       "Gseq(1)")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (reveal
                                                                           "mp")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (copy
                                                                               "rij")
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "0"
                                                                                 "1")
                                                                                (("2"
                                                                                  (case
                                                                                   "NOT x<Gseq(1)")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "Gseq"
                                                                                     1)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     -2)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (split
                                                                                         -3)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "sturm_sig"
                                                                                           -1)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -5)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (skeep)
                                                                                          (("2"
                                                                                            (copy
                                                                                             "rbj")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "c"
                                                                                               "i")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "1")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "NOT c<=y")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "Gseq"
                                                                                                             -4)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (skosimp*)
                                                                                                              (("2"
                                                                                                                (copy
                                                                                                                 "rij")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "1"
                                                                                                                   "i!1")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (case
                                                                                                                       "NOT 1 = i!1")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "Gseq"
                                                                                                                           -6)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "Gseq"
                                                                                                                           -7)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (assert)
                                                  (("2"
                                                    (case "j < K-1")
                                                    (("1"
                                                      (case
                                                       "NOT FORALL (yy:real): Gseq(j) < yy AND yy <= Gseq(1 + j) AND polynomial(p(0), n(0))(yy) = 0 IMPLIES yy = enum(j)")
                                                      (("1"
                                                        (skeep)
                                                        (("1"
                                                          (copy "rbj")
                                                          (("1"
                                                            (inst - "yy" "0")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (case
                                                                 "NOT (x<Gseq(j) AND Gseq(1+j)<=y)")
                                                                (("1"
                                                                  (hide -1)
                                                                  (("1"
                                                                    (inst-cp
                                                                     -
                                                                     "j")
                                                                    (("1"
                                                                      (inst-cp
                                                                       -
                                                                       "j-1")
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "j+1")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (expand
                                                                               "Gseq"
                                                                               1)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (copy
                                                                                   "rij")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "0"
                                                                                     "j")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (skosimp*)
                                                                      (("2"
                                                                        (case
                                                                         "i!1 < j")
                                                                        (("1"
                                                                          (copy
                                                                           "rij")
                                                                          (("1"
                                                                            (inst-cp
                                                                             -
                                                                             "i!1"
                                                                             "j-1")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "i!1"
                                                                               "j")
                                                                              (("1"
                                                                                (expand
                                                                                 "Gseq")
                                                                                (("1"
                                                                                  (ground)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (copy
                                                                           "rij")
                                                                          (("2"
                                                                            (inst-cp
                                                                             -
                                                                             "j"
                                                                             "i!1")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "j+1"
                                                                               "i!1")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (expand
                                                                                   "Gseq")
                                                                                  (("2"
                                                                                    (ground)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (label "allzeros" -1)
                                                        (("2"
                                                          (hide "allzeros")
                                                          (("2"
                                                            (hide -2)
                                                            (("2"
                                                              (label "rrj" -2)
                                                              (("2"
                                                                (lemma
                                                                 "sturm_lem_one_root")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "enum(j)"
                                                                   "m"
                                                                   "m"
                                                                   "n"
                                                                   "p"
                                                                   "Gseq(j)"
                                                                   "Gseq(1+j)")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (split
                                                                       -)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (hide
                                                                           -1)
                                                                          (("1"
                                                                            (expand
                                                                             "FFF"
                                                                             2)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (invoke
                                                                                 (name
                                                                                  "Nsteps"
                                                                                  "%1")
                                                                                 (!
                                                                                  2
                                                                                  1
                                                                                  1))
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (case
                                                                                     "NOT Nsteps>=0")
                                                                                    (("1"
                                                                                      (hide
                                                                                       3)
                                                                                      (("1"
                                                                                        (lift-if)
                                                                                        (("1"
                                                                                          (ground)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (reveal
                                                                                         "allzeros")
                                                                                        (("2"
                                                                                          (copy
                                                                                           "allzeros")
                                                                                          (("2"
                                                                                            (hide
                                                                                             "allzeros")
                                                                                            (("2"
                                                                                              (label
                                                                                               "eppypen"
                                                                                               -1)
                                                                                              (("2"
                                                                                                (hide
                                                                                                 "eppypen")
                                                                                                (("2"
                                                                                                  (case
                                                                                                   "NOT polynomial(p(0),n(0))(enum(j)) = 0")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     +
                                                                                                     "LAMBDA (ii:below(0)): 0")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "bijective?")
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         +)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "injective?")
                                                                                                          (("1"
                                                                                                            (skosimp*)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (expand
                                                                                                           "surjective?")
                                                                                                          (("2"
                                                                                                            (skosimp*)
                                                                                                            (("2"
                                                                                                              (hide
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (typepred
                                                                                                                 "y!1")
                                                                                                                (("2"
                                                                                                                  (reveal
                                                                                                                   "eppypen")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "y!1")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (skosimp*)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (label
                                                                                                     "enumjzero"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       +
                                                                                                       "LAMBDA (ii:below(1)): enum(j)")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "bijective?")
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           +)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "injective?")
                                                                                                            (("1"
                                                                                                              (skosimp*)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "surjective?")
                                                                                                            (("2"
                                                                                                              (skosimp*)
                                                                                                              (("2"
                                                                                                                (typepred
                                                                                                                 "y!1")
                                                                                                                (("2"
                                                                                                                  (case
                                                                                                                   "y!1 = enum(j)")
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     +
                                                                                                                     "0")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (hide
                                                                                                                     2)
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       (-6
                                                                                                                        -7))
                                                                                                                      (("2"
                                                                                                                        (copy
                                                                                                                         "rbj")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "y!1"
                                                                                                                           "0")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (case
                                                                                                                               "NOT (x<Gseq(j) AND Gseq(1+j)<=y)")
                                                                                                                              (("1"
                                                                                                                                (split
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (copy
                                                                                                                                   "rij")
                                                                                                                                  (("1"
                                                                                                                                    (hide
                                                                                                                                     -2)
                                                                                                                                    (("1"
                                                                                                                                      (inst-cp
                                                                                                                                       -
                                                                                                                                       "0"
                                                                                                                                       "j")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "Gseq"
                                                                                                                                         1)
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "0"
                                                                                                                                           "j-1")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (ground)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (expand
                                                                                                                                   "Gseq"
                                                                                                                                   1)
                                                                                                                                  (("2"
                                                                                                                                    (copy
                                                                                                                                     "rij")
                                                                                                                                    (("2"
                                                                                                                                      (inst-cp
                                                                                                                                       -
                                                                                                                                       "j"
                                                                                                                                       "K-1")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "1+j"
                                                                                                                                         "K-1")
                                                                                                                                        (("2"
                                                                                                                                          (ground)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (skosimp*)
                                                                                                                                    (("2"
                                                                                                                                      (case
                                                                                                                                       "i!2 <= j")
                                                                                                                                      (("1"
                                                                                                                                        (copy
                                                                                                                                         "rij")
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "i!2"
                                                                                                                                           "j")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (copy
                                                                                                                                               "rij")
                                                                                                                                              (("1"
                                                                                                                                                (inst-cp
                                                                                                                                                 -
                                                                                                                                                 "i!2"
                                                                                                                                                 "j-1")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "Gseq")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "Gseq"
                                                                                                                                           -5)
                                                                                                                                          (("2"
                                                                                                                                            (copy
                                                                                                                                             "rij")
                                                                                                                                            (("2"
                                                                                                                                              (inst-cp
                                                                                                                                               -
                                                                                                                                               "j"
                                                                                                                                               "i!2")
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -
                                                                                                                                                 "j+1"
                                                                                                                                                 "i!2")
                                                                                                                                                (("2"
                                                                                                                                                  (ground)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (ground)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("3"
                                                                                                        (assert)
                                                                                                        (("3"
                                                                                                          (skosimp*)
                                                                                                          (("3"
                                                                                                            (copy
                                                                                                             "rij")
                                                                                                            (("3"
                                                                                                              (inst-cp
                                                                                                               -
                                                                                                               "j-1"
                                                                                                               "j")
                                                                                                              (("3"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "j"
                                                                                                                 "j+1")
                                                                                                                (("3"
                                                                                                                  (assert)
                                                                                                                  (("3"
                                                                                                                    (expand
                                                                                                                     "Gseq"
                                                                                                                     1)
                                                                                                                    (("3"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (copy
                                                                         "rij")
                                                                        (("2"
                                                                          (inst-cp
                                                                           -
                                                                           "j-1"
                                                                           "j")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "j"
                                                                             "j+1")
                                                                            (("2"
                                                                              (expand
                                                                               "Gseq"
                                                                               1)
                                                                              (("2"
                                                                                (ground)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("3"
                                                                        (copy
                                                                         "rij")
                                                                        (("3"
                                                                          (inst
                                                                           -
                                                                           "j-1"
                                                                           "j")
                                                                          (("3"
                                                                            (expand
                                                                             "Gseq"
                                                                             1)
                                                                            (("3"
                                                                              (ground)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("4"
                                                                        (copy
                                                                         "rij")
                                                                        (("4"
                                                                          (inst
                                                                           -
                                                                           "j"
                                                                           "j+1")
                                                                          (("4"
                                                                            (expand
                                                                             "Gseq"
                                                                             1)
                                                                            (("4"
                                                                              (ground)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("5"
                                                                        (skeep)
                                                                        (("5"
                                                                          (case
                                                                           "NOT (x<Gseq(j) AND Gseq(1+j)<=y)")
                                                                          (("1"
                                                                            (copy
                                                                             "rrj")
                                                                            (("1"
                                                                              (inst-cp
                                                                               -
                                                                               "j-1")
                                                                              (("1"
                                                                                (inst-cp
                                                                                 -
                                                                                 "j")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "j+1")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "Gseq"
                                                                                     1)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (copy
                                                                                             "rij")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "0"
                                                                                               "j")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (copy
                                                                                 "rbj")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "c"
                                                                                   "i")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (skosimp*)
                                                                                      (("2"
                                                                                        (case
                                                                                         "i!1 < j")
                                                                                        (("1"
                                                                                          (copy
                                                                                           "rij")
                                                                                          (("1"
                                                                                            (inst-cp
                                                                                             -
                                                                                             "i!1"
                                                                                             "j-1")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "i!1"
                                                                                               "j")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "Gseq")
                                                                                                (("1"
                                                                                                  (ground)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (copy
                                                                                           "rij")
                                                                                          (("2"
                                                                                            (inst-cp
                                                                                             -
                                                                                             "j"
                                                                                             "i!1")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "j+1"
                                                                                               "i!1")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "Gseq")
                                                                                                (("2"
                                                                                                  (ground)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("6"
                                                                        (skosimp*)
                                                                        (("6"
                                                                          (copy
                                                                           "mylem")
                                                                          (("6"
                                                                            (inst
                                                                             -
                                                                             "c!1")
                                                                            (("6"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("7"
                                                                        (lemma
                                                                         "sturm_seq_last_nonzero")
                                                                        (("7"
                                                                          (inst
                                                                           -
                                                                           "m"
                                                                           "n"
                                                                           "p")
                                                                          (("7"
                                                                            (assert)
                                                                            (("7"
                                                                              (reveal
                                                                               "mp")
                                                                              (("7"
                                                                                (assert)
                                                                                (("7"
                                                                                  (replace
                                                                                   "mylem")
                                                                                  (("7"
                                                                                    (inst
                                                                                     -
                                                                                     "enum(j)")
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand "FFF" 3)
                                                      (("2"
                                                        (invoke
                                                         (name "Nsteps" "%1")
                                                         (! 3 1 1))
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (lemma
                                                             "sturm_lem_edge_root")
                                                            (("2"
                                                              (inst
                                                               -
                                                               "m"
                                                               "m"
                                                               "n"
                                                               "p"
                                                               "Gseq(j)"
                                                               "y")
                                                              (("2"
                                                                (case
                                                                 "NOT Gseq(1+j) = y")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "Gseq"
                                                                     1)
                                                                    (("1"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (case
                                                                     "Gseq(j) < Gseq(1+j)")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (replace
                                                                         -2)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (case
                                                                             "(FORALL (c: real, i: nat):
                                  i <= m AND
                                   Gseq(j) <= c AND c <= y AND polynomial(p(i), n(i))(c) = 0
                                   IMPLIES c = y)")
                                                                            (("1"
                                                                              (label
                                                                               "DB"
                                                                               -1)
                                                                              (("1"
                                                                                (replace
                                                                                 "DB")
                                                                                (("1"
                                                                                  (hide
                                                                                   "DB")
                                                                                  (("1"
                                                                                    (split
                                                                                     -)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (hide
                                                                                         -1)
                                                                                        (("1"
                                                                                          (case
                                                                                           "NOT Nsteps >= 0")
                                                                                          (("1"
                                                                                            (hide
                                                                                             4)
                                                                                            (("1"
                                                                                              (lift-if)
                                                                                              (("1"
                                                                                                (ground)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (case
                                                                                               "polynomial(p(0),n(0))(y) /= 0")
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "LAMBDA (ii:below(0)): 0")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "bijective?")
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "injective?")
                                                                                                        (("1"
                                                                                                          (skosimp*)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (expand
                                                                                                         "surjective?")
                                                                                                        (("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (hide
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (typepred
                                                                                                               "y!1")
                                                                                                              (("2"
                                                                                                                (reveal
                                                                                                                 "DB")
                                                                                                                (("2"
                                                                                                                  (copy
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (hide
                                                                                                                     "DB")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "y!1"
                                                                                                                       "0")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (skosimp*)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (skosimp*)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     +
                                                                                                     "LAMBDA (ii:below(1)): y")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "bijective?")
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         +)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "injective?")
                                                                                                          (("1"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (expand
                                                                                                           "surjective?")
                                                                                                          (("2"
                                                                                                            (skosimp*)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               +
                                                                                                               "0")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (typepred
                                                                                                                   "y!1")
                                                                                                                  (("2"
                                                                                                                    (reveal
                                                                                                                     "DB")
                                                                                                                    (("2"
                                                                                                                      (copy
                                                                                                                       "DB")
                                                                                                                      (("2"
                                                                                                                        (hide
                                                                                                                         "DB")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "y!1"
                                                                                                                           "0")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (ground)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide
                                                                                       4)
                                                                                      (("2"
                                                                                        (skosimp*)
                                                                                        (("2"
                                                                                          (inst
                                                                                           "mylem"
                                                                                           "c!1")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("3"
                                                                                      (hide
                                                                                       4)
                                                                                      (("3"
                                                                                        (lemma
                                                                                         "sturm_seq_last_nonzero")
                                                                                        (("3"
                                                                                          (inst?)
                                                                                          (("3"
                                                                                            (assert)
                                                                                            (("3"
                                                                                              (reveal
                                                                                               "mp")
                                                                                              (("3"
                                                                                                (assert)
                                                                                                (("3"
                                                                                                  (replace
                                                                                                   "mylem")
                                                                                                  (("3"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "y")
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide
                                                                               4)
                                                                              (("2"
                                                                                (hide
                                                                                 -3)
                                                                                (("2"
                                                                                  (case
                                                                                   "NOT x<Gseq(j)")
                                                                                  (("1"
                                                                                    (copy
                                                                                     "rij")
                                                                                    (("1"
                                                                                      (inst-cp
                                                                                       -
                                                                                       "0"
                                                                                       "j")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "Gseq"
                                                                                         1)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "0"
                                                                                           "j-1")
                                                                                          (("1"
                                                                                            (ground)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (skeep)
                                                                                    (("2"
                                                                                      (copy
                                                                                       "rbj")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "c"
                                                                                         "i")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (skosimp*)
                                                                                            (("2"
                                                                                              (replace
                                                                                               -1
                                                                                               +)
                                                                                              (("2"
                                                                                                (case
                                                                                                 "i!1 < j")
                                                                                                (("1"
                                                                                                  (copy
                                                                                                   "rij")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "Gseq"
                                                                                                     -6)
                                                                                                    (("1"
                                                                                                      (inst-cp
                                                                                                       -
                                                                                                       "i!1"
                                                                                                       "j")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "i!1"
                                                                                                         "j-1")
                                                                                                        (("1"
                                                                                                          (ground)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide 4)
                                                                      (("2"
                                                                        (hide
                                                                         (-2
                                                                          -3))
                                                                        (("2"
                                                                          (expand
                                                                           "Gseq"
                                                                           1)
                                                                          (("2"
                                                                            (copy
                                                                             "rij")
                                                                            (("2"
                                                                              (inst-cp
                                                                               -
                                                                               "j-1"
                                                                               "K-1")
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "j"
                                                                                 "K-1")
                                                                                (("2"
                                                                                  (ground)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (skosimp*)
                                            (("3" (assert) nil nil))
                                            nil)
                                           ("4"
                                            (skosimp*)
                                            (("4" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide -)
                                          (("2"
                                            (hide 2)
                                            (("2"
                                              (skeep)
                                              (("2"
                                                (expand "FFF")
                                                (("2"
                                                  (flatten)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (invoke
                                                       (name "Nsteps1" "%1")
                                                       (! -3 1))
                                                      (("2"
                                                        (replace -1)
                                                        (("2"
                                                          (invoke
                                                           (name
                                                            "Nsteps2"
                                                            "%1")
                                                           (! -6 1))
                                                          (("2"
                                                            (replace -1)
                                                            (("2"
                                                              (skosimp*)
                                                              (("2"
                                                                (name
                                                                 "cable"
                                                                 "LAMBDA (ii:below(Nsteps1+Nsteps2)): IF ii<Nsteps1 THEN bij!1(ii) ELSE bij!2(ii-Nsteps1) ENDIF")
                                                                (("1"
                                                                  (inst
                                                                   +
                                                                   "cable")
                                                                  (("1"
                                                                    (expand
                                                                     "bijective?")
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (split)
                                                                        (("1"
                                                                          (expand
                                                                           "injective?")
                                                                          (("1"
                                                                            (skeep)
                                                                            (("1"
                                                                              (expand
                                                                               "cable"
                                                                               -1)
                                                                              (("1"
                                                                                (lift-if)
                                                                                (("1"
                                                                                  (lift-if)
                                                                                  (("1"
                                                                                    (lift-if)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (ground)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "x1!1"
                                                                                           "x2!1")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide
                                                                                           -8)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "x1!1-Nsteps1"
                                                                                             "x2!1-Nsteps1")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "surjective?"
                                                                           +)
                                                                          (("2"
                                                                            (skosimp*)
                                                                            (("2"
                                                                              (case
                                                                               "y!1 <=x2")
                                                                              (("1"
                                                                                (expand
                                                                                 "surjective?"
                                                                                 -9)
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "y!1")
                                                                                  (("1"
                                                                                    (skosimp*)
                                                                                    (("1"
                                                                                      (inst
                                                                                       +
                                                                                       "x!1")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "cable"
                                                                                         +)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "surjective?"
                                                                                 -11)
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "y!1")
                                                                                  (("1"
                                                                                    (skosimp*)
                                                                                    (("1"
                                                                                      (inst
                                                                                       +
                                                                                       "Nsteps1+x!1")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "cable"
                                                                                         +)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (split)
                                                                      (("1"
                                                                        (skosimp*)
                                                                        (("1"
                                                                          (ground)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (expand
                                                                         "cable"
                                                                         +)
                                                                        (("2"
                                                                          (skosimp*)
                                                                          (("2"
                                                                            (lift-if)
                                                                            (("2"
                                                                              (ground)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide 2)
                                                                  (("2"
                                                                    (skosimp*)
                                                                    (("2"
                                                                      (ground)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (hide 2)
                                                                  (("3"
                                                                    (skosimp*)
                                                                    (("3"
                                                                      (ground)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (skeep)
                                        (("2"
                                          (inst-cp - "0" "j")
                                          (("2"
                                            (inst - "j" "K-1")
                                            (("2" (ground) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (skosimp*) (("2" (ground) nil nil))
                                      nil)
                                     ("3" (skosimp*) (("3" (ground) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (sturm_square_free-2 nil 3588583950
   ("" (skeep)
    (("" (label "mylem" -4)
      (("" (label "mp" -1)
        (("" (hide "mp")
          ((""
            (name "FFF" "LAMBDA (xx,yy:real): (LET nsc =
                                                      LAMBDA (xyz: real):
                                                        number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(xyz),
                                                                            m),
                                                    Nroots = nsc(xx)`num - nsc(yy)`num
                                                  IN
                                                  Nroots >= 0 AND
                                                   (EXISTS (bij:
                                                              [below(Nroots) ->
                                                                 {xr: real |
                                                                          xx < xr AND
                                                                           xr <= yy AND
                                                                            polynomial(p(0), n(0))(xr) = 0}]):
                                                      bijective?(bij)))")
            (("" (label "FFFname" -1)
              (("" (hide "FFFname")
                (("" (case "FFF(x,y)")
                  (("1" (expand "FFF") (("1" (assert) nil)))
                   ("2" (hide 2)
                    (("2" (lemma "roots_between_enum")
                      (("2" (inst?)
                        (("2" (inst - "x" "y")
                          (("2" (assert)
                            (("2" (skeep -1)
                              (("2" (label "rij" -1)
                                (("2" (label "rbj" -4)
                                  (("2"
                                    (name "Gseq"
                                          "LAMBDA (j:upto(K)): IF j = 0 THEN x ELSIF j = K THEN y ELSE (enum(j-1)+enum(j))/2 ENDIF")
                                    (("1"
                                      (case
                                       "FORALL (j:below(K)): x <= enum(j) AND enum(j)<=y")
                                      (("1"
                                        (case
                                         "FORALL (x1,x2,x3:real): x1<x2 AND x2<x3 AND FFF(x1,x2) AND FFF(x2,x3) IMPLIES FFF(x1,x3)")
                                        (("1"
                                          (case
                                           "FORALL (j:nat):j<K IMPLIES FFF(Gseq(j),Gseq(j+1))")
                                          (("1"
                                            (case
                                             "FORALL (j:nat):j<K IMPLIES FFF(x,Gseq(j+1))")
                                            (("1"
                                              (inst - "K-1")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand "Gseq" -1)
                                                  (("1" (propax) nil)))))))
                                             ("2"
                                              (induct "j")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (inst - "0")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand "Gseq" -1 1)
                                                      (("1"
                                                        (propax)
                                                        nil)))))))))
                                               ("2"
                                                (skosimp*)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (inst - "1+j!1")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (inst
                                                         -
                                                         "x"
                                                         "Gseq(1+j!1)"
                                                         "Gseq(2+j!1)")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (split 2)
                                                            (("1"
                                                              (expand
                                                               "Gseq"
                                                               1)
                                                              (("1"
                                                                (inst-cp
                                                                 -
                                                                 "0"
                                                                 "1+j!1")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "0"
                                                                   "j!1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (ground)
                                                                      nil)))))))))
                                                             ("2"
                                                              (expand
                                                               "Gseq"
                                                               1)
                                                              (("2"
                                                                (lift-if)
                                                                (("2"
                                                                  (ground)
                                                                  (("1"
                                                                    (inst-cp
                                                                     -
                                                                     "j!1"
                                                                     "K-1")
                                                                    (("1"
                                                                      (inst-cp
                                                                       -
                                                                       "1+j!1"
                                                                       "K-1")
                                                                      (("1"
                                                                        (ground)
                                                                        nil)))))
                                                                   ("2"
                                                                    (inst-cp
                                                                     -
                                                                     "j!1"
                                                                     "1+j!1")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "1+j!1"
                                                                       "2+j!1")
                                                                      (("2"
                                                                        (ground)
                                                                        nil)))))))))))))))))))))))))
                                               ("3"
                                                (skosimp*)
                                                (("3" (assert) nil)))))
                                             ("3"
                                              (skosimp*)
                                              (("3" (assert) nil)))))
                                           ("2"
                                            (hide -1)
                                            (("2"
                                              (skeep)
                                              (("2"
                                                (case "j = 0")
                                                (("1"
                                                  (hide 2)
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand "Gseq" 1 1)
                                                        (("1"
                                                          (expand
                                                           "FFF"
                                                           1
                                                           :assert?
                                                           none)
                                                          (("1"
                                                            (skoletin 1)
                                                            (("1"
                                                              (skoletin 1)
                                                              (("1"
                                                                (case
                                                                 "Nroots = 0")
                                                                (("1"
                                                                  (case
                                                                   "NOT EXISTS (bb:real): x < bb AND bb <= Gseq(1) AND polynomial(p(0),n(0))(bb) = 0")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (inst
                                                                       2
                                                                       "LAMBDA (ii:below(Nroots)): 0")
                                                                      (("1"
                                                                        (expand
                                                                         "bijective?")
                                                                        (("1"
                                                                          (split
                                                                           +)
                                                                          (("1"
                                                                            (expand
                                                                             "injective?")
                                                                            (("1"
                                                                              (skosimp*)
                                                                              nil)))
                                                                           ("2"
                                                                            (expand
                                                                             "surjective?")
                                                                            (("2"
                                                                              (skosimp*)
                                                                              (("2"
                                                                                (inst
                                                                                 2
                                                                                 "y!1")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil)))))))))))
                                                                       ("2"
                                                                        (hide
                                                                         2)
                                                                        (("2"
                                                                          (skosimp*)
                                                                          nil)))))))
                                                                   ("2"
                                                                    (skeep -1)
                                                                    (("2"
                                                                      (hide +)
                                                                      (("2"
                                                                        (expand
                                                                         "Gseq"
                                                                         -2)
                                                                        (("2"
                                                                          (inst-cp
                                                                           "rbj"
                                                                           "bb"
                                                                           "0")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (copy
                                                                               "rij")
                                                                              (("2"
                                                                                (case
                                                                                 "bb<=y")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (skosimp*)
                                                                                    (("1"
                                                                                      (inst-cp
                                                                                       -
                                                                                       "0"
                                                                                       "i!1")
                                                                                      (("1"
                                                                                        (inst-cp
                                                                                         -
                                                                                         "1"
                                                                                         "i!1")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil)))))))))
                                                                                 ("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (inst-cp
                                                                                     -
                                                                                     "0"
                                                                                     "K-1")
                                                                                    (("2"
                                                                                      (split
                                                                                       -)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "1"
                                                                                         "K-1")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil)))
                                                                                       ("2"
                                                                                        (assert)
                                                                                        nil)))))))))))))))))))))))
                                                                 ("2"
                                                                  (hide 2)
                                                                  (("2"
                                                                    (lemma
                                                                     "sturm_lem_no_roots_full")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "m"
                                                                       "n"
                                                                       "p"
                                                                       "x"
                                                                       "Gseq(1)")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (reveal
                                                                           "mp")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (copy
                                                                               "rij")
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "0"
                                                                                 "1")
                                                                                (("2"
                                                                                  (case
                                                                                   "NOT x<Gseq(1)")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "Gseq"
                                                                                     1)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil)))
                                                                                   ("2"
                                                                                    (hide
                                                                                     -2)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (split
                                                                                         -3)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "sturm_sig"
                                                                                           -1)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -5)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil)))))
                                                                                         ("2"
                                                                                          (skeep)
                                                                                          (("2"
                                                                                            (copy
                                                                                             "rbj")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "c"
                                                                                               "i")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "1")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "NOT c<=y")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "Gseq"
                                                                                                             -4)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil)))
                                                                                                           ("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (skosimp*)
                                                                                                              (("2"
                                                                                                                (copy
                                                                                                                 "rij")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "1"
                                                                                                                   "i!1")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (case
                                                                                                                       "NOT 1 = i!1")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "Gseq"
                                                                                                                           -6)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil)))))
                                                                                                                       ("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "Gseq"
                                                                                                                           -7)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil)))))))))))))))))))))))))))))))))))
                                                                                         ("3"
                                                                                          (propax)
                                                                                          nil)))))))))))))))))))))))))))))))))))))))))
                                                 ("2"
                                                  (assert)
                                                  (("2"
                                                    (case "j < K-1")
                                                    (("1"
                                                      (case
                                                       "NOT FORALL (yy:real): Gseq(j) < yy AND yy <= Gseq(1 + j) AND polynomial(p(0), n(0))(yy) = 0 IMPLIES yy = enum(j)")
                                                      (("1"
                                                        (skeep)
                                                        (("1"
                                                          (copy "rbj")
                                                          (("1"
                                                            (inst - "yy" "0")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (case
                                                                 "NOT (x<Gseq(j) AND Gseq(1+j)<=y)")
                                                                (("1"
                                                                  (hide -1)
                                                                  (("1"
                                                                    (inst-cp
                                                                     -
                                                                     "j")
                                                                    (("1"
                                                                      (inst-cp
                                                                       -
                                                                       "j-1")
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "j+1")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (expand
                                                                               "Gseq"
                                                                               1)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (copy
                                                                                   "rij")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "0"
                                                                                     "j")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil)))))))))))))))))))))
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (skosimp*)
                                                                      (("2"
                                                                        (case
                                                                         "i!1 < j")
                                                                        (("1"
                                                                          (copy
                                                                           "rij")
                                                                          (("1"
                                                                            (inst-cp
                                                                             -
                                                                             "i!1"
                                                                             "j-1")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "i!1"
                                                                               "j")
                                                                              (("1"
                                                                                (expand
                                                                                 "Gseq")
                                                                                (("1"
                                                                                  (ground)
                                                                                  nil)))))))))
                                                                         ("2"
                                                                          (copy
                                                                           "rij")
                                                                          (("2"
                                                                            (inst-cp
                                                                             -
                                                                             "j"
                                                                             "i!1")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "j+1"
                                                                               "i!1")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (expand
                                                                                   "Gseq")
                                                                                  (("2"
                                                                                    (ground)
                                                                                    nil)))))))))))))))))))))))))))))
                                                       ("2"
                                                        (label "allzeros" -1)
                                                        (("2"
                                                          (hide "allzeros")
                                                          (("2"
                                                            (hide -2)
                                                            (("2"
                                                              (label "rrj" -2)
                                                              (("2"
                                                                (lemma
                                                                 "sturm_lem_one_root")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "enum(j)"
                                                                   "m"
                                                                   "m"
                                                                   "n"
                                                                   "p"
                                                                   "Gseq(j)"
                                                                   "Gseq(1+j)")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (split
                                                                       -)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (hide
                                                                           -1)
                                                                          (("1"
                                                                            (expand
                                                                             "FFF"
                                                                             2)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (invoke
                                                                                 (name
                                                                                  "Nsteps"
                                                                                  "%1")
                                                                                 (!
                                                                                  2
                                                                                  1
                                                                                  1))
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (case
                                                                                     "NOT Nsteps>=0")
                                                                                    (("1"
                                                                                      (hide
                                                                                       3)
                                                                                      (("1"
                                                                                        (lift-if)
                                                                                        (("1"
                                                                                          (ground)
                                                                                          nil)))))
                                                                                     ("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (reveal
                                                                                         "allzeros")
                                                                                        (("2"
                                                                                          (copy
                                                                                           "allzeros")
                                                                                          (("2"
                                                                                            (hide
                                                                                             "allzeros")
                                                                                            (("2"
                                                                                              (label
                                                                                               "eppypen"
                                                                                               -1)
                                                                                              (("2"
                                                                                                (hide
                                                                                                 "eppypen")
                                                                                                (("2"
                                                                                                  (case
                                                                                                   "NOT polynomial(p(0),n(0))(enum(j)) = 0")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     +
                                                                                                     "LAMBDA (ii:below(0)): 0")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "bijective?")
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         +)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "injective?")
                                                                                                          (("1"
                                                                                                            (skosimp*)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil)))))
                                                                                                         ("2"
                                                                                                          (expand
                                                                                                           "surjective?")
                                                                                                          (("2"
                                                                                                            (skosimp*)
                                                                                                            (("2"
                                                                                                              (hide
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (typepred
                                                                                                                 "y!1")
                                                                                                                (("2"
                                                                                                                  (reveal
                                                                                                                   "eppypen")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "y!1")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil)))))))))))))))))
                                                                                                     ("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil)))
                                                                                                     ("3"
                                                                                                      (skosimp*)
                                                                                                      nil)))
                                                                                                   ("2"
                                                                                                    (label
                                                                                                     "enumjzero"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       +
                                                                                                       "LAMBDA (ii:below(1)): enum(j)")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "bijective?")
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           +)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "injective?")
                                                                                                            (("1"
                                                                                                              (skosimp*)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil)))))
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "surjective?")
                                                                                                            (("2"
                                                                                                              (skosimp*)
                                                                                                              (("2"
                                                                                                                (typepred
                                                                                                                 "y!1")
                                                                                                                (("2"
                                                                                                                  (case
                                                                                                                   "y!1 = enum(j)")
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     +
                                                                                                                     "0")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (assert)
                                                                                                                      nil)))
                                                                                                                   ("2"
                                                                                                                    (hide
                                                                                                                     2)
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       (-6
                                                                                                                        -7))
                                                                                                                      (("2"
                                                                                                                        (copy
                                                                                                                         "rbj")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "y!1"
                                                                                                                           "0")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (case
                                                                                                                               "NOT (x<Gseq(j) AND Gseq(1+j)<=y)")
                                                                                                                              (("1"
                                                                                                                                (split
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (copy
                                                                                                                                   "rij")
                                                                                                                                  (("1"
                                                                                                                                    (hide
                                                                                                                                     -2)
                                                                                                                                    (("1"
                                                                                                                                      (inst-cp
                                                                                                                                       -
                                                                                                                                       "0"
                                                                                                                                       "j")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "Gseq"
                                                                                                                                         1)
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "0"
                                                                                                                                           "j-1")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (ground)
                                                                                                                                              nil)))))))))))))
                                                                                                                                 ("2"
                                                                                                                                  (expand
                                                                                                                                   "Gseq"
                                                                                                                                   1)
                                                                                                                                  (("2"
                                                                                                                                    (copy
                                                                                                                                     "rij")
                                                                                                                                    (("2"
                                                                                                                                      (inst-cp
                                                                                                                                       -
                                                                                                                                       "j"
                                                                                                                                       "K-1")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "1+j"
                                                                                                                                         "K-1")
                                                                                                                                        (("2"
                                                                                                                                          (ground)
                                                                                                                                          nil)))))))))))
                                                                                                                               ("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (skosimp*)
                                                                                                                                    (("2"
                                                                                                                                      (case
                                                                                                                                       "i!2 <= j")
                                                                                                                                      (("1"
                                                                                                                                        (copy
                                                                                                                                         "rij")
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "i!2"
                                                                                                                                           "j")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (copy
                                                                                                                                               "rij")
                                                                                                                                              (("1"
                                                                                                                                                (inst-cp
                                                                                                                                                 -
                                                                                                                                                 "i!2"
                                                                                                                                                 "j-1")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "Gseq")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil)))))))))))))))
                                                                                                                                       ("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "Gseq"
                                                                                                                                           -5)
                                                                                                                                          (("2"
                                                                                                                                            (copy
                                                                                                                                             "rij")
                                                                                                                                            (("2"
                                                                                                                                              (inst-cp
                                                                                                                                               -
                                                                                                                                               "j"
                                                                                                                                               "i!2")
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -
                                                                                                                                                 "j+1"
                                                                                                                                                 "i!2")
                                                                                                                                                (("2"
                                                                                                                                                  (ground)
                                                                                                                                                  nil)))))))))))))))))))))))))))))))))))))))))))
                                                                                                       ("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (ground)
                                                                                                              nil)))))))
                                                                                                       ("3"
                                                                                                        (assert)
                                                                                                        (("3"
                                                                                                          (assert)
                                                                                                          (("3"
                                                                                                            (skosimp*)
                                                                                                            (("3"
                                                                                                              (copy
                                                                                                               "rij")
                                                                                                              (("3"
                                                                                                                (inst-cp
                                                                                                                 -
                                                                                                                 "j-1"
                                                                                                                 "j")
                                                                                                                (("3"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "j"
                                                                                                                   "j+1")
                                                                                                                  (("3"
                                                                                                                    (assert)
                                                                                                                    (("3"
                                                                                                                      (expand
                                                                                                                       "Gseq"
                                                                                                                       1)
                                                                                                                      (("3"
                                                                                                                        (propax)
                                                                                                                        nil)))))))))))))))))))))))))))))))))))))))))))))))))
                                                                       ("2"
                                                                        (copy
                                                                         "rij")
                                                                        (("2"
                                                                          (inst-cp
                                                                           -
                                                                           "j-1"
                                                                           "j")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "j"
                                                                             "j+1")
                                                                            (("2"
                                                                              (expand
                                                                               "Gseq"
                                                                               1)
                                                                              (("2"
                                                                                (ground)
                                                                                nil)))))))))
                                                                       ("3"
                                                                        (copy
                                                                         "rij")
                                                                        (("3"
                                                                          (inst
                                                                           -
                                                                           "j-1"
                                                                           "j")
                                                                          (("3"
                                                                            (expand
                                                                             "Gseq"
                                                                             1)
                                                                            (("3"
                                                                              (ground)
                                                                              nil)))))))
                                                                       ("4"
                                                                        (copy
                                                                         "rij")
                                                                        (("4"
                                                                          (inst
                                                                           -
                                                                           "j"
                                                                           "j+1")
                                                                          (("4"
                                                                            (expand
                                                                             "Gseq"
                                                                             1)
                                                                            (("4"
                                                                              (ground)
                                                                              nil)))))))
                                                                       ("5"
                                                                        (skeep)
                                                                        (("5"
                                                                          (case
                                                                           "NOT (x<Gseq(j) AND Gseq(1+j)<=y)")
                                                                          (("1"
                                                                            (copy
                                                                             "rrj")
                                                                            (("1"
                                                                              (inst-cp
                                                                               -
                                                                               "j-1")
                                                                              (("1"
                                                                                (inst-cp
                                                                                 -
                                                                                 "j")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "j+1")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "Gseq"
                                                                                     1)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (copy
                                                                                             "rij")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "0"
                                                                                               "j")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil)))))))))))))))))))))
                                                                           ("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (copy
                                                                                 "rbj")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "c"
                                                                                   "i")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (skosimp*)
                                                                                      (("2"
                                                                                        (case
                                                                                         "i!1 < j")
                                                                                        (("1"
                                                                                          (copy
                                                                                           "rij")
                                                                                          (("1"
                                                                                            (inst-cp
                                                                                             -
                                                                                             "i!1"
                                                                                             "j-1")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "i!1"
                                                                                               "j")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "Gseq")
                                                                                                (("1"
                                                                                                  (ground)
                                                                                                  nil)))))))))
                                                                                         ("2"
                                                                                          (copy
                                                                                           "rij")
                                                                                          (("2"
                                                                                            (inst-cp
                                                                                             -
                                                                                             "j"
                                                                                             "i!1")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "j+1"
                                                                                               "i!1")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "Gseq")
                                                                                                (("2"
                                                                                                  (ground)
                                                                                                  nil)))))))))))))))))))))))))))
                                                                       ("6"
                                                                        (skosimp*)
                                                                        (("6"
                                                                          (copy
                                                                           "mylem")
                                                                          (("6"
                                                                            (inst
                                                                             -
                                                                             "c!1")
                                                                            (("6"
                                                                              (assert)
                                                                              nil)))))))
                                                                       ("7"
                                                                        (lemma
                                                                         "sturm_seq_last_nonzero")
                                                                        (("7"
                                                                          (inst
                                                                           -
                                                                           "m"
                                                                           "n"
                                                                           "p")
                                                                          (("7"
                                                                            (assert)
                                                                            (("7"
                                                                              (reveal
                                                                               "mp")
                                                                              (("7"
                                                                                (assert)
                                                                                (("7"
                                                                                  (replace
                                                                                   "mylem")
                                                                                  (("7"
                                                                                    (inst
                                                                                     -
                                                                                     "enum(j)")
                                                                                    nil)))))))))))))))))))))))))))))))
                                                     ("2"
                                                      (expand "FFF" 3)
                                                      (("2"
                                                        (invoke
                                                         (name "Nsteps" "%1")
                                                         (! 3 1 1))
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (lemma
                                                             "sturm_lem_edge_root")
                                                            (("2"
                                                              (inst
                                                               -
                                                               "m"
                                                               "m"
                                                               "n"
                                                               "p"
                                                               "Gseq(j)"
                                                               "y")
                                                              (("2"
                                                                (case
                                                                 "NOT Gseq(1+j) = y")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "Gseq"
                                                                     1)
                                                                    (("1"
                                                                      (propax)
                                                                      nil)))))
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (case
                                                                     "Gseq(j) < Gseq(1+j)")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (replace
                                                                         -2)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (case
                                                                             "(FORALL (c: real, i: nat):
                                  i <= m AND
                                   Gseq(j) <= c AND c <= y AND polynomial(p(i), n(i))(c) = 0
                                   IMPLIES c = y)")
                                                                            (("1"
                                                                              (label
                                                                               "DB"
                                                                               -1)
                                                                              (("1"
                                                                                (replace
                                                                                 "DB")
                                                                                (("1"
                                                                                  (hide
                                                                                   "DB")
                                                                                  (("1"
                                                                                    (split
                                                                                     -)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (hide
                                                                                         -1)
                                                                                        (("1"
                                                                                          (case
                                                                                           "NOT Nsteps >= 0")
                                                                                          (("1"
                                                                                            (hide
                                                                                             4)
                                                                                            (("1"
                                                                                              (lift-if)
                                                                                              (("1"
                                                                                                (ground)
                                                                                                nil)))))
                                                                                           ("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (case
                                                                                               "polynomial(p(0),n(0))(y) /= 0")
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "LAMBDA (ii:below(0)): 0")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "bijective?")
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "injective?")
                                                                                                        (("1"
                                                                                                          (skosimp*)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil)))))
                                                                                                       ("2"
                                                                                                        (expand
                                                                                                         "surjective?")
                                                                                                        (("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (hide
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (typepred
                                                                                                               "y!1")
                                                                                                              (("2"
                                                                                                                (reveal
                                                                                                                 "DB")
                                                                                                                (("2"
                                                                                                                  (copy
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (hide
                                                                                                                     "DB")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "y!1"
                                                                                                                       "0")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil)))))))))))))))))))))
                                                                                                   ("2"
                                                                                                    (skosimp*)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil)))
                                                                                                   ("3"
                                                                                                    (skosimp*)
                                                                                                    nil)))))
                                                                                               ("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     +
                                                                                                     "LAMBDA (ii:below(1)): y")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "bijective?")
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         +)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "injective?")
                                                                                                          (("1"
                                                                                                            (propax)
                                                                                                            nil)))
                                                                                                         ("2"
                                                                                                          (expand
                                                                                                           "surjective?")
                                                                                                          (("2"
                                                                                                            (skosimp*)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               +
                                                                                                               "0")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (typepred
                                                                                                                   "y!1")
                                                                                                                  (("2"
                                                                                                                    (reveal
                                                                                                                     "DB")
                                                                                                                    (("2"
                                                                                                                      (copy
                                                                                                                       "DB")
                                                                                                                      (("2"
                                                                                                                        (hide
                                                                                                                         "DB")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "y!1"
                                                                                                                           "0")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil)))))))))))))))))))))))
                                                                                                     ("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (ground)
                                                                                                        nil)))))))))))))))))))
                                                                                     ("2"
                                                                                      (hide
                                                                                       4)
                                                                                      (("2"
                                                                                        (skosimp*)
                                                                                        (("2"
                                                                                          (inst
                                                                                           "mylem"
                                                                                           "c!1")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil)))))))
                                                                                     ("3"
                                                                                      (hide
                                                                                       4)
                                                                                      (("3"
                                                                                        (lemma
                                                                                         "sturm_seq_last_nonzero")
                                                                                        (("3"
                                                                                          (inst?)
                                                                                          (("3"
                                                                                            (assert)
                                                                                            (("3"
                                                                                              (reveal
                                                                                               "mp")
                                                                                              (("3"
                                                                                                (assert)
                                                                                                (("3"
                                                                                                  (replace
                                                                                                   "mylem")
                                                                                                  (("3"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "y")
                                                                                                    nil)))))))))))))))))))))))
                                                                             ("2"
                                                                              (hide
                                                                               4)
                                                                              (("2"
                                                                                (hide
                                                                                 -3)
                                                                                (("2"
                                                                                  (case
                                                                                   "NOT x<Gseq(j)")
                                                                                  (("1"
                                                                                    (copy
                                                                                     "rij")
                                                                                    (("1"
                                                                                      (inst-cp
                                                                                       -
                                                                                       "0"
                                                                                       "j")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "Gseq"
                                                                                         1)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "0"
                                                                                           "j-1")
                                                                                          (("1"
                                                                                            (ground)
                                                                                            nil)))))))))
                                                                                   ("2"
                                                                                    (skeep)
                                                                                    (("2"
                                                                                      (copy
                                                                                       "rbj")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "c"
                                                                                         "i")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (skosimp*)
                                                                                            (("2"
                                                                                              (replace
                                                                                               -1
                                                                                               +)
                                                                                              (("2"
                                                                                                (case
                                                                                                 "i!1 < j")
                                                                                                (("1"
                                                                                                  (copy
                                                                                                   "rij")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "Gseq"
                                                                                                     -6)
                                                                                                    (("1"
                                                                                                      (inst-cp
                                                                                                       -
                                                                                                       "i!1"
                                                                                                       "j")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "i!1"
                                                                                                         "j-1")
                                                                                                        (("1"
                                                                                                          (ground)
                                                                                                          nil)))))))))
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  nil)))))))))))))))))))))))))))))
                                                                     ("2"
                                                                      (hide 4)
                                                                      (("2"
                                                                        (hide
                                                                         (-2
                                                                          -3))
                                                                        (("2"
                                                                          (expand
                                                                           "Gseq"
                                                                           1)
                                                                          (("2"
                                                                            (copy
                                                                             "rij")
                                                                            (("2"
                                                                              (inst-cp
                                                                               -
                                                                               "j-1"
                                                                               "K-1")
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "j"
                                                                                 "K-1")
                                                                                (("2"
                                                                                  (ground)
                                                                                  nil)))))))))))))))))))))))))))))))))))))))
                                           ("3"
                                            (skosimp*)
                                            (("3" (assert) nil)))
                                           ("4"
                                            (skosimp*)
                                            (("4" (assert) nil)))))
                                         ("2"
                                          (hide -)
                                          (("2"
                                            (hide 2)
                                            (("2"
                                              (skeep)
                                              (("2"
                                                (expand "FFF")
                                                (("2"
                                                  (flatten)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (invoke
                                                       (name "Nsteps1" "%1")
                                                       (! -3 1))
                                                      (("2"
                                                        (replace -1)
                                                        (("2"
                                                          (invoke
                                                           (name
                                                            "Nsteps2"
                                                            "%1")
                                                           (! -6 1))
                                                          (("2"
                                                            (replace -1)
                                                            (("2"
                                                              (skosimp*)
                                                              (("2"
                                                                (name
                                                                 "cable"
                                                                 "LAMBDA (ii:below(Nsteps1+Nsteps2)): IF ii<Nsteps1 THEN bij!1(ii) ELSE bij!2(ii-Nsteps1) ENDIF")
                                                                (("1"
                                                                  (inst
                                                                   +
                                                                   "cable")
                                                                  (("1"
                                                                    (expand
                                                                     "bijective?")
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (split)
                                                                        (("1"
                                                                          (expand
                                                                           "injective?")
                                                                          (("1"
                                                                            (skeep)
                                                                            (("1"
                                                                              (expand
                                                                               "cable"
                                                                               -1)
                                                                              (("1"
                                                                                (lift-if)
                                                                                (("1"
                                                                                  (lift-if)
                                                                                  (("1"
                                                                                    (lift-if)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (ground)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "x1!1"
                                                                                           "x2!1")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil)))
                                                                                         ("2"
                                                                                          (hide
                                                                                           -8)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "x1!1-Nsteps1"
                                                                                             "x2!1-Nsteps1")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil)))))))))))))))))))))
                                                                         ("2"
                                                                          (expand
                                                                           "surjective?"
                                                                           +)
                                                                          (("2"
                                                                            (skosimp*)
                                                                            (("2"
                                                                              (case
                                                                               "y!1 <=x2")
                                                                              (("1"
                                                                                (expand
                                                                                 "surjective?"
                                                                                 -9)
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "y!1")
                                                                                  (("1"
                                                                                    (skosimp*)
                                                                                    (("1"
                                                                                      (inst
                                                                                       +
                                                                                       "x!1")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "cable"
                                                                                         +)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil)))))))))))
                                                                               ("2"
                                                                                (expand
                                                                                 "surjective?"
                                                                                 -11)
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "y!1")
                                                                                  (("1"
                                                                                    (skosimp*)
                                                                                    (("1"
                                                                                      (inst
                                                                                       +
                                                                                       "Nsteps1+x!1")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "cable"
                                                                                         +)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil)))
                                                                                       ("2"
                                                                                        (assert)
                                                                                        nil)))))
                                                                                   ("2"
                                                                                    (assert)
                                                                                    nil)))))))))))))))))
                                                                   ("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (split)
                                                                      (("1"
                                                                        (skosimp*)
                                                                        (("1"
                                                                          (ground)
                                                                          nil)))
                                                                       ("2"
                                                                        (expand
                                                                         "cable"
                                                                         +)
                                                                        (("2"
                                                                          (skosimp*)
                                                                          (("2"
                                                                            (lift-if)
                                                                            (("2"
                                                                              (ground)
                                                                              nil)))))))))))))
                                                                 ("2"
                                                                  (hide 2)
                                                                  (("2"
                                                                    (skosimp*)
                                                                    (("2"
                                                                      (ground)
                                                                      nil)))))
                                                                 ("3"
                                                                  (hide 2)
                                                                  (("3"
                                                                    (skosimp*)
                                                                    (("3"
                                                                      (ground)
                                                                      nil)))))))))))))))))))))))))))))))
                                       ("2"
                                        (skeep)
                                        (("2"
                                          (inst-cp - "0" "j")
                                          (("2"
                                            (inst - "j" "K-1")
                                            (("2" (ground) nil)))))))))
                                     ("2" (skosimp*) (("2" (ground) nil)))
                                     ("3" (skosimp*)
                                      (("3"
                                        (ground)
                                        nil))))))))))))))))))))))))))))))))))))
    nil)
   ((real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (FFF skolem-const-decl "[[real, real] -> bool]" sturmsquarefree nil)
    (roots_between_enum formula-decl nil sturmsquarefree nil)
    (Nsteps1 skolem-const-decl "int" sturmsquarefree nil)
    (Nsteps2 skolem-const-decl "int" sturmsquarefree nil)
    (x1 skolem-const-decl "real" sturmsquarefree nil)
    (x3 skolem-const-decl "real" sturmsquarefree nil)
    (cable skolem-const-decl "[below(Nsteps1 + Nsteps2) -> real]"
     sturmsquarefree nil)
    (y!1 skolem-const-decl
     "{xr: real | x1 < xr AND xr <= x3 AND polynomial(p(0), n(0))(xr) = 0}"
     sturmsquarefree nil)
    (x2 skolem-const-decl "real" sturmsquarefree nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (x!1 skolem-const-decl
     "below(number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x2), m)`num -
       number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x3), m)`num)"
     sturmsquarefree nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (K skolem-const-decl "{K: nat | K >= 2}" sturmsquarefree nil)
    (pred type-eq-decl nil defined_types nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (Gseq skolem-const-decl "[upto(K) -> real]" sturmsquarefree nil)
    (sturm_lem_edge_root formula-decl nil sturmsquarefree nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (m skolem-const-decl "nat" sturmsquarefree nil)
    (j skolem-const-decl "nat" sturmsquarefree nil)
    (FALSE const-decl "bool" booleans nil)
    (enum skolem-const-decl "[below(K) -> real]" sturmsquarefree nil)
    (sturm_seq_last_nonzero formula-decl nil sturmsquarefree nil)
    (sturm_lem_one_root formula-decl nil sturmsquarefree nil)
    (even_plus_odd_is_odd application-judgement "odd_int" integers nil)
    (sturm_sig const-decl "nat" sturmsquarefree nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sturm_lem_no_roots_full formula-decl nil sturmsquarefree nil)
    (Nroots skolem-const-decl "int" sturmsquarefree nil)
    (x skolem-const-decl "real" sturmsquarefree nil)
    (p skolem-const-decl "[nat -> [nat -> real]]" sturmsquarefree nil)
    (n skolem-const-decl "[nat -> nat]" sturmsquarefree nil)
    (injective? const-decl "bool" functions nil)
    (surjective? const-decl "bool" functions nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (NSC type-eq-decl nil number_sign_changes nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (>= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil) (sequence type-eq-decl nil sequences nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (bijective? const-decl "bool" functions nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (number_sign_changes def-decl "NSC" number_sign_changes nil))
   nil)
  (sturm_square_free-1 nil 3588583940 ("" (postpone) nil nil) nil shostak))
 (sturm_seq_square_free_TCC1 0
  (sturm_seq_square_free_TCC1-1 nil 3588954074
   ("" (skeep)
    (("" (skeep)
      (("" (inst - "j1-2" "j1-1")
        (("1" (assert) nil nil) ("2" (assert) nil nil) ("3" (assert) nil nil))
        nil))
      nil))
    nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (j1 skolem-const-decl "nat" sturmsquarefree nil)
    (<= const-decl "bool" reals nil)
    (m skolem-const-decl "nat" sturmsquarefree nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil))
   nil
   (sturm_seq_square_free subtype "(number_fields.-)(sturmsquarefree.j, 1)"
    "nat")))
 (sturm_seq_square_free_TCC2 0
  (sturm_seq_square_free_TCC2-1 nil 3588954074 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (poly_deriv const-decl "real" polynomials reals)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil) (^ const-decl "real" exponentiation nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (/= const-decl "boolean" notequal nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil
   (sturm_seq_square_free subtype
    "sturmsquarefree.n((number_fields.-)(sturmsquarefree.j, 1))"
    "{m | sturmsquarefree.p((number_fields.-)(sturmsquarefree.j, 1))(polynomial_division.m) /= 0}")))
 (sturm_seq_square_free_TCC3 0
  (sturm_seq_square_free_TCC3-1 nil 3588954074 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (^ const-decl "real" exponentiation nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (/= const-decl "boolean" notequal nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil
   (sturm_seq_square_free subtype "(number_fields.-)(sturmsquarefree.j, 2)"
    "nat")))
 (sturm_seq_square_free_TCC4 0
  (sturm_seq_square_free_TCC4-1 nil 3588954074 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (/= const-decl "boolean" notequal nil)
    (^ const-decl "real" exponentiation nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (poly_deriv const-decl "real" polynomials reals)
    (sturm_sequence? const-decl "bool" sturmsquarefree nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (int_max application-judgement "{k: int | i <= k AND j <= k}" real_defs
     nil)
    (rat_max application-judgement "{s: rat | s >= q AND s >= r}" real_defs
     nil)
    (real_plus_real_is_real application-judgement "real" reals nil))
   nil
   (sturm_seq_square_free subtype "(number_fields.-)(sturmsquarefree.m, 1)"
    "nat")))
 (sturm_seq_square_free 0
  (sturm_seq_square_free-2 "" 3790098806
   ("" (skeep)
    (("" (case "p(m)(0)/=0")
      (("1" (flatten)
        (("1" (hide 3)
          (("1" (assert)
            (("1" (expand "sturm_sequence?")
              (("1" (split +)
                (("1" (skeep)
                  (("1" (inst - "i" "i+1")
                    (("1" (assert) nil nil) ("2" (assert) nil nil)
                     ("3" (assert) nil nil))
                    nil))
                  nil)
                 ("2" (skeep)
                  (("2" (inst - "i")
                    (("1" (assert) nil nil) ("2" (assert) nil nil)) nil))
                  nil)
                 ("3" (skeep) (("3" (assert) nil nil)) nil)
                 ("4" (skeep)
                  (("4" (inst -11 "1+i")
                    (("4" (assert)
                      (("4" (skeep)
                        (("4" (replace -11)
                          (("4"
                            (name "pd"
                                  "poly_divide(p(i - 1), n(i - 1))(p(i), n(i))(0)")
                            (("4" (replace -1)
                              (("4" (rewrite "scal_polynomial2")
                                (("4"
                                  (case "NOT FORALL (cp:posreal,yyz:real): sign_ext(cp*yyz) = sign_ext(yyz)")
                                  (("1" (hide-all-but 1)
                                    (("1" (grind)
                                      (("1"
                                        (mult-by 1 "cp!1")
                                        (("1" (assert) nil nil))
                                        nil)
                                       ("2"
                                        (mult-by -5 "cp!1")
                                        (("2" (assert) nil nil))
                                        nil)
                                       ("3"
                                        (mult-by -4 "cp!1")
                                        (("3" (assert) nil nil))
                                        nil)
                                       ("4"
                                        (mult-by -4 "cp!1")
                                        (("4" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (case "FORALL (dd5:real): -c*dd5 = c*(-dd5)")
                                    (("1" (rewrite -1 +)
                                      (("1"
                                        (rewrite -2 +)
                                        (("1"
                                          (hide (-1 -2))
                                          (("1"
                                            (lemma "poly_divide_def")
                                            (("1"
                                              (inst?)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (replace -2)
                                                  (("1"
                                                    (split -)
                                                    (("1"
                                                      (inst - "x")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (replaces -1 +)
                                                          (("1"
                                                            (replace -4)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (hide-all-but
                                                                 1)
                                                                (("1"
                                                                  (grind
                                                                   :exclude
                                                                   "polynomial")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (inst - "i")
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("5" (replaces -2)
                  (("5" (hide -) (("5" (grind) nil nil)) nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (hide 2)
        (("2" (flatten)
          (("2" (assert)
            (("2" (expand "sturm_sequence?")
              (("2" (split +)
                (("1" (skeep)
                  (("1" (inst - "i" "i+1")
                    (("1" (assert) nil nil) ("2" (assert) nil nil)
                     ("3" (assert) nil nil))
                    nil))
                  nil)
                 ("2" (skeep)
                  (("2" (inst - "i")
                    (("1" (assert) nil nil) ("2" (assert) nil nil)) nil))
                  nil)
                 ("3" (skeep) (("3" (assert) nil nil)) nil)
                 ("4" (skeep)
                  (("4" (inst -12 "1+i")
                    (("4" (assert)
                      (("4" (skeep)
                        (("4" (replace -12)
                          (("4"
                            (name "pd"
                                  "poly_divide(p(i - 1), n(i - 1))(p(i), n(i))(0)")
                            (("4" (replace -1)
                              (("4" (rewrite "scal_polynomial2")
                                (("4"
                                  (case "NOT FORALL (cp:posreal,yyz:real): sign_ext(cp*yyz) = sign_ext(yyz)")
                                  (("1" (hide-all-but 1)
                                    (("1" (grind)
                                      (("1"
                                        (mult-by 1 "cp!1")
                                        (("1" (assert) nil nil))
                                        nil)
                                       ("2"
                                        (mult-by -5 "cp!1")
                                        (("2" (assert) nil nil))
                                        nil)
                                       ("3"
                                        (mult-by -4 "cp!1")
                                        (("3" (assert) nil nil))
                                        nil)
                                       ("4"
                                        (mult-by -4 "cp!1")
                                        (("4" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (case "FORALL (dd5:real): -c*dd5 = c*(-dd5)")
                                    (("1" (rewrite -1 +)
                                      (("1"
                                        (rewrite -2 +)
                                        (("1"
                                          (hide (-1 -2))
                                          (("1"
                                            (lemma "poly_divide_def")
                                            (("1"
                                              (inst?)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (replace -2)
                                                  (("1"
                                                    (split -)
                                                    (("1"
                                                      (inst - "x")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (replaces -1 +)
                                                          (("1"
                                                            (replace -4)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (hide-all-but
                                                                 1)
                                                                (("1"
                                                                  (grind
                                                                   :exclude
                                                                   "polynomial")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (inst - "i")
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("5"
                  (case "EXISTS (t:real): polynomial(p(m - 1), n(m - 1))(t) = 0")
                  (("1" (hide +)
                    (("1" (skeep)
                      (("1"
                        (case "FORALL (k:nat): m-k-1 >=0 IMPLIES polynomial(p(m-k-1),n(m-k-1))(t)=0")
                        (("1" (copy -8)
                          (("1" (inst - "t")
                            (("1" (inst-cp - "m-1")
                              (("1" (assert)
                                (("1" (assert)
                                  (("1" (flatten)
                                    (("1" (inst - "m-2")
                                      (("1" (assert) nil nil)
                                       ("2"
                                        (assert)
                                        (("2"
                                          (case "NOT m = 1")
                                          (("1" (assert) nil nil)
                                           ("2"
                                            (replace -1)
                                            (("2"
                                              (replace -6)
                                              (("2"
                                                (expand "polynomial" +)
                                                (("2"
                                                  (expand "sigma")
                                                  (("2"
                                                    (expand "sigma")
                                                    (("2" (propax) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2"
                          (case "FORALL (k:nat,ii:nat): k<=ii AND m-k-1>=0 IMPLIES polynomial(p(m - k - 1), n(m - k - 1))(t) = 0")
                          (("1" (skeep)
                            (("1" (inst - "k" "k") (("1" (assert) nil nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (induct "ii")
                              (("1" (skeep) (("1" (assert) nil nil)) nil)
                               ("2" (skeep)
                                (("2" (assert)
                                  (("2" (skeep)
                                    (("2" (case "NOT k = 1+j")
                                      (("1"
                                        (inst - "k")
                                        (("1" (assert) nil nil))
                                        nil)
                                       ("2"
                                        (replace -1)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (copy -14)
                                            (("2"
                                              (inst - "m-j")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (skeep -1)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (name
                                                       "pd"
                                                       " poly_divide(p(-2 - j + m), n(-2 - j + m))
                             (p(-1 - j + m), n(-1 - j + m))(0)")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (lemma
                                                               "poly_divide_def")
                                                              (("2"
                                                                (inst?)
                                                                (("2"
                                                                  (replace -2)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (split
                                                                       -)
                                                                      (("1"
                                                                        (inst?)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (inst-cp
                                                                             -
                                                                             "j")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (replace
                                                                                 -6)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (inst-cp
                                                                                     -
                                                                                     "j-1")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -1
                                                                                         +)
                                                                                        (("1"
                                                                                          (decompose-equality
                                                                                           -3)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "t")
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "scal_polynomial2")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (mult-by
                                                                                                   1
                                                                                                   "-c")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (case
                                                                                         "NOT j = 0")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (replaces
                                                                                           -1)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "poly_divide_def")
                                                                                              (("2"
                                                                                                (inst?)
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -3)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       -)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "t")
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -6)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -1
                                                                                                               +)
                                                                                                              (("1"
                                                                                                                (decompose-equality
                                                                                                                 -4)
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "t")
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "scal_polynomial2")
                                                                                                                    (("1"
                                                                                                                      (mult-by
                                                                                                                       2
                                                                                                                       "-c")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "polynomial(p(m),n(m))(t)=0")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (expand
                                                                                                                             "polynomial"
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "sigma"
                                                                                                                               1)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "sigma"
                                                                                                                                 1)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "m-1")
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (inst?)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (inst?)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2"
                    (case "FORALL (x, y):x<y IMPLIES
        sign_ext(polynomial(p(m - 1), n(m - 1))(x)) =
         sign_ext(polynomial(p(m - 1), n(m - 1))(y))")
                    (("1" (skeep)
                      (("1" (inst-cp - "x" "y")
                        (("1" (inst - "y" "x") (("1" (ground) nil nil)) nil))
                        nil))
                      nil)
                     ("2" (hide 3)
                      (("2" (skeep)
                        (("2" (inst-cp + "x")
                          (("2" (inst-cp + "y")
                            (("2" (expand "sign_ext" +)
                              (("2" (lift-if)
                                (("2" (lift-if)
                                  (("2" (lift-if)
                                    (("2" (lift-if)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (ground)
                                          (("1"
                                            (lemma
                                             "poly_intermediate_value_inc")
                                            (("1"
                                              (inst
                                               -
                                               "p(m-1)"
                                               "0"
                                               "n(m-1)"
                                               "x"
                                               "y")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (skeep -)
                                                  (("1"
                                                    (inst + "cc")
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (lemma
                                             "poly_intermediate_value_dec")
                                            (("2"
                                              (inst
                                               -
                                               "p(m-1)"
                                               "0"
                                               "n(m-1)"
                                               "x"
                                               "y")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (skeep)
                                                  (("2"
                                                    (inst + "cc")
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (sturm_seq_square_free-1 nil 3588954077
   ("" (skeep)
    (("" (case "p(m)(0)/=0")
      (("1" (flatten)
        (("1" (hide 3)
          (("1" (assert)
            (("1" (expand "sturm_sequence?")
              (("1" (split +)
                (("1" (skeep)
                  (("1" (inst - "i" "i+1")
                    (("1" (assert) nil nil) ("2" (assert) nil nil)
                     ("3" (assert) nil nil))
                    nil))
                  nil)
                 ("2" (skeep)
                  (("2" (inst - "i")
                    (("1" (assert) nil nil) ("2" (assert) nil nil)) nil))
                  nil)
                 ("3" (skeep)
                  (("3" (assert)
                    (("3" (expand "max" +) (("3" (assert) nil nil)) nil))
                    nil))
                  nil)
                 ("4" (skeep)
                  (("4" (inst -11 "1+i")
                    (("4" (assert)
                      (("4" (skeep)
                        (("4" (replace -11)
                          (("4"
                            (name "pd"
                                  "poly_divide(p(i - 1), n(i - 1))(p(i), n(i))(0)")
                            (("4" (replace -1)
                              (("4" (rewrite "scal_polynomial2")
                                (("4"
                                  (case "NOT FORALL (cp:posreal,yyz:real): sign_ext(cp*yyz) = sign_ext(yyz)")
                                  (("1" (hide-all-but 1)
                                    (("1" (grind)
                                      (("1"
                                        (mult-by 1 "cp!1")
                                        (("1" (assert) nil nil))
                                        nil)
                                       ("2"
                                        (mult-by -5 "cp!1")
                                        (("2" (assert) nil nil))
                                        nil)
                                       ("3"
                                        (mult-by -4 "cp!1")
                                        (("3" (assert) nil nil))
                                        nil)
                                       ("4"
                                        (mult-by -4 "cp!1")
                                        (("4" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (case "FORALL (dd5:real): -c*dd5 = c*(-dd5)")
                                    (("1" (rewrite -1 +)
                                      (("1"
                                        (rewrite -2 +)
                                        (("1"
                                          (hide (-1 -2))
                                          (("1"
                                            (lemma "poly_divide_def")
                                            (("1"
                                              (inst?)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (replace -2)
                                                  (("1"
                                                    (split -)
                                                    (("1"
                                                      (inst - "x")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (replaces -1 +)
                                                          (("1"
                                                            (replace -4)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (hide-all-but
                                                                 1)
                                                                (("1"
                                                                  (grind
                                                                   :exclude
                                                                   "polynomial")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (inst - "i")
                                                      nil
                                                      nil)
                                                     ("3"
                                                      (inst - "i-1" "i")
                                                      (("3" (assert) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("5" (replaces -2)
                  (("5" (hide -) (("5" (grind) nil nil)) nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (hide 2)
        (("2" (flatten)
          (("2" (assert)
            (("2" (expand "sturm_sequence?")
              (("2" (split +)
                (("1" (skeep)
                  (("1" (inst - "i" "i+1")
                    (("1" (assert) nil nil) ("2" (assert) nil nil)
                     ("3" (assert) nil nil))
                    nil))
                  nil)
                 ("2" (skeep)
                  (("2" (inst - "i")
                    (("1" (assert) nil nil) ("2" (assert) nil nil)) nil))
                  nil)
                 ("3" (skeep)
                  (("3" (assert)
                    (("3" (expand "max" +) (("3" (assert) nil nil)) nil))
                    nil))
                  nil)
                 ("4" (skeep)
                  (("4" (inst -12 "1+i")
                    (("4" (assert)
                      (("4" (skeep)
                        (("4" (replace -12)
                          (("4"
                            (name "pd"
                                  "poly_divide(p(i - 1), n(i - 1))(p(i), n(i))(0)")
                            (("4" (replace -1)
                              (("4" (rewrite "scal_polynomial2")
                                (("4"
                                  (case "NOT FORALL (cp:posreal,yyz:real): sign_ext(cp*yyz) = sign_ext(yyz)")
                                  (("1" (hide-all-but 1)
                                    (("1" (grind)
                                      (("1"
                                        (mult-by 1 "cp!1")
                                        (("1" (assert) nil nil))
                                        nil)
                                       ("2"
                                        (mult-by -5 "cp!1")
                                        (("2" (assert) nil nil))
                                        nil)
                                       ("3"
                                        (mult-by -4 "cp!1")
                                        (("3" (assert) nil nil))
                                        nil)
                                       ("4"
                                        (mult-by -4 "cp!1")
                                        (("4" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (case "FORALL (dd5:real): -c*dd5 = c*(-dd5)")
                                    (("1" (rewrite -1 +)
                                      (("1"
                                        (rewrite -2 +)
                                        (("1"
                                          (hide (-1 -2))
                                          (("1"
                                            (lemma "poly_divide_def")
                                            (("1"
                                              (inst?)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (replace -2)
                                                  (("1"
                                                    (split -)
                                                    (("1"
                                                      (inst - "x")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (replaces -1 +)
                                                          (("1"
                                                            (replace -4)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (hide-all-but
                                                                 1)
                                                                (("1"
                                                                  (grind
                                                                   :exclude
                                                                   "polynomial")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (inst - "i")
                                                      nil
                                                      nil)
                                                     ("3"
                                                      (inst - "i-1" "i")
                                                      (("3" (assert) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("5"
                  (case "EXISTS (t:real): polynomial(p(m - 1), n(m - 1))(t) = 0")
                  (("1" (hide +)
                    (("1" (skeep)
                      (("1"
                        (case "FORALL (k:nat): m-k-1 >=0 IMPLIES polynomial(p(m-k-1),n(m-k-1))(t)=0")
                        (("1" (copy -8)
                          (("1" (inst - "t")
                            (("1" (inst-cp - "m-1")
                              (("1" (assert)
                                (("1" (assert)
                                  (("1" (flatten)
                                    (("1" (inst - "m-2")
                                      (("1" (assert) nil nil)
                                       ("2"
                                        (assert)
                                        (("2"
                                          (case "NOT m = 1")
                                          (("1" (assert) nil nil)
                                           ("2"
                                            (replace -1)
                                            (("2"
                                              (replace -6)
                                              (("2"
                                                (expand "polynomial" +)
                                                (("2"
                                                  (expand "sigma")
                                                  (("2"
                                                    (expand "sigma")
                                                    (("2" (propax) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2"
                          (case "FORALL (k:nat,ii:nat): k<=ii AND m-k-1>=0 IMPLIES polynomial(p(m - k - 1), n(m - k - 1))(t) = 0")
                          (("1" (skeep)
                            (("1" (inst - "k" "k") (("1" (assert) nil nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (induct "ii")
                              (("1" (skeep) (("1" (assert) nil nil)) nil)
                               ("2" (skeep)
                                (("2" (assert)
                                  (("2" (skeep)
                                    (("2" (case "NOT k = 1+j")
                                      (("1"
                                        (inst - "k")
                                        (("1" (assert) nil nil))
                                        nil)
                                       ("2"
                                        (replace -1)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (copy -14)
                                            (("2"
                                              (inst - "m-j")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (skeep -1)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (name
                                                       "pd"
                                                       " poly_divide(p(-2 - j + m), n(-2 - j + m))
                             (p(-1 - j + m), n(-1 - j + m))(0)")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (replace -1)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (lemma
                                                               "poly_divide_def")
                                                              (("1"
                                                                (inst?)
                                                                (("1"
                                                                  (replace -2)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (split
                                                                       -)
                                                                      (("1"
                                                                        (inst?)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (inst-cp
                                                                             -
                                                                             "j")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (replace
                                                                                 -6)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (inst-cp
                                                                                     -
                                                                                     "j-1")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -1
                                                                                         +)
                                                                                        (("1"
                                                                                          (decompose-equality
                                                                                           -3)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "t")
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "scal_polynomial2")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (mult-by
                                                                                                   1
                                                                                                   "-c")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (case
                                                                                         "NOT j = 0")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (replaces
                                                                                           -1)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "poly_divide_def")
                                                                                              (("2"
                                                                                                (inst?)
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -3)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       -)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "t")
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -6)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -1
                                                                                                               +)
                                                                                                              (("1"
                                                                                                                (decompose-equality
                                                                                                                 -4)
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "t")
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "scal_polynomial2")
                                                                                                                    (("1"
                                                                                                                      (mult-by
                                                                                                                       2
                                                                                                                       "-c")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "polynomial(p(m),n(m))(t)=0")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (expand
                                                                                                                             "polynomial"
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "sigma"
                                                                                                                               1)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "sigma"
                                                                                                                                 1)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "m-1")
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("3"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "m-2"
                                                                                                         "m-1")
                                                                                                        (("3"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (inst?)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (inst?)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("3"
                                                                        (inst
                                                                         -
                                                                         "m-j-2"
                                                                         "m-j-1")
                                                                        (("3"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (inst -11 "m-j-1")
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2"
                    (case "FORALL (x, y):x<y IMPLIES
        sign_ext(polynomial(p(m - 1), n(m - 1))(x)) =
         sign_ext(polynomial(p(m - 1), n(m - 1))(y))")
                    (("1" (skeep)
                      (("1" (inst-cp - "x" "y")
                        (("1" (inst - "y" "x") (("1" (ground) nil nil)) nil))
                        nil))
                      nil)
                     ("2" (hide 3)
                      (("2" (skeep)
                        (("2" (inst-cp + "x")
                          (("2" (inst-cp + "y")
                            (("2" (expand "sign_ext" +)
                              (("2" (lift-if)
                                (("2" (lift-if)
                                  (("2" (lift-if)
                                    (("2" (lift-if)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (ground)
                                          (("1"
                                            (lemma
                                             "poly_intermediate_value_inc")
                                            (("1"
                                              (inst
                                               -
                                               "p(m-1)"
                                               "0"
                                               "n(m-1)"
                                               "x"
                                               "y")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (skeep -)
                                                  (("1"
                                                    (inst + "cc")
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (lemma
                                             "poly_intermediate_value_dec")
                                            (("2"
                                              (inst
                                               -
                                               "p(m-1)"
                                               "0"
                                               "n(m-1)"
                                               "x"
                                               "y")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (skeep)
                                                  (("2"
                                                    (inst + "cc")
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (sturm_sequence? const-decl "bool" sturmsquarefree nil)
    (expt def-decl "real" exponentiation nil)
    (^ const-decl "real" exponentiation nil)
    (sigma def-decl "real" sigma reals)
    (minus_real_is_real application-judgement "real" reals nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (sign_ext const-decl
     "{sig: real | (sig = -1 OR sig = 1 OR sig = 0) AND sig * x = abs(x)}"
     sign reals)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal" real_types
     nil)
    (both_sides_times_pos_ge1_imp formula-decl nil extra_real_props nil)
    (both_sides_times_pos_lt1 formula-decl nil real_props nil)
    (both_sides_times_pos_gt1 formula-decl nil real_props nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (TRUE const-decl "bool" booleans nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (poly_divide_def formula-decl nil polynomial_division nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types nil)
    (scal_polynomial2 formula-decl nil polynomials reals)
    (sequence type-eq-decl nil sequences nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (poly_divide def-decl "DivType" polynomial_division nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (DivType type-eq-decl nil polynomial_division nil)
    (int_max application-judgement "{k: int | i <= k AND j <= k}" real_defs
     nil)
    (rat_max application-judgement "{s: rat | s >= q AND s >= r}" real_defs
     nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (max_nnreal_0 formula-decl nil min_max reals)
    (below type-eq-decl nil naturalnumbers nil)
    (i skolem-const-decl "nat" sturmsquarefree nil)
    (< const-decl "bool" reals nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (m skolem-const-decl "nat" sturmsquarefree nil)
    (i skolem-const-decl "nat" sturmsquarefree nil)
    (<= const-decl "bool" reals nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (pred type-eq-decl nil defined_types nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (even_minus_even_is_even application-judgement "even_int" integers nil)
    (odd_plus_even_is_odd application-judgement "odd_int" integers nil)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (odd_minus_even_is_odd application-judgement "odd_int" integers nil)
    (both_sides_times1 formula-decl nil real_props nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (j skolem-const-decl "nat" sturmsquarefree nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (poly_intermediate_value_inc formula-decl nil polynomials reals)
    (poly_intermediate_value_dec formula-decl nil polynomials reals)
    (i skolem-const-decl "nat" sturmsquarefree nil)
    (i skolem-const-decl "nat" sturmsquarefree nil))
   shostak)))

