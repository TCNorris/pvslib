(sturm
 (constructed_sturm_sequence?_TCC1 0
  (constructed_sturm_sequence?_TCC1-1 nil 3589569590
   ("" (skeep)
    (("" (skeep)
      (("" (inst - "j1-2" "j1-1")
        (("1" (assert) nil nil) ("2" (assert) nil nil) ("3" (assert) nil nil))
        nil))
      nil))
    nil)
   ((real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (below type-eq-decl nil naturalnumbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (j1 skolem-const-decl "nat" sturm nil) (< const-decl "bool" reals nil)
    (m skolem-const-decl "nat" sturm nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil
   (constructed_sturm_sequence? subtype "(number_fields.-)(sturm.j, 1)"
    "nat")))
 (constructed_sturm_sequence?_TCC2 0
  (constructed_sturm_sequence?_TCC2-1 nil 3589569590
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (/= const-decl "boolean" notequal nil))
   nil
   (constructed_sturm_sequence? subtype
    "sturm.n((number_fields.-)(sturm.j, 1))"
    "{m | sturm.p((number_fields.-)(sturm.j, 1))(polynomial_division.m) /= 0}")))
 (constructed_sturm_sequence?_TCC3 0
  (constructed_sturm_sequence?_TCC3-1 nil 3589569590
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (/= const-decl "boolean" notequal nil))
   nil
   (constructed_sturm_sequence? subtype "(number_fields.-)(sturm.j, 2)"
    "nat")))
 (constructed_sturm_seq_repeated_root 0
  (constructed_sturm_seq_repeated_root-2 "" 3790098396
   ("" (skeep)
    ((""
      (case "FORALL (i:nat): i-1>=0 AND i+1<=m AND polynomial(p(i),n(i))(x)=0 IMPLIES (polynomial(p(i-1),n(i-1))(x)=0 IFF polynomial(p(i+1),n(i+1))(x)=0)")
      (("1" (skeep)
        (("1"
          (case "FORALL (j:nat): i-j>=0 IMPLIES FORALL (k:nat): k<=j IMPLIES polynomial(p(i-k), n(i-k))(x) = 0")
          (("1"
            (case "FORALL (j:nat): i+j<=m IMPLIES FORALL (k:nat): k<=j IMPLIES  polynomial(p(i+k), n(i+k))(x) = 0")
            (("1" (skeep)
              (("1" (case "j>=i")
                (("1" (inst - "j-i")
                  (("1" (assert)
                    (("1" (inst - "j-i") (("1" (assert) nil nil)) nil)) nil)
                   ("2" (assert) nil nil))
                  nil)
                 ("2" (inst -2 "i-j")
                  (("1" (assert)
                    (("1" (inst -2 "i-j") (("1" (assert) nil nil)) nil)) nil)
                   ("2" (assert) nil nil))
                  nil))
                nil))
              nil)
             ("2" (hide (-1 2))
              (("2" (induct "j")
                (("1" (assert) (("1" (skeep) (("1" (assert) nil nil)) nil))
                  nil)
                 ("2" (assert)
                  (("2" (skosimp*)
                    (("2" (assert)
                      (("2" (case "k!1=0 OR k!1=1")
                        (("1" (ground) nil nil)
                         ("2" (flatten)
                          (("2" (inst-cp - "k!1-1")
                            (("2" (inst - "k!1-2")
                              (("1" (assert)
                                (("1" (assert)
                                  (("1" (inst - "i-1+k!1")
                                    (("1" (assert) nil nil)) nil))
                                  nil))
                                nil)
                               ("2" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (hide 2)
            (("2" (induct "j")
              (("1" (assert) (("1" (skosimp*) (("1" (assert) nil nil)) nil))
                nil)
               ("2" (skosimp*)
                (("2" (assert)
                  (("2" (case "k!1=0")
                    (("1" (assert) nil nil)
                     ("2" (assert)
                      (("2" (inst-cp - "k!1-1")
                        (("2" (case "k!1=1")
                          (("1" (hide -2)
                            (("1" (assert)
                              (("1" (inst - "i") (("1" (assert) nil nil))
                                nil))
                              nil))
                            nil)
                           ("2" (inst - "k!1-2")
                            (("1" (assert)
                              (("1" (inst - "i-k!1+1")
                                (("1" (assert) nil nil)) nil))
                              nil)
                             ("2" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("3" (skosimp*) (("3" (assert) nil nil)) nil)
               ("4" (assert) (("4" (skosimp*) (("4" (assert) nil nil)) nil))
                nil)
               ("5" (skosimp*) (("5" (assert) nil nil)) nil)
               ("6" (skosimp*) (("6" (assert) nil nil)) nil)
               ("7" (skosimp*) (("7" (assert) nil nil)) nil))
              nil))
            nil)
           ("3" (skosimp*) (("3" (assert) nil nil)) nil))
          nil))
        nil)
       ("2" (hide 2)
        (("2" (skeep)
          (("2" (assert)
            (("2" (expand "constructed_sturm_sequence?")
              (("2" (flatten)
                (("2" (inst -10 "1+i")
                  (("2" (assert)
                    (("2" (skeep)
                      (("2"
                        (name "pd"
                              "poly_divide(p(i - 1), n(i - 1))(p(i), n(i))(0)")
                        (("2" (lemma "poly_divide_def")
                          (("2" (inst?)
                            (("2" (assert)
                              (("2" (replace -2)
                                (("2" (assert)
                                  (("2" (inst - "i")
                                    (("2" (assert)
                                      (("2"
                                        (inst - "i-1" "i")
                                        (("2"
                                          (assert)
                                          (("2"
                                            (inst - "x")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (replace -1)
                                                (("2"
                                                  (replace -5)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (case
                                                       "polynomial(pd`rem, pd`rdeg)(x) = 0 IFF polynomial(-c*pd`rem, pd`rdeg)(x) = 0")
                                                      (("1"
                                                        (replace -1 +)
                                                        (("1"
                                                          (replace
                                                           -13
                                                           +
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (ground)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide-all-but 1)
                                                        (("2"
                                                          (rewrite
                                                           "scal_polynomial2")
                                                          (("2"
                                                            (ground)
                                                            (("2"
                                                              (mult-by 1 "c")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (constructed_sturm_seq_repeated_root-1 nil 3589570933
   ("" (skeep)
    ((""
      (case "FORALL (i:nat): i-1>=0 AND i+1<=m AND polynomial(p(i),n(i))(x)=0 IMPLIES (polynomial(p(i-1),n(i-1))(x)=0 IFF polynomial(p(i+1),n(i+1))(x)=0)")
      (("1" (skeep)
        (("1"
          (case "FORALL (j:nat): i-j>=0 IMPLIES FORALL (k:nat): k<=j IMPLIES polynomial(p(i-k), n(i-k))(x) = 0")
          (("1"
            (case "FORALL (j:nat): i+j<=m IMPLIES FORALL (k:nat): k<=j IMPLIES  polynomial(p(i+k), n(i+k))(x) = 0")
            (("1" (skeep)
              (("1" (case "j>=i")
                (("1" (inst - "j-i")
                  (("1" (assert)
                    (("1" (inst - "j-i") (("1" (assert) nil nil)) nil)) nil)
                   ("2" (assert) nil nil))
                  nil)
                 ("2" (inst -2 "i-j")
                  (("1" (assert)
                    (("1" (inst -2 "i-j") (("1" (assert) nil nil)) nil)) nil)
                   ("2" (assert) nil nil))
                  nil))
                nil))
              nil)
             ("2" (hide (-1 2))
              (("2" (induct "j")
                (("1" (assert) (("1" (skeep) (("1" (assert) nil nil)) nil))
                  nil)
                 ("2" (assert)
                  (("2" (skosimp*)
                    (("2" (assert)
                      (("2" (case "k!1=0 OR k!1=1")
                        (("1" (ground) nil nil)
                         ("2" (flatten)
                          (("2" (inst-cp - "k!1-1")
                            (("2" (inst - "k!1-2")
                              (("1" (assert)
                                (("1" (assert)
                                  (("1" (inst - "i-1+k!1")
                                    (("1" (assert) nil nil)) nil))
                                  nil))
                                nil)
                               ("2" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (hide 2)
            (("2" (induct "j")
              (("1" (assert) (("1" (skosimp*) (("1" (assert) nil nil)) nil))
                nil)
               ("2" (skosimp*)
                (("2" (assert)
                  (("2" (case "k!1=0")
                    (("1" (assert) nil nil)
                     ("2" (assert)
                      (("2" (inst-cp - "k!1-1")
                        (("2" (case "k!1=1")
                          (("1" (hide -2)
                            (("1" (assert)
                              (("1" (inst - "i") (("1" (assert) nil nil))
                                nil))
                              nil))
                            nil)
                           ("2" (inst - "k!1-2")
                            (("1" (assert)
                              (("1" (inst - "i-k!1+1")
                                (("1" (assert) nil nil)) nil))
                              nil)
                             ("2" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("3" (skosimp*) (("3" (assert) nil nil)) nil)
               ("4" (assert) (("4" (skosimp*) (("4" (assert) nil nil)) nil))
                nil)
               ("5" (skosimp*) (("5" (assert) nil nil)) nil)
               ("6" (skosimp*) (("6" (assert) nil nil)) nil)
               ("7" (skosimp*) (("7" (assert) nil nil)) nil))
              nil))
            nil)
           ("3" (skosimp*) (("3" (assert) nil nil)) nil))
          nil))
        nil)
       ("2" (hide 2)
        (("2" (skeep)
          (("2" (assert)
            (("2" (expand "constructed_sturm_sequence?")
              (("2" (flatten)
                (("2" (inst -10 "1+i")
                  (("2" (assert)
                    (("2" (skeep)
                      (("2"
                        (name "pd"
                              "poly_divide(p(i - 1), n(i - 1))(p(i), n(i))(0)")
                        (("2" (lemma "poly_divide_def")
                          (("2" (inst?)
                            (("2" (assert)
                              (("2" (replace -2)
                                (("2" (assert)
                                  (("2" (inst - "i")
                                    (("2" (assert)
                                      (("2"
                                        (inst - "i-1" "i")
                                        (("2"
                                          (assert)
                                          (("2"
                                            (assert)
                                            (("2"
                                              (inst - "x")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (replace -5)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (case
                                                         "polynomial(pd`rem, pd`rdeg)(x) = 0 IFF polynomial(-c*pd`rem, pd`rdeg)(x) = 0")
                                                        (("1"
                                                          (replace -1 +)
                                                          (("1"
                                                            (replace
                                                             -13
                                                             +
                                                             :dir
                                                             rl)
                                                            (("1"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide-all-but 1)
                                                          (("2"
                                                            (rewrite
                                                             "scal_polynomial2")
                                                            (("2"
                                                              (ground)
                                                              (("2"
                                                                (mult-by
                                                                 1
                                                                 "c")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((IFF const-decl "[bool, bool -> bool]" booleans nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (sequence type-eq-decl nil sequences nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (<= const-decl "bool" reals nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (k!1 skolem-const-decl "nat" sturm nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (pred type-eq-decl nil defined_types nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (m skolem-const-decl "nat" sturm nil)
    (j skolem-const-decl "upto(m)" sturm nil)
    (i skolem-const-decl "nat" sturm nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (k!1 skolem-const-decl "nat" sturm nil)
    (constructed_sturm_sequence? const-decl "bool" sturm nil)
    (poly_divide_def formula-decl nil polynomial_division nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (scal_polynomial2 formula-decl nil polynomials reals)
    (both_sides_times1 formula-decl nil real_props nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal" real_types
     nil)
    (< const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (poly_divide def-decl "DivType" polynomial_division nil)
    (/= const-decl "boolean" notequal nil)
    (DivType type-eq-decl nil polynomial_division nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (constructed_sturm_seq_repeated_root_mth 0
  (constructed_sturm_seq_repeated_root_mth-2 "" 3790098403
   ("" (induct "i")
    (("1" (skeep)
      (("1" (skeep) (("1" (inst + "mm") (("1" (assert) nil nil)) nil)) nil))
      nil)
     ("2" (skolem 1 "i")
      (("2" (flatten)
        (("2" (skeep)
          (("2" (inst?)
            (("2" (inst?)
              (("2" (assert)
                (("2" (skeep)
                  (("2" (case "u/=i+1")
                    (("1" (inst - "u") (("1" (assert) nil nil)) nil)
                     ("2" (flatten)
                      (("2" (replace -1)
                        (("2" (assert)
                          (("2" (case "i = 0")
                            (("1" (replace -1)
                              (("1" (assert)
                                (("1" (inst + "mm-1")
                                  (("1" (assert)
                                    (("1"
                                      (lemma
                                       "max_linear_div_power_derivative")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (expand
                                               "constructed_sturm_sequence?")
                                              (("1"
                                                (flatten)
                                                (("1" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (label "css" -3)
                              (("2" (copy "css")
                                (("2"
                                  (expand "constructed_sturm_sequence?" -1)
                                  (("2" (flatten)
                                    (("2" (hide (-1 -2 -3 -4 -5 -6))
                                      (("2"
                                        (inst - "1+i")
                                        (("2"
                                          (assert)
                                          (("2"
                                            (skeep)
                                            (("2"
                                              (name
                                               "pd"
                                               "poly_divide(p(i - 1), n(i - 1))(p(i), n(i))(0)")
                                              (("2"
                                                (replace -1)
                                                (("2"
                                                  (lemma
                                                   "polynomial_degree_existence")
                                                  (("2"
                                                    (inst
                                                     -
                                                     "pd`rem"
                                                     "pd`rdeg")
                                                    (("2"
                                                      (split -)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (skolem -1 "RD")
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (case
                                                               "EXISTS (kp: posnat):
                                  kp >= mm - 1 AND max_linear_div_power?(pd`rem,RD, y)(kp)")
                                                              (("1"
                                                                (skeep -)
                                                                (("1"
                                                                  (lemma
                                                                   "max_linear_div_power_scal")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "pd`rem"
                                                                     "RD"
                                                                     "y"
                                                                     "-c"
                                                                     "kp")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (case
                                                                         "polynomial(-c * pd`rem, pd`rdeg) = polynomial(-c*pd`rem,RD)")
                                                                        (("1"
                                                                          (replace
                                                                           -1)
                                                                          (("1"
                                                                            (lemma
                                                                             "poly_divide_lengths")
                                                                            (("1"
                                                                              (inst?)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (replace
                                                                                   -8)
                                                                                  (("1"
                                                                                    (split
                                                                                     -1)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (case
                                                                                           "n(i)=0")
                                                                                          (("1"
                                                                                            (copy
                                                                                             "css")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "constructed_sturm_sequence?"
                                                                                               -1)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "i"
                                                                                                   "i+1")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (rewrite
                                                                                               "max_linear_div_power_rew2"
                                                                                               -4)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 +
                                                                                                 "kp")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (rewrite
                                                                                                     "max_linear_div_power_rew2"
                                                                                                     +)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -10)
                                                                                                        (("2"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (copy
                                                                                       "css")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "constructed_sturm_sequence?"
                                                                                         -1)
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "i")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "polynomial"
                                                                           +
                                                                           1)
                                                                          (("2"
                                                                            (decompose-equality
                                                                             1)
                                                                            (("2"
                                                                              (lemma
                                                                               "sigma_split")
                                                                              (("2"
                                                                                (inst?)
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "RD")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("2"
                                                                                        (invoke
                                                                                         (case
                                                                                          "%1 = 0")
                                                                                         (!
                                                                                          1
                                                                                          1
                                                                                          2))
                                                                                        (("1"
                                                                                          (replaces
                                                                                           -1)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "polynomial"
                                                                                               1)
                                                                                              (("1"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide
                                                                                           2)
                                                                                          (("2"
                                                                                            (rewrite
                                                                                             "sigma_restrict_eq_0")
                                                                                            (("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "*")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "i!1")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide 4)
                                                                (("2"
                                                                  (lemma
                                                                   "poly_divide_def")
                                                                  (("2"
                                                                    (inst?)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (split
                                                                         -)
                                                                        (("1"
                                                                          (replace
                                                                           -4)
                                                                          (("1"
                                                                            (label
                                                                             "IG"
                                                                             -7)
                                                                            (("1"
                                                                              (copy
                                                                               "IG")
                                                                              (("1"
                                                                                (inst-cp
                                                                                 -
                                                                                 "i")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "i-1")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (skolem
                                                                                       -1
                                                                                       "Ai")
                                                                                      (("1"
                                                                                        (skolem
                                                                                         -
                                                                                         "Bi")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "max_linear_div_power_rew2"
                                                                                               -)
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "max_linear_div_power_rew2"
                                                                                                 -)
                                                                                                (("1"
                                                                                                  (skosimp*)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "EXISTS (bb:[nat->real],kk:nat): FORALL (x): polynomial(pd`rem, RD)(x) = (x-y)^(mm-1)*polynomial(bb,kk)(x)")
                                                                                                    (("1"
                                                                                                      (skeep)
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "polynomial(bb,kk)(y)/=0")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           +
                                                                                                           "mm-1")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "max_linear_div_power_rew2"
                                                                                                               +)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 +
                                                                                                                 "bb"
                                                                                                                 "kk")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (lemma
                                                                                                               "polynomial_degree_existence")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "bb"
                                                                                                                 "kk")
                                                                                                                (("2"
                                                                                                                  (split
                                                                                                                   -)
                                                                                                                  (("1"
                                                                                                                    (skosimp*)
                                                                                                                    (("1"
                                                                                                                      (name
                                                                                                                       "DV"
                                                                                                                       "i!1")
                                                                                                                      (("1"
                                                                                                                        (replaces
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (replaces
                                                                                                                             -2)
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "poly_max_zero_power")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "bb"
                                                                                                                                 "DV"
                                                                                                                                 "y")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (skolem
                                                                                                                                     -1
                                                                                                                                     "M")
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       +
                                                                                                                                       "M + mm-1")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (lemma
                                                                                                                                           "max_linear_div_power_additive")
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "pd`rem"
                                                                                                                                             "RD"
                                                                                                                                             "y"
                                                                                                                                             "mm-1"
                                                                                                                                             "M"
                                                                                                                                             "bb"
                                                                                                                                             "DV")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (flatten)
                                                                                                                    (("2"
                                                                                                                      (case
                                                                                                                       "NOT polynomial(bb,kk) = (LAMBDA (x): 0)")
                                                                                                                      (("1"
                                                                                                                        (decompose-equality
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           +
                                                                                                                           "x!1")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (replaces
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (lemma
                                                                                                                             "polynomial_eq_coeff")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "pd`rem"
                                                                                                                               "LAMBDA (i:nat): 0"
                                                                                                                               "RD")
                                                                                                                              (("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (hide
                                                                                                                                   -2)
                                                                                                                                  (("2"
                                                                                                                                    (split
                                                                                                                                     -)
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "RD")
                                                                                                                                      nil
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (decompose-equality
                                                                                                                                       1)
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "x!1")
                                                                                                                                        (("2"
                                                                                                                                          (replaces
                                                                                                                                           -2)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "polynomial"
                                                                                                                                             1)
                                                                                                                                            (("2"
                                                                                                                                              (rewrite
                                                                                                                                               "sigma_restrict_eq_0")
                                                                                                                                              (("2"
                                                                                                                                                (skosimp*)
                                                                                                                                                (("2"
                                                                                                                                                  (lift-if)
                                                                                                                                                  (("2"
                                                                                                                                                    (ground)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide
                                                                                                       4)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -7
                                                                                                         +
                                                                                                         :dir
                                                                                                         rl)
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "NOT polynomial(pd`rem,pd`rdeg) = (LAMBDA (x): polynomial(p(i - 1), n(i - 1))(x) -
          polynomial(pd`quot, pd`qdeg)(x) * polynomial(p(i), n(i))(x))")
                                                                                                          (("1"
                                                                                                            (decompose-equality
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "x!1")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "x!1")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "x!1")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (replace
                                                                                                             -1
                                                                                                             +)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "div_linear_power_reduces")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "p(i-1)"
                                                                                                                   "n(i-1)"
                                                                                                                   "y"
                                                                                                                   "b!1"
                                                                                                                   "Ai"
                                                                                                                   "k!1"
                                                                                                                   "mm-1")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       -4)
                                                                                                                      (("2"
                                                                                                                        (lemma
                                                                                                                         "div_linear_power_reduces")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "p(i)"
                                                                                                                           "n(i)"
                                                                                                                           "y"
                                                                                                                           "b!2"
                                                                                                                           "Bi"
                                                                                                                           "k!2"
                                                                                                                           "mm-1")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -7)
                                                                                                                              (("2"
                                                                                                                                (skosimp*)
                                                                                                                                (("2"
                                                                                                                                  (name
                                                                                                                                   "DV"
                                                                                                                                   "polynomial_prod(pd`quot,pd`qdeg,bb!1,q!1)")
                                                                                                                                  (("2"
                                                                                                                                    (name
                                                                                                                                     "G1"
                                                                                                                                     "LAMBDA (i:nat): IF i<=pd`qdeg+q!1 THEN DV(i) ELSE 0 ENDIF")
                                                                                                                                    (("2"
                                                                                                                                      (name
                                                                                                                                       "G2"
                                                                                                                                       "LAMBDA (i:nat): IF i<=q!2 THEN bb!2(i) ELSE 0 ENDIF")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         +
                                                                                                                                         "G2 - G1"
                                                                                                                                         "pd`qdeg+q!1+q!2")
                                                                                                                                        (("2"
                                                                                                                                          (skeep)
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "x")
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "x")
                                                                                                                                              (("2"
                                                                                                                                                (replace
                                                                                                                                                 -4
                                                                                                                                                 +)
                                                                                                                                                (("2"
                                                                                                                                                  (replace
                                                                                                                                                   -5
                                                                                                                                                   +)
                                                                                                                                                  (("2"
                                                                                                                                                    (case
                                                                                                                                                     " polynomial(bb!2, q!2)(x) -
       polynomial(pd`quot, pd`qdeg)(x) * polynomial(bb!1, q!1)(x)
       = polynomial(G2 - G1, pd`qdeg + q!1 + q!2)(x)")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (replace
                                                                                                                                                         -1
                                                                                                                                                         +
                                                                                                                                                         :dir
                                                                                                                                                         rl)
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (hide-all-but
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (grind
                                                                                                                                                               :exclude
                                                                                                                                                               "polynomial")
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (hide
                                                                                                                                                       2)
                                                                                                                                                      (("2"
                                                                                                                                                        (rewrite
                                                                                                                                                         "polynomial_sub")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "-")
                                                                                                                                                          (("2"
                                                                                                                                                            (case
                                                                                                                                                             "polynomial(bb!2, q!2)(x) 
       =
       polynomial(G2, pd`qdeg + q!1 + q!2)(x)")
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -1
                                                                                                                                                               :dir
                                                                                                                                                               rl)
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (rewrite
                                                                                                                                                                   "polynomial_prod_def"
                                                                                                                                                                   1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -4)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "polynomial"
                                                                                                                                                                       +
                                                                                                                                                                       2)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (lemma
                                                                                                                                                                         "sigma_split")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst?)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (inst
                                                                                                                                                                             -
                                                                                                                                                                             "pd`qdeg + q!1")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (replaces
                                                                                                                                                                                 -1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (invoke
                                                                                                                                                                                     (case
                                                                                                                                                                                      "%1 = 0")
                                                                                                                                                                                     (!
                                                                                                                                                                                      1
                                                                                                                                                                                      2
                                                                                                                                                                                      2))
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (replaces
                                                                                                                                                                                       -1)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (case
                                                                                                                                                                                           "FORALL (AB1,AB2:real): AB1=AB2 IMPLIES -1*AB1 = 0-AB2")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst?)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (split
                                                                                                                                                                                               -)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (propax)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (hide
                                                                                                                                                                                                 2)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "polynomial"
                                                                                                                                                                                                   1)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (rewrite
                                                                                                                                                                                                     "sigma_eq")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (skosimp*)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "G1"
                                                                                                                                                                                                         1)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (skosimp*)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (rewrite
                                                                                                                                                                                       "sigma_restrict_eq_0")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (skosimp*)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "G1"
                                                                                                                                                                                           1)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (expand
                                                                                                                                                               "polynomial"
                                                                                                                                                               1
                                                                                                                                                               2)
                                                                                                                                                              (("2"
                                                                                                                                                                (lemma
                                                                                                                                                                 "sigma_split")
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst?)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "q!2")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (replaces
                                                                                                                                                                         -1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (invoke
                                                                                                                                                                           (case
                                                                                                                                                                            "%1 = 0")
                                                                                                                                                                           (!
                                                                                                                                                                            1
                                                                                                                                                                            2
                                                                                                                                                                            2))
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replaces
                                                                                                                                                                             -1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "polynomial"
                                                                                                                                                                                 1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (rewrite
                                                                                                                                                                                   "sigma_eq")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "G2"
                                                                                                                                                                                       1)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (propax)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (rewrite
                                                                                                                                                                             "sigma_restrict_eq_0")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (skosimp*)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "G2"
                                                                                                                                                                                 1)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (copy
                                                                           "css")
                                                                          (("2"
                                                                            (expand
                                                                             "constructed_sturm_sequence?"
                                                                             -1)
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "i")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (case
                                                           "EXISTS (x): polynomial(p(1 + i), n(1 + i))(x)/=0")
                                                          (("1"
                                                            (skeep)
                                                            (("1"
                                                              (inst + "x")
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (lemma
                                                                   "scal_polynomial2")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     _
                                                                     "-c"
                                                                     _
                                                                     _)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "pd`rem"
                                                                       "pd`rdeg"
                                                                       "x")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide (2 3))
                                                            (("2"
                                                              (lemma
                                                               "polynomial_eq_coeff")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "p(1+i)"
                                                                 "LAMBDA (i:nat): 0"
                                                                 "n(1+i)")
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (hide -2)
                                                                    (("2"
                                                                      (split
                                                                       -)
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "n(1+i)")
                                                                        (("1"
                                                                          (copy
                                                                           "css")
                                                                          (("1"
                                                                            (expand
                                                                             "constructed_sturm_sequence?"
                                                                             -1)
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "1+i")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (decompose-equality
                                                                         1)
                                                                        (("2"
                                                                          (inst
                                                                           +
                                                                           "x!1")
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (replaces
                                                                               -1)
                                                                              (("2"
                                                                                (expand
                                                                                 "polynomial"
                                                                                 1)
                                                                                (("2"
                                                                                  (rewrite
                                                                                   "sigma_restrict_eq_0"
                                                                                   1)
                                                                                  (("2"
                                                                                    (skosimp*)
                                                                                    (("2"
                                                                                      (lift-if)
                                                                                      (("2"
                                                                                        (ground)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (constructed_sturm_seq_repeated_root_mth-1 nil 3591517436
   ("" (induct "i")
    (("1" (skeep)
      (("1" (skeep) (("1" (inst + "mm") (("1" (assert) nil nil)) nil)) nil))
      nil)
     ("2" (skolem 1 "i")
      (("2" (flatten)
        (("2" (skeep)
          (("2" (inst?)
            (("2" (inst?)
              (("2" (assert)
                (("2" (skeep)
                  (("2" (case "u/=i+1")
                    (("1" (inst - "u") (("1" (assert) nil nil)) nil)
                     ("2" (flatten)
                      (("2" (replace -1)
                        (("2" (assert)
                          (("2" (case "i = 0")
                            (("1" (replace -1)
                              (("1" (assert)
                                (("1" (inst + "mm-1")
                                  (("1" (assert)
                                    (("1"
                                      (lemma
                                       "max_linear_div_power_derivative")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (expand
                                               "constructed_sturm_sequence?")
                                              (("1"
                                                (flatten)
                                                (("1" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (label "css" -3)
                              (("2" (copy "css")
                                (("2"
                                  (expand "constructed_sturm_sequence?" -1)
                                  (("2" (flatten)
                                    (("2" (hide (-1 -2 -3 -4 -5 -6))
                                      (("2"
                                        (inst - "1+i")
                                        (("2"
                                          (assert)
                                          (("2"
                                            (skeep)
                                            (("2"
                                              (name
                                               "pd"
                                               "poly_divide(p(i - 1), n(i - 1))(p(i), n(i))(0)")
                                              (("2"
                                                (replace -1)
                                                (("2"
                                                  (lemma
                                                   "polynomial_degree_existence")
                                                  (("2"
                                                    (inst
                                                     -
                                                     "pd`rem"
                                                     "pd`rdeg")
                                                    (("2"
                                                      (split -)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (skolem -1 "RD")
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (case
                                                               "EXISTS (kp: posnat):
                                  kp >= mm - 1 AND max_linear_div_power?(pd`rem,RD, y)(kp)")
                                                              (("1"
                                                                (skeep -)
                                                                (("1"
                                                                  (lemma
                                                                   "max_linear_div_power_scal")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "pd`rem"
                                                                     "RD"
                                                                     "y"
                                                                     "-c"
                                                                     "kp")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (case
                                                                         "polynomial(-c * pd`rem, pd`rdeg) = polynomial(-c*pd`rem,RD)")
                                                                        (("1"
                                                                          (replace
                                                                           -1)
                                                                          (("1"
                                                                            (lemma
                                                                             "poly_divide_lengths")
                                                                            (("1"
                                                                              (inst?)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (replace
                                                                                   -8)
                                                                                  (("1"
                                                                                    (split
                                                                                     -1)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (case
                                                                                           "n(i)=0")
                                                                                          (("1"
                                                                                            (copy
                                                                                             "css")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "constructed_sturm_sequence?"
                                                                                               -1)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "i"
                                                                                                   "i+1")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (rewrite
                                                                                               "max_linear_div_power_rew2"
                                                                                               -4)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 +
                                                                                                 "kp")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (rewrite
                                                                                                     "max_linear_div_power_rew2"
                                                                                                     +)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -10)
                                                                                                        (("2"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (copy
                                                                                       "css")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "constructed_sturm_sequence?"
                                                                                         -1)
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "i")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("3"
                                                                                      (copy
                                                                                       "css")
                                                                                      (("3"
                                                                                        (expand
                                                                                         "constructed_sturm_sequence?"
                                                                                         -1)
                                                                                        (("3"
                                                                                          (flatten)
                                                                                          (("3"
                                                                                            (inst
                                                                                             -
                                                                                             "i-1"
                                                                                             "i")
                                                                                            (("3"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("4"
                                                                                      (copy
                                                                                       "css")
                                                                                      (("4"
                                                                                        (expand
                                                                                         "constructed_sturm_sequence?"
                                                                                         -1)
                                                                                        (("4"
                                                                                          (flatten)
                                                                                          (("4"
                                                                                            (inst
                                                                                             -
                                                                                             "i-1"
                                                                                             "i")
                                                                                            (("4"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "polynomial"
                                                                           +
                                                                           1)
                                                                          (("2"
                                                                            (decompose-equality
                                                                             1)
                                                                            (("2"
                                                                              (lemma
                                                                               "sigma_split")
                                                                              (("2"
                                                                                (inst?)
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "RD")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("2"
                                                                                        (invoke
                                                                                         (case
                                                                                          "%1 = 0")
                                                                                         (!
                                                                                          1
                                                                                          1
                                                                                          2))
                                                                                        (("1"
                                                                                          (replaces
                                                                                           -1)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "polynomial"
                                                                                               1)
                                                                                              (("1"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide
                                                                                           2)
                                                                                          (("2"
                                                                                            (rewrite
                                                                                             "sigma_restrict_eq_0")
                                                                                            (("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "*")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "i!1")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide 4)
                                                                (("2"
                                                                  (lemma
                                                                   "poly_divide_def")
                                                                  (("2"
                                                                    (inst?)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (split
                                                                         -)
                                                                        (("1"
                                                                          (replace
                                                                           -4)
                                                                          (("1"
                                                                            (label
                                                                             "IG"
                                                                             -7)
                                                                            (("1"
                                                                              (copy
                                                                               "IG")
                                                                              (("1"
                                                                                (inst-cp
                                                                                 -
                                                                                 "i")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "i-1")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (skolem
                                                                                       -1
                                                                                       "Ai")
                                                                                      (("1"
                                                                                        (skolem
                                                                                         -
                                                                                         "Bi")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "max_linear_div_power_rew2"
                                                                                               -)
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "max_linear_div_power_rew2"
                                                                                                 -)
                                                                                                (("1"
                                                                                                  (skosimp*)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "EXISTS (bb:[nat->real],kk:nat): FORALL (x): polynomial(pd`rem, RD)(x) = (x-y)^(mm-1)*polynomial(bb,kk)(x)")
                                                                                                    (("1"
                                                                                                      (skeep)
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "polynomial(bb,kk)(y)/=0")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           +
                                                                                                           "mm-1")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "max_linear_div_power_rew2"
                                                                                                               +)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 +
                                                                                                                 "bb"
                                                                                                                 "kk")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (lemma
                                                                                                               "polynomial_degree_existence")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "bb"
                                                                                                                 "kk")
                                                                                                                (("2"
                                                                                                                  (split
                                                                                                                   -)
                                                                                                                  (("1"
                                                                                                                    (skosimp*)
                                                                                                                    (("1"
                                                                                                                      (name
                                                                                                                       "DV"
                                                                                                                       "i!1")
                                                                                                                      (("1"
                                                                                                                        (replaces
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (replaces
                                                                                                                             -2)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (lemma
                                                                                                                                 "poly_max_zero_power")
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "bb"
                                                                                                                                   "DV"
                                                                                                                                   "y")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (skolem
                                                                                                                                       -1
                                                                                                                                       "M")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         +
                                                                                                                                         "M + mm-1")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (lemma
                                                                                                                                             "max_linear_div_power_additive")
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "pd`rem"
                                                                                                                                               "RD"
                                                                                                                                               "y"
                                                                                                                                               "mm-1"
                                                                                                                                               "M"
                                                                                                                                               "bb"
                                                                                                                                               "DV")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (flatten)
                                                                                                                    (("2"
                                                                                                                      (case
                                                                                                                       "NOT polynomial(bb,kk) = (LAMBDA (x): 0)")
                                                                                                                      (("1"
                                                                                                                        (decompose-equality
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           +
                                                                                                                           "x!1")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (replaces
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (lemma
                                                                                                                             "polynomial_eq_coeff")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "pd`rem"
                                                                                                                               "LAMBDA (i:nat): 0"
                                                                                                                               "RD")
                                                                                                                              (("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (hide
                                                                                                                                   -2)
                                                                                                                                  (("2"
                                                                                                                                    (split
                                                                                                                                     -)
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "RD")
                                                                                                                                      nil
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (decompose-equality
                                                                                                                                       1)
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "x!1")
                                                                                                                                        (("2"
                                                                                                                                          (replaces
                                                                                                                                           -2)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "polynomial"
                                                                                                                                             1)
                                                                                                                                            (("2"
                                                                                                                                              (rewrite
                                                                                                                                               "sigma_restrict_eq_0")
                                                                                                                                              (("2"
                                                                                                                                                (skosimp*)
                                                                                                                                                (("2"
                                                                                                                                                  (lift-if)
                                                                                                                                                  (("2"
                                                                                                                                                    (ground)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide
                                                                                                       4)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -7
                                                                                                         +
                                                                                                         :dir
                                                                                                         rl)
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "NOT polynomial(pd`rem,pd`rdeg) = (LAMBDA (x): polynomial(p(i - 1), n(i - 1))(x) -
          polynomial(pd`quot, pd`qdeg)(x) * polynomial(p(i), n(i))(x))")
                                                                                                          (("1"
                                                                                                            (decompose-equality
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "x!1")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "x!1")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "x!1")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (replace
                                                                                                             -1
                                                                                                             +)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "div_linear_power_reduces")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "p(i-1)"
                                                                                                                   "n(i-1)"
                                                                                                                   "y"
                                                                                                                   "b!1"
                                                                                                                   "Ai"
                                                                                                                   "k!1"
                                                                                                                   "mm-1")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       -4)
                                                                                                                      (("2"
                                                                                                                        (lemma
                                                                                                                         "div_linear_power_reduces")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "p(i)"
                                                                                                                           "n(i)"
                                                                                                                           "y"
                                                                                                                           "b!2"
                                                                                                                           "Bi"
                                                                                                                           "k!2"
                                                                                                                           "mm-1")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -7)
                                                                                                                              (("2"
                                                                                                                                (skosimp*)
                                                                                                                                (("2"
                                                                                                                                  (name
                                                                                                                                   "DV"
                                                                                                                                   "polynomial_prod(pd`quot,pd`qdeg,bb!1,q!1)")
                                                                                                                                  (("2"
                                                                                                                                    (name
                                                                                                                                     "G1"
                                                                                                                                     "LAMBDA (i:nat): IF i<=pd`qdeg+q!1 THEN DV(i) ELSE 0 ENDIF")
                                                                                                                                    (("2"
                                                                                                                                      (name
                                                                                                                                       "G2"
                                                                                                                                       "LAMBDA (i:nat): IF i<=q!2 THEN bb!2(i) ELSE 0 ENDIF")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         +
                                                                                                                                         "G2 - G1"
                                                                                                                                         "pd`qdeg+q!1+q!2")
                                                                                                                                        (("2"
                                                                                                                                          (skeep)
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "x")
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "x")
                                                                                                                                              (("2"
                                                                                                                                                (replace
                                                                                                                                                 -4
                                                                                                                                                 +)
                                                                                                                                                (("2"
                                                                                                                                                  (replace
                                                                                                                                                   -5
                                                                                                                                                   +)
                                                                                                                                                  (("2"
                                                                                                                                                    (case
                                                                                                                                                     " polynomial(bb!2, q!2)(x) -
       polynomial(pd`quot, pd`qdeg)(x) * polynomial(bb!1, q!1)(x)
       = polynomial(G2 - G1, pd`qdeg + q!1 + q!2)(x)")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (replace
                                                                                                                                                         -1
                                                                                                                                                         +
                                                                                                                                                         :dir
                                                                                                                                                         rl)
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (hide-all-but
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (grind
                                                                                                                                                               :exclude
                                                                                                                                                               "polynomial")
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (hide
                                                                                                                                                       2)
                                                                                                                                                      (("2"
                                                                                                                                                        (rewrite
                                                                                                                                                         "polynomial_sub")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "-")
                                                                                                                                                          (("2"
                                                                                                                                                            (case
                                                                                                                                                             "polynomial(bb!2, q!2)(x) 
       =
       polynomial(G2, pd`qdeg + q!1 + q!2)(x)")
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -1
                                                                                                                                                               :dir
                                                                                                                                                               rl)
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (rewrite
                                                                                                                                                                   "polynomial_prod_def"
                                                                                                                                                                   1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -4)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "polynomial"
                                                                                                                                                                       +
                                                                                                                                                                       2)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (lemma
                                                                                                                                                                         "sigma_split")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst?)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (inst
                                                                                                                                                                             -
                                                                                                                                                                             "pd`qdeg + q!1")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (replaces
                                                                                                                                                                                 -1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (invoke
                                                                                                                                                                                     (case
                                                                                                                                                                                      "%1 = 0")
                                                                                                                                                                                     (!
                                                                                                                                                                                      1
                                                                                                                                                                                      2
                                                                                                                                                                                      2))
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (replaces
                                                                                                                                                                                       -1)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (case
                                                                                                                                                                                             "FORALL (AB1,AB2:real): AB1=AB2 IMPLIES -1*AB1 = 0-AB2")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (inst?)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (split
                                                                                                                                                                                                 -)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (hide
                                                                                                                                                                                                   2)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "polynomial"
                                                                                                                                                                                                     1)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (rewrite
                                                                                                                                                                                                       "sigma_eq")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (skosimp*)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "G1"
                                                                                                                                                                                                           1)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (propax)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (skosimp*)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (rewrite
                                                                                                                                                                                       "sigma_restrict_eq_0")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (skosimp*)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "G1"
                                                                                                                                                                                           1)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (expand
                                                                                                                                                               "polynomial"
                                                                                                                                                               1
                                                                                                                                                               2)
                                                                                                                                                              (("2"
                                                                                                                                                                (lemma
                                                                                                                                                                 "sigma_split")
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst?)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "q!2")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (replaces
                                                                                                                                                                         -1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (invoke
                                                                                                                                                                           (case
                                                                                                                                                                            "%1 = 0")
                                                                                                                                                                           (!
                                                                                                                                                                            1
                                                                                                                                                                            2
                                                                                                                                                                            2))
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replaces
                                                                                                                                                                             -1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "polynomial"
                                                                                                                                                                                 1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (rewrite
                                                                                                                                                                                   "sigma_eq")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "G2"
                                                                                                                                                                                       1)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (propax)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (rewrite
                                                                                                                                                                             "sigma_restrict_eq_0")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (skosimp*)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "G2"
                                                                                                                                                                                 1)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (copy
                                                                           "css")
                                                                          (("2"
                                                                            (expand
                                                                             "constructed_sturm_sequence?"
                                                                             -1)
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "i")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (copy
                                                                           "css")
                                                                          (("3"
                                                                            (expand
                                                                             "constructed_sturm_sequence?"
                                                                             -1)
                                                                            (("3"
                                                                              (flatten)
                                                                              (("3"
                                                                                (inst
                                                                                 -
                                                                                 "i-1"
                                                                                 "i")
                                                                                (("3"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (case
                                                           "EXISTS (x): polynomial(p(1 + i), n(1 + i))(x)/=0")
                                                          (("1"
                                                            (skeep)
                                                            (("1"
                                                              (inst + "x")
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (lemma
                                                                   "scal_polynomial2")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     _
                                                                     "-c"
                                                                     _
                                                                     _)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "pd`rem"
                                                                       "pd`rdeg"
                                                                       "x")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide (2 3))
                                                            (("2"
                                                              (lemma
                                                               "polynomial_eq_coeff")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "p(1+i)"
                                                                 "LAMBDA (i:nat): 0"
                                                                 "n(1+i)")
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (hide -2)
                                                                    (("2"
                                                                      (split
                                                                       -)
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "n(1+i)")
                                                                        (("1"
                                                                          (copy
                                                                           "css")
                                                                          (("1"
                                                                            (expand
                                                                             "constructed_sturm_sequence?"
                                                                             -1)
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "1+i")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (decompose-equality
                                                                         1)
                                                                        (("2"
                                                                          (inst
                                                                           +
                                                                           "x!1")
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (replaces
                                                                               -1)
                                                                              (("2"
                                                                                (expand
                                                                                 "polynomial"
                                                                                 1)
                                                                                (("2"
                                                                                  (rewrite
                                                                                   "sigma_restrict_eq_0"
                                                                                   1)
                                                                                  (("2"
                                                                                    (skosimp*)
                                                                                    (("2"
                                                                                      (lift-if)
                                                                                      (("2"
                                                                                        (ground)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (DivType type-eq-decl nil polynomial_division nil)
    (poly_divide def-decl "DivType" polynomial_division nil)
    (polynomial_degree_existence formula-decl nil more_polynomial_props reals)
    (max_linear_div_power_scal formula-decl nil more_polynomial_props reals)
    (sigma_split formula-decl nil sigma reals)
    (TRUE const-decl "bool" booleans nil)
    (subrange type-eq-decl nil integers nil)
    (sigma_restrict_eq_0 formula-decl nil sigma reals)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (T_low type-eq-decl nil sigma reals) (T_high type-eq-decl nil sigma reals)
    (sigma def-decl "real" sigma reals)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (^ const-decl "real" exponentiation nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (max_linear_div_power_rew2 formula-decl nil more_polynomial_props reals)
    (even_minus_odd_is_odd application-judgement "odd_int" integers nil)
    (poly_divide_lengths formula-decl nil polynomial_division nil)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (poly_divide_def formula-decl nil polynomial_division nil)
    (polynomial_prod const-decl "real" polynomials reals)
    (G2 skolem-const-decl "[nat -> real]" sturm nil)
    (polynomial_prod_def formula-decl nil polynomials reals)
    (G1 skolem-const-decl "[nat -> real]" sturm nil)
    (sigma_eq formula-decl nil sigma reals)
    (polynomial_sub formula-decl nil polynomials reals)
    (expt def-decl "real" exponentiation nil)
    (- const-decl "[T -> real]" real_fun_ops reals)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (div_linear_power_reduces formula-decl nil more_polynomial_props reals)
    (poly_max_zero_power formula-decl nil more_polynomial_props reals)
    (max_linear_div_power_additive formula-decl nil more_polynomial_props
     reals)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (polynomial_eq_coeff formula-decl nil polynomials reals)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types nil)
    (scal_polynomial2 formula-decl nil polynomials reals)
    (max_linear_div_power_derivative formula-decl nil more_polynomial_props
     reals)
    (odd_plus_even_is_odd application-judgement "odd_int" integers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (i skolem-const-decl "nat" sturm nil)
    (u skolem-const-decl "upto(1 + i)" sturm nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (max_linear_div_power? const-decl "bool" more_polynomial_props reals)
    (sequence type-eq-decl nil sequences nil)
    (constructed_sturm_sequence? const-decl "bool" sturm nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (pred type-eq-decl nil defined_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   shostak))
 (constructed_sturm_seq_repeated_root_struct_TCC1 0
  (constructed_sturm_seq_repeated_root_struct_TCC1-1 nil 3591976316
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (/= const-decl "boolean" notequal nil)
    (constructed_sturm_sequence? const-decl "bool" sturm nil)
    (^ const-decl "real" exponentiation nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (poly_deriv const-decl "real" polynomials reals)
    (max_linear_div_power? const-decl "bool" more_polynomial_props reals)
    (real_times_real_is_real application-judgement "real" reals nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_plus_real_is_real application-judgement "real" reals nil))
   nil
   (constructed_sturm_seq_repeated_root_struct subtype
    "(number_fields.-)(sturm.mm, 1)" "posnat")))
 (constructed_sturm_seq_repeated_root_struct_TCC2 0
  (constructed_sturm_seq_repeated_root_struct_TCC2-1 nil 3591976316
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (/= const-decl "boolean" notequal nil)
    (constructed_sturm_sequence? const-decl "bool" sturm nil)
    (^ const-decl "real" exponentiation nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (poly_deriv const-decl "real" polynomials reals)
    (max_linear_div_power? const-decl "bool" more_polynomial_props reals)
    (real_times_real_is_real application-judgement "real" reals nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil))
   nil
   (constructed_sturm_seq_repeated_root_struct subtype
    "(number_fields.-)(sturm.j, 1)" "nat")))
 (constructed_sturm_seq_repeated_root_struct_TCC3 0
  (constructed_sturm_seq_repeated_root_struct_TCC3-1 nil 3591976316
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (/= const-decl "boolean" notequal nil)
    (constructed_sturm_sequence? const-decl "bool" sturm nil)
    (^ const-decl "real" exponentiation nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (poly_deriv const-decl "real" polynomials reals)
    (max_linear_div_power? const-decl "bool" more_polynomial_props reals)
    (real_times_real_is_real application-judgement "real" reals nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (real_plus_real_is_real application-judgement "real" reals nil))
   nil
   (constructed_sturm_seq_repeated_root_struct subtype
    "(number_fields.-)(sturm.mm, 1)" "posnat")))
 (constructed_sturm_seq_repeated_root_struct_TCC4 0
  (constructed_sturm_seq_repeated_root_struct_TCC4-1 nil 3591976316
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (/= const-decl "boolean" notequal nil)
    (constructed_sturm_sequence? const-decl "bool" sturm nil)
    (^ const-decl "real" exponentiation nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (poly_deriv const-decl "real" polynomials reals)
    (max_linear_div_power? const-decl "bool" more_polynomial_props reals)
    (real_times_real_is_real application-judgement "real" reals nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (real_plus_real_is_real application-judgement "real" reals nil))
   nil
   (constructed_sturm_seq_repeated_root_struct subtype
    "(number_fields.-)(sturm.m, 1)" "nat")))
 (constructed_sturm_seq_repeated_root_struct 0
  (constructed_sturm_seq_repeated_root_struct-3 "" 3790098416
   ("" (skeep)
    (("" (label "css" -1)
      (("" (skeep)
        (("" (lemma "constructed_sturm_seq_repeated_root")
          (("" (inst?)
            (("" (assert)
              (("" (inst - "y")
                (("" (inst - "i")
                  (("" (assert)
                    (("" (inst-cp - "0")
                      (("" (inst-cp - "1")
                        (("" (label "allzero" -1)
                          (("" (assert)
                            (("" (lemma "poly_max_zero_power")
                              (("" (inst - "p(0)" "n(0)" "y")
                                (("" (assert)
                                  (("" (case "p(0)(n(0))/=0")
                                    (("1" (ground)
                                      (("1"
                                        (skolem -1 "mm")
                                        (("1"
                                          (inst + "mm")
                                          (("1"
                                            (case "NOT mm > 1")
                                            (("1"
                                              (case "NOT mm = 1")
                                              (("1" (assert) nil nil)
                                               ("2"
                                                (hide 1)
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (expand
                                                       "max_linear_div_power?"
                                                       -2)
                                                      (("2"
                                                        (skeep)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (expand "^" -4)
                                                            (("2"
                                                              (expand "expt")
                                                              (("2"
                                                                (copy "css")
                                                                (("2"
                                                                  (expand
                                                                   "constructed_sturm_sequence?"
                                                                   -1)
                                                                  (("2"
                                                                    (inst
                                                                     -5
                                                                     "y")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (assert)
                                              (("2"
                                                (splash 2)
                                                (("1"
                                                  (inst-cp - "m-2")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (lemma
                                                       "max_linear_div_power_derivative")
                                                      (("1"
                                                        (inst
                                                         -
                                                         "p(0)"
                                                         "n(0)"
                                                         "y"
                                                         "mm")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (case "m = 2")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (expand
                                                                         "constructed_sturm_sequence?")
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (case
                                                                     "m = 1")
                                                                    (("1"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (label
                                                                       "PSty"
                                                                       4)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (copy
                                                                           "css")
                                                                          (("2"
                                                                            (expand
                                                                             "constructed_sturm_sequence?"
                                                                             -1)
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (inst
                                                                                 -7
                                                                                 "m")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (skeep)
                                                                                    (("2"
                                                                                      (case
                                                                                       "NOT polynomial(p(m),n(m)) = (LAMBDA (xy:real): 0)")
                                                                                      (("1"
                                                                                        (decompose-equality
                                                                                         1)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -5
                                                                                           1)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "polynomial"
                                                                                             1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "sigma")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "sigma")
                                                                                                (("1"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("2"
                                                                                          (name
                                                                                           "PD"
                                                                                           "poly_divide(p(m - 2), n(m - 2))(p(m - 1), n(m - 1))
                                                                                                                                       (0)")
                                                                                          (("2"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("2"
                                                                                              (case
                                                                                               "polynomial(PD`rem,PD`rdeg) = (LAMBDA (xy:real): 0)")
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "constructed_sturm_seq_repeated_root_mth")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "m-1"
                                                                                                   "m"
                                                                                                   "n"
                                                                                                   "p"
                                                                                                   "y"
                                                                                                   "mm")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "m-1")
                                                                                                      (("1"
                                                                                                        (skeep)
                                                                                                        (("1"
                                                                                                          (lemma
                                                                                                           "poly_divide_def")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "p(m-2)"
                                                                                                             "p(m-1)"
                                                                                                             "0"
                                                                                                             "n(m-1)"
                                                                                                             "n(m-2)")
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -5)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (split
                                                                                                                   -)
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -4)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         "max_linear_div_power_rew"
                                                                                                                         -3)
                                                                                                                        (("1"
                                                                                                                          (flatten)
                                                                                                                          (("1"
                                                                                                                            (skolem
                                                                                                                             -
                                                                                                                             "bm1")
                                                                                                                            (("1"
                                                                                                                              (flatten)
                                                                                                                              (("1"
                                                                                                                                (case
                                                                                                                                 "NOT polynomial(p(m-1),n(m-1)) = (LAMBDA (x): (x - y) ^ kp * polynomial(bm1, n(m - 1) - kp)(x))")
                                                                                                                                (("1"
                                                                                                                                  (decompose-equality)
                                                                                                                                  nil
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (hide
                                                                                                                                   -5)
                                                                                                                                  (("2"
                                                                                                                                    (replace
                                                                                                                                     -1
                                                                                                                                     -2)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (case
                                                                                                                                         "EXISTS (aa:[nat->real],nm:nat): FORALL (x:real): polynomial(p(m-2),n(m-2))(x) = (x-y)^kp*polynomial(aa,nm)(x)")
                                                                                                                                        (("1"
                                                                                                                                          (skeep)
                                                                                                                                          (("1"
                                                                                                                                            (case
                                                                                                                                             "NOT kp = mm-1")
                                                                                                                                            (("1"
                                                                                                                                              (lemma
                                                                                                                                               "max_linear_div_power_lower_bound")
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -
                                                                                                                                                 "p(m-2)"
                                                                                                                                                 "n(m-2)"
                                                                                                                                                 "y"
                                                                                                                                                 "aa"
                                                                                                                                                 "kp"
                                                                                                                                                 "nm"
                                                                                                                                                 "mm-1")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (rewrite
                                                                                                                                               "max_linear_div_power_rew2"
                                                                                                                                               +)
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 +
                                                                                                                                                 "bm1"
                                                                                                                                                 "n(m-1)-kp")
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (inst
                                                                                                                                           +
                                                                                                                                           "polynomial_prod(PD`quot,PD`qdeg,bm1,n(m-1)-kp)"
                                                                                                                                           "PD`qdeg+n(m-1)-kp")
                                                                                                                                          (("1"
                                                                                                                                            (skeep)
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "x")
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -2
                                                                                                                                                 +)
                                                                                                                                                (("1"
                                                                                                                                                  (lemma
                                                                                                                                                   "polynomial_prod_def")
                                                                                                                                                  (("1"
                                                                                                                                                    (inst?)
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("3"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (copy
                                                                                                                     "css")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "constructed_sturm_sequence?"
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (flatten)
                                                                                                                        (("2"
                                                                                                                          (inst?)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 (-9
                                                                                                  1))
                                                                                                (("2"
                                                                                                  (decompose-equality)
                                                                                                  (("2"
                                                                                                    (decompose-equality
                                                                                                     -)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "x!1")
                                                                                                      (("2"
                                                                                                        (mult-by
                                                                                                         1
                                                                                                         "-c")
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           "scal_polynomial2")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    (("2"
                                                      (case "m = 1")
                                                      (("1"
                                                        (copy "css")
                                                        (("1"
                                                          (expand
                                                           "constructed_sturm_sequence?"
                                                           -1
                                                           :assert?
                                                           none)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2" (assert) nil nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (induct "j")
                                                  (("1" (assert) nil nil)
                                                   ("2"
                                                    (skolem 1 "j")
                                                    (("2"
                                                      (flatten)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (case "j = 0")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (replaces -1)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (rewrite
                                                                   "max_linear_div_power_rew2"
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "max_linear_div_power?"
                                                                     -4)
                                                                    (("1"
                                                                      (skosimp*)
                                                                      (("1"
                                                                        (inst
                                                                         +
                                                                         "q!1"
                                                                         "n(0)-mm")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (copy
                                                                             "css")
                                                                            (("1"
                                                                              (expand
                                                                               "constructed_sturm_sequence?"
                                                                               -1
                                                                               :assert?
                                                                               none)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            (("2"
                                                              (lemma
                                                               "constructed_sturm_seq_repeated_root_mth")
                                                              (("2"
                                                                (inst?)
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "m-1"
                                                                   "m")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (label
                                                                       "mldpj"
                                                                       -2)
                                                                      (("2"
                                                                        (inst-cp
                                                                         -
                                                                         "1+j")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (skeep)
                                                                            (("2"
                                                                              (case
                                                                               "NOT kp > mm-1")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 -3)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (label
                                                                                     "mldpkp"
                                                                                     -3)
                                                                                    (("2"
                                                                                      (copy
                                                                                       "css")
                                                                                      (("2"
                                                                                        (label
                                                                                         "cspz"
                                                                                         -1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "constructed_sturm_sequence?"
                                                                                           "cspz")
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (label
                                                                                               "igzy"
                                                                                               -7)
                                                                                              (("2"
                                                                                                (hide
                                                                                                 "cspz")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "2+j")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (skeep)
                                                                                                      (("2"
                                                                                                        (name
                                                                                                         "PD"
                                                                                                         "poly_divide(p(j), n(j))(p(1 + j), n(1 + j))(0)")
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (case
                                                                                                             "max_linear_div_power?(PD`rem,PD`rdeg,y)(mm-1)")
                                                                                                            (("1"
                                                                                                              (case
                                                                                                               "max_linear_div_power?(-c*PD`rem,PD`rdeg,y)(mm-1)")
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "max_linear_div_power_rew2"
                                                                                                                 3)
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "max_linear_div_power_rew2"
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       "igzy"
                                                                                                                       :dir
                                                                                                                       rl)
                                                                                                                      (("1"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide-all-but
                                                                                                                 (-1
                                                                                                                  1))
                                                                                                                (("2"
                                                                                                                  (rewrite
                                                                                                                   "max_linear_div_power_scal"
                                                                                                                   :dir
                                                                                                                   rl)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide
                                                                                                               (3
                                                                                                                4))
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "poly_divide_def")
                                                                                                                (("2"
                                                                                                                  (inst?)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       -2)
                                                                                                                      (("2"
                                                                                                                        (split
                                                                                                                         -)
                                                                                                                        (("1"
                                                                                                                          (copy
                                                                                                                           "mldpj")
                                                                                                                          (("1"
                                                                                                                            (rewrite
                                                                                                                             "max_linear_div_power_rew"
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (skolem
                                                                                                                                   -
                                                                                                                                   "bb")
                                                                                                                                  (("1"
                                                                                                                                    (flatten)
                                                                                                                                    (("1"
                                                                                                                                      (copy
                                                                                                                                       "mldpkp")
                                                                                                                                      (("1"
                                                                                                                                        (rewrite
                                                                                                                                         "max_linear_div_power_rew"
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (flatten)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (skolem
                                                                                                                                               -
                                                                                                                                               "cc")
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                (("1"
                                                                                                                                                  (lemma
                                                                                                                                                   "linear_power_is_differentiable")
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "kp-mm+1"
                                                                                                                                                     "y")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (skeep)
                                                                                                                                                        (("1"
                                                                                                                                                          (name
                                                                                                                                                           "A1"
                                                                                                                                                           "polynomial_prod(a,1-mm+kp,cc,n(1+j)-kp)")
                                                                                                                                                          (("1"
                                                                                                                                                            (case
                                                                                                                                                             "NOT polynomial(p(1 + j), n(1 + j)) = (LAMBDA (x): (x-y)^(mm-1)*polynomial(polynomial_prod(a, 1 - mm + kp, cc, n(1 + j) - kp),n(1+j)-mm+1)(x))")
                                                                                                                                                            (("1"
                                                                                                                                                              (decompose-equality
                                                                                                                                                               +)
                                                                                                                                                              (("1"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "polynomial_prod_def"
                                                                                                                                                                 1
                                                                                                                                                                 :dir
                                                                                                                                                                 rl)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   -4
                                                                                                                                                                   "x!1")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -4
                                                                                                                                                                     +)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       -7
                                                                                                                                                                       "x!1")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (lemma
                                                                                                                                                                         "expt_plus")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           -
                                                                                                                                                                           "mm-1"
                                                                                                                                                                           "kp-mm+1"
                                                                                                                                                                           "x!1-y")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (case
                                                                                                                                                                               "x!1 = y")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (replaces
                                                                                                                                                                                 -1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "^"
                                                                                                                                                                                     1)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "expt"
                                                                                                                                                                                       1)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         "allzero"
                                                                                                                                                                                         "1+j")
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (replace
                                                                                                                                                               -2)
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (replace
                                                                                                                                                                   -1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (case
                                                                                                                                                                       "NOT polynomial(A1,1+n(1+j)-mm)(y)=0")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "A1"
                                                                                                                                                                         1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (rewrite
                                                                                                                                                                           "polynomial_prod_def"
                                                                                                                                                                           1
                                                                                                                                                                           :dir
                                                                                                                                                                           rl)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (inst
                                                                                                                                                                             -5
                                                                                                                                                                             "y")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (replace
                                                                                                                                                                               -5
                                                                                                                                                                               +)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "^"
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "expt"
                                                                                                                                                                                     1)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (propax)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (name
                                                                                                                                                                           "DV"
                                                                                                                                                                           "polynomial_prod(PD`quot,PD`qdeg,A1,1+n(1+j)-mm)")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (case
                                                                                                                                                                             "NOT polynomial(PD`rem,PD`rdeg) = (LAMBDA (x): (x-y)^(mm-1)*(polynomial(bb,1+n(j)-mm)(x) - polynomial(DV,PD`qdeg+1+n(1+j)-mm)(x)))")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (decompose-equality
                                                                                                                                                                               1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "DV")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (rewrite
                                                                                                                                                                                   "polynomial_prod_def"
                                                                                                                                                                                   1
                                                                                                                                                                                   :dir
                                                                                                                                                                                   rl)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -11
                                                                                                                                                                                       "x!1")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           -11
                                                                                                                                                                                           :dir
                                                                                                                                                                                           rl)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             -12
                                                                                                                                                                                             "x!1")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (case
                                                                                                                                                                               "EXISTS (RD:[nat->real],RK:nat): FORALL (x): (polynomial(bb, 1 + n(j) - mm)(x) -
                                          polynomial(DV, PD`qdeg + 1 + n(1 + j) - mm)(x)) = polynomial(RD,RK)(x)")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (skeep)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (rewrite
                                                                                                                                                                                   "max_linear_div_power_rew2"
                                                                                                                                                                                   +)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     +
                                                                                                                                                                                     "RD"
                                                                                                                                                                                     "RK")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (split
                                                                                                                                                                                         +)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (skeep)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             -
                                                                                                                                                                                             "x")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (decompose-equality
                                                                                                                                                                                               -2)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -
                                                                                                                                                                                                 "x")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           -
                                                                                                                                                                                           "y")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (flatten)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (replaces
                                                                                                                                                                                               -1)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (invoke
                                                                                                                                                                                                   (case
                                                                                                                                                                                                    "%1 = 0")
                                                                                                                                                                                                   (!
                                                                                                                                                                                                    -1
                                                                                                                                                                                                    1
                                                                                                                                                                                                    2))
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (hide
                                                                                                                                                                                                     -1)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "DV"
                                                                                                                                                                                                       1)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (rewrite
                                                                                                                                                                                                         "polynomial_prod_def"
                                                                                                                                                                                                         1
                                                                                                                                                                                                         :dir
                                                                                                                                                                                                         rl)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (invoke
                                                                                                                                                                                                           (case
                                                                                                                                                                                                            "%1 = 0")
                                                                                                                                                                                                           (!
                                                                                                                                                                                                            1
                                                                                                                                                                                                            1
                                                                                                                                                                                                            2))
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (name
                                                                                                                                                                                 "K1"
                                                                                                                                                                                 "1+n(j)-mm")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (name
                                                                                                                                                                                     "K2"
                                                                                                                                                                                     "PD`qdeg+1+n(1+j)-mm")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (replace
                                                                                                                                                                                       -1)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (case
                                                                                                                                                                                         "NOT (K1>=0 AND K2>=0)")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (ground)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (hide-all-but
                                                                                                                                                                                           (-1
                                                                                                                                                                                            1))
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (name
                                                                                                                                                                                             "B1"
                                                                                                                                                                                             "LAMBDA (i:nat): IF i<=K1 THEN bb(i) ELSE 0 ENDIF")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (name
                                                                                                                                                                                               "B2"
                                                                                                                                                                                               "LAMBDA (i:nat): IF i<=K2 THEN DV(i) ELSE 0 ENDIF")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 +
                                                                                                                                                                                                 "B1-B2"
                                                                                                                                                                                                 "max(K1,K2)")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (skeep)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (case
                                                                                                                                                                                                     "polynomial(bb,K1) = polynomial(B1,max(K1,K2))")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (case
                                                                                                                                                                                                       "polynomial(DV,K2) = polynomial(B2,max(K1,K2))")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (replace
                                                                                                                                                                                                         -1)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (replace
                                                                                                                                                                                                           -2)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (rewrite
                                                                                                                                                                                                             "polynomial_sub")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "-")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (propax)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (hide
                                                                                                                                                                                                         2)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (decompose-equality
                                                                                                                                                                                                           1)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "polynomial"
                                                                                                                                                                                                             +
                                                                                                                                                                                                             2)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (lemma
                                                                                                                                                                                                               "sigma_split")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (inst?)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                   -
                                                                                                                                                                                                                   "K2")
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (replaces
                                                                                                                                                                                                                       -1)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (invoke
                                                                                                                                                                                                                         (case
                                                                                                                                                                                                                          "%1 = 0")
                                                                                                                                                                                                                         (!
                                                                                                                                                                                                                          1
                                                                                                                                                                                                                          2
                                                                                                                                                                                                                          2))
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (replaces
                                                                                                                                                                                                                           -1)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "polynomial"
                                                                                                                                                                                                                               +)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (rewrite
                                                                                                                                                                                                                                 "sigma_eq")
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (skosimp*)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                     "B2"
                                                                                                                                                                                                                                     1)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                          (hide
                                                                                                                                                                                                                           2)
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (rewrite
                                                                                                                                                                                                                             "sigma_restrict_eq_0")
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (skosimp*)
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                                 "B2"
                                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("3"
                                                                                                                                                                                                        (propax)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (hide
                                                                                                                                                                                                       2)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (decompose-equality
                                                                                                                                                                                                         1)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "polynomial"
                                                                                                                                                                                                           +
                                                                                                                                                                                                           2)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (lemma
                                                                                                                                                                                                             "sigma_split")
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (inst?)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                 -
                                                                                                                                                                                                                 "K1")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (replaces
                                                                                                                                                                                                                     -1)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (invoke
                                                                                                                                                                                                                       (case
                                                                                                                                                                                                                        "%1 = 0")
                                                                                                                                                                                                                       (!
                                                                                                                                                                                                                        1
                                                                                                                                                                                                                        2
                                                                                                                                                                                                                        2))
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (replaces
                                                                                                                                                                                                                         -1)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "polynomial"
                                                                                                                                                                                                                             +)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (rewrite
                                                                                                                                                                                                                               "sigma_eq")
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (skosimp*)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                   "B1"
                                                                                                                                                                                                                                   1)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                                        (hide
                                                                                                                                                                                                                         2)
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (rewrite
                                                                                                                                                                                                                           "sigma_restrict_eq_0")
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (skosimp*)
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "B1"
                                                                                                                                                                                                                               1)
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                nil
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("3"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("4"
                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("3"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("3"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (copy
                                                                                                                           "css")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "constructed_sturm_sequence?"
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (flatten)
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "1+j")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("3"
                                                    (skosimp*)
                                                    (("3" (assert) nil nil))
                                                    nil)
                                                   ("4"
                                                    (skosimp*)
                                                    (("4" (assert) nil nil))
                                                    nil)
                                                   ("5"
                                                    (skosimp*)
                                                    (("5" (assert) nil nil))
                                                    nil)
                                                   ("6"
                                                    (skosimp*)
                                                    (("6" (assert) nil nil))
                                                    nil)
                                                   ("7"
                                                    (skosimp*)
                                                    (("7" (assert) nil nil))
                                                    nil)
                                                   ("8"
                                                    (skosimp*)
                                                    (("8" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (copy "css")
                                      (("2"
                                        (expand
                                         "constructed_sturm_sequence?"
                                         -1)
                                        (("2"
                                          (flatten)
                                          (("2"
                                            (inst - "0")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (constructed_sturm_seq_repeated_root_struct-2 nil 3591975639
   ("" (skeep)
    (("" (label "css" -1)
      (("" (skeep)
        (("" (lemma "constructed_sturm_seq_repeated_root")
          (("" (inst?)
            (("" (assert)
              (("" (inst - "y")
                (("" (inst - "i")
                  (("" (assert)
                    (("" (inst-cp - "0")
                      (("" (inst-cp - "1")
                        (("" (label "allzero" -1)
                          (("" (assert)
                            (("" (lemma "poly_max_zero_power")
                              (("" (inst - "p(0)" "n(0)" "y")
                                (("" (assert)
                                  (("" (case "p(0)(n(0))/=0")
                                    (("1" (ground)
                                      (("1"
                                        (skolem -1 "mm")
                                        (("1"
                                          (inst + "mm")
                                          (("1"
                                            (case "NOT mm > 1")
                                            (("1"
                                              (case "NOT mm = 1")
                                              (("1" (assert) nil)
                                               ("2"
                                                (hide 1)
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (expand
                                                       "max_linear_div_power?"
                                                       -2)
                                                      (("2"
                                                        (skeep)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (expand "^" -4)
                                                            (("2"
                                                              (expand "expt")
                                                              (("2"
                                                                (copy "css")
                                                                (("2"
                                                                  (expand
                                                                   "constructed_sturm_sequence?"
                                                                   -1)
                                                                  (("2"
                                                                    (inst
                                                                     -5
                                                                     "y")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (assert)
                                                                          nil)))))))))))))))))))))))))))))
                                             ("2"
                                              (assert)
                                              (("2"
                                                (splash 2)
                                                (("1"
                                                  (inst-cp - "m-2")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (lemma
                                                       "max_linear_div_power_derivative")
                                                      (("1"
                                                        (inst
                                                         -
                                                         "p(0)"
                                                         "n(0)"
                                                         "y"
                                                         "mm")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (case "m = 2")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (expand
                                                                         "constructed_sturm_sequence?")
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (assert)
                                                                            nil)))))))))))
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (case
                                                                     "m = 1")
                                                                    (("1"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (replace
                                                                                 -12)
                                                                                (("1"
                                                                                  (expand
                                                                                   "poly_deriv")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil)))))))))))))))
                                                                     ("2"
                                                                      (label
                                                                       "PSty"
                                                                       4)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (copy
                                                                           "css")
                                                                          (("2"
                                                                            (expand
                                                                             "constructed_sturm_sequence?"
                                                                             -1)
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (inst
                                                                                 -7
                                                                                 "m")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (skeep)
                                                                                    (("2"
                                                                                      (case
                                                                                       "NOT polynomial(p(m),n(m)) = (LAMBDA (xy:real): 0)")
                                                                                      (("1"
                                                                                        (decompose-equality
                                                                                         1)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -5
                                                                                           1)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "polynomial"
                                                                                             1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "sigma")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "sigma")
                                                                                                (("1"
                                                                                                  (propax)
                                                                                                  nil)))))))))))
                                                                                       ("2"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("2"
                                                                                          (name
                                                                                           "PD"
                                                                                           "poly_divide(p(m - 2), n(m - 2))(p(m - 1), n(m - 1))
                                                                                                                                       (0)")
                                                                                          (("2"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("2"
                                                                                              (case
                                                                                               "polynomial(PD`rem,PD`rdeg) = (LAMBDA (xy:real): 0)")
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "constructed_sturm_seq_repeated_root_mth")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "m-1"
                                                                                                   "m"
                                                                                                   "n"
                                                                                                   "p"
                                                                                                   "y"
                                                                                                   "mm")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "m-1")
                                                                                                      (("1"
                                                                                                        (skeep)
                                                                                                        (("1"
                                                                                                          (lemma
                                                                                                           "poly_divide_def")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "p(m-2)"
                                                                                                             "p(m-1)"
                                                                                                             "0"
                                                                                                             "n(m-1)"
                                                                                                             "n(m-2)")
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -5)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (split
                                                                                                                   -)
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -4)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         "max_linear_div_power_rew"
                                                                                                                         -3)
                                                                                                                        (("1"
                                                                                                                          (flatten)
                                                                                                                          (("1"
                                                                                                                            (skolem
                                                                                                                             -
                                                                                                                             "bm1")
                                                                                                                            (("1"
                                                                                                                              (flatten)
                                                                                                                              (("1"
                                                                                                                                (case
                                                                                                                                 "NOT polynomial(p(m-1),n(m-1)) = (LAMBDA (x): (x - y) ^ kp * polynomial(bm1, n(m - 1) - kp)(x))")
                                                                                                                                (("1"
                                                                                                                                  (decompose-equality)
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (hide
                                                                                                                                   -5)
                                                                                                                                  (("2"
                                                                                                                                    (replace
                                                                                                                                     -1
                                                                                                                                     -2)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (case
                                                                                                                                         "EXISTS (aa:[nat->real],nm:nat): FORALL (x:real): polynomial(p(m-2),n(m-2))(x) = (x-y)^kp*polynomial(aa,nm)(x)")
                                                                                                                                        (("1"
                                                                                                                                          (skeep)
                                                                                                                                          (("1"
                                                                                                                                            (case
                                                                                                                                             "NOT kp = mm-1")
                                                                                                                                            (("1"
                                                                                                                                              (lemma
                                                                                                                                               "max_linear_div_power_lower_bound")
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -
                                                                                                                                                 "p(m-2)"
                                                                                                                                                 "n(m-2)"
                                                                                                                                                 "y"
                                                                                                                                                 "aa"
                                                                                                                                                 "kp"
                                                                                                                                                 "nm"
                                                                                                                                                 "mm-1")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil)))))
                                                                                                                                             ("2"
                                                                                                                                              (rewrite
                                                                                                                                               "max_linear_div_power_rew2"
                                                                                                                                               +)
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 +
                                                                                                                                                 "bm1"
                                                                                                                                                 "n(m-1)-kp")
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil)))))))))
                                                                                                                                         ("2"
                                                                                                                                          (inst
                                                                                                                                           +
                                                                                                                                           "polynomial_prod(PD`quot,PD`qdeg,bm1,n(m-1)-kp)"
                                                                                                                                           "PD`qdeg+n(m-1)-kp")
                                                                                                                                          (("1"
                                                                                                                                            (skeep)
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "x")
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -2
                                                                                                                                                 +)
                                                                                                                                                (("1"
                                                                                                                                                  (lemma
                                                                                                                                                   "polynomial_prod_def")
                                                                                                                                                  (("1"
                                                                                                                                                    (inst?)
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil)))))))))))
                                                                                                                                           ("2"
                                                                                                                                            (assert)
                                                                                                                                            nil)))))))))))
                                                                                                                                 ("3"
                                                                                                                                  (assert)
                                                                                                                                  nil)))))))))))))))
                                                                                                                   ("2"
                                                                                                                    (copy
                                                                                                                     "css")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "constructed_sturm_sequence?"
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (flatten)
                                                                                                                        (("2"
                                                                                                                          (inst?)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil)))))))))
                                                                                                                   ("3"
                                                                                                                    (assert)
                                                                                                                    (("3"
                                                                                                                      (copy
                                                                                                                       "css")
                                                                                                                      (("3"
                                                                                                                        (expand
                                                                                                                         "constructed_sturm_sequence?"
                                                                                                                         -1)
                                                                                                                        (("3"
                                                                                                                          (flatten)
                                                                                                                          (("3"
                                                                                                                            (inst
                                                                                                                             -2
                                                                                                                             "m-2"
                                                                                                                             "m-1")
                                                                                                                            (("3"
                                                                                                                              (assert)
                                                                                                                              nil)))))))))))))))))))))))))))))))
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 (-9
                                                                                                  1))
                                                                                                (("2"
                                                                                                  (decompose-equality)
                                                                                                  (("2"
                                                                                                    (decompose-equality
                                                                                                     -)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "x!1")
                                                                                                      (("2"
                                                                                                        (mult-by
                                                                                                         1
                                                                                                         "-c")
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           "scal_polynomial2")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                                   ("2"
                                                    (assert)
                                                    (("2"
                                                      (case "m = 1")
                                                      (("1"
                                                        (copy "css")
                                                        (("1"
                                                          (expand
                                                           "constructed_sturm_sequence?"
                                                           -1
                                                           :assert?
                                                           none)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (replace -2)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (copy
                                                                       -8)
                                                                      (("1"
                                                                        (expand
                                                                         "max_linear_div_power?"
                                                                         -1)
                                                                        (("1"
                                                                          (propax)
                                                                          nil)))))))))))))))))))
                                                       ("2"
                                                        (assert)
                                                        nil)))))))
                                                 ("2"
                                                  (induct "j")
                                                  (("1" (assert) nil)
                                                   ("2"
                                                    (skolem 1 "j")
                                                    (("2"
                                                      (flatten)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (case "j = 0")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (replaces -1)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (rewrite
                                                                   "max_linear_div_power_rew2"
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "max_linear_div_power?"
                                                                     -4)
                                                                    (("1"
                                                                      (skosimp*)
                                                                      (("1"
                                                                        (inst
                                                                         +
                                                                         "q!1"
                                                                         "n(0)-mm")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (copy
                                                                             "css")
                                                                            (("1"
                                                                              (expand
                                                                               "constructed_sturm_sequence?"
                                                                               -1
                                                                               :assert?
                                                                               none)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil)))))))))
                                                                         ("2"
                                                                          (assert)
                                                                          nil)))))))))))))))
                                                           ("2"
                                                            (assert)
                                                            (("2"
                                                              (lemma
                                                               "constructed_sturm_seq_repeated_root_mth")
                                                              (("2"
                                                                (inst?)
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "m-1"
                                                                   "m")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (label
                                                                       "mldpj"
                                                                       -2)
                                                                      (("2"
                                                                        (inst-cp
                                                                         -
                                                                         "1+j")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (skeep)
                                                                            (("2"
                                                                              (case
                                                                               "NOT kp > mm-1")
                                                                              (("1"
                                                                                (assert)
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 -3)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (label
                                                                                     "mldpkp"
                                                                                     -3)
                                                                                    (("2"
                                                                                      (copy
                                                                                       "css")
                                                                                      (("2"
                                                                                        (label
                                                                                         "cspz"
                                                                                         -1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "constructed_sturm_sequence?"
                                                                                           "cspz")
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (label
                                                                                               "igzy"
                                                                                               -7)
                                                                                              (("2"
                                                                                                (hide
                                                                                                 "cspz")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "2+j")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (skeep)
                                                                                                      (("2"
                                                                                                        (name
                                                                                                         "PD"
                                                                                                         "poly_divide(p(j), n(j))(p(1 + j), n(1 + j))(0)")
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (case
                                                                                                             "max_linear_div_power?(PD`rem,PD`rdeg,y)(mm-1)")
                                                                                                            (("1"
                                                                                                              (case
                                                                                                               "max_linear_div_power?(-c*PD`rem,PD`rdeg,y)(mm-1)")
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "max_linear_div_power_rew2"
                                                                                                                 3)
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "max_linear_div_power_rew2"
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       "igzy"
                                                                                                                       :dir
                                                                                                                       rl)
                                                                                                                      (("1"
                                                                                                                        (propax)
                                                                                                                        nil)))))))))
                                                                                                               ("2"
                                                                                                                (hide-all-but
                                                                                                                 (-1
                                                                                                                  1))
                                                                                                                (("2"
                                                                                                                  (rewrite
                                                                                                                   "max_linear_div_power_scal"
                                                                                                                   :dir
                                                                                                                   rl)
                                                                                                                  nil)))))
                                                                                                             ("2"
                                                                                                              (hide
                                                                                                               (3
                                                                                                                4))
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "poly_divide_def")
                                                                                                                (("2"
                                                                                                                  (inst?)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       -2)
                                                                                                                      (("2"
                                                                                                                        (split
                                                                                                                         -)
                                                                                                                        (("1"
                                                                                                                          (copy
                                                                                                                           "mldpj")
                                                                                                                          (("1"
                                                                                                                            (rewrite
                                                                                                                             "max_linear_div_power_rew"
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (skolem
                                                                                                                                   -
                                                                                                                                   "bb")
                                                                                                                                  (("1"
                                                                                                                                    (flatten)
                                                                                                                                    (("1"
                                                                                                                                      (copy
                                                                                                                                       "mldpkp")
                                                                                                                                      (("1"
                                                                                                                                        (rewrite
                                                                                                                                         "max_linear_div_power_rew"
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (flatten)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (skolem
                                                                                                                                               -
                                                                                                                                               "cc")
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                (("1"
                                                                                                                                                  (lemma
                                                                                                                                                   "linear_power_is_differentiable")
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "kp-mm+1"
                                                                                                                                                     "y")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (skeep)
                                                                                                                                                        (("1"
                                                                                                                                                          (name
                                                                                                                                                           "A1"
                                                                                                                                                           "polynomial_prod(a,1-mm+kp,cc,n(1+j)-kp)")
                                                                                                                                                          (("1"
                                                                                                                                                            (case
                                                                                                                                                             "NOT polynomial(p(1 + j), n(1 + j)) = (LAMBDA (x): (x-y)^(mm-1)*polynomial(polynomial_prod(a, 1 - mm + kp, cc, n(1 + j) - kp),n(1+j)-mm+1)(x))")
                                                                                                                                                            (("1"
                                                                                                                                                              (decompose-equality
                                                                                                                                                               +)
                                                                                                                                                              (("1"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "polynomial_prod_def"
                                                                                                                                                                 1
                                                                                                                                                                 :dir
                                                                                                                                                                 rl)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   -4
                                                                                                                                                                   "x!1")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -4
                                                                                                                                                                     +)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       -7
                                                                                                                                                                       "x!1")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (lemma
                                                                                                                                                                         "expt_plus")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           -
                                                                                                                                                                           "mm-1"
                                                                                                                                                                           "kp-mm+1"
                                                                                                                                                                           "x!1-y")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (case
                                                                                                                                                                               "x!1 = y")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (replaces
                                                                                                                                                                                 -1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "^"
                                                                                                                                                                                     1)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "expt"
                                                                                                                                                                                       1)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         "allzero"
                                                                                                                                                                                         "1+j")
                                                                                                                                                                                        nil)))))))))
                                                                                                                                                                               ("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil)))))))))))))))))))
                                                                                                                                                             ("2"
                                                                                                                                                              (replace
                                                                                                                                                               -2)
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (replace
                                                                                                                                                                   -1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (case
                                                                                                                                                                       "NOT polynomial(A1,1+n(1+j)-mm)(y)=0")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "A1"
                                                                                                                                                                         1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (rewrite
                                                                                                                                                                           "polynomial_prod_def"
                                                                                                                                                                           1
                                                                                                                                                                           :dir
                                                                                                                                                                           rl)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (inst
                                                                                                                                                                             -5
                                                                                                                                                                             "y")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (replace
                                                                                                                                                                               -5
                                                                                                                                                                               +)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "^"
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "expt"
                                                                                                                                                                                     1)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (propax)
                                                                                                                                                                                      nil)))))))))))))))
                                                                                                                                                                       ("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (name
                                                                                                                                                                           "DV"
                                                                                                                                                                           "polynomial_prod(PD`quot,PD`qdeg,A1,1+n(1+j)-mm)")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (case
                                                                                                                                                                             "NOT polynomial(PD`rem,PD`rdeg) = (LAMBDA (x): (x-y)^(mm-1)*(polynomial(bb,1+n(j)-mm)(x) - polynomial(DV,PD`qdeg+1+n(1+j)-mm)(x)))")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (decompose-equality
                                                                                                                                                                               1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "DV")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (rewrite
                                                                                                                                                                                   "polynomial_prod_def"
                                                                                                                                                                                   1
                                                                                                                                                                                   :dir
                                                                                                                                                                                   rl)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -11
                                                                                                                                                                                       "x!1")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           -11
                                                                                                                                                                                           :dir
                                                                                                                                                                                           rl)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             -12
                                                                                                                                                                                             "x!1")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil)))))))))))))))))
                                                                                                                                                                             ("2"
                                                                                                                                                                              (case
                                                                                                                                                                               "EXISTS (RD:[nat->real],RK:nat): FORALL (x): (polynomial(bb, 1 + n(j) - mm)(x) -
                                          polynomial(DV, PD`qdeg + 1 + n(1 + j) - mm)(x)) = polynomial(RD,RK)(x)")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (skeep)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (rewrite
                                                                                                                                                                                   "max_linear_div_power_rew2"
                                                                                                                                                                                   +)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     +
                                                                                                                                                                                     "RD"
                                                                                                                                                                                     "RK")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (split
                                                                                                                                                                                         +)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (skeep)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             -
                                                                                                                                                                                             "x")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (decompose-equality
                                                                                                                                                                                               -2)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -
                                                                                                                                                                                                 "x")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil)))))))))
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           -
                                                                                                                                                                                           "y")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (flatten)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (replaces
                                                                                                                                                                                               -1)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (invoke
                                                                                                                                                                                                   (case
                                                                                                                                                                                                    "%1 = 0")
                                                                                                                                                                                                   (!
                                                                                                                                                                                                    -1
                                                                                                                                                                                                    1
                                                                                                                                                                                                    2))
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (hide
                                                                                                                                                                                                     -1)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "DV"
                                                                                                                                                                                                       1)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (rewrite
                                                                                                                                                                                                         "polynomial_prod_def"
                                                                                                                                                                                                         1
                                                                                                                                                                                                         :dir
                                                                                                                                                                                                         rl)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (invoke
                                                                                                                                                                                                           (case
                                                                                                                                                                                                            "%1 = 0")
                                                                                                                                                                                                           (!
                                                                                                                                                                                                            1
                                                                                                                                                                                                            1
                                                                                                                                                                                                            2))
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil)))))))))))))))))))))))))))))
                                                                                                                                                                               ("2"
                                                                                                                                                                                (name
                                                                                                                                                                                 "K1"
                                                                                                                                                                                 "1+n(j)-mm")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (name
                                                                                                                                                                                     "K2"
                                                                                                                                                                                     "PD`qdeg+1+n(1+j)-mm")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (replace
                                                                                                                                                                                       -1)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (case
                                                                                                                                                                                         "NOT (K1>=0 AND K2>=0)")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (ground)
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (hide-all-but
                                                                                                                                                                                           (-1
                                                                                                                                                                                            1))
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (name
                                                                                                                                                                                             "B1"
                                                                                                                                                                                             "LAMBDA (i:nat): IF i<=K1 THEN bb(i) ELSE 0 ENDIF")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (name
                                                                                                                                                                                               "B2"
                                                                                                                                                                                               "LAMBDA (i:nat): IF i<=K2 THEN DV(i) ELSE 0 ENDIF")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 +
                                                                                                                                                                                                 "B1-B2"
                                                                                                                                                                                                 "max(K1,K2)")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (skeep)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (case
                                                                                                                                                                                                     "polynomial(bb,K1) = polynomial(B1,max(K1,K2))")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (case
                                                                                                                                                                                                       "polynomial(DV,K2) = polynomial(B2,max(K1,K2))")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (replace
                                                                                                                                                                                                         -1)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (replace
                                                                                                                                                                                                           -2)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (rewrite
                                                                                                                                                                                                             "polynomial_sub")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "-")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (propax)
                                                                                                                                                                                                                  nil)))))))))))
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (hide
                                                                                                                                                                                                         2)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (decompose-equality
                                                                                                                                                                                                           1)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "polynomial"
                                                                                                                                                                                                             +
                                                                                                                                                                                                             2)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (lemma
                                                                                                                                                                                                               "sigma_split")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (inst?)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                   -
                                                                                                                                                                                                                   "K2")
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (replaces
                                                                                                                                                                                                                       -1)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (invoke
                                                                                                                                                                                                                         (case
                                                                                                                                                                                                                          "%1 = 0")
                                                                                                                                                                                                                         (!
                                                                                                                                                                                                                          1
                                                                                                                                                                                                                          2
                                                                                                                                                                                                                          2))
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (replaces
                                                                                                                                                                                                                           -1)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "polynomial"
                                                                                                                                                                                                                               +)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (rewrite
                                                                                                                                                                                                                                 "sigma_eq")
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (skosimp*)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                     "B2"
                                                                                                                                                                                                                                     1)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                                                      nil)))))))))))))
                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                          (hide
                                                                                                                                                                                                                           2)
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (rewrite
                                                                                                                                                                                                                             "sigma_restrict_eq_0")
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (skosimp*)
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                                 "B2"
                                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                  nil)))))))))))))))))))))))))))
                                                                                                                                                                                                       ("3"
                                                                                                                                                                                                        (propax)
                                                                                                                                                                                                        nil)))
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (hide
                                                                                                                                                                                                       2)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (decompose-equality
                                                                                                                                                                                                         1)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "polynomial"
                                                                                                                                                                                                           +
                                                                                                                                                                                                           2)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (lemma
                                                                                                                                                                                                             "sigma_split")
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (inst?)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                 -
                                                                                                                                                                                                                 "K1")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (replaces
                                                                                                                                                                                                                     -1)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (invoke
                                                                                                                                                                                                                       (case
                                                                                                                                                                                                                        "%1 = 0")
                                                                                                                                                                                                                       (!
                                                                                                                                                                                                                        1
                                                                                                                                                                                                                        2
                                                                                                                                                                                                                        2))
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (replaces
                                                                                                                                                                                                                         -1)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "polynomial"
                                                                                                                                                                                                                             +)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (rewrite
                                                                                                                                                                                                                               "sigma_eq")
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (skosimp*)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                   "B1"
                                                                                                                                                                                                                                   1)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                                                    nil)))))))))))))
                                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                                        (hide
                                                                                                                                                                                                                         2)
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (rewrite
                                                                                                                                                                                                                           "sigma_restrict_eq_0")
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (skosimp*)
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "B1"
                                                                                                                                                                                                                               1)
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                nil)))))))))))))))))))))))))))
                                                                                                                                                                                                     ("3"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("4"
                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                      nil)))))
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil)))))))))))))))))))
                                                                                                                                                                               ("3"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil)))
                                                                                                                                                                             ("3"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil)))))))))))))))))))))))))))))))))))))))))))))))))))))
                                                                                                                         ("2"
                                                                                                                          (copy
                                                                                                                           "css")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "constructed_sturm_sequence?"
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (flatten)
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "1+j")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil)))))))))
                                                                                                                         ("3"
                                                                                                                          (copy
                                                                                                                           "css")
                                                                                                                          (("3"
                                                                                                                            (expand
                                                                                                                             "constructed_sturm_sequence?"
                                                                                                                             -1)
                                                                                                                            (("3"
                                                                                                                              (flatten)
                                                                                                                              (("3"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "j"
                                                                                                                                 "1+j")
                                                                                                                                (("3"
                                                                                                                                  (assert)
                                                                                                                                  nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                                   ("3"
                                                    (skosimp*)
                                                    (("3" (assert) nil)))
                                                   ("4"
                                                    (skosimp*)
                                                    (("4" (assert) nil)))
                                                   ("5"
                                                    (skosimp*)
                                                    (("5" (assert) nil)))
                                                   ("6"
                                                    (skosimp*)
                                                    (("6" (assert) nil)))
                                                   ("7"
                                                    (skosimp*)
                                                    (("7" (assert) nil)))
                                                   ("8"
                                                    (skosimp*)
                                                    (("8"
                                                      (assert)
                                                      nil)))))))))))))))))
                                     ("2" (copy "css")
                                      (("2"
                                        (expand
                                         "constructed_sturm_sequence?"
                                         -1)
                                        (("2"
                                          (flatten)
                                          (("2"
                                            (inst - "0")
                                            (("2"
                                              (assert)
                                              nil))))))))))))))))))))))))))))))))))))))))))
    nil)
   ((constructed_sturm_seq_repeated_root formula-decl nil sturm nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (poly_max_zero_power formula-decl nil more_polynomial_props reals)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (p skolem-const-decl "[nat -> [nat -> real]]" sturm nil)
    (y skolem-const-decl "real" sturm nil)
    (mm skolem-const-decl "posnat" sturm nil)
    (pred type-eq-decl nil defined_types nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (j!1 skolem-const-decl "nat" sturm nil)
    (odd_plus_even_is_odd application-judgement "odd_int" integers nil)
    (linear_power_is_differentiable formula-decl nil more_polynomial_props
     reals)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (A1 skolem-const-decl "[nat -> real]" sturm nil)
    (odd_minus_even_is_odd application-judgement "odd_int" integers nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (B1 skolem-const-decl "[nat -> real]" sturm nil)
    (polynomial_sub formula-decl nil polynomials reals)
    (sigma_split formula-decl nil sigma reals)
    (sigma_restrict_eq_0 formula-decl nil sigma reals)
    (B2 skolem-const-decl "[nat -> real]" sturm nil)
    (sigma_eq formula-decl nil sigma reals)
    (T_high type-eq-decl nil sigma reals) (T_low type-eq-decl nil sigma reals)
    (- const-decl "[T -> real]" real_fun_ops reals)
    (K2 skolem-const-decl "int" sturm nil)
    (K1 skolem-const-decl "int" sturm nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (int_max application-judgement "{k: int | i <= k AND j <= k}" real_defs
     nil)
    (rat_max application-judgement "{s: rat | s >= q AND s >= r}" real_defs
     nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (PD skolem-const-decl "DivType" sturm nil)
    (j skolem-const-decl "nat" sturm nil)
    (DV skolem-const-decl "[nat -> real]" sturm nil)
    (x!1 skolem-const-decl "real" sturm nil)
    (nat_exp application-judgement "nat" exponentiation nil)
    (expt_plus formula-decl nil exponentiation nil)
    (even_minus_even_is_even application-judgement "even_int" integers nil)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (max_linear_div_power_scal formula-decl nil more_polynomial_props reals)
    (m skolem-const-decl "nat" sturm nil)
    (max_linear_div_power_derivative formula-decl nil more_polynomial_props
     reals)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (sigma def-decl "real" sigma reals)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types nil)
    (DivType type-eq-decl nil polynomial_division nil)
    (poly_divide def-decl "DivType" polynomial_division nil)
    (poly_divide_def formula-decl nil polynomial_division nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (PD skolem-const-decl "DivType" sturm nil)
    (polynomial_prod const-decl "real" polynomials reals)
    (polynomial_prod_def formula-decl nil polynomials reals)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (max_linear_div_power_rew2 formula-decl nil more_polynomial_props reals)
    (max_linear_div_power_lower_bound formula-decl nil more_polynomial_props
     reals)
    (kp skolem-const-decl "posnat" sturm nil)
    (n skolem-const-decl "[nat -> nat]" sturm nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (max_linear_div_power_rew formula-decl nil more_polynomial_props reals)
    (below type-eq-decl nil naturalnumbers nil)
    (constructed_sturm_seq_repeated_root_mth formula-decl nil sturm nil)
    (scal_polynomial2 formula-decl nil polynomials reals)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (both_sides_times1 formula-decl nil real_props nil)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (TRUE const-decl "bool" booleans nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (bijective? const-decl "bool" functions nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (< const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (max_linear_div_power? const-decl "bool" more_polynomial_props reals)
    (expt def-decl "real" exponentiation nil)
    (constructed_sturm_sequence? const-decl "bool" sturm nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (^ const-decl "real" exponentiation nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (sequence type-eq-decl nil sequences nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers nil))
   nil)
  (constructed_sturm_seq_repeated_root_struct-1 nil 3591101713
   ("" (skeep)
    (("" (label "css" -1)
      (("" (skeep)
        (("" (lemma "constructed_sturm_seq_repeated_root")
          (("" (inst?)
            (("" (assert)
              (("" (inst - "y")
                (("" (inst - "i")
                  (("" (assert)
                    (("" (inst-cp - "0")
                      (("" (inst-cp - "1")
                        (("" (assert)
                          (("" (lemma "poly_max_zero_power")
                            (("" (inst - "p(0)" "n(0)" "y")
                              (("" (assert)
                                (("" (case "p(0)(n(0))/=0")
                                  (("1" (ground)
                                    (("1" (skolem -1 "mm")
                                      (("1"
                                        (inst + "mm")
                                        (("1"
                                          (case "NOT mm > 1")
                                          (("1"
                                            (case "NOT mm = 1")
                                            (("1" (assert) nil nil)
                                             ("2"
                                              (hide 1)
                                              (("2"
                                                (replace -1)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (expand
                                                     "max_linear_div_power?"
                                                     -2)
                                                    (("2"
                                                      (skeep)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (expand "^" -4)
                                                          (("2"
                                                            (expand "expt")
                                                            (("2"
                                                              (copy "css")
                                                              (("2"
                                                                (expand
                                                                 "constructed_sturm_sequence?"
                                                                 -1)
                                                                (("2"
                                                                  (inst
                                                                   -5
                                                                   "y")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (assert)
                                            (("2"
                                              (induct "j" 2)
                                              (("1" (assert) nil nil)
                                               ("2"
                                                (skolem 1 "jj")
                                                (("2"
                                                  (flatten)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (case "jj = 0")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (replace -1)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (lemma
                                                                 "max_linear_div_power_derivative")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "p(0)"
                                                                   "n(0)"
                                                                   "y"
                                                                   "mm")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (copy
                                                                         "css")
                                                                        (("1"
                                                                          (expand
                                                                           "constructed_sturm_sequence?"
                                                                           -1)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          (("2"
                                                            (case
                                                             "max_linear_div_power?(p(2 + jj), n(2 + jj), y)(mm - 1)")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (case
                                                                 "NOT 2+jj = m")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (replace -1)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (expand
                                                                       "max_linear_div_power?"
                                                                       -2)
                                                                      (("2"
                                                                        (case
                                                                         "polynomial(p(m),n(m)) = (LAMBDA (x:real): 0)")
                                                                        (("1"
                                                                          (replace
                                                                           -1)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (skeep)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (case
                                                                                   "EXISTS (xy:real): xy/=y AND polynomial(b,1+n(m)-mm)(xy)/=0")
                                                                                  (("1"
                                                                                    (skeep
                                                                                     -)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "xy")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (lemma
                                                                                           "nzreal_times_nzreal_is_nzreal")
                                                                                          (("1"
                                                                                            (inst?)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil)
                                                                                             ("2"
                                                                                              (lemma
                                                                                               "expt_nonzero")
                                                                                              (("2"
                                                                                                (inst?)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     (1
                                                                                      2))
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "poly_continuous")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "b"
                                                                                         "1+n(m)-mm"
                                                                                         "y"
                                                                                         "abs(polynomial(b,1+n(m)-mm)(y))/2")
                                                                                        (("1"
                                                                                          (skeep)
                                                                                          (("1"
                                                                                            (inst
                                                                                             +
                                                                                             "y-delta/2")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 "y-delta/2")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "abs"
                                                                                                     -1
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "abs")
                                                                                                      (("1"
                                                                                                        (lift-if)
                                                                                                        (("1"
                                                                                                          (lift-if)
                                                                                                          (("1"
                                                                                                            (lift-if)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           ("css"
                                                                            1))
                                                                          (("2"
                                                                            (expand
                                                                             "constructed_sturm_sequence?")
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (replace
                                                                                 -5)
                                                                                (("2"
                                                                                  (expand
                                                                                   "polynomial"
                                                                                   +)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "sigma")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "sigma")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide 4)
                                                              (("2"
                                                                (lemma
                                                                 "constructed_sturm_seq_repeated_root_mth")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "m-1"
                                                                   "m"
                                                                   "n"
                                                                   "p"
                                                                   "y"
                                                                   "mm")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "1+jj")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (skeep)
                                                                          (("2"
                                                                            (hide
                                                                             3)
                                                                            (("2"
                                                                              (rewrite
                                                                               "max_linear_div_power_rew"
                                                                               +)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (case
                                                                                   " EXISTS (b: [nat -> real],kz:nat):
        (FORALL (x):
           polynomial(p(2 + jj), n(2 + jj))(x) =
            ((x - y) ^ (mm - 1)) * polynomial(b, kz)(x))
         AND NOT polynomial(b, kz)(y) = 0")
                                                                                  (("1"
                                                                                    (skeep)
                                                                                    (("1"
                                                                                      (case
                                                                                       "EXISTS (RD:nat): RD<=kz AND b(RD)/=0 AND FORALL (i:nat): i>RD AND i<=kz IMPLIES b(i)=0")
                                                                                      (("1"
                                                                                        (skeep)
                                                                                        (("1"
                                                                                          (lemma
                                                                                           "polynomial_div_linear_power_degree")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "y"
                                                                                             "p(2+jj)"
                                                                                             "b"
                                                                                             "n(2+jj)"
                                                                                             "RD"
                                                                                             "mm-1")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (split
                                                                                                 -)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       +
                                                                                                       "b")
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "NOT 1+n(2+jj)-mm = RD")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (case
                                                                                                               "polynomial(b,RD) = polynomial(b,kz)")
                                                                                                              (("1"
                                                                                                                (ground)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide-all-but
                                                                                                                 (-4
                                                                                                                  -5
                                                                                                                  1))
                                                                                                                (("2"
                                                                                                                  (decompose-equality
                                                                                                                   +)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "polynomial"
                                                                                                                     +
                                                                                                                     2)
                                                                                                                    (("2"
                                                                                                                      (lemma
                                                                                                                       "sigma_split")
                                                                                                                      (("2"
                                                                                                                        (inst?)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "RD")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (replaces
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "polynomial")
                                                                                                                                (("2"
                                                                                                                                  (rewrite
                                                                                                                                   "sigma_restrict_eq_0")
                                                                                                                                  (("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (skosimp*)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "i!1")
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (skeep)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -3
                                                                                                     "x")
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -3)
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "polynomial(b,RD) = polynomial(b,kz)")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           (-1
                                                                                                            -2
                                                                                                            1))
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "polynomial"
                                                                                                             +
                                                                                                             2)
                                                                                                            (("2"
                                                                                                              (decompose-equality
                                                                                                               +)
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "sigma_split")
                                                                                                                (("2"
                                                                                                                  (inst?)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "RD")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (replaces
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "polynomial")
                                                                                                                          (("2"
                                                                                                                            (rewrite
                                                                                                                             "sigma_restrict_eq_0")
                                                                                                                            (("2"
                                                                                                                              (skosimp*)
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "i!1")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("3"
                                                                                                  (copy
                                                                                                   "css")
                                                                                                  (("3"
                                                                                                    (expand
                                                                                                     "constructed_sturm_sequence?"
                                                                                                     -1)
                                                                                                    (("3"
                                                                                                      (flatten)
                                                                                                      (("3"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "2+jj")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (postpone)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (postpone)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (postpone)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3" (postpone) nil nil)
                                               ("4" (postpone) nil nil)
                                               ("5" (postpone) nil nil)
                                               ("6" (postpone) nil nil)
                                               ("7" (postpone) nil nil)
                                               ("8" (postpone) nil nil)
                                               ("9" (postpone) nil nil)
                                               ("10" (postpone) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (postpone) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (constructed_sturm_seq_first_signs_eq 0
  (constructed_sturm_seq_first_signs_eq-2 "" 3790098425
   ("" (skeep)
    ((""
      (case "NOT (polynomial(p(0), n(0))(x) /= 0 AND
                                                  polynomial(p(0), n(0))(y) /= 0)")
      (("1" (hide 2)
        (("1" (inst-cp - "x")
          (("1" (inst - "y") (("1" (ground) nil nil)) nil)) nil))
        nil)
       ("2" (flatten)
        (("2" (assert)
          (("2" (inst-cp - "b")
            (("2" (assert)
              (("2" (flatten)
                (("2"
                  (case "polynomial(poly_deriv(p(0)),max(n(0)-1,0))(b) = 0")
                  (("1" (hide -5)
                    (("1" (expand "constructed_sturm_sequence?")
                      (("1" (flatten)
                        (("1" (assert)
                          (("1" (expand "max") (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (lemma "poly_continuous")
                    (("2"
                      (inst - "poly_deriv(p(0))" "max(n(0)-1,0)" "b"
                       "abs(polynomial(poly_deriv(p(0)),n(0)-1)(b))")
                      (("1" (skeep -)
                        (("1"
                          (case "EXISTS (deltiv:posreal): FORALL (x1:real): abs(b-x1)<deltiv IMPLIES (abs(b-x1)<delta AND x < x1 AND x1 < y)")
                          (("1"
                            (case "sign_ext(polynomial(p(0), n(0))(x)) =
                                                                   -sign_ext(polynomial(poly_deriv(p(0)), max(n(0)-1,0))(b))
                                                                   AND
                                                                   sign_ext(polynomial(p(0), n(0))(y)) =
                                                                    sign_ext(polynomial(poly_deriv(p(0)), max(n(0)-1,0))(b))")
                            (("1" (hide (-2 -3))
                              (("1" (flatten)
                                (("1" (expand "constructed_sturm_sequence?")
                                  (("1" (flatten)
                                    (("1" (assert)
                                      (("1"
                                        (expand "max")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 6)
                              (("2"
                                (case "polynomial(poly_deriv(p(0)), max(n(0)-1,0))(b)>0")
                                (("1" (skeep -2)
                                  (("1"
                                    (case "FORALL (x1,x2:real): abs(x1-b)<deltiv AND abs(x2-b)<deltiv AND x1<x2 IMPLIES polynomial(p(0),n(0))(x1) < polynomial(p(0),n(0))(x2)")
                                    (("1" (inst-cp - "b-deltiv/2" "b")
                                      (("1"
                                        (inst-cp - "b" "b+deltiv/2")
                                        (("1"
                                          (label "hyplem" -1)
                                          (("1"
                                            (hide "hyplem")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (split +)
                                                (("1"
                                                  (expand "sign_ext")
                                                  (("1"
                                                    (lift-if)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (split 1)
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          (("2"
                                                            (hide -1)
                                                            (("2"
                                                              (split -)
                                                              (("1"
                                                                (replace -7)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (lemma
                                                                     "poly_intermediate_value_dec")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "p(0)"
                                                                       "0"
                                                                       "n(0)"
                                                                       "x"
                                                                       "b-deltiv/2")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (split
                                                                           -)
                                                                          (("1"
                                                                            (skeep
                                                                             -1)
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "cc")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "cc")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "cc")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (inst
                                                                             -
                                                                             "b-deltiv/2")
                                                                            (("2"
                                                                              (split
                                                                               -)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand "sign_ext")
                                                  (("2"
                                                    (lift-if)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (split 1)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (hide -3)
                                                            (("1"
                                                              (split -)
                                                              (("1"
                                                                (replace -8)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (lemma
                                                                     "poly_intermediate_value_dec")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "p(0)"
                                                                       "0"
                                                                       "n(0)"
                                                                       "b+deltiv/2"
                                                                       "y")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (split
                                                                           -)
                                                                          (("1"
                                                                            (skeep
                                                                             -1)
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "cc")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "cc")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "cc")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (inst
                                                                             -
                                                                             "b+deltiv/2")
                                                                            (("2"
                                                                              (split
                                                                               -)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (skeep)
                                      (("2"
                                        (lemma "poly_strictly_increasing")
                                        (("2"
                                          (inst - "p(0)" "n(0)" "x1" "x2")
                                          (("2"
                                            (assert)
                                            (("2"
                                              (case "n(0)=0")
                                              (("1"
                                                (replaces -1)
                                                (("1"
                                                  (expand "polynomial")
                                                  (("1"
                                                    (expand "sigma")
                                                    (("1"
                                                      (expand "sigma")
                                                      (("1" (propax) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (assert)
                                                (("2"
                                                  (skeep)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (inst - "c")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (split -)
                                                          (("1"
                                                            (inst - "c")
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "abs")
                                                                  (("1"
                                                                    (lift-if)
                                                                    (("1"
                                                                      (ground)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "abs"
                                                             (-1
                                                              -2
                                                              -3
                                                              -4
                                                              -5
                                                              1))
                                                            (("2"
                                                              (lift-if)
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (case "polynomial(poly_deriv(p(0)), max(n(0)-1,0))(b)<0")
                                  (("1" (hide 1)
                                    (("1" (skeep -2)
                                      (("1"
                                        (case
                                         "FORALL (x1,x2:real): abs(x1-b)<deltiv AND abs(x2-b)<deltiv AND x1<x2 IMPLIES polynomial(p(0),n(0))(x1) > polynomial(p(0),n(0))(x2)")
                                        (("1"
                                          (inst-cp - "b-deltiv/2" "b")
                                          (("1"
                                            (inst-cp - "b" "b+deltiv/2")
                                            (("1"
                                              (label "hyplem" -1)
                                              (("1"
                                                (hide "hyplem")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (split +)
                                                    (("1"
                                                      (expand "sign_ext")
                                                      (("1"
                                                        (lift-if)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (split 1)
                                                            (("1"
                                                              (replace -9)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (lemma
                                                                   "poly_intermediate_value_inc")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "p(0)"
                                                                     "0"
                                                                     "n(0)"
                                                                     "x"
                                                                     "b-deltiv/2")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (split
                                                                         -)
                                                                        (("1"
                                                                          (skeep
                                                                           -1)
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "cc")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "cc")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "cc")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (inst
                                                                           -
                                                                           "b-deltiv/2")
                                                                          (("2"
                                                                            (split
                                                                             -3)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (hide-all-but
                                                                                 2)
                                                                                (("1"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (assert)
                                                                          (("3"
                                                                            (hide-all-but
                                                                             2)
                                                                            (("3"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand "sign_ext")
                                                      (("2"
                                                        (lift-if)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (split 1)
                                                            (("1"
                                                              (propax)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (hide -2)
                                                                (("2"
                                                                  (split -)
                                                                  (("1"
                                                                    (replace
                                                                     -7)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (lemma
                                                                         "poly_intermediate_value_inc")
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "p(0)"
                                                                           "0"
                                                                           "n(0)"
                                                                           "b+deltiv/2"
                                                                           "y")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (split
                                                                               -)
                                                                              (("1"
                                                                                (skeep
                                                                                 -1)
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "cc")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "cc")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "cc")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (inst
                                                                                 -
                                                                                 "b+deltiv/2")
                                                                                (("2"
                                                                                  (split
                                                                                   -)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("2"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide-all-but
                                                                     1)
                                                                    (("2"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (skeep)
                                          (("2"
                                            (lemma "poly_strictly_decreasing")
                                            (("2"
                                              (inst - "p(0)" "n(0)" "x1" "x2")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (case "n(0)=0")
                                                  (("1"
                                                    (replaces -1)
                                                    (("1"
                                                      (expand "polynomial")
                                                      (("1"
                                                        (expand "sigma")
                                                        (("1"
                                                          (expand "sigma")
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    (("2"
                                                      (skeep)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (inst - "c")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (split -)
                                                              (("1"
                                                                (inst - "c")
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "abs")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "abs"
                                                                 (-1
                                                                  -2
                                                                  -3
                                                                  -4
                                                                  -5
                                                                  1))
                                                                (("2"
                                                                  (lift-if)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("3" (assert) nil nil))
                            nil)
                           ("2" (inst + "min(delta,min(b-x,y-b))")
                            (("1" (hide-all-but (-2 -3 1))
                              (("1" (grind) nil nil)) nil)
                             ("2" (hide-all-but (-2 -3 1))
                              (("2" (grind) nil nil)) nil))
                            nil))
                          nil))
                        nil)
                       ("2" (expand "abs" 1)
                        (("2" (lift-if)
                          (("2" (assert)
                            (("2" (split 1)
                              (("1" (propax) nil nil)
                               ("2" (flatten)
                                (("2" (case "n(0)=0")
                                  (("1" (assert)
                                    (("1"
                                      (expand "constructed_sturm_sequence?")
                                      (("1" (propax) nil nil)) nil))
                                    nil)
                                   ("2" (expand "max")
                                    (("2" (assert) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("3" (expand "constructed_sturm_sequence?")
                        (("3" (assert) nil nil)) nil)
                       ("4" (expand "constructed_sturm_sequence?")
                        (("4" (flatten)
                          (("4" (expand "max") (("4" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (assert) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (constructed_sturm_seq_first_signs_eq-1 nil 3589577529
   ("" (skeep)
    ((""
      (case "NOT (polynomial(p(0), n(0))(x) /= 0 AND
                                                  polynomial(p(0), n(0))(y) /= 0)")
      (("1" (hide 2)
        (("1" (inst-cp - "x")
          (("1" (inst - "y") (("1" (ground) nil nil)) nil)) nil))
        nil)
       ("2" (flatten)
        (("2" (assert)
          (("2" (inst-cp - "b")
            (("2" (assert)
              (("2" (flatten)
                (("2"
                  (case "polynomial(poly_deriv(p(0)),max(n(0)-1,0))(b) = 0")
                  (("1" (hide -5)
                    (("1" (expand "constructed_sturm_sequence?")
                      (("1" (flatten)
                        (("1" (assert)
                          (("1" (expand "max") (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (lemma "poly_continuous")
                    (("2"
                      (inst - "poly_deriv(p(0))" "max(n(0)-1,0)" "b"
                       "abs(polynomial(poly_deriv(p(0)),n(0)-1)(b))")
                      (("1" (skeep -)
                        (("1"
                          (case "EXISTS (deltiv:posreal): FORALL (x1:real): abs(b-x1)<deltiv IMPLIES (abs(b-x1)<delta AND x < x1 AND x1 < y)")
                          (("1"
                            (case "sign_ext(polynomial(p(0), n(0))(x)) =
                                                                   -sign_ext(polynomial(poly_deriv(p(0)), max(n(0)-1,0))(b))
                                                                   AND
                                                                   sign_ext(polynomial(p(0), n(0))(y)) =
                                                                    sign_ext(polynomial(poly_deriv(p(0)), max(n(0)-1,0))(b))")
                            (("1" (hide (-2 -3))
                              (("1" (flatten)
                                (("1" (expand "constructed_sturm_sequence?")
                                  (("1" (flatten)
                                    (("1" (assert)
                                      (("1"
                                        (expand "max")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 6)
                              (("2"
                                (case "polynomial(poly_deriv(p(0)), max(n(0)-1,0))(b)>0")
                                (("1" (skeep -2)
                                  (("1"
                                    (case "FORALL (x1,x2:real): abs(x1-b)<deltiv AND abs(x2-b)<deltiv AND x1<x2 IMPLIES polynomial(p(0),n(0))(x1) < polynomial(p(0),n(0))(x2)")
                                    (("1" (inst-cp - "b-deltiv/2" "b")
                                      (("1"
                                        (inst-cp - "b" "b+deltiv/2")
                                        (("1"
                                          (label "hyplem" -1)
                                          (("1"
                                            (hide "hyplem")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (split +)
                                                (("1"
                                                  (expand "sign_ext")
                                                  (("1"
                                                    (lift-if)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (split 1)
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          (("2"
                                                            (hide -1)
                                                            (("2"
                                                              (split -)
                                                              (("1"
                                                                (replace -7)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (lemma
                                                                     "poly_intermediate_value_dec")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "p(0)"
                                                                       "0"
                                                                       "n(0)"
                                                                       "x"
                                                                       "b-deltiv/2")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (split
                                                                           -)
                                                                          (("1"
                                                                            (skeep
                                                                             -1)
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "cc")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "cc")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "cc")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (inst
                                                                             -
                                                                             "b-deltiv/2")
                                                                            (("2"
                                                                              (split
                                                                               -)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (expand
                                                                 "abs"
                                                                 1)
                                                                (("3"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand "sign_ext")
                                                  (("2"
                                                    (lift-if)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (split 1)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (hide -3)
                                                            (("1"
                                                              (split -)
                                                              (("1"
                                                                (replace -8)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (lemma
                                                                     "poly_intermediate_value_dec")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "p(0)"
                                                                       "0"
                                                                       "n(0)"
                                                                       "b+deltiv/2"
                                                                       "y")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (split
                                                                           -)
                                                                          (("1"
                                                                            (skeep
                                                                             -1)
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "cc")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "cc")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "cc")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (inst
                                                                             -
                                                                             "b+deltiv/2")
                                                                            (("2"
                                                                              (split
                                                                               -)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (hide-all-but
                                                                 1)
                                                                (("3"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (skeep)
                                      (("2"
                                        (lemma "poly_strictly_increasing")
                                        (("2"
                                          (inst - "p(0)" "n(0)" "x1" "x2")
                                          (("2"
                                            (assert)
                                            (("2"
                                              (case "n(0)=0")
                                              (("1"
                                                (replaces -1)
                                                (("1"
                                                  (expand "polynomial")
                                                  (("1"
                                                    (expand "sigma")
                                                    (("1"
                                                      (expand "sigma")
                                                      (("1" (propax) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (assert)
                                                (("2"
                                                  (skeep)
                                                  (("2"
                                                    (expand "max")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (inst - "c")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (split -)
                                                            (("1"
                                                              (inst - "c")
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "abs")
                                                                    (("1"
                                                                      (lift-if)
                                                                      (("1"
                                                                        (ground)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               "abs"
                                                               (-1
                                                                -2
                                                                -3
                                                                -4
                                                                -5
                                                                1))
                                                              (("2"
                                                                (lift-if)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (case "polynomial(poly_deriv(p(0)), max(n(0)-1,0))(b)<0")
                                  (("1" (hide 1)
                                    (("1" (skeep -2)
                                      (("1"
                                        (case
                                         "FORALL (x1,x2:real): abs(x1-b)<deltiv AND abs(x2-b)<deltiv AND x1<x2 IMPLIES polynomial(p(0),n(0))(x1) > polynomial(p(0),n(0))(x2)")
                                        (("1"
                                          (inst-cp - "b-deltiv/2" "b")
                                          (("1"
                                            (inst-cp - "b" "b+deltiv/2")
                                            (("1"
                                              (label "hyplem" -1)
                                              (("1"
                                                (hide "hyplem")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (split +)
                                                    (("1"
                                                      (expand "sign_ext")
                                                      (("1"
                                                        (lift-if)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (split 1)
                                                            (("1"
                                                              (replace -9)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (lemma
                                                                   "poly_intermediate_value_inc")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "p(0)"
                                                                     "0"
                                                                     "n(0)"
                                                                     "x"
                                                                     "b-deltiv/2")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (split
                                                                         -)
                                                                        (("1"
                                                                          (skeep
                                                                           -1)
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "cc")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "cc")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "cc")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (inst
                                                                           -
                                                                           "b-deltiv/2")
                                                                          (("2"
                                                                            (split
                                                                             -3)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (hide-all-but
                                                                                 2)
                                                                                (("1"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (assert)
                                                                              (("3"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("3"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (assert)
                                                                          (("3"
                                                                            (hide-all-but
                                                                             2)
                                                                            (("3"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand "sign_ext")
                                                      (("2"
                                                        (lift-if)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (split 1)
                                                            (("1"
                                                              (propax)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (hide -2)
                                                                (("2"
                                                                  (split -)
                                                                  (("1"
                                                                    (replace
                                                                     -7)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (lemma
                                                                         "poly_intermediate_value_inc")
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "p(0)"
                                                                           "0"
                                                                           "n(0)"
                                                                           "b+deltiv/2"
                                                                           "y")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (split
                                                                               -)
                                                                              (("1"
                                                                                (skeep
                                                                                 -1)
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "cc")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "cc")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "cc")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (inst
                                                                                 -
                                                                                 "b+deltiv/2")
                                                                                (("2"
                                                                                  (split
                                                                                   -)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("2"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide-all-but
                                                                     1)
                                                                    (("2"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("3"
                                                                    (hide-all-but
                                                                     1)
                                                                    (("3"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (skeep)
                                          (("2"
                                            (lemma "poly_strictly_decreasing")
                                            (("2"
                                              (inst - "p(0)" "n(0)" "x1" "x2")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (case "n(0)=0")
                                                  (("1"
                                                    (replaces -1)
                                                    (("1"
                                                      (expand "polynomial")
                                                      (("1"
                                                        (expand "sigma")
                                                        (("1"
                                                          (expand "sigma")
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    (("2"
                                                      (skeep)
                                                      (("2"
                                                        (expand "max")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (inst - "c")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (split -)
                                                                (("1"
                                                                  (inst - "c")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (expand
                                                                         "abs")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "abs"
                                                                   (-1
                                                                    -2
                                                                    -3
                                                                    -4
                                                                    -5
                                                                    1))
                                                                  (("2"
                                                                    (lift-if)
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("3" (assert) nil nil))
                            nil)
                           ("2" (inst + "min(delta,min(b-x,y-b))")
                            (("1" (hide-all-but (-2 -3 1))
                              (("1" (grind) nil nil)) nil)
                             ("2" (hide-all-but (-2 -3 1))
                              (("2" (grind) nil nil)) nil))
                            nil))
                          nil))
                        nil)
                       ("2" (expand "abs" 1)
                        (("2" (lift-if)
                          (("2" (assert)
                            (("2" (split 1)
                              (("1" (propax) nil nil)
                               ("2" (flatten)
                                (("2" (case "n(0)=0")
                                  (("1" (assert)
                                    (("1"
                                      (expand "constructed_sturm_sequence?")
                                      (("1" (propax) nil nil)) nil))
                                    nil)
                                   ("2" (expand "max")
                                    (("2" (assert) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("3" (expand "constructed_sturm_sequence?")
                        (("3" (assert) nil nil)) nil)
                       ("4" (expand "constructed_sturm_sequence?")
                        (("4" (flatten)
                          (("4" (expand "max") (("4" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (assert) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((polynomial const-decl "[real -> real]" polynomials reals)
    (sequence type-eq-decl nil sequences nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (number nonempty-type-decl nil numbers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (int_max application-judgement "{k: int | i <= k AND j <= k}" real_defs
     nil)
    (rat_max application-judgement "{s: rat | s >= q AND s >= r}" real_defs
     nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (poly_deriv const-decl "real" polynomials reals)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (constructed_sturm_sequence? const-decl "bool" sturm nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (n skolem-const-decl "[nat -> nat]" sturm nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (p skolem-const-decl "[nat -> [nat -> real]]" sturm nil)
    (b skolem-const-decl "real" sturm nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (< const-decl "bool" reals nil)
    (poly_strictly_decreasing formula-decl nil polynomials reals)
    (poly_intermediate_value_inc formula-decl nil polynomials reals)
    (sigma def-decl "real" sigma reals)
    (real_times_real_is_real application-judgement "real" reals nil)
    (TRUE const-decl "bool" booleans nil)
    (max_nnreal_0 formula-decl nil min_max reals)
    (poly_strictly_increasing formula-decl nil polynomials reals)
    (nzreal_times_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal" real_types
     nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (abs_0_rew formula-decl nil abs_rews ints)
    (nonzero_abs_is_pos application-judgement "{y: posreal | y >= x}"
     real_defs nil)
    (poly_intermediate_value_dec formula-decl nil polynomials reals)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (sign_ext const-decl
     "{sig: real | (sig = -1 OR sig = 1 OR sig = 0) AND sig * x = abs(x)}"
     sign reals)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (y skolem-const-decl "real" sturm nil)
    (x skolem-const-decl "real" sturm nil)
    (delta skolem-const-decl "posreal" sturm nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (<= const-decl "bool" reals nil)
    (max_npreal_0 formula-decl nil min_max reals)
    (poly_continuous formula-decl nil polynomials reals))
   nil))
 (sturm_lem_no_roots 0
  (sturm_lem_no_roots-2 "" 3790098426
   ("" (skeep)
    (("" (name "f" "polynomial(p(0),n(0))")
      ((""
        (case "FORALL (j:nat): j<=m IMPLIES  number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x), j)`num =
                            number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(y), j)`num AND sign_ext(number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x), j)`lastnz) = sign_ext(number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(y), j)`lastnz)")
        (("1" (inst - "m")
          (("1" (expand "sturm_sig") (("1" (assert) nil nil)) nil)) nil)
         ("2" (induct "j")
          (("1" (assert)
            (("1" (split)
              (("1" (expand "number_sign_changes") (("1" (propax) nil nil))
                nil)
               ("2" (expand "number_sign_changes")
                (("2" (replace -1)
                  (("2" (lemma "poly_intermediate_value_inc")
                    (("2" (inst - "p(0)" "0" "n(0)" "x" "y")
                      (("2" (assert)
                        (("2" (lemma "poly_intermediate_value_dec")
                          (("2" (inst - "p(0)" "0" "n(0)" "x" "y")
                            (("2" (assert)
                              (("2" (split -)
                                (("1" (skeep -1)
                                  (("1" (inst - "cc" "0")
                                    (("1" (assert) nil nil)) nil))
                                  nil)
                                 ("2" (assert)
                                  (("2" (split -)
                                    (("1" (skeep -1)
                                      (("1"
                                        (inst - "cc" "0")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil)
                                     ("2" (replace -1)
                                      (("2"
                                        (hide-all-but (1 2 3))
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3" (assert)
                                  (("3" (split -)
                                    (("1" (skeep -1)
                                      (("1"
                                        (inst - "cc" "0")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil)
                                     ("2" (expand "sign_ext")
                                      (("2" (assert) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (skolem 1 "jj")
            (("2" (hide 2)
              (("2" (assert)
                (("2" (flatten)
                  (("2" (assert)
                    (("2" (flatten)
                      (("2"
                        (name "G"
                              "LAMBDA (xx:real): LAMBDA (i): polynomial(p(i),n(i))(xx)")
                        (("2" (copy -1)
                          (("2" (decompose-equality -1)
                            (("2" (inst-cp - "x")
                              (("2" (inst - "y")
                                (("2" (replaces -1)
                                  (("2" (replaces -1)
                                    (("2"
                                      (case
                                       "NOT sign_ext(G(x)(1+jj)) = sign_ext(G(y)(1+jj))")
                                      (("1"
                                        (hide 2)
                                        (("1"
                                          (expand "G" 1)
                                          (("1"
                                            (inst-cp - "x" "1+jj")
                                            (("1"
                                              (inst-cp - "y" "1+jj")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (expand "sign_ext" 1)
                                                    (("1"
                                                      (lift-if)
                                                      (("1"
                                                        (lift-if)
                                                        (("1"
                                                          (lift-if)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (ground)
                                                              (("1"
                                                                (lemma
                                                                 "poly_intermediate_value_inc")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "p(1+jj)"
                                                                   "0"
                                                                   "n(1+jj)"
                                                                   "x"
                                                                   "y")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (skeep
                                                                       -1)
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "cc"
                                                                         "1+jj")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (lemma
                                                                 "poly_intermediate_value_dec")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "p(1+jj)"
                                                                   "0"
                                                                   "n(1+jj)"
                                                                   "x"
                                                                   "y")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (skeep
                                                                       -1)
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "cc"
                                                                         "1+jj")
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand "number_sign_changes" +)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (lift-if)
                                            (("2"
                                              (lift-if)
                                              (("2"
                                                (lift-if)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (ground)
                                                    (("1"
                                                      (inst - "y" "1+jj")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand "G" -1)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand "sign_ext" -5)
                                                      (("2"
                                                        (lift-if)
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (inst - "x" "1+jj")
                                                      (("3"
                                                        (assert)
                                                        (("3"
                                                          (expand "G" -1)
                                                          (("3"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("4"
                                                      (lift-if)
                                                      (("4" (assert) nil nil))
                                                      nil)
                                                     ("5"
                                                      (lift-if)
                                                      (("5" (assert) nil nil))
                                                      nil)
                                                     ("6"
                                                      (expand "sign_ext" -5)
                                                      (("6"
                                                        (lift-if)
                                                        (("6"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("7"
                                                      (lift-if)
                                                      (("7" (assert) nil nil))
                                                      nil)
                                                     ("8"
                                                      (lift-if)
                                                      (("8"
                                                        (lift-if)
                                                        (("8"
                                                          (assert)
                                                          (("8"
                                                            (split +)
                                                            (("1"
                                                              (propax)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (lift-if)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("9"
                                                      (lift-if)
                                                      (("9"
                                                        (lift-if)
                                                        (("9"
                                                          (lift-if)
                                                          (("9"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("10"
                                                      (lift-if)
                                                      (("10"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("11"
                                                      (lift-if)
                                                      (("11"
                                                        (lift-if)
                                                        (("11"
                                                          (lift-if)
                                                          (("11"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("12"
                                                      (lift-if)
                                                      (("12"
                                                        (lift-if)
                                                        (("12"
                                                          (lift-if)
                                                          (("12"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (sturm_lem_no_roots-1 nil 3587229961
   ("" (skeep)
    (("" (name "f" "polynomial(p(0),n(0))")
      ((""
        (case "FORALL (j:nat): j<=m IMPLIES  number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x), j)`num =
                            number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(y), j)`num AND sign_ext(number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x), j)`lastnz) = sign_ext(number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(y), j)`lastnz)")
        (("1" (inst - "m")
          (("1" (expand "sturm_sig") (("1" (assert) nil nil)) nil)) nil)
         ("2" (induct "j")
          (("1" (assert)
            (("1" (split)
              (("1" (expand "number_sign_changes") (("1" (propax) nil nil))
                nil)
               ("2" (expand "number_sign_changes")
                (("2" (replace -1)
                  (("2" (lemma "poly_intermediate_value_inc")
                    (("2" (inst - "p(0)" "0" "n(0)" "x" "y")
                      (("2" (assert)
                        (("2" (lemma "poly_intermediate_value_dec")
                          (("2" (inst - "p(0)" "0" "n(0)" "x" "y")
                            (("2" (assert)
                              (("2" (split -)
                                (("1" (skeep -1)
                                  (("1" (inst - "cc" "0")
                                    (("1" (assert) nil nil)) nil))
                                  nil)
                                 ("2" (assert)
                                  (("2" (split -)
                                    (("1" (skeep -1)
                                      (("1"
                                        (inst - "cc" "0")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil)
                                     ("2" (replace -1)
                                      (("2"
                                        (hide-all-but (1 2 3))
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3" (assert)
                                  (("3" (split -)
                                    (("1" (skeep -1)
                                      (("1"
                                        (inst - "cc" "0")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil)
                                     ("2" (expand "sign_ext")
                                      (("2" (assert) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (skolem 1 "jj")
            (("2" (hide 2)
              (("2" (assert)
                (("2" (flatten)
                  (("2" (assert)
                    (("2" (flatten)
                      (("2"
                        (name "G"
                              "LAMBDA (xx:real): LAMBDA (i): polynomial(p(i),n(i))(xx)")
                        (("2" (copy -1)
                          (("2" (decompose-equality -1)
                            (("2" (inst-cp - "x")
                              (("2" (inst - "y")
                                (("2" (replaces -1)
                                  (("2" (replaces -1)
                                    (("2"
                                      (case
                                       "NOT sign_ext(G(x)(1+jj)) = sign_ext(G(y)(1+jj))")
                                      (("1"
                                        (hide 2)
                                        (("1"
                                          (expand "G" 1)
                                          (("1"
                                            (inst-cp - "x" "1+jj")
                                            (("1"
                                              (inst-cp - "y" "1+jj")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (expand "sign_ext" 1)
                                                    (("1"
                                                      (lift-if)
                                                      (("1"
                                                        (lift-if)
                                                        (("1"
                                                          (lift-if)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (ground)
                                                              (("1"
                                                                (lemma
                                                                 "poly_intermediate_value_inc")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "p(1+jj)"
                                                                   "0"
                                                                   "n(1+jj)"
                                                                   "x"
                                                                   "y")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (skeep
                                                                       -1)
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "cc"
                                                                         "1+jj")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (lemma
                                                                 "poly_intermediate_value_dec")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "p(1+jj)"
                                                                   "0"
                                                                   "n(1+jj)"
                                                                   "x"
                                                                   "y")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (skeep
                                                                       -1)
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "cc"
                                                                         "1+jj")
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand "number_sign_changes" +)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (lift-if)
                                            (("2"
                                              (lift-if)
                                              (("2"
                                                (lift-if)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (ground)
                                                    (("1"
                                                      (inst - "y" "1+jj")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand "G" -1)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand "sign_ext" -5)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (lift-if)
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (inst - "x" "1+jj")
                                                      (("3"
                                                        (assert)
                                                        (("3"
                                                          (expand "G" -1)
                                                          (("3"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("4"
                                                      (lift-if)
                                                      (("4" (assert) nil nil))
                                                      nil)
                                                     ("5"
                                                      (lift-if)
                                                      (("5" (assert) nil nil))
                                                      nil)
                                                     ("6"
                                                      (expand "sign_ext" -5)
                                                      (("6"
                                                        (assert)
                                                        (("6"
                                                          (lift-if)
                                                          (("6"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("7"
                                                      (lift-if)
                                                      (("7" (assert) nil nil))
                                                      nil)
                                                     ("8"
                                                      (lift-if)
                                                      (("8"
                                                        (lift-if)
                                                        (("8"
                                                          (assert)
                                                          (("8"
                                                            (split +)
                                                            (("1"
                                                              (propax)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (lift-if)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("9"
                                                      (lift-if)
                                                      (("9"
                                                        (lift-if)
                                                        (("9"
                                                          (lift-if)
                                                          (("9"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("10"
                                                      (lift-if)
                                                      (("10"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("11"
                                                      (lift-if)
                                                      (("11"
                                                        (lift-if)
                                                        (("11"
                                                          (lift-if)
                                                          (("11"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("12"
                                                      (lift-if)
                                                      (("12"
                                                        (lift-if)
                                                        (("12"
                                                          (lift-if)
                                                          (("12"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((polynomial const-decl "[real -> real]" polynomials reals)
    (sequence type-eq-decl nil sequences nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (pred type-eq-decl nil defined_types nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (poly_intermediate_value_dec formula-decl nil polynomials reals)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (poly_intermediate_value_inc formula-decl nil polynomials reals)
    (TRUE const-decl "bool" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (G skolem-const-decl "[real -> [nat -> real]]" sturm nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sturm_sig const-decl "nat" sturm nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (NSC type-eq-decl nil number_sign_changes nil)
    (number_sign_changes def-decl "NSC" number_sign_changes nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (sign_ext const-decl
     "{sig: real | (sig = -1 OR sig = 1 OR sig = 0) AND sig * x = abs(x)}"
     sign reals))
   shostak))
 (constructed_sturm_lem_one_simple_root_TCC1 0
  (constructed_sturm_lem_one_simple_root_TCC1-1 nil 3592820375
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (^ const-decl "real" exponentiation nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (/= const-decl "boolean" notequal nil)
    (constructed_sturm_sequence? const-decl "bool" sturm nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil
   (constructed_sturm_lem_one_simple_root subtype
    "(number_fields.-)(sturm.m, 1)" "nat")))
 (constructed_sturm_lem_one_simple_root 0
  (constructed_sturm_lem_one_simple_root-2 "" 3790098434
   ("" (skeep)
    (("" (label "xy" -1)
      (("" (label "xb" -2)
        (("" (label "by" -3)
          (("" (label "cb" -4)
            (("" (label "sf" -5)
              (("" (label "css" -6)
                (("" (skoletin 1)
                  (("" (label "nscname" -1)
                    (("" (lemma "nsc_regular_swap")
                      ((""
                        (inst - "LAMBDA (i): polynomial(p(i), n(i))(x)"
                         "LAMBDA (i): polynomial(p(i), n(i))(y)" "m-1" "m-1")
                        (("1" (split -)
                          (("1" (skoletin -1)
                            (("1" (skoletin -1)
                              (("1" (flatten)
                                (("1" (assert)
                                  (("1" (split +)
                                    (("1" (split -)
                                      (("1"
                                        (replace "nscname" +)
                                        (("1" (assert) nil nil))
                                        nil)
                                       ("2"
                                        (expand "constructed_sturm_sequence?")
                                        (("2"
                                          (flatten)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (hide -1)
                                      (("2"
                                        (replace "nscname" +)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (replace -2 :dir rl)
                                            (("2"
                                              (replace -3 :dir rl)
                                              (("2"
                                                (replace -1 +)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (case "NOT m-1>=1")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand
                                                         "constructed_sturm_sequence?")
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (assert)
                                                      (("2"
                                                        (hide -2)
                                                        (("2"
                                                          (lift-if)
                                                          (("2"
                                                            (lift-if)
                                                            (("2"
                                                              (lift-if)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (copy "cb")
                                                                  (("2"
                                                                    (inst-cp
                                                                     -
                                                                     "x"
                                                                     "0")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "y"
                                                                       "0")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (case
                                                                           "NOT (polynomial(p(0), n(0))(b) = 0 IFF max_linear_div_power?(p(0),n(0),b)(1))")
                                                                          (("1"
                                                                            (hide
                                                                             4)
                                                                            (("1"
                                                                              (ground)
                                                                              (("1"
                                                                                (lemma
                                                                                 "poly_max_zero_power")
                                                                                (("1"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (split
                                                                                       -)
                                                                                      (("1"
                                                                                        (skosimp*)
                                                                                        (("1"
                                                                                          (case
                                                                                           "NOT m!1 > 1")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "max_linear_div_power?"
                                                                                             -2)
                                                                                            (("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (copy
                                                                                                 "css")
                                                                                                (("2"
                                                                                                  (label
                                                                                                   "dippydan"
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "constructed_sturm_sequence?"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -3)
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           -4)
                                                                                                          (("2"
                                                                                                            (hide
                                                                                                             "dippydan")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -4
                                                                                                               "b")
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -4
                                                                                                                 +)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "^"
                                                                                                                     "sf")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "expt")
                                                                                                                      (("2"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (copy
                                                                                         "css")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "constructed_sturm_sequence?"
                                                                                           -1)
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "0")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "max_linear_div_power?")
                                                                                (("2"
                                                                                  (skosimp*)
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "b")
                                                                                    (("2"
                                                                                      (replace
                                                                                       -2)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "^"
                                                                                           +)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "expt"
                                                                                             +)
                                                                                            (("2"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (expand
                                                                                 "max_linear_div_power?")
                                                                                (("3"
                                                                                  (skosimp*)
                                                                                  (("3"
                                                                                    (inst
                                                                                     -
                                                                                     "b")
                                                                                    (("3"
                                                                                      (replace
                                                                                       -2)
                                                                                      (("3"
                                                                                        (assert)
                                                                                        (("3"
                                                                                          (expand
                                                                                           "^"
                                                                                           +)
                                                                                          (("3"
                                                                                            (expand
                                                                                             "expt"
                                                                                             +)
                                                                                            (("3"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (ground)
                                                                            (("1"
                                                                              (lemma
                                                                               " max_linear_div_power_sign_change")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "p(0)"
                                                                                 "n(0)"
                                                                                 "x"
                                                                                 "b"
                                                                                 "y"
                                                                                 "1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (copy
                                                                                     "cb")
                                                                                    (("1"
                                                                                      (skeep)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "r"
                                                                                         "0")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (expand
                                                                               "sign_ext"
                                                                               -1)
                                                                              (("2"
                                                                                (lift-if)
                                                                                (("2"
                                                                                  (lift-if)
                                                                                  (("2"
                                                                                    (lift-if)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (ground)
                                                                                        (("1"
                                                                                          (lemma
                                                                                           "poly_intermediate_value_inc")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "p(0)"
                                                                                             "0"
                                                                                             "n(0)"
                                                                                             "x"
                                                                                             "y")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (skosimp*)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   "cb"
                                                                                                   "cc!1"
                                                                                                   "0")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (lemma
                                                                                           "poly_intermediate_value_dec")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "p(0)"
                                                                                             "0"
                                                                                             "n(0)"
                                                                                             "x"
                                                                                             "y")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   "cb"
                                                                                                   "cc!1"
                                                                                                   "0")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (expand
                                                                               "sign_ext"
                                                                               -1)
                                                                              (("3"
                                                                                (lift-if)
                                                                                (("3"
                                                                                  (lift-if)
                                                                                  (("3"
                                                                                    (lift-if)
                                                                                    (("3"
                                                                                      (assert)
                                                                                      (("3"
                                                                                        (ground)
                                                                                        (("1"
                                                                                          (lemma
                                                                                           "poly_intermediate_value_inc")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "p(0)"
                                                                                             "0"
                                                                                             "n(0)"
                                                                                             "x"
                                                                                             "y")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (skosimp*)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   "cb"
                                                                                                   "cc!1"
                                                                                                   "0")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (lemma
                                                                                           "poly_intermediate_value_dec")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "p(0)"
                                                                                             "0"
                                                                                             "n(0)"
                                                                                             "x"
                                                                                             "y")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   "cb"
                                                                                                   "cc!1"
                                                                                                   "0")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (assert) nil nil)
                           ("3" (hide 2)
                            (("3" (assert)
                              (("3" (skeep)
                                (("3" (assert)
                                  (("3" (inst-cp "cb" "x" "j+1")
                                    (("3" (inst-cp "cb" "x" "j")
                                      (("3"
                                        (assert)
                                        (("3"
                                          (case
                                           "NOT polynomial(p(j),n(j))(b)=0")
                                          (("1"
                                            (hide 3)
                                            (("1"
                                              (expand "sign_ext" 2)
                                              (("1"
                                                (lift-if)
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (lift-if)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (ground)
                                                        (("1"
                                                          (lemma
                                                           "poly_intermediate_value_inc")
                                                          (("1"
                                                            (inst
                                                             -
                                                             "p(j)"
                                                             "0"
                                                             "n(j)"
                                                             "x"
                                                             "y")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (skosimp*)
                                                                (("1"
                                                                  (inst
                                                                   "cb"
                                                                   "cc!1"
                                                                   "j")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (lemma
                                                           "poly_intermediate_value_inc")
                                                          (("2"
                                                            (inst
                                                             -
                                                             "p(j)"
                                                             "0"
                                                             "n(j)"
                                                             "x"
                                                             "y")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (skosimp*)
                                                                (("2"
                                                                  (inst
                                                                   "cb"
                                                                   "cc!1"
                                                                   "j")
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("3"
                                                          (lemma
                                                           "poly_intermediate_value_inc")
                                                          (("3"
                                                            (inst
                                                             -
                                                             "p(j)"
                                                             "0"
                                                             "n(j)"
                                                             "x"
                                                             "y")
                                                            (("3"
                                                              (assert)
                                                              (("3"
                                                                (skosimp*)
                                                                (("3"
                                                                  (inst
                                                                   "cb"
                                                                   "cc!1"
                                                                   "j")
                                                                  (("3"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("4"
                                                          (lemma
                                                           "poly_intermediate_value_inc")
                                                          (("4"
                                                            (inst
                                                             -
                                                             "p(j)"
                                                             "0"
                                                             "n(j)"
                                                             "x"
                                                             "y")
                                                            (("4"
                                                              (assert)
                                                              (("4"
                                                                (skosimp*)
                                                                (("4"
                                                                  (inst
                                                                   "cb"
                                                                   "cc!1"
                                                                   "j")
                                                                  (("4"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("5"
                                                          (lemma
                                                           "poly_intermediate_value_dec")
                                                          (("5"
                                                            (inst
                                                             -
                                                             "p(j)"
                                                             "0"
                                                             "n(j)"
                                                             "x"
                                                             "y")
                                                            (("5"
                                                              (assert)
                                                              (("5"
                                                                (skosimp*)
                                                                (("5"
                                                                  (inst
                                                                   "cb"
                                                                   "cc!1"
                                                                   "j")
                                                                  (("5"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("6"
                                                          (lemma
                                                           "poly_intermediate_value_dec")
                                                          (("6"
                                                            (inst
                                                             -
                                                             "p(j)"
                                                             "0"
                                                             "n(j)"
                                                             "x"
                                                             "y")
                                                            (("6"
                                                              (assert)
                                                              (("6"
                                                                (skosimp*)
                                                                (("6"
                                                                  (inst
                                                                   "cb"
                                                                   "cc!1"
                                                                   "j")
                                                                  (("6"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("7"
                                                          (lemma
                                                           "poly_intermediate_value_dec")
                                                          (("7"
                                                            (inst
                                                             -
                                                             "p(j)"
                                                             "0"
                                                             "n(j)"
                                                             "x"
                                                             "y")
                                                            (("7"
                                                              (assert)
                                                              (("7"
                                                                (skosimp*)
                                                                (("7"
                                                                  (inst
                                                                   "cb"
                                                                   "cc!1"
                                                                   "j")
                                                                  (("7"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("8"
                                                          (lemma
                                                           "poly_intermediate_value_dec")
                                                          (("8"
                                                            (inst
                                                             -
                                                             "p(j)"
                                                             "0"
                                                             "n(j)"
                                                             "x"
                                                             "y")
                                                            (("8"
                                                              (assert)
                                                              (("8"
                                                                (skosimp*)
                                                                (("8"
                                                                  (inst
                                                                   "cb"
                                                                   "cc!1"
                                                                   "j")
                                                                  (("8"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("9"
                                                          (lemma
                                                           "poly_intermediate_value_dec")
                                                          (("9"
                                                            (inst
                                                             -
                                                             "p(j)"
                                                             "0"
                                                             "n(j)"
                                                             "x"
                                                             "y")
                                                            (("9"
                                                              (assert)
                                                              (("9"
                                                                (skosimp*)
                                                                (("9"
                                                                  (inst
                                                                   "cb"
                                                                   "cc!1"
                                                                   "j")
                                                                  (("9"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("10"
                                                          (lemma
                                                           "poly_intermediate_value_dec")
                                                          (("10"
                                                            (inst
                                                             -
                                                             "p(j)"
                                                             "0"
                                                             "n(j)"
                                                             "x"
                                                             "y")
                                                            (("10"
                                                              (assert)
                                                              (("10"
                                                                (skosimp*)
                                                                (("10"
                                                                  (inst
                                                                   "cb"
                                                                   "cc!1"
                                                                   "j")
                                                                  (("10"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("11"
                                                          (lemma
                                                           "poly_intermediate_value_dec")
                                                          (("11"
                                                            (inst
                                                             -
                                                             "p(j)"
                                                             "0"
                                                             "n(j)"
                                                             "x"
                                                             "y")
                                                            (("11"
                                                              (assert)
                                                              (("11"
                                                                (skosimp*)
                                                                (("11"
                                                                  (inst
                                                                   "cb"
                                                                   "cc!1"
                                                                   "j")
                                                                  (("11"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("12"
                                                          (lemma
                                                           "poly_intermediate_value_dec")
                                                          (("12"
                                                            (inst
                                                             -
                                                             "p(j)"
                                                             "0"
                                                             "n(j)"
                                                             "x"
                                                             "y")
                                                            (("12"
                                                              (assert)
                                                              (("12"
                                                                (skosimp*)
                                                                (("12"
                                                                  (inst
                                                                   "cb"
                                                                   "cc!1"
                                                                   "j")
                                                                  (("12"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (assert)
                                            (("2"
                                              (case
                                               "j>0 IMPLIES (polynomial(p(j-1),n(j-1))(b)=0 OR polynomial(p(j+1),n(j+1))(b)=0)")
                                              (("1"
                                                (case "j > 0")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (lemma
                                                     "constructed_sturm_seq_repeated_root")
                                                    (("1"
                                                      (inst?)
                                                      (("1"
                                                        (inst - "b")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (split -)
                                                            (("1"
                                                              (inst - "j-1")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (inst-cp
                                                                   -
                                                                   "0")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "1")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (inst - "j")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (inst-cp
                                                                   -
                                                                   "0")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "1")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (assert)
                                                  (("2"
                                                    (case "j = m-1")
                                                    (("1"
                                                      (replaces -1)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (lemma
                                                           "constructed_sturm_seq_repeated_root")
                                                          (("1"
                                                            (inst
                                                             -
                                                             "m"
                                                             "n"
                                                             "p"
                                                             "b")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (inst - "m-1")
                                                                (("1"
                                                                  (case
                                                                   "polynomial(p(m),n(m))(b)=0")
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (replace
                                                                       -3)
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide-all-but
                                                                     ("css"
                                                                      1))
                                                                    (("2"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("2"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (assert)
                                                      (("2"
                                                        (lemma
                                                         "constructed_sturm_seq_first_signs_eq")
                                                        (("2"
                                                          (inst
                                                           -
                                                           "b"
                                                           "m"
                                                           "n"
                                                           "p"
                                                           "x"
                                                           "y")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (split -)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (case
                                                                     "sign_ext(polynomial(p(1), n(1))(b)) = sign_ext(polynomial(p(1), n(1))(x))")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "sign_ext"
                                                                       1)
                                                                      (("2"
                                                                        (lift-if)
                                                                        (("2"
                                                                          (lift-if)
                                                                          (("2"
                                                                            (lift-if)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (ground)
                                                                                (("1"
                                                                                  (lemma
                                                                                   "poly_intermediate_value_dec")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "p(1)"
                                                                                     "0"
                                                                                     "n(1)"
                                                                                     "x"
                                                                                     "b")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (skosimp*)
                                                                                        (("1"
                                                                                          (inst
                                                                                           "cb"
                                                                                           "cc!1"
                                                                                           "1")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (lemma
                                                                                   "poly_intermediate_value_dec")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "p(1)"
                                                                                     "0"
                                                                                     "n(1)"
                                                                                     "x"
                                                                                     "b")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (skosimp*)
                                                                                        (("2"
                                                                                          (inst
                                                                                           "cb"
                                                                                           "cc!1"
                                                                                           "1")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("3"
                                                                                  (lemma
                                                                                   "poly_intermediate_value_inc")
                                                                                  (("3"
                                                                                    (inst
                                                                                     -
                                                                                     "p(1)"
                                                                                     "0"
                                                                                     "n(1)"
                                                                                     "x"
                                                                                     "b")
                                                                                    (("3"
                                                                                      (assert)
                                                                                      (("3"
                                                                                        (skosimp*)
                                                                                        (("3"
                                                                                          (inst
                                                                                           "cb"
                                                                                           "cc!1"
                                                                                           "1")
                                                                                          (("3"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("4"
                                                                                  (lemma
                                                                                   "poly_intermediate_value_inc")
                                                                                  (("4"
                                                                                    (inst
                                                                                     -
                                                                                     "p(1)"
                                                                                     "0"
                                                                                     "n(1)"
                                                                                     "x"
                                                                                     "b")
                                                                                    (("4"
                                                                                      (assert)
                                                                                      (("4"
                                                                                        (skosimp*)
                                                                                        (("4"
                                                                                          (inst
                                                                                           "cb"
                                                                                           "cc!1"
                                                                                           "1")
                                                                                          (("4"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (skeep)
                                                                (("2"
                                                                  (inst-cp
                                                                   "cb"
                                                                   "c"
                                                                   "0")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (replace
                                                                       "cb")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (copy "css")
                                                    (("2"
                                                      (case
                                                       "polynomial(p(1 + j), n(1 + j))(x) = 0")
                                                      (("1"
                                                        (inst-cp
                                                         "cb"
                                                         "x"
                                                         "1+j")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (case "j = m-1")
                                                            (("1"
                                                              (lemma
                                                               "constructed_sturm_seq_repeated_root")
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "m"
                                                                 "n"
                                                                 "p"
                                                                 "b")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "m-1")
                                                                    (("1"
                                                                      (replace
                                                                       -2)
                                                                      (("1"
                                                                        (replace
                                                                         -6)
                                                                        (("1"
                                                                          (split
                                                                           -)
                                                                          (("1"
                                                                            (inst-cp
                                                                             -
                                                                             "0")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "1")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("3"
                                                                            (assert)
                                                                            (("3"
                                                                              (hide-all-but
                                                                               ("css"
                                                                                1))
                                                                              (("3"
                                                                                (expand
                                                                                 "constructed_sturm_sequence?")
                                                                                (("3"
                                                                                  (flatten)
                                                                                  (("3"
                                                                                    (replace
                                                                                     -5
                                                                                     +)
                                                                                    (("3"
                                                                                      (expand
                                                                                       "polynomial"
                                                                                       +)
                                                                                      (("3"
                                                                                        (expand
                                                                                         "sigma")
                                                                                        (("3"
                                                                                          (expand
                                                                                           "sigma")
                                                                                          (("3"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (assert)
                                                        (("2"
                                                          (label "iggypop" -1)
                                                          (("2"
                                                            (expand
                                                             "constructed_sturm_sequence?"
                                                             "iggypop")
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (label
                                                                 "thisone"
                                                                 -7)
                                                                (("2"
                                                                  (hide
                                                                   "iggypop")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "j+1")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (skeep)
                                                                        (("2"
                                                                          (name
                                                                           "pd"
                                                                           "poly_divide(p(j - 1), n(j - 1))(p(j), n(j))(0)")
                                                                          (("2"
                                                                            (replace
                                                                             -1)
                                                                            (("2"
                                                                              (lemma
                                                                               "poly_divide_def")
                                                                              (("2"
                                                                                (inst?)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (replace
                                                                                     -2)
                                                                                    (("2"
                                                                                      (split
                                                                                       -)
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "at_zero_remainder_sign_swaps")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "x"
                                                                                           "b"
                                                                                           "y"
                                                                                           "p(j-1)"
                                                                                           "pd`quot"
                                                                                           "p(j)"
                                                                                           "pd`rem"
                                                                                           "n(j-1)"
                                                                                           "pd`qdeg"
                                                                                           "n(j)"
                                                                                           "pd`rdeg")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -2)
                                                                                              (("1"
                                                                                                (split
                                                                                                 -)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "FORALL (rr:real): sign_ext(polynomial(-pd`rem, pd`rdeg)(rr)) = sign_ext(polynomial(p(1 + j), n(1 + j))(rr))")
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (hide-all-but
                                                                                                         (-2
                                                                                                          +))
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "sign_ext"
                                                                                                             (-
                                                                                                              5))
                                                                                                            (("1"
                                                                                                              (lift-if)
                                                                                                              (("1"
                                                                                                                (lift-if)
                                                                                                                (("1"
                                                                                                                  (lift-if)
                                                                                                                  (("1"
                                                                                                                    (lift-if)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (lift-if)
                                                                                                                        (("1"
                                                                                                                          (lift-if)
                                                                                                                          (("1"
                                                                                                                            (lift-if)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (lift-if)
                                                                                                                                (("1"
                                                                                                                                  (lift-if)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (lift-if)
                                                                                                                                      (("1"
                                                                                                                                        (lift-if)
                                                                                                                                        (("1"
                                                                                                                                          (lift-if)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (ground)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     (-1
                                                                                                      6))
                                                                                                    (("2"
                                                                                                      (skeep)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         "thisone")
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           "scal_polynomial2")
                                                                                                          (("2"
                                                                                                            (case
                                                                                                             "-pd`rem = -1 *pd`rem")
                                                                                                            (("1"
                                                                                                              (replaces
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "scal_polynomial2")
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "sign_ext_mult")
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "sign_ext_mult")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "sign_ext"
                                                                                                                       +)
                                                                                                                      (("1"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide-all-but
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (decompose-equality)
                                                                                                                (("2"
                                                                                                                  (grind)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (skeep)
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       -)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         "cb"
                                                                                                         "xyz"
                                                                                                         "j-1")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (inst
                                                                                                         "cb"
                                                                                                         "xyz"
                                                                                                         "j")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("3"
                                                                                                        (decompose-equality
                                                                                                         "thisone")
                                                                                                        (("3"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "xyz")
                                                                                                          (("3"
                                                                                                            (rewrite
                                                                                                             "scal_polynomial2")
                                                                                                            (("3"
                                                                                                              (replace
                                                                                                               -2)
                                                                                                              (("3"
                                                                                                                (assert)
                                                                                                                (("3"
                                                                                                                  (inst
                                                                                                                   "cb"
                                                                                                                   "xyz"
                                                                                                                   "1+j")
                                                                                                                  (("3"
                                                                                                                    (assert)
                                                                                                                    (("3"
                                                                                                                      (case
                                                                                                                       "NOT j = m-1")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (replaces
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (hide-all-but
                                                                                                                             ("css"
                                                                                                                              2))
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "constructed_sturm_sequence?")
                                                                                                                              (("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (replace
                                                                                                                                   -5)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "polynomial"
                                                                                                                                     +)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "sigma")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "sigma")
                                                                                                                                        (("2"
                                                                                                                                          (propax)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("3"
                                                                                                  (flatten)
                                                                                                  (("3"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "b")
                                                                                                    (("3"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("3"
                                                                                                        (replace
                                                                                                         -6)
                                                                                                        (("3"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("4"
                                                                                                  (flatten)
                                                                                                  (("4"
                                                                                                    (inst
                                                                                                     "cb"
                                                                                                     "x"
                                                                                                     "j-1")
                                                                                                    (("4"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("5"
                                                                                                  (flatten)
                                                                                                  (("5"
                                                                                                    (decompose-equality
                                                                                                     "thisone")
                                                                                                    (("5"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "x")
                                                                                                      (("5"
                                                                                                        (rewrite
                                                                                                         "scal_polynomial2")
                                                                                                        (("5"
                                                                                                          (replace
                                                                                                           -2)
                                                                                                          (("5"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("6"
                                                                                                  (flatten)
                                                                                                  (("6"
                                                                                                    (assert)
                                                                                                    (("6"
                                                                                                      (inst
                                                                                                       "cb"
                                                                                                       "y"
                                                                                                       "j-1")
                                                                                                      (("6"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("7"
                                                                                                  (flatten)
                                                                                                  (("7"
                                                                                                    (decompose-equality
                                                                                                     "thisone")
                                                                                                    (("7"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "y")
                                                                                                      (("7"
                                                                                                        (rewrite
                                                                                                         "scal_polynomial2")
                                                                                                        (("7"
                                                                                                          (replaces
                                                                                                           -2)
                                                                                                          (("7"
                                                                                                            (assert)
                                                                                                            (("7"
                                                                                                              (inst
                                                                                                               "cb"
                                                                                                               "y"
                                                                                                               "1+j")
                                                                                                              (("7"
                                                                                                                (assert)
                                                                                                                (("7"
                                                                                                                  (case
                                                                                                                   "NOT j = m-1")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (replaces
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (hide-all-but
                                                                                                                       ("css"
                                                                                                                        3))
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "constructed_sturm_sequence?")
                                                                                                                        (("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (replace
                                                                                                                             -5)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "polynomial")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "sigma")
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "sigma")
                                                                                                                                    (("2"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (copy
                                                                                         "css")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "constructed_sturm_sequence?"
                                                                                           -1)
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "j")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (flatten)
                                                (("3" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("4" (hide 2)
                            (("4"
                              (lemma "constructed_sturm_seq_repeated_root")
                              (("4" (inst - "m" "n" "p" "b")
                                (("4" (assert)
                                  (("4" (inst - "m-1")
                                    (("1" (assert)
                                      (("1"
                                        (split -)
                                        (("1"
                                          (inst-cp - "0")
                                          (("1"
                                            (inst - "1")
                                            (("1" (assert) nil nil)
                                             ("2"
                                              (expand
                                               "constructed_sturm_sequence?")
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (inst-cp "cb" "x" "m-1")
                                          (("1"
                                            (inst-cp "cb" "y" "m-1")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "sign_ext" +)
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (lift-if)
                                                    (("1"
                                                      (lift-if)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (ground)
                                                          (("1"
                                                            (lemma
                                                             "poly_intermediate_value_inc")
                                                            (("1"
                                                              (inst
                                                               -
                                                               "p(m-1)"
                                                               "0"
                                                               "n(m-1)"
                                                               "x"
                                                               "y")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (skosimp*)
                                                                  (("1"
                                                                    (inst
                                                                     "cb"
                                                                     "cc!1"
                                                                     "m-1")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (expand
                                                                         "constructed_sturm_sequence?")
                                                                        (("2"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "constructed_sturm_sequence?")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (lemma
                                                             "poly_intermediate_value_inc")
                                                            (("2"
                                                              (inst
                                                               -
                                                               "p(m-1)"
                                                               "0"
                                                               "n(m-1)"
                                                               "x"
                                                               "y")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (skosimp*)
                                                                  (("1"
                                                                    (inst
                                                                     "cb"
                                                                     "cc!1"
                                                                     "m-1")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "constructed_sturm_sequence?")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (lemma
                                                             "poly_intermediate_value_dec")
                                                            (("3"
                                                              (inst
                                                               -
                                                               "p(m-1)"
                                                               "0"
                                                               "n(m-1)"
                                                               "x"
                                                               "y")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (skosimp*)
                                                                  (("1"
                                                                    (inst
                                                                     "cb"
                                                                     "cc!1"
                                                                     "m-1")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "constructed_sturm_sequence?")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("4"
                                                            (lemma
                                                             "poly_intermediate_value_dec")
                                                            (("4"
                                                              (inst
                                                               -
                                                               "p(m-1)"
                                                               "0"
                                                               "n(m-1)"
                                                               "x"
                                                               "y")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (skosimp*)
                                                                  (("1"
                                                                    (inst
                                                                     "cb"
                                                                     "cc!1"
                                                                     "m-1")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "constructed_sturm_sequence?")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand
                                               "constructed_sturm_sequence?")
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand
                                             "constructed_sturm_sequence?")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("3"
                                          (hide-all-but ("css" 1))
                                          (("3"
                                            (expand
                                             "constructed_sturm_sequence?")
                                            (("3"
                                              (flatten)
                                              (("3"
                                                (replace -5)
                                                (("3"
                                                  (expand "polynomial" +)
                                                  (("3"
                                                    (expand "sigma")
                                                    (("3"
                                                      (expand "sigma")
                                                      (("3" (propax) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (expand "constructed_sturm_sequence?")
                                      (("2" (assert) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("5" (hide 2)
                            (("5" (skeep)
                              (("5" (inst-cp "cb" "x" "j")
                                (("5" (inst-cp "cb" "y" "j")
                                  (("5" (ground) nil nil)) nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (expand "constructed_sturm_sequence?")
                          (("2" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (constructed_sturm_lem_one_simple_root-1 nil 3592130472
   ("" (skeep)
    (("" (label "xy" -1)
      (("" (label "xb" -2)
        (("" (label "by" -3)
          (("" (label "cb" -4)
            (("" (label "sf" -5)
              (("" (label "css" -6)
                (("" (skoletin 1)
                  (("" (label "nscname" -1)
                    (("" (lemma "nsc_regular_swap")
                      ((""
                        (inst - "LAMBDA (i): polynomial(p(i), n(i))(x)"
                         "LAMBDA (i): polynomial(p(i), n(i))(y)" "m-1" "m-1")
                        (("1" (split -)
                          (("1" (skoletin -1)
                            (("1" (skoletin -1)
                              (("1" (flatten)
                                (("1" (assert)
                                  (("1" (split +)
                                    (("1" (split -)
                                      (("1"
                                        (replace "nscname" +)
                                        (("1" (assert) nil nil))
                                        nil)
                                       ("2"
                                        (expand "constructed_sturm_sequence?")
                                        (("2"
                                          (flatten)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (hide -1)
                                      (("2"
                                        (replace "nscname" +)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (replace -2 :dir rl)
                                            (("2"
                                              (replace -3 :dir rl)
                                              (("2"
                                                (replace -1 +)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (case "NOT m-1>=1")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand
                                                         "constructed_sturm_sequence?")
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (assert)
                                                      (("2"
                                                        (hide -2)
                                                        (("2"
                                                          (lift-if)
                                                          (("2"
                                                            (lift-if)
                                                            (("2"
                                                              (lift-if)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (copy "cb")
                                                                  (("2"
                                                                    (inst-cp
                                                                     -
                                                                     "x"
                                                                     "0")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "y"
                                                                       "0")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (case
                                                                           "NOT (polynomial(p(0), n(0))(b) = 0 IFF max_linear_div_power?(p(0),n(0),b)(1))")
                                                                          (("1"
                                                                            (hide
                                                                             4)
                                                                            (("1"
                                                                              (ground)
                                                                              (("1"
                                                                                (lemma
                                                                                 "poly_max_zero_power")
                                                                                (("1"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (split
                                                                                       -)
                                                                                      (("1"
                                                                                        (skosimp*)
                                                                                        (("1"
                                                                                          (case
                                                                                           "NOT m!1 > 1")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "max_linear_div_power?"
                                                                                             -2)
                                                                                            (("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (copy
                                                                                                 "css")
                                                                                                (("2"
                                                                                                  (label
                                                                                                   "dippydan"
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "constructed_sturm_sequence?"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -3)
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           -4)
                                                                                                          (("2"
                                                                                                            (hide
                                                                                                             "dippydan")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -4
                                                                                                               "b")
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -4
                                                                                                                 +)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "^"
                                                                                                                     "sf")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "expt")
                                                                                                                      (("2"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (copy
                                                                                         "css")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "constructed_sturm_sequence?"
                                                                                           -1)
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "0")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "max_linear_div_power?")
                                                                                (("2"
                                                                                  (skosimp*)
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "b")
                                                                                    (("2"
                                                                                      (replace
                                                                                       -2)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "^"
                                                                                           +)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "expt"
                                                                                             +)
                                                                                            (("2"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (expand
                                                                                 "max_linear_div_power?")
                                                                                (("3"
                                                                                  (skosimp*)
                                                                                  (("3"
                                                                                    (inst
                                                                                     -
                                                                                     "b")
                                                                                    (("3"
                                                                                      (replace
                                                                                       -2)
                                                                                      (("3"
                                                                                        (assert)
                                                                                        (("3"
                                                                                          (expand
                                                                                           "^"
                                                                                           +)
                                                                                          (("3"
                                                                                            (expand
                                                                                             "expt"
                                                                                             +)
                                                                                            (("3"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (ground)
                                                                            (("1"
                                                                              (lemma
                                                                               " max_linear_div_power_sign_change")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "p(0)"
                                                                                 "n(0)"
                                                                                 "x"
                                                                                 "b"
                                                                                 "y"
                                                                                 "1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (copy
                                                                                     "cb")
                                                                                    (("1"
                                                                                      (skeep)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "r"
                                                                                         "0")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (expand
                                                                               "sign_ext"
                                                                               -1)
                                                                              (("2"
                                                                                (lift-if)
                                                                                (("2"
                                                                                  (lift-if)
                                                                                  (("2"
                                                                                    (lift-if)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (ground)
                                                                                        (("1"
                                                                                          (lemma
                                                                                           "poly_intermediate_value_inc")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "p(0)"
                                                                                             "0"
                                                                                             "n(0)"
                                                                                             "x"
                                                                                             "y")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (skosimp*)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   "cb"
                                                                                                   "cc!1"
                                                                                                   "0")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (lemma
                                                                                           "poly_intermediate_value_dec")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "p(0)"
                                                                                             "0"
                                                                                             "n(0)"
                                                                                             "x"
                                                                                             "y")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   "cb"
                                                                                                   "cc!1"
                                                                                                   "0")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (expand
                                                                               "sign_ext"
                                                                               -1)
                                                                              (("3"
                                                                                (lift-if)
                                                                                (("3"
                                                                                  (lift-if)
                                                                                  (("3"
                                                                                    (lift-if)
                                                                                    (("3"
                                                                                      (assert)
                                                                                      (("3"
                                                                                        (ground)
                                                                                        (("1"
                                                                                          (lemma
                                                                                           "poly_intermediate_value_inc")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "p(0)"
                                                                                             "0"
                                                                                             "n(0)"
                                                                                             "x"
                                                                                             "y")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (skosimp*)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   "cb"
                                                                                                   "cc!1"
                                                                                                   "0")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (lemma
                                                                                           "poly_intermediate_value_dec")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "p(0)"
                                                                                             "0"
                                                                                             "n(0)"
                                                                                             "x"
                                                                                             "y")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   "cb"
                                                                                                   "cc!1"
                                                                                                   "0")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (assert) nil nil)
                           ("3" (hide 2)
                            (("3" (assert)
                              (("3" (skeep)
                                (("3" (assert)
                                  (("3" (inst-cp "cb" "x" "j+1")
                                    (("3" (inst-cp "cb" "x" "j")
                                      (("3"
                                        (assert)
                                        (("3"
                                          (case
                                           "NOT polynomial(p(j),n(j))(b)=0")
                                          (("1"
                                            (hide 3)
                                            (("1"
                                              (expand "sign_ext" 2)
                                              (("1"
                                                (lift-if)
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (lift-if)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (ground)
                                                        (("1"
                                                          (lemma
                                                           "poly_intermediate_value_inc")
                                                          (("1"
                                                            (inst
                                                             -
                                                             "p(j)"
                                                             "0"
                                                             "n(j)"
                                                             "x"
                                                             "y")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (skosimp*)
                                                                (("1"
                                                                  (inst
                                                                   "cb"
                                                                   "cc!1"
                                                                   "j")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (lemma
                                                           "poly_intermediate_value_inc")
                                                          (("2"
                                                            (inst
                                                             -
                                                             "p(j)"
                                                             "0"
                                                             "n(j)"
                                                             "x"
                                                             "y")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (skosimp*)
                                                                (("2"
                                                                  (inst
                                                                   "cb"
                                                                   "cc!1"
                                                                   "j")
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("3"
                                                          (lemma
                                                           "poly_intermediate_value_inc")
                                                          (("3"
                                                            (inst
                                                             -
                                                             "p(j)"
                                                             "0"
                                                             "n(j)"
                                                             "x"
                                                             "y")
                                                            (("3"
                                                              (assert)
                                                              (("3"
                                                                (skosimp*)
                                                                (("3"
                                                                  (inst
                                                                   "cb"
                                                                   "cc!1"
                                                                   "j")
                                                                  (("3"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("4"
                                                          (lemma
                                                           "poly_intermediate_value_inc")
                                                          (("4"
                                                            (inst
                                                             -
                                                             "p(j)"
                                                             "0"
                                                             "n(j)"
                                                             "x"
                                                             "y")
                                                            (("4"
                                                              (assert)
                                                              (("4"
                                                                (skosimp*)
                                                                (("4"
                                                                  (inst
                                                                   "cb"
                                                                   "cc!1"
                                                                   "j")
                                                                  (("4"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("5"
                                                          (lemma
                                                           "poly_intermediate_value_dec")
                                                          (("5"
                                                            (inst
                                                             -
                                                             "p(j)"
                                                             "0"
                                                             "n(j)"
                                                             "x"
                                                             "y")
                                                            (("5"
                                                              (assert)
                                                              (("5"
                                                                (skosimp*)
                                                                (("5"
                                                                  (inst
                                                                   "cb"
                                                                   "cc!1"
                                                                   "j")
                                                                  (("5"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("6"
                                                          (lemma
                                                           "poly_intermediate_value_dec")
                                                          (("6"
                                                            (inst
                                                             -
                                                             "p(j)"
                                                             "0"
                                                             "n(j)"
                                                             "x"
                                                             "y")
                                                            (("6"
                                                              (assert)
                                                              (("6"
                                                                (skosimp*)
                                                                (("6"
                                                                  (inst
                                                                   "cb"
                                                                   "cc!1"
                                                                   "j")
                                                                  (("6"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("7"
                                                          (lemma
                                                           "poly_intermediate_value_dec")
                                                          (("7"
                                                            (inst
                                                             -
                                                             "p(j)"
                                                             "0"
                                                             "n(j)"
                                                             "x"
                                                             "y")
                                                            (("7"
                                                              (assert)
                                                              (("7"
                                                                (skosimp*)
                                                                (("7"
                                                                  (inst
                                                                   "cb"
                                                                   "cc!1"
                                                                   "j")
                                                                  (("7"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("8"
                                                          (lemma
                                                           "poly_intermediate_value_dec")
                                                          (("8"
                                                            (inst
                                                             -
                                                             "p(j)"
                                                             "0"
                                                             "n(j)"
                                                             "x"
                                                             "y")
                                                            (("8"
                                                              (assert)
                                                              (("8"
                                                                (skosimp*)
                                                                (("8"
                                                                  (inst
                                                                   "cb"
                                                                   "cc!1"
                                                                   "j")
                                                                  (("8"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("9"
                                                          (lemma
                                                           "poly_intermediate_value_dec")
                                                          (("9"
                                                            (inst
                                                             -
                                                             "p(j)"
                                                             "0"
                                                             "n(j)"
                                                             "x"
                                                             "y")
                                                            (("9"
                                                              (assert)
                                                              (("9"
                                                                (skosimp*)
                                                                (("9"
                                                                  (inst
                                                                   "cb"
                                                                   "cc!1"
                                                                   "j")
                                                                  (("9"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("10"
                                                          (lemma
                                                           "poly_intermediate_value_dec")
                                                          (("10"
                                                            (inst
                                                             -
                                                             "p(j)"
                                                             "0"
                                                             "n(j)"
                                                             "x"
                                                             "y")
                                                            (("10"
                                                              (assert)
                                                              (("10"
                                                                (skosimp*)
                                                                (("10"
                                                                  (inst
                                                                   "cb"
                                                                   "cc!1"
                                                                   "j")
                                                                  (("10"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("11"
                                                          (lemma
                                                           "poly_intermediate_value_dec")
                                                          (("11"
                                                            (inst
                                                             -
                                                             "p(j)"
                                                             "0"
                                                             "n(j)"
                                                             "x"
                                                             "y")
                                                            (("11"
                                                              (assert)
                                                              (("11"
                                                                (skosimp*)
                                                                (("11"
                                                                  (inst
                                                                   "cb"
                                                                   "cc!1"
                                                                   "j")
                                                                  (("11"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("12"
                                                          (lemma
                                                           "poly_intermediate_value_dec")
                                                          (("12"
                                                            (inst
                                                             -
                                                             "p(j)"
                                                             "0"
                                                             "n(j)"
                                                             "x"
                                                             "y")
                                                            (("12"
                                                              (assert)
                                                              (("12"
                                                                (skosimp*)
                                                                (("12"
                                                                  (inst
                                                                   "cb"
                                                                   "cc!1"
                                                                   "j")
                                                                  (("12"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (assert)
                                            (("2"
                                              (case
                                               "j>0 IMPLIES (polynomial(p(j-1),n(j-1))(b)=0 OR polynomial(p(j+1),n(j+1))(b)=0)")
                                              (("1"
                                                (case "j > 0")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (lemma
                                                     "constructed_sturm_seq_repeated_root")
                                                    (("1"
                                                      (inst?)
                                                      (("1"
                                                        (inst - "b")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (split -)
                                                            (("1"
                                                              (inst - "j-1")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (inst-cp
                                                                   -
                                                                   "0")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "1")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (inst - "j")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (inst-cp
                                                                   -
                                                                   "0")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "1")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (assert)
                                                  (("2"
                                                    (case "j = m-1")
                                                    (("1"
                                                      (replaces -1)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (lemma
                                                           "constructed_sturm_seq_repeated_root")
                                                          (("1"
                                                            (inst
                                                             -
                                                             "m"
                                                             "n"
                                                             "p"
                                                             "b")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (inst - "m-1")
                                                                (("1"
                                                                  (case
                                                                   "polynomial(p(m),n(m))(b)=0")
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (replace
                                                                       -3)
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide-all-but
                                                                     ("css"
                                                                      1))
                                                                    (("2"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("2"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (assert)
                                                      (("2"
                                                        (lemma
                                                         "constructed_sturm_seq_first_signs_eq")
                                                        (("2"
                                                          (inst
                                                           -
                                                           "b"
                                                           "m"
                                                           "n"
                                                           "p"
                                                           "x"
                                                           "y")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (split -)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (case
                                                                     "sign_ext(polynomial(p(1), n(1))(b)) = sign_ext(polynomial(p(1), n(1))(x))")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "sign_ext"
                                                                       1)
                                                                      (("2"
                                                                        (lift-if)
                                                                        (("2"
                                                                          (lift-if)
                                                                          (("2"
                                                                            (lift-if)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (ground)
                                                                                (("1"
                                                                                  (lemma
                                                                                   "poly_intermediate_value_dec")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "p(1)"
                                                                                     "0"
                                                                                     "n(1)"
                                                                                     "x"
                                                                                     "b")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (skosimp*)
                                                                                        (("1"
                                                                                          (inst
                                                                                           "cb"
                                                                                           "cc!1"
                                                                                           "1")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (lemma
                                                                                   "poly_intermediate_value_dec")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "p(1)"
                                                                                     "0"
                                                                                     "n(1)"
                                                                                     "x"
                                                                                     "b")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (skosimp*)
                                                                                        (("2"
                                                                                          (inst
                                                                                           "cb"
                                                                                           "cc!1"
                                                                                           "1")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("3"
                                                                                  (lemma
                                                                                   "poly_intermediate_value_inc")
                                                                                  (("3"
                                                                                    (inst
                                                                                     -
                                                                                     "p(1)"
                                                                                     "0"
                                                                                     "n(1)"
                                                                                     "x"
                                                                                     "b")
                                                                                    (("3"
                                                                                      (assert)
                                                                                      (("3"
                                                                                        (skosimp*)
                                                                                        (("3"
                                                                                          (inst
                                                                                           "cb"
                                                                                           "cc!1"
                                                                                           "1")
                                                                                          (("3"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("4"
                                                                                  (lemma
                                                                                   "poly_intermediate_value_inc")
                                                                                  (("4"
                                                                                    (inst
                                                                                     -
                                                                                     "p(1)"
                                                                                     "0"
                                                                                     "n(1)"
                                                                                     "x"
                                                                                     "b")
                                                                                    (("4"
                                                                                      (assert)
                                                                                      (("4"
                                                                                        (skosimp*)
                                                                                        (("4"
                                                                                          (inst
                                                                                           "cb"
                                                                                           "cc!1"
                                                                                           "1")
                                                                                          (("4"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (skeep)
                                                                (("2"
                                                                  (inst-cp
                                                                   "cb"
                                                                   "c"
                                                                   "0")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (replace
                                                                       "cb")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (copy "css")
                                                    (("2"
                                                      (case
                                                       "polynomial(p(1 + j), n(1 + j))(x) = 0")
                                                      (("1"
                                                        (inst-cp
                                                         "cb"
                                                         "x"
                                                         "1+j")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (case "j = m-1")
                                                            (("1"
                                                              (lemma
                                                               "constructed_sturm_seq_repeated_root")
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "m"
                                                                 "n"
                                                                 "p"
                                                                 "b")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "m-1")
                                                                    (("1"
                                                                      (replace
                                                                       -2)
                                                                      (("1"
                                                                        (replace
                                                                         -6)
                                                                        (("1"
                                                                          (split
                                                                           -)
                                                                          (("1"
                                                                            (inst-cp
                                                                             -
                                                                             "0")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "1")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("3"
                                                                            (assert)
                                                                            (("3"
                                                                              (hide-all-but
                                                                               ("css"
                                                                                1))
                                                                              (("3"
                                                                                (expand
                                                                                 "constructed_sturm_sequence?")
                                                                                (("3"
                                                                                  (flatten)
                                                                                  (("3"
                                                                                    (replace
                                                                                     -5
                                                                                     +)
                                                                                    (("3"
                                                                                      (expand
                                                                                       "polynomial"
                                                                                       +)
                                                                                      (("3"
                                                                                        (expand
                                                                                         "sigma")
                                                                                        (("3"
                                                                                          (expand
                                                                                           "sigma")
                                                                                          (("3"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (assert)
                                                        (("2"
                                                          (label "iggypop" -1)
                                                          (("2"
                                                            (expand
                                                             "constructed_sturm_sequence?"
                                                             "iggypop")
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (label
                                                                 "thisone"
                                                                 -7)
                                                                (("2"
                                                                  (hide
                                                                   "iggypop")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "j+1")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (skeep)
                                                                        (("2"
                                                                          (name
                                                                           "pd"
                                                                           "poly_divide(p(j - 1), n(j - 1))(p(j), n(j))(0)")
                                                                          (("2"
                                                                            (replace
                                                                             -1)
                                                                            (("2"
                                                                              (lemma
                                                                               "poly_divide_def")
                                                                              (("2"
                                                                                (inst?)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (replace
                                                                                     -2)
                                                                                    (("2"
                                                                                      (split
                                                                                       -)
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "at_zero_remainder_sign_swaps")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "x"
                                                                                           "b"
                                                                                           "y"
                                                                                           "p(j-1)"
                                                                                           "pd`quot"
                                                                                           "p(j)"
                                                                                           "pd`rem"
                                                                                           "n(j-1)"
                                                                                           "pd`qdeg"
                                                                                           "n(j)"
                                                                                           "pd`rdeg")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -2)
                                                                                              (("1"
                                                                                                (split
                                                                                                 -)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "FORALL (rr:real): sign_ext(polynomial(-pd`rem, pd`rdeg)(rr)) = sign_ext(polynomial(p(1 + j), n(1 + j))(rr))")
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (hide-all-but
                                                                                                         (-2
                                                                                                          +))
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "sign_ext"
                                                                                                             (-
                                                                                                              5))
                                                                                                            (("1"
                                                                                                              (lift-if)
                                                                                                              (("1"
                                                                                                                (lift-if)
                                                                                                                (("1"
                                                                                                                  (lift-if)
                                                                                                                  (("1"
                                                                                                                    (lift-if)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (lift-if)
                                                                                                                        (("1"
                                                                                                                          (lift-if)
                                                                                                                          (("1"
                                                                                                                            (lift-if)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (lift-if)
                                                                                                                                (("1"
                                                                                                                                  (lift-if)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (lift-if)
                                                                                                                                      (("1"
                                                                                                                                        (lift-if)
                                                                                                                                        (("1"
                                                                                                                                          (lift-if)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (ground)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     (-1
                                                                                                      6))
                                                                                                    (("2"
                                                                                                      (skeep)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         "thisone")
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           "scal_polynomial2")
                                                                                                          (("2"
                                                                                                            (case
                                                                                                             "-pd`rem = -1 *pd`rem")
                                                                                                            (("1"
                                                                                                              (replaces
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "scal_polynomial2")
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "sign_ext_mult")
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "sign_ext_mult")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "sign_ext"
                                                                                                                       +)
                                                                                                                      (("1"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide-all-but
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (decompose-equality)
                                                                                                                (("2"
                                                                                                                  (grind)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (skeep)
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       -)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         "cb"
                                                                                                         "xyz"
                                                                                                         "j-1")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (inst
                                                                                                         "cb"
                                                                                                         "xyz"
                                                                                                         "j")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("3"
                                                                                                        (decompose-equality
                                                                                                         "thisone")
                                                                                                        (("3"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "xyz")
                                                                                                          (("3"
                                                                                                            (rewrite
                                                                                                             "scal_polynomial2")
                                                                                                            (("3"
                                                                                                              (replace
                                                                                                               -2)
                                                                                                              (("3"
                                                                                                                (assert)
                                                                                                                (("3"
                                                                                                                  (inst
                                                                                                                   "cb"
                                                                                                                   "xyz"
                                                                                                                   "1+j")
                                                                                                                  (("3"
                                                                                                                    (assert)
                                                                                                                    (("3"
                                                                                                                      (case
                                                                                                                       "NOT j = m-1")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (replaces
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (hide-all-but
                                                                                                                             ("css"
                                                                                                                              2))
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "constructed_sturm_sequence?")
                                                                                                                              (("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (replace
                                                                                                                                   -5)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "polynomial"
                                                                                                                                     +)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "sigma")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "sigma")
                                                                                                                                        (("2"
                                                                                                                                          (propax)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("3"
                                                                                                  (flatten)
                                                                                                  (("3"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "b")
                                                                                                    (("3"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("3"
                                                                                                        (replace
                                                                                                         -6)
                                                                                                        (("3"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("4"
                                                                                                  (flatten)
                                                                                                  (("4"
                                                                                                    (inst
                                                                                                     "cb"
                                                                                                     "x"
                                                                                                     "j-1")
                                                                                                    (("4"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("5"
                                                                                                  (flatten)
                                                                                                  (("5"
                                                                                                    (decompose-equality
                                                                                                     "thisone")
                                                                                                    (("5"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "x")
                                                                                                      (("5"
                                                                                                        (rewrite
                                                                                                         "scal_polynomial2")
                                                                                                        (("5"
                                                                                                          (replace
                                                                                                           -2)
                                                                                                          (("5"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("6"
                                                                                                  (flatten)
                                                                                                  (("6"
                                                                                                    (assert)
                                                                                                    (("6"
                                                                                                      (inst
                                                                                                       "cb"
                                                                                                       "y"
                                                                                                       "j-1")
                                                                                                      (("6"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("7"
                                                                                                  (flatten)
                                                                                                  (("7"
                                                                                                    (decompose-equality
                                                                                                     "thisone")
                                                                                                    (("7"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "y")
                                                                                                      (("7"
                                                                                                        (rewrite
                                                                                                         "scal_polynomial2")
                                                                                                        (("7"
                                                                                                          (replaces
                                                                                                           -2)
                                                                                                          (("7"
                                                                                                            (assert)
                                                                                                            (("7"
                                                                                                              (inst
                                                                                                               "cb"
                                                                                                               "y"
                                                                                                               "1+j")
                                                                                                              (("7"
                                                                                                                (assert)
                                                                                                                (("7"
                                                                                                                  (case
                                                                                                                   "NOT j = m-1")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (replaces
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (hide-all-but
                                                                                                                       ("css"
                                                                                                                        3))
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "constructed_sturm_sequence?")
                                                                                                                        (("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (replace
                                                                                                                             -5)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "polynomial")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "sigma")
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "sigma")
                                                                                                                                    (("2"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (copy
                                                                                         "css")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "constructed_sturm_sequence?"
                                                                                           -1)
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "j")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("3"
                                                                                        (copy
                                                                                         "css")
                                                                                        (("3"
                                                                                          (expand
                                                                                           "constructed_sturm_sequence?"
                                                                                           -1)
                                                                                          (("3"
                                                                                            (flatten)
                                                                                            (("3"
                                                                                              (inst
                                                                                               -
                                                                                               "j-1"
                                                                                               "j")
                                                                                              (("3"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (flatten)
                                                (("3" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("4" (hide 2)
                            (("4"
                              (lemma "constructed_sturm_seq_repeated_root")
                              (("4" (inst - "m" "n" "p" "b")
                                (("4" (assert)
                                  (("4" (inst - "m-1")
                                    (("1" (assert)
                                      (("1"
                                        (split -)
                                        (("1"
                                          (inst-cp - "0")
                                          (("1"
                                            (inst - "1")
                                            (("1" (assert) nil nil)
                                             ("2"
                                              (expand
                                               "constructed_sturm_sequence?")
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (inst-cp "cb" "x" "m-1")
                                          (("1"
                                            (inst-cp "cb" "y" "m-1")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "sign_ext" +)
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (lift-if)
                                                    (("1"
                                                      (lift-if)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (ground)
                                                          (("1"
                                                            (lemma
                                                             "poly_intermediate_value_inc")
                                                            (("1"
                                                              (inst
                                                               -
                                                               "p(m-1)"
                                                               "0"
                                                               "n(m-1)"
                                                               "x"
                                                               "y")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (skosimp*)
                                                                  (("1"
                                                                    (inst
                                                                     "cb"
                                                                     "cc!1"
                                                                     "m-1")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (expand
                                                                         "constructed_sturm_sequence?")
                                                                        (("2"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "constructed_sturm_sequence?")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (lemma
                                                             "poly_intermediate_value_inc")
                                                            (("2"
                                                              (inst
                                                               -
                                                               "p(m-1)"
                                                               "0"
                                                               "n(m-1)"
                                                               "x"
                                                               "y")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (skosimp*)
                                                                  (("1"
                                                                    (inst
                                                                     "cb"
                                                                     "cc!1"
                                                                     "m-1")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "constructed_sturm_sequence?")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (lemma
                                                             "poly_intermediate_value_dec")
                                                            (("3"
                                                              (inst
                                                               -
                                                               "p(m-1)"
                                                               "0"
                                                               "n(m-1)"
                                                               "x"
                                                               "y")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (skosimp*)
                                                                  (("1"
                                                                    (inst
                                                                     "cb"
                                                                     "cc!1"
                                                                     "m-1")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "constructed_sturm_sequence?")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("4"
                                                            (lemma
                                                             "poly_intermediate_value_dec")
                                                            (("4"
                                                              (inst
                                                               -
                                                               "p(m-1)"
                                                               "0"
                                                               "n(m-1)"
                                                               "x"
                                                               "y")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (skosimp*)
                                                                  (("1"
                                                                    (inst
                                                                     "cb"
                                                                     "cc!1"
                                                                     "m-1")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "constructed_sturm_sequence?")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand
                                               "constructed_sturm_sequence?")
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand
                                             "constructed_sturm_sequence?")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("3"
                                          (hide-all-but ("css" 1))
                                          (("3"
                                            (expand
                                             "constructed_sturm_sequence?")
                                            (("3"
                                              (flatten)
                                              (("3"
                                                (replace -5)
                                                (("3"
                                                  (expand "polynomial" +)
                                                  (("3"
                                                    (expand "sigma")
                                                    (("3"
                                                      (expand "sigma")
                                                      (("3" (propax) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (expand "constructed_sturm_sequence?")
                                      (("2" (assert) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("5" (hide 2)
                            (("5" (skeep)
                              (("5" (inst-cp "cb" "x" "j")
                                (("5" (inst-cp "cb" "y" "j")
                                  (("5" (ground) nil nil)) nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (expand "constructed_sturm_sequence?")
                          (("2" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((int_minus_int_is_int application-judgement "int" integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (NSC type-eq-decl nil number_sign_changes nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (number_sign_changes def-decl "NSC" number_sign_changes nil)
    (sequence type-eq-decl nil sequences nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (sign_ext const-decl
     "{sig: real | (sig = -1 OR sig = 1 OR sig = 0) AND sig * x = abs(x)}"
     sign reals)
    (TRUE const-decl "bool" booleans nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (bijective? const-decl "bool" functions nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (nsc_regular_swap formula-decl nil number_sign_changes nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (max_linear_div_power? const-decl "bool" more_polynomial_props reals)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nat_exp application-judgement "nat" exponentiation nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (expt def-decl "real" exponentiation nil)
    (^ const-decl "real" exponentiation nil)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (poly_max_zero_power formula-decl nil more_polynomial_props reals)
    (poly_intermediate_value_dec formula-decl nil polynomials reals)
    (poly_intermediate_value_inc formula-decl nil polynomials reals)
    (max_linear_div_power_sign_change formula-decl nil more_polynomial_props
     reals)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (constructed_sturm_sequence? const-decl "bool" sturm nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (constructed_sturm_seq_first_signs_eq formula-decl nil sturm nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (constructed_sturm_seq_repeated_root formula-decl nil sturm nil)
    (sigma def-decl "real" sigma reals)
    (odd_minus_odd_is_even application-judgement "even_int" integers nil)
    (odd_plus_odd_is_even application-judgement "even_int" integers nil)
    (DivType type-eq-decl nil polynomial_division nil)
    (/= const-decl "boolean" notequal nil)
    (poly_divide def-decl "DivType" polynomial_division nil)
    (poly_divide_def formula-decl nil polynomial_division nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (- const-decl "[T -> real]" real_fun_ops reals)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (scal_polynomial2 formula-decl nil polynomials reals)
    (sign_ext_mult formula-decl nil sign reals)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (even_minus_odd_is_odd application-judgement "odd_int" integers nil)
    (at_zero_remainder_sign_swaps formula-decl nil more_polynomial_props
     reals)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (m skolem-const-decl "nat" sturm nil))
   nil))
 (constructed_sturm_lem_one_multi_root_TCC1 0
  (constructed_sturm_lem_one_multi_root_TCC1-1 nil 3592820375
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (poly_deriv const-decl "real" polynomials reals)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (^ const-decl "real" exponentiation nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (/= const-decl "boolean" notequal nil)
    (constructed_sturm_sequence? const-decl "bool" sturm nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil
   (constructed_sturm_lem_one_multi_root subtype
    "(number_fields.-)(sturm.m, 1)" "nat")))
 (constructed_sturm_lem_one_multi_root 0
  (constructed_sturm_lem_one_multi_root-4 "" 3790098444
   ("" (skeep)
    (("" (label "xy" -1)
      (("" (label "xb" -2)
        (("" (label "by" -3)
          (("" (label "cb" -4)
            (("" (label "sfo" -5)
              (("" (label "sf1" -6)
                (("" (label "css" -7)
                  (("" (skoletin 1)
                    (("" (label "nscname" -1)
                      ((""
                        (lemma "constructed_sturm_seq_repeated_root_struct")
                        (("" (label "rps" -1)
                          (("" (inst?)
                            (("" (inst - "b")
                              (("" (assert)
                                (("" (inst - "0")
                                  (("" (assert)
                                    (("" (case "m<2")
                                      (("1"
                                        (expand "constructed_sturm_sequence?")
                                        (("1" (assert) nil nil))
                                        nil)
                                       ("2"
                                        (assert)
                                        (("2"
                                          (skeep)
                                          (("2"
                                            (case
                                             "NOT max_linear_div_power?(p(1), n(1), b)(mm-1)")
                                            (("1"
                                              (rewrite
                                               "max_linear_div_power_rew2"
                                               1)
                                              (("1"
                                                (expand
                                                 "max_linear_div_power?"
                                                 -2)
                                                (("1"
                                                  (skosimp*)
                                                  (("1"
                                                    (inst + "q!1" "n(0)-mm")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (skeep)
                                                        (("1"
                                                          (inst - "x!1")
                                                          (("1"
                                                            (inst - "x!1")
                                                            (("1"
                                                              (copy "css")
                                                              (("1"
                                                                (expand
                                                                 "constructed_sturm_sequence?"
                                                                 -1)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (label "la" -1)
                                              (("2"
                                                (name
                                                 "aa"
                                                 "LAMBDA (i:nat): polynomial(p(i),n(i))(x)")
                                                (("2"
                                                  (name
                                                   "bb"
                                                   "LAMBDA (i:nat): polynomial(p(i),n(i))(y)")
                                                  (("2"
                                                    (case
                                                     "FORALL (j:nat): j<=m-1 IMPLIES (aa(j)/=0 AND bb(j)/=0)")
                                                    (("1"
                                                      (name
                                                       "sig"
                                                       "IF odd?(mm-1) THEN -1 ELSE 1 ENDIF")
                                                      (("1"
                                                        (case
                                                         "EXISTS (powfun:[nat->posnat]): (FORALL (j:nat): j<=m-1 IMPLIES max_linear_div_power?(p(j),n(j),b)(powfun(j))) AND (FORALL (j): j<=m-1 IMPLIES powfun(j)>=mm-1) AND powfun(0)=mm AND powfun(1)=mm-1")
                                                        (("1"
                                                          (skeep -1)
                                                          (("1"
                                                            (name
                                                             "sigfun"
                                                             "LAMBDA (i:nat): IF ((odd?(mm-1) AND odd?(powfun(i))) OR (even?(mm-1) AND even?(powfun(i)))) THEN sig ELSE -sig ENDIF")
                                                            (("1"
                                                              (lemma
                                                               "nsc_multiroot_full")
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "aa"
                                                                 "bb"
                                                                 "m-1"
                                                                 "m-1"
                                                                 "sig"
                                                                 "sigfun")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (case
                                                                     "FORALL (j:nat): j<=m-1 IMPLIES ((sigfun(j)=sig) IFF ((odd?(powfun(j)) AND odd?(mm-1)) OR (even?(powfun(j)) AND even?(mm-1))))")
                                                                    (("1"
                                                                      (label
                                                                       "deflem"
                                                                       -1)
                                                                      (("1"
                                                                        (hide
                                                                         "deflem")
                                                                        (("1"
                                                                          (split
                                                                           -)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (replace
                                                                               "nscname"
                                                                               +)
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (expand
                                                                               "sig")
                                                                              (("2"
                                                                                (lift-if)
                                                                                (("2"
                                                                                  (ground)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("3"
                                                                              (expand
                                                                               "sigfun")
                                                                              (("3"
                                                                                (expand
                                                                                 "sig")
                                                                                (("3"
                                                                                  (skeep)
                                                                                  (("3"
                                                                                    (lift-if)
                                                                                    (("3"
                                                                                      (lift-if)
                                                                                      (("3"
                                                                                        (lift-if)
                                                                                        (("3"
                                                                                          (ground)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("4"
                                                                            (skeep)
                                                                            (("4"
                                                                              (hide
                                                                               -3)
                                                                              (("4"
                                                                                (expand
                                                                                 "sigfun"
                                                                                 1)
                                                                                (("4"
                                                                                  (lemma
                                                                                   "even_or_odd")
                                                                                  (("4"
                                                                                    (inst
                                                                                     -
                                                                                     "mm-1")
                                                                                    (("4"
                                                                                      (lift-if)
                                                                                      (("4"
                                                                                        (lemma
                                                                                         " max_linear_div_power_sign_change")
                                                                                        (("4"
                                                                                          (inst
                                                                                           -
                                                                                           "p(j)"
                                                                                           "n(j)"
                                                                                           "x"
                                                                                           "b"
                                                                                           "y"
                                                                                           "powfun(j)")
                                                                                          (("4"
                                                                                            (assert)
                                                                                            (("4"
                                                                                              (split
                                                                                               -1)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "aa"
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "bb"
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (ground)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (copy
                                                                                                 "cb")
                                                                                                (("2"
                                                                                                  (skeep)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "r"
                                                                                                     "j")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("3"
                                                                                                (inst?)
                                                                                                (("3"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("5"
                                                                            (skeep)
                                                                            (("5"
                                                                              (assert)
                                                                              (("5"
                                                                                (case
                                                                                 "NOT 1 < j")
                                                                                (("1"
                                                                                  (hide
                                                                                   3)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "max_linear_div_power_unique")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "p(1)"
                                                                                       "n(1)"
                                                                                       "b"
                                                                                       "mm-1"
                                                                                       "powfun(1)")
                                                                                      (("1"
                                                                                        (split
                                                                                         -1)
                                                                                        (("1"
                                                                                          (lemma
                                                                                           "even_or_odd")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "mm-1")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "sigfun"
                                                                                               2)
                                                                                              (("1"
                                                                                                (lift-if)
                                                                                                (("1"
                                                                                                  (ground)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil)
                                                                                         ("3"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (case
                                                                                     "NOT j < m-1")
                                                                                    (("1"
                                                                                      (case
                                                                                       "NOT j = m-1")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (lemma
                                                                                             "max_linear_div_power_unique")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "p(m-1)"
                                                                                               "n(m-1)"
                                                                                               "b"
                                                                                               "mm-1"
                                                                                               "powfun(m-1)")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (split
                                                                                                   -)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "even_or_odd")
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       3)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "mm-1")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "sigfun"
                                                                                                           2)
                                                                                                          (("1"
                                                                                                            (lift-if)
                                                                                                            (("1"
                                                                                                              (ground)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (inst?)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (case
                                                                                         "max_linear_div_power?(p(j),n(j),b)(mm-1)")
                                                                                        (("1"
                                                                                          (hide
                                                                                           2)
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "max_linear_div_power_unique")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "p(j)"
                                                                                               "n(j)"
                                                                                               "b"
                                                                                               "mm-1"
                                                                                               "powfun(j)")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (split
                                                                                                   -)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "even_or_odd")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "mm-1")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "sigfun"
                                                                                                         +)
                                                                                                        (("1"
                                                                                                          (lift-if)
                                                                                                          (("1"
                                                                                                            (ground)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (inst?)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (case
                                                                                           "NOT (sigfun(j - 1) = sig AND
                                                                                                                                    sigfun(1 + j) = sig)")
                                                                                          (("1"
                                                                                            (hide
                                                                                             4)
                                                                                            (("1"
                                                                                              (label
                                                                                               "jfive"
                                                                                               -6)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 "jfive")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "j")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "j")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "j")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "max_linear_div_power_unique")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "p(j-1)"
                                                                                                               "n(j-1)"
                                                                                                               "b"
                                                                                                               "mm-1"
                                                                                                               "powfun(j-1)")
                                                                                                              (("1"
                                                                                                                (lemma
                                                                                                                 "max_linear_div_power_unique")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "p(j+1)"
                                                                                                                   "n(j+1)"
                                                                                                                   "b"
                                                                                                                   "mm-1"
                                                                                                                   "powfun(j+1)")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (split
                                                                                                                       -)
                                                                                                                      (("1"
                                                                                                                        (split
                                                                                                                         -)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "even_or_odd")
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "mm-1")
                                                                                                                            (("1"
                                                                                                                              (reveal
                                                                                                                               "jfive")
                                                                                                                              (("1"
                                                                                                                                (inst-cp
                                                                                                                                 -
                                                                                                                                 "j-1")
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "j+1")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "sigfun"
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (lift-if)
                                                                                                                                      (("1"
                                                                                                                                        (ground)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (reveal
                                                                                                                           "jfive")
                                                                                                                          (("2"
                                                                                                                            (inst?)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (reveal
                                                                                                                         "jfive")
                                                                                                                        (("2"
                                                                                                                          (inst?)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (copy
                                                                                                 "css")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "constructed_sturm_sequence?"
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       (-1
                                                                                                        -2
                                                                                                        -3
                                                                                                        -4
                                                                                                        -5
                                                                                                        -6))
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "j+1")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (skeep)
                                                                                                            (("2"
                                                                                                              (name
                                                                                                               "pd"
                                                                                                               "poly_divide(p(j - 1), n(j - 1))(p(j), n(j))(0)")
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (lemma
                                                                                                                   "poly_divide_def")
                                                                                                                  (("2"
                                                                                                                    (inst?)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (invoke
                                                                                                                         (case
                                                                                                                          "%1")
                                                                                                                         (!
                                                                                                                          -1
                                                                                                                          1))
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "max_div_linear_power_remainder_sign_swaps")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "x"
                                                                                                                                 "b"
                                                                                                                                 "y"
                                                                                                                                 "p(j-1)"
                                                                                                                                 "pd`quot"
                                                                                                                                 "p(j)"
                                                                                                                                 "-(1/c)*p(j+1)"
                                                                                                                                 "n(j-1)"
                                                                                                                                 "pd`qdeg"
                                                                                                                                 "n(j)"
                                                                                                                                 "n(j+1)"
                                                                                                                                 "mm-1"
                                                                                                                                 "powfun(j)")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (split
                                                                                                                                     -)
                                                                                                                                    (("1"
                                                                                                                                      (flatten)
                                                                                                                                      (("1"
                                                                                                                                        (hide-all-but
                                                                                                                                         (-1
                                                                                                                                          -2
                                                                                                                                          4))
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (rewrite
                                                                                                                                             "neg_polynomial"
                                                                                                                                             :dir
                                                                                                                                             rl)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "-")
                                                                                                                                                (("1"
                                                                                                                                                  (rewrite
                                                                                                                                                   "scal_polynomial2")
                                                                                                                                                  (("1"
                                                                                                                                                    (rewrite
                                                                                                                                                     "scal_polynomial2")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (case
                                                                                                                                                         "FORALL (r:real): -(-(1/c)*r) = (1/c)*r")
                                                                                                                                                        (("1"
                                                                                                                                                          (rewrite
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (rewrite
                                                                                                                                                             -1)
                                                                                                                                                            (("1"
                                                                                                                                                              (hide
                                                                                                                                                               -1)
                                                                                                                                                              (("1"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "sign_ext_mult")
                                                                                                                                                                (("1"
                                                                                                                                                                  (rewrite
                                                                                                                                                                   "sign_ext_mult")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (case
                                                                                                                                                                     "sign_ext(1/c)=1")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (replaces
                                                                                                                                                                       -1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "aa")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (expand
                                                                                                                                                                             "bb")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "sign_ext")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (lift-if)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (lift-if)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (lift-if)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (lift-if)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (lift-if)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (ground)
                                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (hide-all-but
                                                                                                                                                                       1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "sign_ext")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (propax)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (skeep)
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "xyz")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -1
                                                                                                                                             +)
                                                                                                                                            (("2"
                                                                                                                                              (rewrite
                                                                                                                                               "scal_polynomial2")
                                                                                                                                              (("2"
                                                                                                                                                (replace
                                                                                                                                                 -3
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (rewrite
                                                                                                                                                   "scal_polynomial2")
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("3"
                                                                                                                                      (skeep)
                                                                                                                                      (("3"
                                                                                                                                        (copy
                                                                                                                                         "cb")
                                                                                                                                        (("3"
                                                                                                                                          (split
                                                                                                                                           -)
                                                                                                                                          (("1"
                                                                                                                                            (inst?)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (inst?)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("3"
                                                                                                                                            (rewrite
                                                                                                                                             "scal_polynomial2")
                                                                                                                                            (("3"
                                                                                                                                              (lemma
                                                                                                                                               "nzreal_times_nzreal_is_nzreal")
                                                                                                                                              (("3"
                                                                                                                                                (inst?)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("2"
                                                                                                                                                    (hide
                                                                                                                                                     -2)
                                                                                                                                                    (("2"
                                                                                                                                                      (inst?)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("4"
                                                                                                                                      (inst
                                                                                                                                       "rps"
                                                                                                                                       "j")
                                                                                                                                      (("4"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("5"
                                                                                                                                      (lemma
                                                                                                                                       "max_linear_div_power_scal")
                                                                                                                                      (("5"
                                                                                                                                        (inst?)
                                                                                                                                        (("5"
                                                                                                                                          (assert)
                                                                                                                                          (("5"
                                                                                                                                            (inst
                                                                                                                                             "rps"
                                                                                                                                             "j")
                                                                                                                                            (("5"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("6"
                                                                                                                                      (hide
                                                                                                                                       (-1
                                                                                                                                        -2
                                                                                                                                        -3
                                                                                                                                        -4))
                                                                                                                                      (("6"
                                                                                                                                        (inst?)
                                                                                                                                        (("6"
                                                                                                                                          (inst?)
                                                                                                                                          (("6"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("7"
                                                                                                                                      (assert)
                                                                                                                                      (("7"
                                                                                                                                        (inst?)
                                                                                                                                        (("7"
                                                                                                                                          (inst?)
                                                                                                                                          (("7"
                                                                                                                                            (inst?)
                                                                                                                                            (("7"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (copy
                                                                                                                           "css")
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             -2)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "constructed_sturm_sequence?")
                                                                                                                              (("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "j")
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "j-1"
                                                                                                                                     "j")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("6"
                                                                            (lemma
                                                                             " max_linear_div_power_sign_change")
                                                                            (("6"
                                                                              (expand
                                                                               "aa"
                                                                               +)
                                                                              (("6"
                                                                                (expand
                                                                                 "bb"
                                                                                 +)
                                                                                (("6"
                                                                                  (inst
                                                                                   -
                                                                                   "p(0)"
                                                                                   "n(0)"
                                                                                   "x"
                                                                                   "b"
                                                                                   "y"
                                                                                   "mm")
                                                                                  (("6"
                                                                                    (assert)
                                                                                    (("6"
                                                                                      (split
                                                                                       -)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "even_or_odd")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "mm")
                                                                                              (("1"
                                                                                                (case
                                                                                                 "even?(mm)")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -2
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (lemma
                                                                                                           "odd_iff_even_succ")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "mm-1")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "even_iff_odd_succ")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "mm-1")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (lemma
                                                                                                             "even_or_odd")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "mm-1")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (copy
                                                                                         "cb")
                                                                                        (("2"
                                                                                          (skeep)
                                                                                          (("2"
                                                                                            (inst?)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("7"
                                                                            (expand
                                                                             "aa"
                                                                             +)
                                                                            (("7"
                                                                              (copy
                                                                               "css")
                                                                              (("7"
                                                                                (expand
                                                                                 "constructed_sturm_sequence?"
                                                                                 -1)
                                                                                (("7"
                                                                                  (flatten)
                                                                                  (("7"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("7"
                                                                                      (inst
                                                                                       -
                                                                                       "0"
                                                                                       "1")
                                                                                      (("7"
                                                                                        (replace
                                                                                         -2)
                                                                                        (("7"
                                                                                          (replace
                                                                                           -3)
                                                                                          (("7"
                                                                                            (assert)
                                                                                            (("7"
                                                                                              (lemma
                                                                                               "poly_deriv_signs_neq_around_root_left")
                                                                                              (("7"
                                                                                                (inst
                                                                                                 -
                                                                                                 "p(0)"
                                                                                                 "n(0)"
                                                                                                 "x"
                                                                                                 "b")
                                                                                                (("7"
                                                                                                  (assert)
                                                                                                  (("7"
                                                                                                    (copy
                                                                                                     "cb")
                                                                                                    (("7"
                                                                                                      (skeep)
                                                                                                      (("7"
                                                                                                        (split
                                                                                                         -)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "z"
                                                                                                           "0")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "z"
                                                                                                           "1")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("8"
                                                                            (expand
                                                                             "bb"
                                                                             1)
                                                                            (("8"
                                                                              (copy
                                                                               "css")
                                                                              (("8"
                                                                                (expand
                                                                                 "constructed_sturm_sequence?"
                                                                                 -1)
                                                                                (("8"
                                                                                  (flatten)
                                                                                  (("8"
                                                                                    (inst
                                                                                     -
                                                                                     "0"
                                                                                     "1")
                                                                                    (("8"
                                                                                      (replace
                                                                                       -3)
                                                                                      (("8"
                                                                                        (replace
                                                                                         -4)
                                                                                        (("8"
                                                                                          (assert)
                                                                                          (("8"
                                                                                            (lemma
                                                                                             "poly_deriv_signs_neq_around_root_right")
                                                                                            (("8"
                                                                                              (inst
                                                                                               -
                                                                                               "p(0)"
                                                                                               "n(0)"
                                                                                               "y"
                                                                                               "b")
                                                                                              (("8"
                                                                                                (assert)
                                                                                                (("8"
                                                                                                  (copy
                                                                                                   "cb")
                                                                                                  (("8"
                                                                                                    (skeep)
                                                                                                    (("8"
                                                                                                      (split
                                                                                                       -)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "z"
                                                                                                         "0")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "z"
                                                                                                           "1")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("9"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (hide-all-but
                                                                         1)
                                                                        (("2"
                                                                          (expand
                                                                           "sigfun")
                                                                          (("2"
                                                                            (expand
                                                                             "sig")
                                                                            (("2"
                                                                              (lemma
                                                                               "even_or_odd")
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "mm-1")
                                                                                (("2"
                                                                                  (lemma
                                                                                   "even_or_odd")
                                                                                  (("2"
                                                                                    (skeep)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "powfun(j)")
                                                                                      (("2"
                                                                                        (lift-if)
                                                                                        (("2"
                                                                                          (lift-if)
                                                                                          (("2"
                                                                                            (lift-if)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (ground)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (name
                                                           "powfun"
                                                           "LAMBDA (j:nat): IF j=0 THEN mm ELSIF j=1 THEN mm-1 ELSIF j>=m THEN 1 ELSE choose({kk:posnat|max_linear_div_power?(p(j),n(j),b)(kk)}) ENDIF")
                                                          (("1"
                                                            (inst + "powfun")
                                                            (("1"
                                                              (invoke
                                                               (case "NOT %1")
                                                               (! 1 1))
                                                              (("1"
                                                                (hide 2)
                                                                (("1"
                                                                  (skeep)
                                                                  (("1"
                                                                    (expand
                                                                     "powfun"
                                                                     1)
                                                                    (("1"
                                                                      (lift-if)
                                                                      (("1"
                                                                        (ground)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (replace -1)
                                                                (("2"
                                                                  (split +)
                                                                  (("1"
                                                                    (skeep)
                                                                    (("1"
                                                                      (lemma
                                                                       "constructed_sturm_seq_repeated_root_mth")
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "m-1"
                                                                         "m"
                                                                         "n"
                                                                         "p"
                                                                         "b"
                                                                         "mm")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "j")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (skeep)
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "j")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "max_linear_div_power_unique")
                                                                                      (("1"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "powfun(j)")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "powfun"
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (lift-if)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (split
                                                                                                           +)
                                                                                                          (("1"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (lemma
                                                                     "max_linear_div_power_unique")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "p(0)"
                                                                       "n(0)"
                                                                       "b"
                                                                       "powfun(0)"
                                                                       "mm")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "0")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (expand
                                                                           "powfun"
                                                                           1)
                                                                          (("2"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("3"
                                                                    (lemma
                                                                     "max_linear_div_power_unique")
                                                                    (("3"
                                                                      (inst
                                                                       -
                                                                       "p(1)"
                                                                       "n(1)"
                                                                       "b"
                                                                       "powfun(1)"
                                                                       "mm-1")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "1")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (expand
                                                                         "powfun"
                                                                         1)
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (hide 2)
                                                                (("3"
                                                                  (skosimp*)
                                                                  (("3"
                                                                    (assert)
                                                                    (("3"
                                                                      (case
                                                                       "powfun(j!1) > 0")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil)
                                                                       ("2"
                                                                        (hide
                                                                         2)
                                                                        (("2"
                                                                          (expand
                                                                           "powfun"
                                                                           1)
                                                                          (("2"
                                                                            (lift-if)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (split
                                                                                 +)
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (split
                                                                                     +)
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (skeep)
                                                              (("2"
                                                                (expand
                                                                 "powfun"
                                                                 1)
                                                                (("2"
                                                                  (lift-if)
                                                                  (("2"
                                                                    (ground)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide 2)
                                                            (("2"
                                                              (skeep)
                                                              (("2"
                                                                (lemma
                                                                 "constructed_sturm_seq_repeated_root_mth")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "m-1"
                                                                   "m"
                                                                   "n"
                                                                   "p"
                                                                   "b"
                                                                   "mm")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "j")
                                                                      (("2"
                                                                        (skeep
                                                                         -)
                                                                        (("2"
                                                                          (expand
                                                                           "nonempty?")
                                                                          (("2"
                                                                            (expand
                                                                             "empty?")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "kp")
                                                                              (("2"
                                                                                (expand
                                                                                 "member")
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (copy "cb")
                                                      (("2"
                                                        (skeep)
                                                        (("2"
                                                          (expand "aa" 1)
                                                          (("2"
                                                            (expand "bb" 1)
                                                            (("2"
                                                              (split +)
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "x"
                                                                 "j")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (inst
                                                                 -
                                                                 "y"
                                                                 "j")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (constructed_sturm_lem_one_multi_root-3 nil 3592141973
   ("" (skeep)
    (("" (label "xy" -1)
      (("" (label "xb" -2)
        (("" (label "by" -3)
          (("" (label "cb" -4)
            (("" (label "sfo" -5)
              (("" (label "sf1" -6)
                (("" (label "css" -7)
                  (("" (skoletin 1)
                    (("" (label "nscname" -1)
                      ((""
                        (lemma "constructed_sturm_seq_repeated_root_struct")
                        (("" (label "rps" -1)
                          (("" (inst?)
                            (("" (inst - "b")
                              (("" (assert)
                                (("" (inst - "0")
                                  (("" (assert)
                                    (("" (case "m<2")
                                      (("1"
                                        (expand "constructed_sturm_sequence?")
                                        (("1" (assert) nil nil))
                                        nil)
                                       ("2"
                                        (assert)
                                        (("2"
                                          (skeep)
                                          (("2"
                                            (case
                                             "NOT max_linear_div_power?(p(1), n(1), b)(mm-1)")
                                            (("1"
                                              (rewrite
                                               "max_linear_div_power_rew2"
                                               1)
                                              (("1"
                                                (expand
                                                 "max_linear_div_power?"
                                                 -2)
                                                (("1"
                                                  (skosimp*)
                                                  (("1"
                                                    (inst + "q!1" "n(0)-mm")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (skeep)
                                                        (("1"
                                                          (inst - "x!1")
                                                          (("1"
                                                            (inst - "x!1")
                                                            (("1"
                                                              (copy "css")
                                                              (("1"
                                                                (expand
                                                                 "constructed_sturm_sequence?"
                                                                 -1)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (label "la" -1)
                                              (("2"
                                                (name
                                                 "aa"
                                                 "LAMBDA (i:nat): polynomial(p(i),n(i))(x)")
                                                (("2"
                                                  (name
                                                   "bb"
                                                   "LAMBDA (i:nat): polynomial(p(i),n(i))(y)")
                                                  (("2"
                                                    (case
                                                     "FORALL (j:nat): j<=m-1 IMPLIES (aa(j)/=0 AND bb(j)/=0)")
                                                    (("1"
                                                      (name
                                                       "sig"
                                                       "IF odd?(mm-1) THEN -1 ELSE 1 ENDIF")
                                                      (("1"
                                                        (case
                                                         "EXISTS (powfun:[nat->posnat]): (FORALL (j:nat): j<=m-1 IMPLIES max_linear_div_power?(p(j),n(j),b)(powfun(j))) AND (FORALL (j): j<=m-1 IMPLIES powfun(j)>=mm-1) AND powfun(0)=mm AND powfun(1)=mm-1")
                                                        (("1"
                                                          (skeep -1)
                                                          (("1"
                                                            (name
                                                             "sigfun"
                                                             "LAMBDA (i:nat): IF ((odd?(mm-1) AND odd?(powfun(i))) OR (even?(mm-1) AND even?(powfun(i)))) THEN sig ELSE -sig ENDIF")
                                                            (("1"
                                                              (lemma
                                                               "nsc_multiroot_full")
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "aa"
                                                                 "bb"
                                                                 "m-1"
                                                                 "m-1"
                                                                 "sig"
                                                                 "sigfun")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (case
                                                                     "FORALL (j:nat): j<=m-1 IMPLIES ((sigfun(j)=sig) IFF ((odd?(powfun(j)) AND odd?(mm-1)) OR (even?(powfun(j)) AND even?(mm-1))))")
                                                                    (("1"
                                                                      (label
                                                                       "deflem"
                                                                       -1)
                                                                      (("1"
                                                                        (hide
                                                                         "deflem")
                                                                        (("1"
                                                                          (split
                                                                           -)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (replace
                                                                               "nscname"
                                                                               +)
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (expand
                                                                               "sig")
                                                                              (("2"
                                                                                (lift-if)
                                                                                (("2"
                                                                                  (ground)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("3"
                                                                              (expand
                                                                               "sigfun")
                                                                              (("3"
                                                                                (expand
                                                                                 "sig")
                                                                                (("3"
                                                                                  (skeep)
                                                                                  (("3"
                                                                                    (lift-if)
                                                                                    (("3"
                                                                                      (lift-if)
                                                                                      (("3"
                                                                                        (lift-if)
                                                                                        (("3"
                                                                                          (ground)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("4"
                                                                            (skeep)
                                                                            (("4"
                                                                              (hide
                                                                               -3)
                                                                              (("4"
                                                                                (expand
                                                                                 "sigfun"
                                                                                 1)
                                                                                (("4"
                                                                                  (lemma
                                                                                   "even_or_odd")
                                                                                  (("4"
                                                                                    (inst
                                                                                     -
                                                                                     "mm-1")
                                                                                    (("4"
                                                                                      (lift-if)
                                                                                      (("4"
                                                                                        (lemma
                                                                                         " max_linear_div_power_sign_change")
                                                                                        (("4"
                                                                                          (inst
                                                                                           -
                                                                                           "p(j)"
                                                                                           "n(j)"
                                                                                           "x"
                                                                                           "b"
                                                                                           "y"
                                                                                           "powfun(j)")
                                                                                          (("4"
                                                                                            (assert)
                                                                                            (("4"
                                                                                              (split
                                                                                               -1)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "aa"
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "bb"
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (ground)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (copy
                                                                                                 "cb")
                                                                                                (("2"
                                                                                                  (skeep)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "r"
                                                                                                     "j")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("3"
                                                                                                (inst?)
                                                                                                (("3"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("5"
                                                                            (skeep)
                                                                            (("5"
                                                                              (assert)
                                                                              (("5"
                                                                                (case
                                                                                 "NOT 1 < j")
                                                                                (("1"
                                                                                  (hide
                                                                                   3)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "max_linear_div_power_unique")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "p(1)"
                                                                                       "n(1)"
                                                                                       "b"
                                                                                       "mm-1"
                                                                                       "powfun(1)")
                                                                                      (("1"
                                                                                        (split
                                                                                         -1)
                                                                                        (("1"
                                                                                          (lemma
                                                                                           "even_or_odd")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "mm-1")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "sigfun"
                                                                                               2)
                                                                                              (("1"
                                                                                                (lift-if)
                                                                                                (("1"
                                                                                                  (ground)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil)
                                                                                         ("3"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (case
                                                                                     "NOT j < m-1")
                                                                                    (("1"
                                                                                      (case
                                                                                       "NOT j = m-1")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (lemma
                                                                                             "max_linear_div_power_unique")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "p(m-1)"
                                                                                               "n(m-1)"
                                                                                               "b"
                                                                                               "mm-1"
                                                                                               "powfun(m-1)")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (split
                                                                                                   -)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "even_or_odd")
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       3)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "mm-1")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "sigfun"
                                                                                                           2)
                                                                                                          (("1"
                                                                                                            (lift-if)
                                                                                                            (("1"
                                                                                                              (ground)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (inst?)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (case
                                                                                         "max_linear_div_power?(p(j),n(j),b)(mm-1)")
                                                                                        (("1"
                                                                                          (hide
                                                                                           2)
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "max_linear_div_power_unique")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "p(j)"
                                                                                               "n(j)"
                                                                                               "b"
                                                                                               "mm-1"
                                                                                               "powfun(j)")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (split
                                                                                                   -)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "even_or_odd")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "mm-1")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "sigfun"
                                                                                                         +)
                                                                                                        (("1"
                                                                                                          (lift-if)
                                                                                                          (("1"
                                                                                                            (ground)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (inst?)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (case
                                                                                           "NOT (sigfun(j - 1) = sig AND
                                                                                                                                    sigfun(1 + j) = sig)")
                                                                                          (("1"
                                                                                            (hide
                                                                                             4)
                                                                                            (("1"
                                                                                              (label
                                                                                               "jfive"
                                                                                               -6)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 "jfive")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "j")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "j")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "j")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "max_linear_div_power_unique")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "p(j-1)"
                                                                                                               "n(j-1)"
                                                                                                               "b"
                                                                                                               "mm-1"
                                                                                                               "powfun(j-1)")
                                                                                                              (("1"
                                                                                                                (lemma
                                                                                                                 "max_linear_div_power_unique")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "p(j+1)"
                                                                                                                   "n(j+1)"
                                                                                                                   "b"
                                                                                                                   "mm-1"
                                                                                                                   "powfun(j+1)")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (split
                                                                                                                         -)
                                                                                                                        (("1"
                                                                                                                          (split
                                                                                                                           -)
                                                                                                                          (("1"
                                                                                                                            (lemma
                                                                                                                             "even_or_odd")
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "mm-1")
                                                                                                                              (("1"
                                                                                                                                (reveal
                                                                                                                                 "jfive")
                                                                                                                                (("1"
                                                                                                                                  (inst-cp
                                                                                                                                   -
                                                                                                                                   "j-1")
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "j+1")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "sigfun"
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (lift-if)
                                                                                                                                        (("1"
                                                                                                                                          (ground)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (reveal
                                                                                                                             "jfive")
                                                                                                                            (("2"
                                                                                                                              (inst?)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (reveal
                                                                                                                           "jfive")
                                                                                                                          (("2"
                                                                                                                            (inst?)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (copy
                                                                                                 "css")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "constructed_sturm_sequence?"
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       (-1
                                                                                                        -2
                                                                                                        -3
                                                                                                        -4
                                                                                                        -5
                                                                                                        -6))
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "j+1")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (skeep)
                                                                                                            (("2"
                                                                                                              (name
                                                                                                               "pd"
                                                                                                               "poly_divide(p(j - 1), n(j - 1))(p(j), n(j))(0)")
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (lemma
                                                                                                                   "poly_divide_def")
                                                                                                                  (("2"
                                                                                                                    (inst?)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (invoke
                                                                                                                         (case
                                                                                                                          "%1")
                                                                                                                         (!
                                                                                                                          -1
                                                                                                                          1))
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "max_div_linear_power_remainder_sign_swaps")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "x"
                                                                                                                                 "b"
                                                                                                                                 "y"
                                                                                                                                 "p(j-1)"
                                                                                                                                 "pd`quot"
                                                                                                                                 "p(j)"
                                                                                                                                 "-(1/c)*p(j+1)"
                                                                                                                                 "n(j-1)"
                                                                                                                                 "pd`qdeg"
                                                                                                                                 "n(j)"
                                                                                                                                 "n(j+1)"
                                                                                                                                 "mm-1"
                                                                                                                                 "powfun(j)")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (split
                                                                                                                                     -)
                                                                                                                                    (("1"
                                                                                                                                      (flatten)
                                                                                                                                      (("1"
                                                                                                                                        (hide-all-but
                                                                                                                                         (-1
                                                                                                                                          -2
                                                                                                                                          4))
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (rewrite
                                                                                                                                             "neg_polynomial"
                                                                                                                                             :dir
                                                                                                                                             rl)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "-")
                                                                                                                                                (("1"
                                                                                                                                                  (rewrite
                                                                                                                                                   "scal_polynomial2")
                                                                                                                                                  (("1"
                                                                                                                                                    (rewrite
                                                                                                                                                     "scal_polynomial2")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (case
                                                                                                                                                         "FORALL (r:real): -(-(1/c)*r) = (1/c)*r")
                                                                                                                                                        (("1"
                                                                                                                                                          (rewrite
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (rewrite
                                                                                                                                                             -1)
                                                                                                                                                            (("1"
                                                                                                                                                              (hide
                                                                                                                                                               -1)
                                                                                                                                                              (("1"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "sign_ext_mult")
                                                                                                                                                                (("1"
                                                                                                                                                                  (rewrite
                                                                                                                                                                   "sign_ext_mult")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (case
                                                                                                                                                                     "sign_ext(1/c)=1")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (replaces
                                                                                                                                                                       -1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "aa")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (expand
                                                                                                                                                                             "bb")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "sign_ext")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (lift-if)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (lift-if)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (lift-if)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (lift-if)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (lift-if)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (ground)
                                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (hide-all-but
                                                                                                                                                                       1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "sign_ext")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (propax)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (skeep)
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "xyz")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -1
                                                                                                                                             +)
                                                                                                                                            (("2"
                                                                                                                                              (rewrite
                                                                                                                                               "scal_polynomial2")
                                                                                                                                              (("2"
                                                                                                                                                (replace
                                                                                                                                                 -3
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (rewrite
                                                                                                                                                   "scal_polynomial2")
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("3"
                                                                                                                                      (skeep)
                                                                                                                                      (("3"
                                                                                                                                        (copy
                                                                                                                                         "cb")
                                                                                                                                        (("3"
                                                                                                                                          (split
                                                                                                                                           -)
                                                                                                                                          (("1"
                                                                                                                                            (inst?)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (inst?)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("3"
                                                                                                                                            (rewrite
                                                                                                                                             "scal_polynomial2")
                                                                                                                                            (("3"
                                                                                                                                              (lemma
                                                                                                                                               "nzreal_times_nzreal_is_nzreal")
                                                                                                                                              (("3"
                                                                                                                                                (inst?)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("2"
                                                                                                                                                    (hide
                                                                                                                                                     -2)
                                                                                                                                                    (("2"
                                                                                                                                                      (inst?)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("4"
                                                                                                                                      (inst
                                                                                                                                       "rps"
                                                                                                                                       "j")
                                                                                                                                      (("4"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("5"
                                                                                                                                      (lemma
                                                                                                                                       "max_linear_div_power_scal")
                                                                                                                                      (("5"
                                                                                                                                        (inst?)
                                                                                                                                        (("5"
                                                                                                                                          (assert)
                                                                                                                                          (("5"
                                                                                                                                            (inst
                                                                                                                                             "rps"
                                                                                                                                             "j")
                                                                                                                                            (("5"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("6"
                                                                                                                                      (hide
                                                                                                                                       (-1
                                                                                                                                        -2
                                                                                                                                        -3
                                                                                                                                        -4))
                                                                                                                                      (("6"
                                                                                                                                        (inst?)
                                                                                                                                        (("6"
                                                                                                                                          (inst?)
                                                                                                                                          (("6"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("7"
                                                                                                                                      (assert)
                                                                                                                                      (("7"
                                                                                                                                        (inst?)
                                                                                                                                        (("7"
                                                                                                                                          (inst?)
                                                                                                                                          (("7"
                                                                                                                                            (inst?)
                                                                                                                                            (("7"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (copy
                                                                                                                           "css")
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             -2)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "constructed_sturm_sequence?")
                                                                                                                              (("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "j")
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "j-1"
                                                                                                                                     "j")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("6"
                                                                            (lemma
                                                                             " max_linear_div_power_sign_change")
                                                                            (("6"
                                                                              (expand
                                                                               "aa"
                                                                               +)
                                                                              (("6"
                                                                                (expand
                                                                                 "bb"
                                                                                 +)
                                                                                (("6"
                                                                                  (inst
                                                                                   -
                                                                                   "p(0)"
                                                                                   "n(0)"
                                                                                   "x"
                                                                                   "b"
                                                                                   "y"
                                                                                   "mm")
                                                                                  (("6"
                                                                                    (assert)
                                                                                    (("6"
                                                                                      (split
                                                                                       -)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "even_or_odd")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "mm")
                                                                                              (("1"
                                                                                                (case
                                                                                                 "even?(mm)")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -2
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (lemma
                                                                                                           "odd_iff_even_succ")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "mm-1")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "even_iff_odd_succ")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "mm-1")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (lemma
                                                                                                             "even_or_odd")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "mm-1")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (copy
                                                                                         "cb")
                                                                                        (("2"
                                                                                          (skeep)
                                                                                          (("2"
                                                                                            (inst?)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("7"
                                                                            (expand
                                                                             "aa"
                                                                             +)
                                                                            (("7"
                                                                              (copy
                                                                               "css")
                                                                              (("7"
                                                                                (expand
                                                                                 "constructed_sturm_sequence?"
                                                                                 -1)
                                                                                (("7"
                                                                                  (flatten)
                                                                                  (("7"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("7"
                                                                                      (inst
                                                                                       -
                                                                                       "0"
                                                                                       "1")
                                                                                      (("7"
                                                                                        (replace
                                                                                         -2)
                                                                                        (("7"
                                                                                          (replace
                                                                                           -3)
                                                                                          (("7"
                                                                                            (assert)
                                                                                            (("7"
                                                                                              (lemma
                                                                                               "poly_deriv_signs_neq_around_root_left")
                                                                                              (("7"
                                                                                                (inst
                                                                                                 -
                                                                                                 "p(0)"
                                                                                                 "n(0)"
                                                                                                 "x"
                                                                                                 "b")
                                                                                                (("7"
                                                                                                  (assert)
                                                                                                  (("7"
                                                                                                    (copy
                                                                                                     "cb")
                                                                                                    (("7"
                                                                                                      (skeep)
                                                                                                      (("7"
                                                                                                        (split
                                                                                                         -)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "z"
                                                                                                           "0")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "z"
                                                                                                           "1")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("8"
                                                                            (expand
                                                                             "bb"
                                                                             1)
                                                                            (("8"
                                                                              (copy
                                                                               "css")
                                                                              (("8"
                                                                                (expand
                                                                                 "constructed_sturm_sequence?"
                                                                                 -1)
                                                                                (("8"
                                                                                  (flatten)
                                                                                  (("8"
                                                                                    (inst
                                                                                     -
                                                                                     "0"
                                                                                     "1")
                                                                                    (("8"
                                                                                      (replace
                                                                                       -3)
                                                                                      (("8"
                                                                                        (replace
                                                                                         -4)
                                                                                        (("8"
                                                                                          (assert)
                                                                                          (("8"
                                                                                            (lemma
                                                                                             "poly_deriv_signs_neq_around_root_right")
                                                                                            (("8"
                                                                                              (inst
                                                                                               -
                                                                                               "p(0)"
                                                                                               "n(0)"
                                                                                               "y"
                                                                                               "b")
                                                                                              (("8"
                                                                                                (assert)
                                                                                                (("8"
                                                                                                  (copy
                                                                                                   "cb")
                                                                                                  (("8"
                                                                                                    (skeep)
                                                                                                    (("8"
                                                                                                      (split
                                                                                                       -)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "z"
                                                                                                         "0")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "z"
                                                                                                           "1")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("9"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (hide-all-but
                                                                         1)
                                                                        (("2"
                                                                          (expand
                                                                           "sigfun")
                                                                          (("2"
                                                                            (expand
                                                                             "sig")
                                                                            (("2"
                                                                              (lemma
                                                                               "even_or_odd")
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "mm-1")
                                                                                (("2"
                                                                                  (lemma
                                                                                   "even_or_odd")
                                                                                  (("2"
                                                                                    (skeep)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "powfun(j)")
                                                                                      (("2"
                                                                                        (lift-if)
                                                                                        (("2"
                                                                                          (lift-if)
                                                                                          (("2"
                                                                                            (lift-if)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (ground)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (name
                                                           "powfun"
                                                           "LAMBDA (j:nat): IF j=0 THEN mm ELSIF j=1 THEN mm-1 ELSIF j>=m THEN 1 ELSE choose({kk:posnat|max_linear_div_power?(p(j),n(j),b)(kk)}) ENDIF")
                                                          (("1"
                                                            (inst + "powfun")
                                                            (("1"
                                                              (invoke
                                                               (case "NOT %1")
                                                               (! 1 1))
                                                              (("1"
                                                                (hide 2)
                                                                (("1"
                                                                  (skeep)
                                                                  (("1"
                                                                    (expand
                                                                     "powfun"
                                                                     1)
                                                                    (("1"
                                                                      (lift-if)
                                                                      (("1"
                                                                        (ground)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (replace -1)
                                                                (("2"
                                                                  (split +)
                                                                  (("1"
                                                                    (skeep)
                                                                    (("1"
                                                                      (lemma
                                                                       "constructed_sturm_seq_repeated_root_mth")
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "m-1"
                                                                         "m"
                                                                         "n"
                                                                         "p"
                                                                         "b"
                                                                         "mm")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "j")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (skeep)
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "j")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "max_linear_div_power_unique")
                                                                                      (("1"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "powfun(j)")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "powfun"
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (lift-if)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (split
                                                                                                           +)
                                                                                                          (("1"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (lemma
                                                                     "max_linear_div_power_unique")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "p(0)"
                                                                       "n(0)"
                                                                       "b"
                                                                       "powfun(0)"
                                                                       "mm")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "0")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (expand
                                                                           "powfun"
                                                                           1)
                                                                          (("2"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("3"
                                                                    (lemma
                                                                     "max_linear_div_power_unique")
                                                                    (("3"
                                                                      (inst
                                                                       -
                                                                       "p(1)"
                                                                       "n(1)"
                                                                       "b"
                                                                       "powfun(1)"
                                                                       "mm-1")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "1")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (expand
                                                                         "powfun"
                                                                         1)
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (hide 2)
                                                                (("3"
                                                                  (skosimp*)
                                                                  (("3"
                                                                    (assert)
                                                                    (("3"
                                                                      (case
                                                                       "powfun(j!1) > 0")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil)
                                                                       ("2"
                                                                        (hide
                                                                         2)
                                                                        (("2"
                                                                          (expand
                                                                           "powfun"
                                                                           1)
                                                                          (("2"
                                                                            (lift-if)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (split
                                                                                 +)
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (split
                                                                                     +)
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (skeep)
                                                              (("2"
                                                                (expand
                                                                 "powfun"
                                                                 1)
                                                                (("2"
                                                                  (lift-if)
                                                                  (("2"
                                                                    (ground)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide 2)
                                                            (("2"
                                                              (skeep)
                                                              (("2"
                                                                (lemma
                                                                 "constructed_sturm_seq_repeated_root_mth")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "m-1"
                                                                   "m"
                                                                   "n"
                                                                   "p"
                                                                   "b"
                                                                   "mm")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "j")
                                                                      (("2"
                                                                        (skeep
                                                                         -)
                                                                        (("2"
                                                                          (expand
                                                                           "nonempty?")
                                                                          (("2"
                                                                            (expand
                                                                             "empty?")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "kp")
                                                                              (("2"
                                                                                (expand
                                                                                 "member")
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (copy "cb")
                                                      (("2"
                                                        (skeep)
                                                        (("2"
                                                          (expand "aa" 1)
                                                          (("2"
                                                            (expand "bb" 1)
                                                            (("2"
                                                              (split +)
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "x"
                                                                 "j")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (inst
                                                                 -
                                                                 "y"
                                                                 "j")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((< const-decl "bool" reals nil)
    (constructed_sturm_sequence? const-decl "bool" sturm nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (odd? const-decl "bool" integers nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (set type-eq-decl nil sets nil) (nonempty? const-decl "bool" sets nil)
    (choose const-decl "(p)" sets nil)
    (constructed_sturm_seq_repeated_root_mth formula-decl nil sturm nil)
    (j skolem-const-decl "nat" sturm nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (powfun skolem-const-decl "[nat -> int]" sturm nil)
    (member const-decl "bool" sets nil) (empty? const-decl "bool" sets nil)
    (nsc_multiroot_full formula-decl nil number_sign_changes nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (sig skolem-const-decl "int" sturm nil)
    (sigfun skolem-const-decl "[nat -> int]" sturm nil)
    (even_or_odd formula-decl nil naturalnumbers nil)
    (bb skolem-const-decl "[nat -> real]" sturm nil)
    (aa skolem-const-decl "[nat -> real]" sturm nil)
    (max_linear_div_power_sign_change formula-decl nil more_polynomial_props
     reals)
    (DivType type-eq-decl nil polynomial_division nil)
    (poly_divide def-decl "DivType" polynomial_division nil)
    (poly_divide_def formula-decl nil polynomial_division nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types nil)
    (below type-eq-decl nil naturalnumbers nil)
    (max_div_linear_power_remainder_sign_swaps formula-decl nil
     more_polynomial_props reals)
    (max_linear_div_power_scal formula-decl nil more_polynomial_props reals)
    (nzreal_times_nzreal_is_nzreal judgement-tcc nil real_types nil)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (xyz skolem-const-decl "real" sturm nil)
    (j skolem-const-decl "nat" sturm nil)
    (p skolem-const-decl "[nat -> [nat -> real]]" sturm nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (scal_polynomial2 formula-decl nil polynomials reals)
    (sign_ext const-decl
     "{sig: real | (sig = -1 OR sig = 1 OR sig = 0) AND sig * x = abs(x)}"
     sign reals)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (sign_ext_mult formula-decl nil sign reals)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (- const-decl "[T -> real]" real_fun_ops reals)
    (neg_polynomial formula-decl nil polynomials reals)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal" real_types
     nil)
    (max_linear_div_power_unique formula-decl nil more_polynomial_props reals)
    (even_iff_odd_succ formula-decl nil naturalnumbers nil)
    (odd_iff_even_succ formula-decl nil naturalnumbers nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (poly_deriv_signs_neq_around_root_left formula-decl nil
     more_polynomial_props reals)
    (poly_deriv_signs_neq_around_root_right formula-decl nil
     more_polynomial_props reals)
    (even? const-decl "bool" integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (/= const-decl "boolean" notequal nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (max_linear_div_power_rew2 formula-decl nil more_polynomial_props reals)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (mm skolem-const-decl "posnat" sturm nil)
    (n skolem-const-decl "[nat -> nat]" sturm nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (max_linear_div_power? const-decl "bool" more_polynomial_props reals)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (odd_plus_even_is_odd application-judgement "odd_int" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers nil)
    (constructed_sturm_seq_repeated_root_struct formula-decl nil sturm nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (TRUE const-decl "bool" booleans nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (sequence type-eq-decl nil sequences nil)
    (number_sign_changes def-decl "NSC" number_sign_changes nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (NSC type-eq-decl nil number_sign_changes nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   nil)
  (constructed_sturm_lem_one_multi_root-2 nil 3592141907
   ("" (skeep)
    (("" (label "xy" -1)
      (("" (label "xb" -2)
        (("" (label "by" -3)
          (("" (label "cb" -4)
            (("" (label "sfo" -5)
              (("" (label "sf1" -6)
                (("" (label "css" -7)
                  (("" (skoletin 1)
                    (("" (label "nscname" -1)
                      ((""
                        (lemma "constructed_sturm_seq_repeated_root_struct")
                        (("" (inst?)
                          (("" (inst - "b")
                            (("" (assert)
                              (("" (inst - "0")
                                (("" (assert)
                                  (("" (case "m<2")
                                    (("1"
                                      (expand "constructed_sturm_sequence?")
                                      (("1" (assert) nil nil)) nil)
                                     ("2" (assert)
                                      (("2"
                                        (skeep)
                                        (("2"
                                          (name
                                           "aa"
                                           "LAMBDA (i:nat): polynomial(p(i),n(i))(x)")
                                          (("2"
                                            (name
                                             "bb"
                                             "LAMBDA (i:nat): polynomial(p(i),n(i))(y)")
                                            (("2"
                                              (case
                                               "FORALL (j:nat): j<=m-1 IMPLIES (aa(j)/=0 AND bb(j)/=0)")
                                              (("1"
                                                (name
                                                 "sig"
                                                 "IF odd?(mm-1) THEN -1 ELSE 1 ENDIF")
                                                (("1"
                                                  (name
                                                   "sigfun"
                                                   "LAMBDA (i:nat): IF sign_ext(aa(i)) /= sign_ext(bb(i)) THEN -1 ELSE 1 ENDIF")
                                                  (("1"
                                                    (lemma
                                                     "nsc_multiroot_full")
                                                    (("1"
                                                      (inst
                                                       -
                                                       "aa"
                                                       "bb"
                                                       "m-1"
                                                       "m-1"
                                                       "sig"
                                                       "sigfun")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (case
                                                           "EXISTS (powfun:[nat->posnat]): (FORALL (j:nat): j<=m-1 IMPLIES max_linear_div_power?(p(j),n(j),b)(powfun(j))) AND (FORALL (j): j<=m-1 IMPLIES powfun(j)>=mm-1) AND powfun(0)=mm AND powfun(1)=mm-1")
                                                          (("1"
                                                            (skeep -1)
                                                            (("1"
                                                              (split -)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replace
                                                                   "nscname"
                                                                   +)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "sig")
                                                                  (("2"
                                                                    (lift-if)
                                                                    (("2"
                                                                      (ground)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (hide-all-but
                                                                 1)
                                                                (("3"
                                                                  (expand
                                                                   "sigfun")
                                                                  (("3"
                                                                    (grind
                                                                     :exclude
                                                                     "sign_ext")
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("4"
                                                                (skeep)
                                                                (("4"
                                                                  (expand
                                                                   "sigfun"
                                                                   1)
                                                                  (("4"
                                                                    (inst
                                                                     -9
                                                                     "j")
                                                                    (("4"
                                                                      (assert)
                                                                      (("4"
                                                                        (hide-all-but
                                                                         (-9
                                                                          1))
                                                                        (("4"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("5"
                                                                (skeep)
                                                                (("5"
                                                                  (inst-cp
                                                                   -
                                                                   "j")
                                                                  (("5"
                                                                    (assert)
                                                                    (("5"
                                                                      (inst-cp
                                                                       -5
                                                                       "j")
                                                                      (("5"
                                                                        (assert)
                                                                        (("5"
                                                                          (postpone)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("6"
                                                                (postpone)
                                                                nil
                                                                nil)
                                                               ("7"
                                                                (postpone)
                                                                nil
                                                                nil)
                                                               ("8"
                                                                (postpone)
                                                                nil
                                                                nil)
                                                               ("9"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (postpone)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2" (postpone) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil nil)
  (constructed_sturm_lem_one_multi_root-1 nil 3592134529
   ("" (skeep)
    (("" (label "xy" -1)
      (("" (label "xb" -2)
        (("" (label "by" -3)
          (("" (label "cb" -4)
            (("" (label "sfo" -5)
              (("" (label "sf1" -6)
                (("" (label "css" -7)
                  (("" (skoletin 1)
                    (("" (label "nscname" -1)
                      ((""
                        (lemma "constructed_sturm_seq_repeated_root_struct")
                        (("" (inst?)
                          (("" (inst - "b")
                            (("" (assert)
                              (("" (inst - "0")
                                (("" (assert)
                                  (("" (case "m<2")
                                    (("1"
                                      (expand "constructed_sturm_sequence?")
                                      (("1" (assert) nil nil)) nil)
                                     ("2" (assert)
                                      (("2"
                                        (skeep)
                                        (("2"
                                          (name
                                           "aa"
                                           "LAMBDA (i:nat): polynomial(p(i),n(i))(x)")
                                          (("2"
                                            (name
                                             "bb"
                                             "LAMBDA (i:nat): polynomial(p(i),n(i))(y)")
                                            (("2"
                                              (case
                                               "FORALL (j:nat): j<=m-1 IMPLIES (aa(j)/=0 AND bb(j)/=0)")
                                              (("1"
                                                (name
                                                 "sig"
                                                 "IF odd?(mm-1) THEN -1 ELSE 1 ENDIF")
                                                (("1"
                                                  (name
                                                   "sigfun"
                                                   "LAMBDA (i:nat): IF sign_ext(aa(i)) /= sign_ext(bb(i)) THEN -1 ELSE 1 ENDIF")
                                                  (("1"
                                                    (lemma
                                                     "nsc_multiroot_full")
                                                    (("1"
                                                      (inst
                                                       -
                                                       "aa"
                                                       "bb"
                                                       "m-1"
                                                       "m-1"
                                                       "sig"
                                                       "sigfun")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (case
                                                           "EXISTS (powfun:[nat->posnat]): (FORALL (j:nat): j<=m-1 IMPLIES max_linear_div_power?(p(j),n(j),b)(powfun(j))) AND (FORALL (j): j<=mm-1 IMPLIES powfun(j)>=mm-1) AND powfun(0)=mm AND powfun(1)=mm-1")
                                                          (("1"
                                                            (skeep -1)
                                                            (("1"
                                                              (split -)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replace
                                                                   "nscname"
                                                                   +)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "sig")
                                                                  (("2"
                                                                    (lift-if)
                                                                    (("2"
                                                                      (ground)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (hide-all-but
                                                                 1)
                                                                (("3"
                                                                  (expand
                                                                   "sigfun")
                                                                  (("3"
                                                                    (grind
                                                                     :exclude
                                                                     "sign_ext")
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("4"
                                                                (skeep)
                                                                (("4"
                                                                  (expand
                                                                   "sigfun"
                                                                   1)
                                                                  (("4"
                                                                    (inst
                                                                     -9
                                                                     "j")
                                                                    (("4"
                                                                      (assert)
                                                                      (("4"
                                                                        (hide-all-but
                                                                         (-9
                                                                          1))
                                                                        (("4"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("5"
                                                                (postpone)
                                                                nil
                                                                nil)
                                                               ("6"
                                                                (postpone)
                                                                nil
                                                                nil)
                                                               ("7"
                                                                (postpone)
                                                                nil
                                                                nil)
                                                               ("8"
                                                                (postpone)
                                                                nil
                                                                nil)
                                                               ("9"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (postpone)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2" (postpone) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil nil))
 (constructed_sturm_lem_edge_root_TCC1 0
  (constructed_sturm_lem_edge_root_TCC1-1 nil 3592820375
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (^ const-decl "real" exponentiation nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (/= const-decl "boolean" notequal nil)
    (constructed_sturm_sequence? const-decl "bool" sturm nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil
   (constructed_sturm_lem_edge_root subtype "(number_fields.-)(sturm.m, 1)"
    "nat")))
 (constructed_sturm_lem_edge_root 0
  (constructed_sturm_lem_edge_root-2 "" 3790098449
   ("" (skeep)
    (("" (label "css" -5)
      (("" (label "sf" -4)
        (("" (label "uni" -3)
          (("" (label "xory" -2)
            (("" (label "xlty" -1)
              (("" (skoletin 1)
                (("" (label "nscname" -1)
                  (("" (split -)
                    (("1" (replace -1 :dir rl)
                      (("1" (assert)
                        (("1"
                          (name "bb"
                                "(LAMBDA (i): polynomial(p(i), n(i))(x))")
                          (("1" (label "bbname" -1)
                            (("1"
                              (name "aa"
                                    "(LAMBDA (i): polynomial(p(i), n(i))(y))")
                              (("1" (label "aaname" -1)
                                (("1" (lemma "nsc_edge_diff")
                                  (("1" (inst - "aa" "bb" "m-1" "m-1" "1")
                                    (("1" (assert)
                                      (("1"
                                        (split -)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (case "m>=2")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "aa")
                                                (("1"
                                                  (expand "bb")
                                                  (("1"
                                                    (expand "nsc")
                                                    (("1" (propax) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (assert)
                                              (("2"
                                                (copy "css")
                                                (("2"
                                                  (expand
                                                   "constructed_sturm_sequence?"
                                                   -1)
                                                  (("2" (propax) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide 2)
                                          (("2"
                                            (skeep)
                                            (("2"
                                              (expand "aa" 1)
                                              (("2"
                                                (expand "bb" 1)
                                                (("2"
                                                  (expand "bb" 2)
                                                  (("2"
                                                    (copy "uni")
                                                    (("2"
                                                      (inst - "y" "j")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (expand
                                                           "sign_ext"
                                                           +)
                                                          (("2"
                                                            (lift-if)
                                                            (("2"
                                                              (lift-if)
                                                              (("2"
                                                                (lift-if)
                                                                (("2"
                                                                  (ground)
                                                                  (("1"
                                                                    (lemma
                                                                     "poly_intermediate_value_dec")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "p(j)"
                                                                       "0"
                                                                       "n(j)"
                                                                       "x"
                                                                       "y")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (skeep)
                                                                          (("1"
                                                                            (inst
                                                                             "uni"
                                                                             "cc"
                                                                             "j")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (lemma
                                                                     "poly_intermediate_value_dec")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "p(j)"
                                                                       "0"
                                                                       "n(j)"
                                                                       "x"
                                                                       "y")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (skeep)
                                                                          (("2"
                                                                            (inst
                                                                             "uni"
                                                                             "cc"
                                                                             "j")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("3"
                                                                    (lemma
                                                                     "poly_intermediate_value_inc")
                                                                    (("3"
                                                                      (inst
                                                                       -
                                                                       "p(j)"
                                                                       "0"
                                                                       "n(j)"
                                                                       "x"
                                                                       "y")
                                                                      (("3"
                                                                        (assert)
                                                                        (("3"
                                                                          (skeep)
                                                                          (("3"
                                                                            (inst
                                                                             "uni"
                                                                             "cc"
                                                                             "j")
                                                                            (("3"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("4"
                                                                    (lemma
                                                                     "poly_intermediate_value_inc")
                                                                    (("4"
                                                                      (inst
                                                                       -
                                                                       "p(j)"
                                                                       "0"
                                                                       "n(j)"
                                                                       "x"
                                                                       "y")
                                                                      (("4"
                                                                        (assert)
                                                                        (("4"
                                                                          (skeep)
                                                                          (("4"
                                                                            (inst
                                                                             "uni"
                                                                             "cc"
                                                                             "j")
                                                                            (("4"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("3"
                                          (skeep)
                                          (("3"
                                            (expand "bb")
                                            (("3"
                                              (lemma
                                               "constructed_sturm_seq_repeated_root")
                                              (("3"
                                                (inst - "m" "n" "p" "b")
                                                (("3"
                                                  (assert)
                                                  (("3"
                                                    (inst - "j-1")
                                                    (("3"
                                                      (assert)
                                                      (("3"
                                                        (inst-cp - "0")
                                                        (("3"
                                                          (inst - "1")
                                                          (("3"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("4"
                                          (hide 2)
                                          (("4"
                                            (case
                                             "polynomial(p(m-1),n(m-1))(y) = 0")
                                            (("1"
                                              (inst "uni" "y" "m-1")
                                              (("1" (assert) nil nil)
                                               ("2"
                                                (assert)
                                                (("2"
                                                  (expand
                                                   "constructed_sturm_sequence?")
                                                  (("2" (propax) nil nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (assert)
                                              (("2"
                                                (case
                                                 "polynomial(p(m-1),n(m-1))(x) = 0")
                                                (("1"
                                                  (lemma
                                                   "constructed_sturm_seq_repeated_root")
                                                  (("1"
                                                    (inst - "m" "n" "p" "x")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (inst - "m-1")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (split -)
                                                            (("1"
                                                              (inst-cp - "0")
                                                              (("1"
                                                                (inst - "1")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "constructed_sturm_sequence?")
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               "constructed_sturm_sequence?")
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (expand
                                                                   "polynomial"
                                                                   1)
                                                                  (("2"
                                                                    (expand
                                                                     "sigma"
                                                                     1)
                                                                    (("2"
                                                                      (expand
                                                                       "sigma"
                                                                       1)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "constructed_sturm_sequence?")
                                                          (("2"
                                                            (flatten)
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand "aa" +)
                                                  (("2"
                                                    (expand "bb" +)
                                                    (("2"
                                                      (expand "sign_ext" +)
                                                      (("2"
                                                        (lift-if)
                                                        (("2"
                                                          (lift-if)
                                                          (("2"
                                                            (lift-if)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (ground)
                                                                (("1"
                                                                  (lemma
                                                                   "poly_intermediate_value_dec")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "p(m-1)"
                                                                     "0"
                                                                     "n(m-1)"
                                                                     "x"
                                                                     "y")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (inst
                                                                           "uni"
                                                                           "cc"
                                                                           "m-1")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "constructed_sturm_sequence?")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (lemma
                                                                   "poly_intermediate_value_dec")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "p(m-1)"
                                                                     "0"
                                                                     "n(m-1)"
                                                                     "x"
                                                                     "y")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (inst
                                                                           "uni"
                                                                           "cc"
                                                                           "m-1")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "constructed_sturm_sequence?")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (lemma
                                                                   "poly_intermediate_value_inc")
                                                                  (("3"
                                                                    (inst
                                                                     -
                                                                     "p(m-1)"
                                                                     "0"
                                                                     "n(m-1)"
                                                                     "x"
                                                                     "y")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (inst
                                                                           "uni"
                                                                           "cc"
                                                                           "m-1")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "constructed_sturm_sequence?")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("4"
                                                                  (lemma
                                                                   "poly_intermediate_value_inc")
                                                                  (("4"
                                                                    (inst
                                                                     -
                                                                     "p(m-1)"
                                                                     "0"
                                                                     "n(m-1)"
                                                                     "x"
                                                                     "y")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (inst
                                                                           "uni"
                                                                           "cc"
                                                                           "m-1")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "constructed_sturm_sequence?")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (expand
                                               "constructed_sturm_sequence?")
                                              (("3" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("5"
                                          (hide 2)
                                          (("5"
                                            (skeep)
                                            (("5"
                                              (expand "aa" -2)
                                              (("5"
                                                (inst "uni" "y" "j")
                                                (("5" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("6"
                                          (flatten)
                                          (("6"
                                            (assert)
                                            (("6"
                                              (hide 2)
                                              (("6"
                                                (expand "bb" -1)
                                                (("6"
                                                  (expand "aa" 1)
                                                  (("6"
                                                    (lemma
                                                     "poly_deriv_signs_neq_around_root_right")
                                                    (("6"
                                                      (inst
                                                       -
                                                       "p(0)"
                                                       "n(0)"
                                                       "y"
                                                       "x")
                                                      (("6"
                                                        (assert)
                                                        (("6"
                                                          (split -)
                                                          (("1"
                                                            (expand
                                                             "constructed_sturm_sequence?")
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (copy "css")
                                                            (("2"
                                                              (expand
                                                               "constructed_sturm_sequence?"
                                                               -1)
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (inst-cp
                                                                   -
                                                                   "0"
                                                                   "1")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("3"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (skeep)
                                                            (("3"
                                                              (split -)
                                                              (("1"
                                                                (inst
                                                                 "uni"
                                                                 "z"
                                                                 "0")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "constructed_sturm_sequence?")
                                                                    (("1"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (inst
                                                                 "uni"
                                                                 "z"
                                                                 "1")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "constructed_sturm_sequence?")
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("7"
                                          (hide 2)
                                          (("7"
                                            (skeep)
                                            (("7"
                                              (expand "bb" (-3 +))
                                              (("7"
                                                (copy "css")
                                                (("7"
                                                  (expand
                                                   "constructed_sturm_sequence?"
                                                   -1)
                                                  (("7"
                                                    (flatten)
                                                    (("7"
                                                      (hide
                                                       (-1 -2 -3 -4 -5 -6))
                                                      (("7"
                                                        (inst - "j+1")
                                                        (("7"
                                                          (assert)
                                                          (("7"
                                                            (skeep)
                                                            (("7"
                                                              (decompose-equality
                                                               -1)
                                                              (("7"
                                                                (inst - "x")
                                                                (("7"
                                                                  (assert)
                                                                  (("7"
                                                                    (name
                                                                     "pd"
                                                                     "poly_divide(p(j - 1), n(j - 1))(p(j), n(j))(0)")
                                                                    (("7"
                                                                      (replace
                                                                       -1)
                                                                      (("7"
                                                                        (lemma
                                                                         "poly_divide_def")
                                                                        (("7"
                                                                          (inst?)
                                                                          (("7"
                                                                            (assert)
                                                                            (("7"
                                                                              (replace
                                                                               -2)
                                                                              (("7"
                                                                                (split
                                                                                 -)
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "x")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -7)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "scal_polynomial2")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -3
                                                                                             +)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1
                                                                                               +)
                                                                                              (("1"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (grind
                                                                                                   :exclude
                                                                                                   "polynomial")
                                                                                                  (("1"
                                                                                                    (mult-by
                                                                                                     -1
                                                                                                     "c")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (mult-by
                                                                                                     -1
                                                                                                     "c")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (mult-by
                                                                                                     -1
                                                                                                     "c")
                                                                                                    (("3"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (copy
                                                                                   "css")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "constructed_sturm_sequence?"
                                                                                     -1)
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "j")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (expand "constructed_sturm_sequence?")
                                      (("2"
                                        (flatten)
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (replace -1 :dir rl)
                      (("2" (assert)
                        (("2"
                          (name "bb"
                                "(LAMBDA (i): polynomial(p(i), n(i))(y))")
                          (("2" (label "bbname" -1)
                            (("2"
                              (name "aa"
                                    "(LAMBDA (i): polynomial(p(i), n(i))(x))")
                              (("2" (label "aaname" -1)
                                (("2" (lemma "nsc_edge_diff")
                                  (("2" (inst - "aa" "bb" "m-1" "m-1" "-1")
                                    (("1" (assert)
                                      (("1"
                                        (split -)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (case "m>=2")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "aa")
                                                (("1"
                                                  (expand "bb")
                                                  (("1"
                                                    (expand "nsc")
                                                    (("1" (propax) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (assert)
                                              (("2"
                                                (expand
                                                 "constructed_sturm_sequence?")
                                                (("2" (propax) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide 2)
                                          (("2"
                                            (skeep)
                                            (("2"
                                              (expand "aa" 1)
                                              (("2"
                                                (expand "bb" 1)
                                                (("2"
                                                  (expand "bb" 2)
                                                  (("2"
                                                    (copy "uni")
                                                    (("2"
                                                      (inst - "x" "j")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (expand
                                                           "sign_ext"
                                                           +)
                                                          (("2"
                                                            (lift-if)
                                                            (("2"
                                                              (lift-if)
                                                              (("2"
                                                                (lift-if)
                                                                (("2"
                                                                  (ground)
                                                                  (("1"
                                                                    (lemma
                                                                     "poly_intermediate_value_inc")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "p(j)"
                                                                       "0"
                                                                       "n(j)"
                                                                       "x"
                                                                       "y")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (skeep)
                                                                          (("1"
                                                                            (inst
                                                                             "uni"
                                                                             "cc"
                                                                             "j")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (lemma
                                                                     "poly_intermediate_value_inc")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "p(j)"
                                                                       "0"
                                                                       "n(j)"
                                                                       "x"
                                                                       "y")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (skeep)
                                                                          (("2"
                                                                            (inst
                                                                             "uni"
                                                                             "cc"
                                                                             "j")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("3"
                                                                    (lemma
                                                                     "poly_intermediate_value_dec")
                                                                    (("3"
                                                                      (inst
                                                                       -
                                                                       "p(j)"
                                                                       "0"
                                                                       "n(j)"
                                                                       "x"
                                                                       "y")
                                                                      (("3"
                                                                        (assert)
                                                                        (("3"
                                                                          (skeep)
                                                                          (("3"
                                                                            (inst
                                                                             "uni"
                                                                             "cc"
                                                                             "j")
                                                                            (("3"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("4"
                                                                    (lemma
                                                                     "poly_intermediate_value_dec")
                                                                    (("4"
                                                                      (inst
                                                                       -
                                                                       "p(j)"
                                                                       "0"
                                                                       "n(j)"
                                                                       "x"
                                                                       "y")
                                                                      (("4"
                                                                        (assert)
                                                                        (("4"
                                                                          (skeep)
                                                                          (("4"
                                                                            (inst
                                                                             "uni"
                                                                             "cc"
                                                                             "j")
                                                                            (("4"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("3"
                                          (skeep)
                                          (("3"
                                            (expand "bb")
                                            (("3"
                                              (lemma
                                               "constructed_sturm_seq_repeated_root")
                                              (("3"
                                                (inst - "m" "n" "p" "b")
                                                (("3"
                                                  (assert)
                                                  (("3"
                                                    (inst - "j-1")
                                                    (("3"
                                                      (assert)
                                                      (("3"
                                                        (inst-cp - "0")
                                                        (("3"
                                                          (inst - "1")
                                                          (("3"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("4"
                                          (hide 2)
                                          (("4"
                                            (case
                                             "polynomial(p(m-1),n(m-1))(x) = 0")
                                            (("1"
                                              (inst "uni" "x" "m-1")
                                              (("1" (assert) nil nil)
                                               ("2"
                                                (assert)
                                                (("2"
                                                  (expand
                                                   "constructed_sturm_sequence?")
                                                  (("2" (propax) nil nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (assert)
                                              (("2"
                                                (case
                                                 "polynomial(p(m-1),n(m-1))(y) = 0")
                                                (("1"
                                                  (lemma
                                                   "constructed_sturm_seq_repeated_root")
                                                  (("1"
                                                    (inst - "m" "n" "p" "y")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (inst - "m-1")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (split -)
                                                            (("1"
                                                              (inst-cp - "0")
                                                              (("1"
                                                                (inst - "1")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "constructed_sturm_sequence?")
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               "constructed_sturm_sequence?")
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (expand
                                                                   "polynomial"
                                                                   1)
                                                                  (("2"
                                                                    (expand
                                                                     "sigma"
                                                                     1)
                                                                    (("2"
                                                                      (expand
                                                                       "sigma"
                                                                       1)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "constructed_sturm_sequence?")
                                                          (("2"
                                                            (flatten)
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand "aa" +)
                                                  (("2"
                                                    (expand "bb" +)
                                                    (("2"
                                                      (expand "sign_ext" +)
                                                      (("2"
                                                        (lift-if)
                                                        (("2"
                                                          (lift-if)
                                                          (("2"
                                                            (lift-if)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (ground)
                                                                (("1"
                                                                  (lemma
                                                                   "poly_intermediate_value_inc")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "p(m-1)"
                                                                     "0"
                                                                     "n(m-1)"
                                                                     "x"
                                                                     "y")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (inst
                                                                           "uni"
                                                                           "cc"
                                                                           "m-1")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "constructed_sturm_sequence?")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (lemma
                                                                   "poly_intermediate_value_inc")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "p(m-1)"
                                                                     "0"
                                                                     "n(m-1)"
                                                                     "x"
                                                                     "y")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (inst
                                                                           "uni"
                                                                           "cc"
                                                                           "m-1")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "constructed_sturm_sequence?")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (lemma
                                                                   "poly_intermediate_value_dec")
                                                                  (("3"
                                                                    (inst
                                                                     -
                                                                     "p(m-1)"
                                                                     "0"
                                                                     "n(m-1)"
                                                                     "x"
                                                                     "y")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (inst
                                                                           "uni"
                                                                           "cc"
                                                                           "m-1")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "constructed_sturm_sequence?")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("4"
                                                                  (lemma
                                                                   "poly_intermediate_value_dec")
                                                                  (("4"
                                                                    (inst
                                                                     -
                                                                     "p(m-1)"
                                                                     "0"
                                                                     "n(m-1)"
                                                                     "x"
                                                                     "y")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (inst
                                                                           "uni"
                                                                           "cc"
                                                                           "m-1")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "constructed_sturm_sequence?")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (expand
                                               "constructed_sturm_sequence?")
                                              (("3" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("5"
                                          (hide 2)
                                          (("5"
                                            (skeep)
                                            (("5"
                                              (expand "aa" -2)
                                              (("5"
                                                (inst "uni" "x" "j")
                                                (("5" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("6"
                                          (flatten)
                                          (("6"
                                            (assert)
                                            (("6"
                                              (hide 2)
                                              (("6"
                                                (expand "bb" -1)
                                                (("6"
                                                  (expand "aa" 1)
                                                  (("6"
                                                    (lemma
                                                     "poly_deriv_signs_neq_around_root_left")
                                                    (("6"
                                                      (inst
                                                       -
                                                       "p(0)"
                                                       "n(0)"
                                                       "x"
                                                       "y")
                                                      (("6"
                                                        (assert)
                                                        (("6"
                                                          (split -)
                                                          (("1"
                                                            (expand
                                                             "constructed_sturm_sequence?")
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (copy "css")
                                                            (("2"
                                                              (expand
                                                               "constructed_sturm_sequence?"
                                                               -1)
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (inst-cp
                                                                   -
                                                                   "0"
                                                                   "1")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("3"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (skeep)
                                                            (("3"
                                                              (split -)
                                                              (("1"
                                                                (inst
                                                                 "uni"
                                                                 "z"
                                                                 "0")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "constructed_sturm_sequence?")
                                                                    (("1"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (inst
                                                                 "uni"
                                                                 "z"
                                                                 "1")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "constructed_sturm_sequence?")
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("7"
                                          (hide 2)
                                          (("7"
                                            (skeep)
                                            (("7"
                                              (expand "bb" (-3 +))
                                              (("7"
                                                (copy "css")
                                                (("7"
                                                  (expand
                                                   "constructed_sturm_sequence?"
                                                   -1)
                                                  (("7"
                                                    (flatten)
                                                    (("7"
                                                      (hide
                                                       (-1 -2 -3 -4 -5 -6))
                                                      (("7"
                                                        (inst - "j+1")
                                                        (("7"
                                                          (assert)
                                                          (("7"
                                                            (skeep)
                                                            (("7"
                                                              (decompose-equality
                                                               -1)
                                                              (("7"
                                                                (inst - "y")
                                                                (("7"
                                                                  (assert)
                                                                  (("7"
                                                                    (name
                                                                     "pd"
                                                                     "poly_divide(p(j - 1), n(j - 1))(p(j), n(j))(0)")
                                                                    (("7"
                                                                      (replace
                                                                       -1)
                                                                      (("7"
                                                                        (lemma
                                                                         "poly_divide_def")
                                                                        (("7"
                                                                          (inst?)
                                                                          (("7"
                                                                            (assert)
                                                                            (("7"
                                                                              (replace
                                                                               -2)
                                                                              (("7"
                                                                                (split
                                                                                 -)
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "y")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -7)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "scal_polynomial2")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -3
                                                                                             +)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1
                                                                                               +)
                                                                                              (("1"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (grind
                                                                                                   :exclude
                                                                                                   "polynomial")
                                                                                                  (("1"
                                                                                                    (mult-by
                                                                                                     -1
                                                                                                     "c")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (mult-by
                                                                                                     -1
                                                                                                     "c")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (mult-by
                                                                                                     -1
                                                                                                     "c")
                                                                                                    (("3"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (copy
                                                                                   "css")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "constructed_sturm_sequence?"
                                                                                     -1)
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "j")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (expand "constructed_sturm_sequence?")
                                      (("2"
                                        (flatten)
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (constructed_sturm_lem_edge_root-1 nil 3592757996
   ("" (skeep)
    (("" (label "css" -5)
      (("" (label "sf" -4)
        (("" (label "uni" -3)
          (("" (label "xory" -2)
            (("" (label "xlty" -1)
              (("" (skoletin 1)
                (("" (label "nscname" -1)
                  (("" (split -)
                    (("1" (replace -1 :dir rl)
                      (("1" (assert)
                        (("1"
                          (name "bb"
                                "(LAMBDA (i): polynomial(p(i), n(i))(x))")
                          (("1" (label "bbname" -1)
                            (("1"
                              (name "aa"
                                    "(LAMBDA (i): polynomial(p(i), n(i))(y))")
                              (("1" (label "aaname" -1)
                                (("1" (lemma "nsc_edge_diff")
                                  (("1" (inst - "aa" "bb" "m-1" "m-1" "1")
                                    (("1" (assert)
                                      (("1"
                                        (split -)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (case "m>=2")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "aa")
                                                (("1"
                                                  (expand "bb")
                                                  (("1"
                                                    (expand "nsc")
                                                    (("1" (propax) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (assert)
                                              (("2"
                                                (copy "css")
                                                (("2"
                                                  (expand
                                                   "constructed_sturm_sequence?"
                                                   -1)
                                                  (("2" (propax) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide 2)
                                          (("2"
                                            (skeep)
                                            (("2"
                                              (expand "aa" 1)
                                              (("2"
                                                (expand "bb" 1)
                                                (("2"
                                                  (expand "bb" 2)
                                                  (("2"
                                                    (copy "uni")
                                                    (("2"
                                                      (inst - "y" "j")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (expand
                                                           "sign_ext"
                                                           +)
                                                          (("2"
                                                            (lift-if)
                                                            (("2"
                                                              (lift-if)
                                                              (("2"
                                                                (lift-if)
                                                                (("2"
                                                                  (ground)
                                                                  (("1"
                                                                    (lemma
                                                                     "poly_intermediate_value_dec")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "p(j)"
                                                                       "0"
                                                                       "n(j)"
                                                                       "x"
                                                                       "y")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (skeep)
                                                                          (("1"
                                                                            (inst
                                                                             "uni"
                                                                             "cc"
                                                                             "j")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (lemma
                                                                     "poly_intermediate_value_dec")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "p(j)"
                                                                       "0"
                                                                       "n(j)"
                                                                       "x"
                                                                       "y")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (skeep)
                                                                          (("2"
                                                                            (inst
                                                                             "uni"
                                                                             "cc"
                                                                             "j")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("3"
                                                                    (lemma
                                                                     "poly_intermediate_value_inc")
                                                                    (("3"
                                                                      (inst
                                                                       -
                                                                       "p(j)"
                                                                       "0"
                                                                       "n(j)"
                                                                       "x"
                                                                       "y")
                                                                      (("3"
                                                                        (assert)
                                                                        (("3"
                                                                          (skeep)
                                                                          (("3"
                                                                            (inst
                                                                             "uni"
                                                                             "cc"
                                                                             "j")
                                                                            (("3"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("4"
                                                                    (lemma
                                                                     "poly_intermediate_value_inc")
                                                                    (("4"
                                                                      (inst
                                                                       -
                                                                       "p(j)"
                                                                       "0"
                                                                       "n(j)"
                                                                       "x"
                                                                       "y")
                                                                      (("4"
                                                                        (assert)
                                                                        (("4"
                                                                          (skeep)
                                                                          (("4"
                                                                            (inst
                                                                             "uni"
                                                                             "cc"
                                                                             "j")
                                                                            (("4"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("3"
                                          (skeep)
                                          (("3"
                                            (expand "bb")
                                            (("3"
                                              (lemma
                                               "constructed_sturm_seq_repeated_root")
                                              (("3"
                                                (inst - "m" "n" "p" "b")
                                                (("3"
                                                  (assert)
                                                  (("3"
                                                    (inst - "j-1")
                                                    (("3"
                                                      (assert)
                                                      (("3"
                                                        (inst-cp - "0")
                                                        (("3"
                                                          (inst - "1")
                                                          (("3"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("4"
                                          (hide 2)
                                          (("4"
                                            (case
                                             "polynomial(p(m-1),n(m-1))(y) = 0")
                                            (("1"
                                              (inst "uni" "y" "m-1")
                                              (("1" (assert) nil nil)
                                               ("2"
                                                (assert)
                                                (("2"
                                                  (expand
                                                   "constructed_sturm_sequence?")
                                                  (("2" (propax) nil nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (assert)
                                              (("2"
                                                (case
                                                 "polynomial(p(m-1),n(m-1))(x) = 0")
                                                (("1"
                                                  (lemma
                                                   "constructed_sturm_seq_repeated_root")
                                                  (("1"
                                                    (inst - "m" "n" "p" "x")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (inst - "m-1")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (split -)
                                                            (("1"
                                                              (inst-cp - "0")
                                                              (("1"
                                                                (inst - "1")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "constructed_sturm_sequence?")
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               "constructed_sturm_sequence?")
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (expand
                                                                   "polynomial"
                                                                   1)
                                                                  (("2"
                                                                    (expand
                                                                     "sigma"
                                                                     1)
                                                                    (("2"
                                                                      (expand
                                                                       "sigma"
                                                                       1)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "constructed_sturm_sequence?")
                                                          (("2"
                                                            (flatten)
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand "aa" +)
                                                  (("2"
                                                    (expand "bb" +)
                                                    (("2"
                                                      (expand "sign_ext" +)
                                                      (("2"
                                                        (lift-if)
                                                        (("2"
                                                          (lift-if)
                                                          (("2"
                                                            (lift-if)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (ground)
                                                                (("1"
                                                                  (lemma
                                                                   "poly_intermediate_value_dec")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "p(m-1)"
                                                                     "0"
                                                                     "n(m-1)"
                                                                     "x"
                                                                     "y")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (inst
                                                                           "uni"
                                                                           "cc"
                                                                           "m-1")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "constructed_sturm_sequence?")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (lemma
                                                                   "poly_intermediate_value_dec")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "p(m-1)"
                                                                     "0"
                                                                     "n(m-1)"
                                                                     "x"
                                                                     "y")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (inst
                                                                           "uni"
                                                                           "cc"
                                                                           "m-1")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "constructed_sturm_sequence?")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (lemma
                                                                   "poly_intermediate_value_inc")
                                                                  (("3"
                                                                    (inst
                                                                     -
                                                                     "p(m-1)"
                                                                     "0"
                                                                     "n(m-1)"
                                                                     "x"
                                                                     "y")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (inst
                                                                           "uni"
                                                                           "cc"
                                                                           "m-1")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "constructed_sturm_sequence?")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("4"
                                                                  (lemma
                                                                   "poly_intermediate_value_inc")
                                                                  (("4"
                                                                    (inst
                                                                     -
                                                                     "p(m-1)"
                                                                     "0"
                                                                     "n(m-1)"
                                                                     "x"
                                                                     "y")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (inst
                                                                           "uni"
                                                                           "cc"
                                                                           "m-1")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "constructed_sturm_sequence?")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (expand
                                               "constructed_sturm_sequence?")
                                              (("3" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("5"
                                          (hide 2)
                                          (("5"
                                            (skeep)
                                            (("5"
                                              (expand "aa" -2)
                                              (("5"
                                                (inst "uni" "y" "j")
                                                (("5" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("6"
                                          (flatten)
                                          (("6"
                                            (assert)
                                            (("6"
                                              (hide 2)
                                              (("6"
                                                (expand "bb" -1)
                                                (("6"
                                                  (expand "aa" 1)
                                                  (("6"
                                                    (lemma
                                                     "poly_deriv_signs_neq_around_root_right")
                                                    (("6"
                                                      (inst
                                                       -
                                                       "p(0)"
                                                       "n(0)"
                                                       "y"
                                                       "x")
                                                      (("6"
                                                        (assert)
                                                        (("6"
                                                          (split -)
                                                          (("1"
                                                            (expand
                                                             "constructed_sturm_sequence?")
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (copy "css")
                                                            (("2"
                                                              (expand
                                                               "constructed_sturm_sequence?"
                                                               -1)
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (inst-cp
                                                                   -
                                                                   "0"
                                                                   "1")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("3"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (skeep)
                                                            (("3"
                                                              (split -)
                                                              (("1"
                                                                (inst
                                                                 "uni"
                                                                 "z"
                                                                 "0")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "constructed_sturm_sequence?")
                                                                    (("1"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (inst
                                                                 "uni"
                                                                 "z"
                                                                 "1")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "constructed_sturm_sequence?")
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("7"
                                          (hide 2)
                                          (("7"
                                            (skeep)
                                            (("7"
                                              (expand "bb" (-3 +))
                                              (("7"
                                                (copy "css")
                                                (("7"
                                                  (expand
                                                   "constructed_sturm_sequence?"
                                                   -1)
                                                  (("7"
                                                    (flatten)
                                                    (("7"
                                                      (hide
                                                       (-1 -2 -3 -4 -5 -6))
                                                      (("7"
                                                        (inst - "j+1")
                                                        (("7"
                                                          (assert)
                                                          (("7"
                                                            (skeep)
                                                            (("7"
                                                              (decompose-equality
                                                               -1)
                                                              (("7"
                                                                (inst - "x")
                                                                (("7"
                                                                  (assert)
                                                                  (("7"
                                                                    (name
                                                                     "pd"
                                                                     "poly_divide(p(j - 1), n(j - 1))(p(j), n(j))(0)")
                                                                    (("7"
                                                                      (replace
                                                                       -1)
                                                                      (("7"
                                                                        (lemma
                                                                         "poly_divide_def")
                                                                        (("7"
                                                                          (inst?)
                                                                          (("7"
                                                                            (assert)
                                                                            (("7"
                                                                              (replace
                                                                               -2)
                                                                              (("7"
                                                                                (split
                                                                                 -)
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "x")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -7)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "scal_polynomial2")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -3
                                                                                             +)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1
                                                                                               +)
                                                                                              (("1"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (grind
                                                                                                   :exclude
                                                                                                   "polynomial")
                                                                                                  (("1"
                                                                                                    (mult-by
                                                                                                     -1
                                                                                                     "c")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (mult-by
                                                                                                     -1
                                                                                                     "c")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (mult-by
                                                                                                     -1
                                                                                                     "c")
                                                                                                    (("3"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (copy
                                                                                   "css")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "constructed_sturm_sequence?"
                                                                                     -1)
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "j")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("3"
                                                                                  (copy
                                                                                   "css")
                                                                                  (("3"
                                                                                    (expand
                                                                                     "constructed_sturm_sequence?"
                                                                                     -1)
                                                                                    (("3"
                                                                                      (flatten)
                                                                                      (("3"
                                                                                        (inst
                                                                                         -
                                                                                         "j-1"
                                                                                         "j")
                                                                                        (("3"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (expand "constructed_sturm_sequence?")
                                      (("2"
                                        (flatten)
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (replace -1 :dir rl)
                      (("2" (assert)
                        (("2"
                          (name "bb"
                                "(LAMBDA (i): polynomial(p(i), n(i))(y))")
                          (("2" (label "bbname" -1)
                            (("2"
                              (name "aa"
                                    "(LAMBDA (i): polynomial(p(i), n(i))(x))")
                              (("2" (label "aaname" -1)
                                (("2" (lemma "nsc_edge_diff")
                                  (("2" (inst - "aa" "bb" "m-1" "m-1" "-1")
                                    (("1" (assert)
                                      (("1"
                                        (split -)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (case "m>=2")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "aa")
                                                (("1"
                                                  (expand "bb")
                                                  (("1"
                                                    (expand "nsc")
                                                    (("1" (propax) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (assert)
                                              (("2"
                                                (expand
                                                 "constructed_sturm_sequence?")
                                                (("2" (propax) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide 2)
                                          (("2"
                                            (skeep)
                                            (("2"
                                              (expand "aa" 1)
                                              (("2"
                                                (expand "bb" 1)
                                                (("2"
                                                  (expand "bb" 2)
                                                  (("2"
                                                    (copy "uni")
                                                    (("2"
                                                      (inst - "x" "j")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (expand
                                                           "sign_ext"
                                                           +)
                                                          (("2"
                                                            (lift-if)
                                                            (("2"
                                                              (lift-if)
                                                              (("2"
                                                                (lift-if)
                                                                (("2"
                                                                  (ground)
                                                                  (("1"
                                                                    (lemma
                                                                     "poly_intermediate_value_inc")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "p(j)"
                                                                       "0"
                                                                       "n(j)"
                                                                       "x"
                                                                       "y")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (skeep)
                                                                          (("1"
                                                                            (inst
                                                                             "uni"
                                                                             "cc"
                                                                             "j")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (lemma
                                                                     "poly_intermediate_value_inc")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "p(j)"
                                                                       "0"
                                                                       "n(j)"
                                                                       "x"
                                                                       "y")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (skeep)
                                                                          (("2"
                                                                            (inst
                                                                             "uni"
                                                                             "cc"
                                                                             "j")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("3"
                                                                    (lemma
                                                                     "poly_intermediate_value_dec")
                                                                    (("3"
                                                                      (inst
                                                                       -
                                                                       "p(j)"
                                                                       "0"
                                                                       "n(j)"
                                                                       "x"
                                                                       "y")
                                                                      (("3"
                                                                        (assert)
                                                                        (("3"
                                                                          (skeep)
                                                                          (("3"
                                                                            (inst
                                                                             "uni"
                                                                             "cc"
                                                                             "j")
                                                                            (("3"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("4"
                                                                    (lemma
                                                                     "poly_intermediate_value_dec")
                                                                    (("4"
                                                                      (inst
                                                                       -
                                                                       "p(j)"
                                                                       "0"
                                                                       "n(j)"
                                                                       "x"
                                                                       "y")
                                                                      (("4"
                                                                        (assert)
                                                                        (("4"
                                                                          (skeep)
                                                                          (("4"
                                                                            (inst
                                                                             "uni"
                                                                             "cc"
                                                                             "j")
                                                                            (("4"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("3"
                                          (skeep)
                                          (("3"
                                            (expand "bb")
                                            (("3"
                                              (lemma
                                               "constructed_sturm_seq_repeated_root")
                                              (("3"
                                                (inst - "m" "n" "p" "b")
                                                (("3"
                                                  (assert)
                                                  (("3"
                                                    (inst - "j-1")
                                                    (("3"
                                                      (assert)
                                                      (("3"
                                                        (inst-cp - "0")
                                                        (("3"
                                                          (inst - "1")
                                                          (("3"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("4"
                                          (hide 2)
                                          (("4"
                                            (case
                                             "polynomial(p(m-1),n(m-1))(x) = 0")
                                            (("1"
                                              (inst "uni" "x" "m-1")
                                              (("1" (assert) nil nil)
                                               ("2"
                                                (assert)
                                                (("2"
                                                  (expand
                                                   "constructed_sturm_sequence?")
                                                  (("2" (propax) nil nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (assert)
                                              (("2"
                                                (case
                                                 "polynomial(p(m-1),n(m-1))(y) = 0")
                                                (("1"
                                                  (lemma
                                                   "constructed_sturm_seq_repeated_root")
                                                  (("1"
                                                    (inst - "m" "n" "p" "y")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (inst - "m-1")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (split -)
                                                            (("1"
                                                              (inst-cp - "0")
                                                              (("1"
                                                                (inst - "1")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "constructed_sturm_sequence?")
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               "constructed_sturm_sequence?")
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (expand
                                                                   "polynomial"
                                                                   1)
                                                                  (("2"
                                                                    (expand
                                                                     "sigma"
                                                                     1)
                                                                    (("2"
                                                                      (expand
                                                                       "sigma"
                                                                       1)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "constructed_sturm_sequence?")
                                                          (("2"
                                                            (flatten)
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand "aa" +)
                                                  (("2"
                                                    (expand "bb" +)
                                                    (("2"
                                                      (expand "sign_ext" +)
                                                      (("2"
                                                        (lift-if)
                                                        (("2"
                                                          (lift-if)
                                                          (("2"
                                                            (lift-if)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (ground)
                                                                (("1"
                                                                  (lemma
                                                                   "poly_intermediate_value_inc")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "p(m-1)"
                                                                     "0"
                                                                     "n(m-1)"
                                                                     "x"
                                                                     "y")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (inst
                                                                           "uni"
                                                                           "cc"
                                                                           "m-1")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "constructed_sturm_sequence?")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (lemma
                                                                   "poly_intermediate_value_inc")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "p(m-1)"
                                                                     "0"
                                                                     "n(m-1)"
                                                                     "x"
                                                                     "y")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (inst
                                                                           "uni"
                                                                           "cc"
                                                                           "m-1")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "constructed_sturm_sequence?")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (lemma
                                                                   "poly_intermediate_value_dec")
                                                                  (("3"
                                                                    (inst
                                                                     -
                                                                     "p(m-1)"
                                                                     "0"
                                                                     "n(m-1)"
                                                                     "x"
                                                                     "y")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (inst
                                                                           "uni"
                                                                           "cc"
                                                                           "m-1")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "constructed_sturm_sequence?")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("4"
                                                                  (lemma
                                                                   "poly_intermediate_value_dec")
                                                                  (("4"
                                                                    (inst
                                                                     -
                                                                     "p(m-1)"
                                                                     "0"
                                                                     "n(m-1)"
                                                                     "x"
                                                                     "y")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (inst
                                                                           "uni"
                                                                           "cc"
                                                                           "m-1")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "constructed_sturm_sequence?")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (expand
                                               "constructed_sturm_sequence?")
                                              (("3" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("5"
                                          (hide 2)
                                          (("5"
                                            (skeep)
                                            (("5"
                                              (expand "aa" -2)
                                              (("5"
                                                (inst "uni" "x" "j")
                                                (("5" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("6"
                                          (flatten)
                                          (("6"
                                            (assert)
                                            (("6"
                                              (hide 2)
                                              (("6"
                                                (expand "bb" -1)
                                                (("6"
                                                  (expand "aa" 1)
                                                  (("6"
                                                    (lemma
                                                     "poly_deriv_signs_neq_around_root_left")
                                                    (("6"
                                                      (inst
                                                       -
                                                       "p(0)"
                                                       "n(0)"
                                                       "x"
                                                       "y")
                                                      (("6"
                                                        (assert)
                                                        (("6"
                                                          (split -)
                                                          (("1"
                                                            (expand
                                                             "constructed_sturm_sequence?")
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (copy "css")
                                                            (("2"
                                                              (expand
                                                               "constructed_sturm_sequence?"
                                                               -1)
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (inst-cp
                                                                   -
                                                                   "0"
                                                                   "1")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("3"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (skeep)
                                                            (("3"
                                                              (split -)
                                                              (("1"
                                                                (inst
                                                                 "uni"
                                                                 "z"
                                                                 "0")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "constructed_sturm_sequence?")
                                                                    (("1"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (inst
                                                                 "uni"
                                                                 "z"
                                                                 "1")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "constructed_sturm_sequence?")
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("7"
                                          (hide 2)
                                          (("7"
                                            (skeep)
                                            (("7"
                                              (expand "bb" (-3 +))
                                              (("7"
                                                (copy "css")
                                                (("7"
                                                  (expand
                                                   "constructed_sturm_sequence?"
                                                   -1)
                                                  (("7"
                                                    (flatten)
                                                    (("7"
                                                      (hide
                                                       (-1 -2 -3 -4 -5 -6))
                                                      (("7"
                                                        (inst - "j+1")
                                                        (("7"
                                                          (assert)
                                                          (("7"
                                                            (skeep)
                                                            (("7"
                                                              (decompose-equality
                                                               -1)
                                                              (("7"
                                                                (inst - "y")
                                                                (("7"
                                                                  (assert)
                                                                  (("7"
                                                                    (name
                                                                     "pd"
                                                                     "poly_divide(p(j - 1), n(j - 1))(p(j), n(j))(0)")
                                                                    (("7"
                                                                      (replace
                                                                       -1)
                                                                      (("7"
                                                                        (lemma
                                                                         "poly_divide_def")
                                                                        (("7"
                                                                          (inst?)
                                                                          (("7"
                                                                            (assert)
                                                                            (("7"
                                                                              (replace
                                                                               -2)
                                                                              (("7"
                                                                                (split
                                                                                 -)
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "y")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -7)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "scal_polynomial2")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -3
                                                                                             +)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1
                                                                                               +)
                                                                                              (("1"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (grind
                                                                                                   :exclude
                                                                                                   "polynomial")
                                                                                                  (("1"
                                                                                                    (mult-by
                                                                                                     -1
                                                                                                     "c")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (mult-by
                                                                                                     -1
                                                                                                     "c")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (mult-by
                                                                                                     -1
                                                                                                     "c")
                                                                                                    (("3"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (copy
                                                                                   "css")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "constructed_sturm_sequence?"
                                                                                     -1)
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "j")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("3"
                                                                                  (copy
                                                                                   "css")
                                                                                  (("3"
                                                                                    (expand
                                                                                     "constructed_sturm_sequence?"
                                                                                     -1)
                                                                                    (("3"
                                                                                      (flatten)
                                                                                      (("3"
                                                                                        (inst
                                                                                         -
                                                                                         "j-1"
                                                                                         "j")
                                                                                        (("3"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (expand "constructed_sturm_sequence?")
                                      (("2"
                                        (flatten)
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((poly_deriv_signs_neq_around_root_left formula-decl nil
     more_polynomial_props reals)
    (bb skolem-const-decl "[nat -> real]" sturm nil)
    (aa skolem-const-decl "[nat -> real]" sturm nil)
    (nsc_edge_diff formula-decl nil number_sign_changes nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (poly_divide def-decl "DivType" polynomial_division nil)
    (DivType type-eq-decl nil polynomial_division nil)
    (/= const-decl "boolean" notequal nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers nil)
    (scal_polynomial2 formula-decl nil polynomials reals)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal" real_types
     nil)
    (both_sides_times_pos_lt1 formula-decl nil real_props nil)
    (both_sides_times_pos_gt1 formula-decl nil real_props nil)
    (poly_divide_def formula-decl nil polynomial_division nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (< const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (poly_deriv_signs_neq_around_root_right formula-decl nil
     more_polynomial_props reals)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sigma def-decl "real" sigma reals)
    (constructed_sturm_seq_repeated_root formula-decl nil sturm nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (<= const-decl "bool" reals nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (poly_intermediate_value_dec formula-decl nil polynomials reals)
    (poly_intermediate_value_inc formula-decl nil polynomials reals)
    (constructed_sturm_sequence? const-decl "bool" sturm nil)
    (bb skolem-const-decl "[nat -> real]" sturm nil)
    (nsc skolem-const-decl "[[real, nat] -> NSC]" sturm nil)
    (aa skolem-const-decl "[nat -> real]" sturm nil)
    (m skolem-const-decl "nat" sturm nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (TRUE const-decl "bool" booleans nil)
    (sign_ext const-decl
     "{sig: real | (sig = -1 OR sig = 1 OR sig = 0) AND sig * x = abs(x)}"
     sign reals)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (sequence type-eq-decl nil sequences nil)
    (number_sign_changes def-decl "NSC" number_sign_changes nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (NSC type-eq-decl nil number_sign_changes nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   shostak))
 (constructed_sturm_roots_between_enum_TCC1 0
  (constructed_sturm_roots_between_enum_TCC1-1 nil 3592823008
   ("" (subtype-tcc) nil nil)
   ((/= const-decl "boolean" notequal nil)
    (constructed_sturm_sequence? const-decl "bool" sturm nil))
   nil
   (constructed_sturm_roots_between_enum subtype "0"
    "naturalnumbers.below(sturm.K)")))
 (constructed_sturm_roots_between_enum_TCC2 0
  (constructed_sturm_roots_between_enum_TCC2-1 nil 3592823008
   ("" (subtype-tcc) nil nil)
   ((/= const-decl "boolean" notequal nil)
    (constructed_sturm_sequence? const-decl "bool" sturm nil))
   nil
   (constructed_sturm_roots_between_enum subtype
    "(number_fields.-)(sturm.K, 1)" "naturalnumbers.below(sturm.K)")))
 (constructed_sturm_roots_between_enum 0
  (constructed_sturm_roots_between_enum-1 nil 3592823014
   ("" (skeep)
    ((""
      (name "IGGY"
            "LAMBDA (b:real): ((x<=b AND b<=y) AND (b=x OR b=y OR (EXISTS (j:nat): j<=m-1 AND polynomial(p(j), n(j))(b) = 0)))")
      (("" (case "is_finite[real](IGGY)")
        (("1" (copy -1)
          (("1" (lemma "card_bij_inv[real]")
            (("1" (name "K" "card(IGGY)")
              (("1" (inst - "K" "IGGY")
                (("1" (assert)
                  (("1" (label "fbij" -2)
                    (("1" (skeep)
                      (("1" (name "newenum" "sort_array[K,real,<=].sort(f)")
                        (("1" (case "K>=2")
                          (("1" (inst + "K" "newenum")
                            (("1"
                              (case "NOT (FORALL (i, j: below(K)): i < j IMPLIES newenum(i) < newenum(j))")
                              (("1" (hide 2)
                                (("1" (skeep)
                                  (("1" (case "NOT newenum(i) = newenum(j)")
                                    (("1" (assert)
                                      (("1"
                                        (typepred "newenum")
                                        (("1"
                                          (expand "sorted?")
                                          (("1"
                                            (inst - "i" "j")
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (typepred "newenum")
                                      (("2"
                                        (expand "permutation_of?")
                                        (("2"
                                          (skosimp*)
                                          (("2"
                                            (expand "bijective?" -1)
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (expand "surjective?")
                                                (("2"
                                                  (inst-cp - "j")
                                                  (("2"
                                                    (inst - "i")
                                                    (("2"
                                                      (skosimp*)
                                                      (("2"
                                                        (inst-cp - "x!1")
                                                        (("2"
                                                          (inst - "x!2")
                                                          (("2"
                                                            (replace -2)
                                                            (("2"
                                                              (replace -3)
                                                              (("2"
                                                                (copy "fbij")
                                                                (("2"
                                                                  (expand
                                                                   "bijective?"
                                                                   -1)
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (expand
                                                                       "injective?"
                                                                       -1)
                                                                      (("2"
                                                                        (inst-cp
                                                                         -
                                                                         "x!1"
                                                                         "x!2")
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (replace -1)
                                (("2" (case "NOT newenum(0)=x")
                                  (("1" (hide 2)
                                    (("1" (copy "fbij")
                                      (("1"
                                        (expand "bijective?" -1)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (expand "surjective?" -2)
                                            (("1"
                                              (inst - "x")
                                              (("1"
                                                (skosimp*)
                                                (("1"
                                                  (typepred "newenum")
                                                  (("1"
                                                    (expand "permutation_of?")
                                                    (("1"
                                                      (skeep -1)
                                                      (("1"
                                                        (copy -2)
                                                        (("1"
                                                          (inst - "x!1")
                                                          (("1"
                                                            (replace -6)
                                                            (("1"
                                                              (inst
                                                               -
                                                               "0"
                                                               "f_1(x!1)")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replace
                                                                   -1
                                                                   :dir
                                                                   rl)
                                                                  (("1"
                                                                    (expand
                                                                     "bijective?"
                                                                     -2)
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (expand
                                                                         "surjective?"
                                                                         -3)
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "0")
                                                                          (("1"
                                                                            (skosimp*)
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "x!2")
                                                                              (("1"
                                                                                (replace
                                                                                 -3)
                                                                                (("1"
                                                                                  (replace
                                                                                   -4
                                                                                   :dir
                                                                                   rl)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (typepred
                                                                                       "f(x!2)")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "IGGY"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand "IGGY" 1)
                                                (("2" (propax) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (assert)
                                    (("2" (case "NOT newenum(K-1) = y")
                                      (("1"
                                        (hide 2)
                                        (("1"
                                          (copy "fbij")
                                          (("1"
                                            (expand "bijective?" -1)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (expand "surjective?" -2)
                                                (("1"
                                                  (inst - "y")
                                                  (("1"
                                                    (skosimp*)
                                                    (("1"
                                                      (typepred "newenum")
                                                      (("1"
                                                        (expand
                                                         "permutation_of?")
                                                        (("1"
                                                          (skeep -1)
                                                          (("1"
                                                            (copy -2)
                                                            (("1"
                                                              (inst - "x!1")
                                                              (("1"
                                                                (replace -6)
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "f_1(x!1)"
                                                                   "K-1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (replace
                                                                       -1
                                                                       :dir
                                                                       rl)
                                                                      (("1"
                                                                        (expand
                                                                         "bijective?"
                                                                         -2)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (expand
                                                                             "surjective?"
                                                                             -3)
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "K-1")
                                                                              (("1"
                                                                                (skosimp*)
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "x!2")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -3)
                                                                                    (("1"
                                                                                      (typepred
                                                                                       "f(x!2)")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "IGGY"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (expand "IGGY" 1)
                                                    (("2" (propax) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (assert)
                                        (("2"
                                          (skeep)
                                          (("2"
                                            (copy "fbij")
                                            (("2"
                                              (expand "bijective?" -1)
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (expand "surjective?" -2)
                                                  (("2"
                                                    (case "NOT IGGY(b)")
                                                    (("1"
                                                      (expand "IGGY" 1)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (inst + "j")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (inst - "b")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (skosimp*)
                                                          (("2"
                                                            (typepred
                                                             "newenum")
                                                            (("2"
                                                              (expand
                                                               "permutation_of?")
                                                              (("2"
                                                                (skeep -1)
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "x!1")
                                                                  (("2"
                                                                    (inst
                                                                     +
                                                                     "f_1(x!1)")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("3" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (expand "bijective?")
                              (("2" (flatten)
                                (("2" (expand "surjective?")
                                  (("2" (inst-cp - "x")
                                    (("1" (inst - "y")
                                      (("1"
                                        (skosimp*)
                                        (("1" (assert) nil nil))
                                        nil)
                                       ("2"
                                        (expand "IGGY" 1)
                                        (("2" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2" (expand "IGGY" 1)
                                      (("2" (propax) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (propax) nil nil))
              nil))
            nil))
          nil)
         ("2" (hide 2)
          (("2"
            (name "IGGYk" "LAMBDA (k:nat): (LAMBDA (b: real):
                                             ((x <= b AND b <= y) AND
                                               (b = x OR
                                                 b = y OR
                                                  (EXISTS (j: nat):
                                                     j <= k-1 AND polynomial(p(j), n(j))(b) = 0))))")
            (("2"
              (case "FORALL (k:nat): k<=m IMPLIES is_finite[real](IGGYk(k))")
              (("1" (inst - "m")
                (("1" (case "IGGYk(m) = IGGY")
                  (("1" (assert) nil nil)
                   ("2" (decompose-equality 1)
                    (("2" (expand "IGGYk" 1)
                      (("2" (expand "IGGY" 1) (("2" (propax) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (induct "k")
                (("1" (assert)
                  (("1"
                    (case "NOT (IGGYk(0) = (LAMBDA (b:real): b = x OR b = y))")
                    (("1" (decompose-equality 1)
                      (("1" (expand "IGGYk" 1)
                        (("1" (hide (-1 -2 -4))
                          (("1" (iff) (("1" (grind) nil nil)) nil)) nil))
                        nil))
                      nil)
                     ("2" (replace -1)
                      (("2" (hide-all-but (-4 1))
                        (("2" (rewrite "is_finite_surj" :dir rl)
                          (("2"
                            (inst + "2"
                             "LAMBDA (i:below(2)): IF i = 0 THEN x ELSE y ENDIF")
                            (("2" (expand "surjective?")
                              (("2" (skosimp*)
                                (("2" (typepred "y!1")
                                  (("2" (ground)
                                    (("1" (inst + "0")
                                      (("1" (assert) nil nil)) nil)
                                     ("2" (inst + "1")
                                      (("2" (assert) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide 2)
                  (("2" (skeep)
                    (("2"
                      (name "Sjp" "(LAMBDA (b: real):
                                                             ((x <= b AND b <= y) AND
                                                               ((j <= m-1 AND polynomial(p(j), n(j))(b) = 0))))")
                      (("2" (case "IGGYk(1+j) = union(IGGYk(j),Sjp)")
                        (("1" (lemma "finite_union[real]")
                          (("1" (inst - "IGGYk(j)" "Sjp")
                            (("1" (assert) nil nil)
                             ("2" (assert)
                              (("2"
                                (name "Sj" "(LAMBDA (b: real):
                                                                                     polynomial(p(j), n(j))(b) = 0)")
                                (("2" (case "is_finite[real](Sj)")
                                  (("1" (lemma "finite_subset[real]")
                                    (("1" (inst - "Sj" "Sjp")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (hide-all-but 1)
                                          (("1"
                                            (expand "subset?")
                                            (("1"
                                              (expand "Sjp")
                                              (("1"
                                                (expand "Sj")
                                                (("1"
                                                  (grind
                                                   :exclude
                                                   "polynomial")
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (case "FORALL (kk:nat,a:[nat->real]): (EXISTS (i:nat):i<=kk AND a(i)/=0) IMPLIES is_finite[real](LAMBDA (b:real): polynomial(a,kk)(b)=0)")
                                    (("1" (inst - "n(j)" "p(j)")
                                      (("1"
                                        (split -)
                                        (("1" (assert) nil nil)
                                         ("2"
                                          (inst + "n(j)")
                                          (("2"
                                            (assert)
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (expand
                                                   "constructed_sturm_sequence?")
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (inst - "j")
                                                      (("2" (assert) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (hide-all-but 1)
                                      (("2"
                                        (induct "kk")
                                        (("1"
                                          (skeep)
                                          (("1"
                                            (skeep -1)
                                            (("1"
                                              (case "i = 0")
                                              (("1"
                                                (replaces -1)
                                                (("1"
                                                  (hide -)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (lemma
                                                       "finite_emptyset[real]")
                                                      (("1"
                                                        (invoke
                                                         (case "%1 = %2")
                                                         (! -1 1)
                                                         (! 2 1))
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (hide (-1 3))
                                                          (("2"
                                                            (decompose-equality
                                                             1)
                                                            (("2"
                                                              (expand
                                                               "polynomial")
                                                              (("2"
                                                                (expand
                                                                 "sigma")
                                                                (("2"
                                                                  (expand
                                                                   "sigma")
                                                                  (("2"
                                                                    (expand
                                                                     "emptyset")
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (skeep)
                                          (("2"
                                            (skeep)
                                            (("2"
                                              (case
                                               "EXISTS (z:real): polynomial(a,j!1+1)(z)=0")
                                              (("1"
                                                (skeep -1)
                                                (("1"
                                                  (lemma
                                                   "polynomial_zero_factor")
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (replace -2)
                                                      (("1"
                                                        (skeep -1)
                                                        (("1"
                                                          (invoke
                                                           (name "IP" "%1")
                                                           (! 1 1))
                                                          (("1"
                                                            (replace -1)
                                                            (("1"
                                                              (inst -4 "g")
                                                              (("1"
                                                                (split -4)
                                                                (("1"
                                                                  (invoke
                                                                   (name
                                                                    "IG"
                                                                    "%1")
                                                                   (! -1 1))
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (case
                                                                       "IP = union(IG,singleton(z))")
                                                                      (("1"
                                                                        (lemma
                                                                         "finite_union[real]")
                                                                        (("1"
                                                                          (inst?)
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide
                                                                         2)
                                                                        (("2"
                                                                          (decompose-equality
                                                                           1)
                                                                          (("2"
                                                                            (iff)
                                                                            (("2"
                                                                              (expand
                                                                               "IP"
                                                                               +)
                                                                              (("2"
                                                                                (expand
                                                                                 "IG"
                                                                                 +)
                                                                                (("2"
                                                                                  (expand
                                                                                   "union"
                                                                                   +)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "singleton"
                                                                                     +)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "member"
                                                                                       +)
                                                                                      (("2"
                                                                                        (ground)
                                                                                        (("1"
                                                                                          (inst-cp
                                                                                           -
                                                                                           "x!1")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (inst
                                                                                           -
                                                                                           "x!1")
                                                                                          (("2"
                                                                                            (replaces
                                                                                             -1)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (lemma
                                                                   "polynomial_eq_coeff")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "a"
                                                                     "LAMBDA (i:nat): 0"
                                                                     "j!1+1")
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (hide
                                                                         -2)
                                                                        (("2"
                                                                          (split
                                                                           -1)
                                                                          (("1"
                                                                            (skosimp*)
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "i!1")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (decompose-equality
                                                                             1)
                                                                            (("2"
                                                                              (case
                                                                               "polynomial(LAMBDA (i: nat): 0, 1 + j!1)(x!1) = 0")
                                                                              (("1"
                                                                                (replaces
                                                                                 -1)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "x!1")
                                                                                    (("1"
                                                                                      (case
                                                                                       "polynomial(g, j!1)(x!1) = 0")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (expand
                                                                                         "polynomial"
                                                                                         1)
                                                                                        (("2"
                                                                                          (rewrite
                                                                                           "sigma_restrict_eq_0")
                                                                                          (("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 +
                                                                                                 "i!1")
                                                                                                (("2"
                                                                                                  (lift-if)
                                                                                                  (("2"
                                                                                                    (ground)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "polynomial"
                                                                                 1)
                                                                                (("2"
                                                                                  (rewrite
                                                                                   "sigma_restrict_eq_0")
                                                                                  (("2"
                                                                                    (skosimp*)
                                                                                    (("2"
                                                                                      (lift-if)
                                                                                      (("2"
                                                                                        (ground)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (lemma
                                                 "finite_emptyset[real]")
                                                (("2"
                                                  (invoke
                                                   (case "%1 = %2")
                                                   (! -1 1)
                                                   (! 2 1))
                                                  (("1" (assert) nil nil)
                                                   ("2"
                                                    (decompose-equality 1)
                                                    (("2"
                                                      (iff)
                                                      (("2"
                                                        (expand "emptyset" 1)
                                                        (("2"
                                                          (inst + "x!1")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("3" (assert) nil nil))
                            nil))
                          nil)
                         ("2" (assert)
                          (("2" (decompose-equality 1)
                            (("2" (iff)
                              (("2" (expand "union" +)
                                (("2" (expand "member" +)
                                  (("2" (split +)
                                    (("1" (flatten)
                                      (("1"
                                        (expand "IGGYk" -1)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (expand "IGGYk" 1)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (skosimp*)
                                                    (("1"
                                                      (case "NOT j!1 = j")
                                                      (("1"
                                                        (inst + "j!1")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand "Sjp" +)
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (flatten)
                                      (("2"
                                        (split -)
                                        (("1"
                                          (expand "IGGYk" (-1 1))
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (skosimp*)
                                                    (("1"
                                                      (inst + "j!1")
                                                      (("1" (assert) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand "Sjp" -1)
                                          (("2"
                                            (expand "IGGYk" 1)
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (flatten)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (inst + "j")
                                                      (("2" (assert) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((polynomial const-decl "[real -> real]" polynomials reals)
    (sequence type-eq-decl nil sequences nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (IGGYk skolem-const-decl "[nat -> [real -> boolean]]" sturm nil)
    (finite_union judgement-tcc nil finite_sets nil)
    (Sj skolem-const-decl "[real -> boolean]" sturm nil)
    (member const-decl "bool" sets nil) (subset? const-decl "bool" sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (finite_subset formula-decl nil finite_sets nil)
    (polynomial_zero_factor formula-decl nil polynomials reals)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (polynomial_eq_coeff formula-decl nil polynomials reals)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (i!1 skolem-const-decl "nat" sturm nil)
    (j!1 skolem-const-decl "nat" sturm nil)
    (T_low type-eq-decl nil sigma reals) (T_high type-eq-decl nil sigma reals)
    (^ const-decl "real" exponentiation nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (sigma_restrict_eq_0 formula-decl nil sigma reals)
    (subrange type-eq-decl nil integers nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (nonempty_singleton_finite application-judgement "non_empty_finite_set"
     finite_sets nil)
    (nonempty_union2 application-judgement "(nonempty?)" sets nil)
    (singleton? const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (IG skolem-const-decl "[real -> boolean]" sturm nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (IP skolem-const-decl "[real -> boolean]" sturm nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (finite_emptyset judgement-tcc nil finite_sets nil)
    (sigma def-decl "real" sigma reals)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (emptyset const-decl "set" sets nil) (TRUE const-decl "bool" booleans nil)
    (constructed_sturm_sequence? const-decl "bool" sturm nil)
    (/= const-decl "boolean" notequal nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (Sjp skolem-const-decl "[real -> boolean]" sturm nil)
    (j skolem-const-decl "nat" sturm nil) (union const-decl "set" sets nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (is_finite_surj formula-decl nil finite_sets nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (pred type-eq-decl nil defined_types nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Card const-decl "nat" finite_sets nil)
    (card const-decl "{n: nat | n = Card(S)}" finite_sets nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (injective? const-decl "bool" functions nil)
    (surjective? const-decl "bool" functions nil)
    (bijective? const-decl "bool" functions nil)
    (x skolem-const-decl "real" sturm nil)
    (y skolem-const-decl "real" sturm nil)
    (b skolem-const-decl "real" sturm nil)
    (K skolem-const-decl "{n: nat | n = Card(IGGY)}" sturm nil)
    (IGGY skolem-const-decl "[real -> boolean]" sturm nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (below type-eq-decl nil nat_types nil)
    (sort const-decl "{a | permutation_of?(A, a) AND sorted?(a)}"
      sort_array structures)
    (sorted? const-decl "bool" sort_array structures)
    (permutation_of? const-decl "bool" permutations structures)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (card_bij_inv formula-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil))
   nil))
 (constructed_sturm_lem_no_roots_full_TCC1 0
  (constructed_sturm_lem_no_roots_full_TCC1-1 nil 3592830269
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (^ const-decl "real" exponentiation nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (/= const-decl "boolean" notequal nil)
    (constructed_sturm_sequence? const-decl "bool" sturm nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil
   (constructed_sturm_lem_no_roots_full subtype
    "(number_fields.-)(sturm.m, 1)" "nat")))
 (constructed_sturm_lem_no_roots_full 0
  (constructed_sturm_lem_no_roots_full-1 nil 3592828367
   ("" (skeep)
    (("" (case "NOT EXISTS (j:nat): j<=m-1 AND polynomial(p(j),n(j))(x)=0")
      (("1" (lemma "sturm_lem_no_roots")
        (("1" (inst?)
          (("1" (assert)
            (("1" (skeep)
              (("1" (case "NOT c = x")
                (("1" (inst - "c" "i") (("1" (assert) nil nil)) nil)
                 ("2" (inst + "i") (("2" (assert) nil nil)) nil))
                nil))
              nil))
            nil)
           ("2" (expand "constructed_sturm_sequence?")
            (("2" (assert) nil nil)) nil))
          nil))
        nil)
       ("2" (label "BL" -1)
        (("2" (hide "BL")
          (("2" (label "mp" -1)
            (("2" (hide "mp")
              (("2"
                (case "EXISTS (epsil:posreal): FORALL (delt:posreal,i:nat): delt<epsil AND i<=m-1 IMPLIES polynomial(p(i), n(i))(x-delt) /= 0")
                (("1" (skeep -1)
                  (("1" (label "hyplem" -1)
                    (("1" (copy "hyplem")
                      (("1" (hide "hyplem")
                        (("1" (inst - "epsil/2" _)
                          (("1"
                            (lemma "constructed_sturm_lem_one_simple_root")
                            (("1" (inst - "x" "m" "n" "p" "x-epsil/2" "y")
                              (("1" (assert)
                                (("1" (split -)
                                  (("1" (flatten)
                                    (("1" (hide -1)
                                      (("1"
                                        (invoke
                                         (name "SQUAB" "%1")
                                         (! -1 2 2))
                                        (("1"
                                          (replace -1)
                                          (("1"
                                            (lemma
                                             "constructed_sturm_lem_edge_root")
                                            (("1"
                                              (inst
                                               -
                                               "x"
                                               "m"
                                               "n"
                                               "p"
                                               "x-epsil/2"
                                               "x")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (split -)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (hide -1)
                                                      (("1"
                                                        (replace -2)
                                                        (("1"
                                                          (expand "sturm_sig")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide 2)
                                                    (("2"
                                                      (skeep)
                                                      (("2"
                                                        (reveal "hyplem")
                                                        (("2"
                                                          (inst - "x-c" "i")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("3" (propax) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (hide 2)
                                    (("2" (assert)
                                      (("2"
                                        (reveal "mp")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("3" (hide 2)
                                    (("3" (reveal "mp")
                                      (("3" (propax) nil nil)) nil))
                                    nil)
                                   ("4" (skeep)
                                    (("4" (case "c < x")
                                      (("1"
                                        (reveal "hyplem")
                                        (("1"
                                          (inst - "x-c" "i")
                                          (("1" (assert) nil nil)
                                           ("2" (assert) nil nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (inst - "c" "i")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("5" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (lemma "constructed_sturm_roots_between_enum")
                  (("2" (inst - "m" "n" "p" "x-1" "y")
                    (("2" (assert)
                      (("2" (reveal "mp")
                        (("2" (assert)
                          (("2" (reveal "BL")
                            (("2" (skosimp*)
                              (("2" (copy -7)
                                (("2" (inst -1 "x" "j!1")
                                  (("2" (assert)
                                    (("2" (skosimp*)
                                      (("2"
                                        (copy -5)
                                        (("2"
                                          (inst - "i!1-1" "i!1")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (inst
                                               +
                                               "min(enum!1(i!1)-enum!1(i!1-1),1/2)")
                                              (("1"
                                                (skeep)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (copy -9)
                                                    (("1"
                                                      (inst - "x-delt" "i")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (skosimp*)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (case
                                                               "i!2 < i!1")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "i!2"
                                                                   "i!1-1")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (inst
                                                                 -
                                                                 "i!1"
                                                                 "i!2")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand "min" 1)
                                                (("2"
                                                  (lift-if)
                                                  (("2" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((polynomial const-decl "[real -> real]" polynomials reals)
    (sequence type-eq-decl nil sequences nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (m skolem-const-decl "nat" sturm nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (constructed_sturm_sequence? const-decl "bool" sturm nil)
    (sturm_lem_no_roots formula-decl nil sturm nil)
    (constructed_sturm_roots_between_enum formula-decl nil sturm nil)
    (K!1 skolem-const-decl "{K: nat | K >= 2}" sturm nil)
    (below type-eq-decl nil naturalnumbers nil)
    (i!1 skolem-const-decl "below(K!1)" sturm nil)
    (posrat_div_posrat_is_posrat application-judgement "posrat" rationals nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (enum!1 skolem-const-decl "[below(K!1) -> real]" sturm nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal" real_types
     nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (sturm_sig const-decl "nat" sturm nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (x skolem-const-decl "real" sturm nil)
    (c skolem-const-decl "real" sturm nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (constructed_sturm_lem_edge_root formula-decl nil sturm nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (c skolem-const-decl "real" sturm nil)
    (constructed_sturm_lem_one_simple_root formula-decl nil sturm nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (< const-decl "bool" reals nil) (/= const-decl "boolean" notequal nil))
   nil))
 (sturm_TCC1 0
  (sturm_TCC1-1 nil 3592831567 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (/= const-decl "boolean" notequal nil)
    (constructed_sturm_sequence? const-decl "bool" sturm nil)
    (^ const-decl "real" exponentiation nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil (sturm subtype "(number_fields.-)(sturm.m, 1)" "nat")))
 (sturm 0
  (sturm-2 "" 3790098467
   ("" (skeep)
    ((""
      (name "FFF" "LAMBDA (xx,yy:real): (LET nsc =
                                                                           LAMBDA (xyz: real):
                                                                             number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(xyz),
                                                                                                 m-1),
                                                                         Nroots = nsc(xx)`num - nsc(yy)`num
                                                                       IN
                                                                       Nroots >= 0 AND
                                                                        (EXISTS (bij:
                                                                                   [below(Nroots) ->
                                                                                      {xr: real |
                                                                                               xx < xr AND
                                                                                                xr <= yy AND
                                                                                                 polynomial(p(0), n(0))(xr) = 0}]):
                                                                           bijective?(bij)))")
      (("1" (label "FFFname" -1)
        (("1" (hide "FFFname")
          (("1" (case "FFF(x,y)")
            (("1" (expand "FFF") (("1" (assert) nil nil)) nil)
             ("2" (hide 2)
              (("2" (lemma "constructed_sturm_roots_between_enum")
                (("2" (inst?)
                  (("2" (inst - "x" "y")
                    (("2" (assert)
                      (("2" (skeep -1)
                        (("2" (label "rij" -1)
                          (("2" (label "rbj" -4)
                            (("2"
                              (name "Gseq"
                                    "LAMBDA (j:upto(K)): IF j = 0 THEN x ELSIF j = K THEN y ELSE (enum(j-1)+enum(j))/2 ENDIF")
                              (("1"
                                (case "FORALL (j:below(K)): x <= enum(j) AND enum(j)<=y")
                                (("1"
                                  (case "FORALL (x1,x2,x3:real): x1<x2 AND x2<x3 AND FFF(x1,x2) AND FFF(x2,x3) IMPLIES FFF(x1,x3)")
                                  (("1"
                                    (case "FORALL (j:nat):j<K IMPLIES FFF(Gseq(j),Gseq(j+1))")
                                    (("1"
                                      (case
                                       "FORALL (j:nat):j<K IMPLIES FFF(x,Gseq(j+1))")
                                      (("1"
                                        (inst - "K-1")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (expand "Gseq" -1)
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide 2)
                                        (("2"
                                          (induct "j")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (inst - "0")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand "Gseq" -1 1)
                                                  (("1" (propax) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (skosimp*)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (inst - "1+j!1")
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (inst
                                                     -
                                                     "x"
                                                     "Gseq(1+j!1)"
                                                     "Gseq(2+j!1)")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (split 2)
                                                        (("1"
                                                          (expand "Gseq" 1)
                                                          (("1"
                                                            (inst-cp
                                                             -
                                                             "0"
                                                             "1+j!1")
                                                            (("1"
                                                              (inst
                                                               -
                                                               "0"
                                                               "j!1")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (ground)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand "Gseq" 1)
                                                          (("2"
                                                            (lift-if)
                                                            (("2"
                                                              (ground)
                                                              (("1"
                                                                (inst-cp
                                                                 -
                                                                 "j!1"
                                                                 "K-1")
                                                                (("1"
                                                                  (inst-cp
                                                                   -
                                                                   "1+j!1"
                                                                   "K-1")
                                                                  (("1"
                                                                    (ground)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (inst-cp
                                                                 -
                                                                 "j!1"
                                                                 "1+j!1")
                                                                (("2"
                                                                  (ground)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (inst-cp
                                                                 -
                                                                 "j!1"
                                                                 "K-1")
                                                                (("3"
                                                                  (inst-cp
                                                                   -
                                                                   "1+j!1"
                                                                   "K-1")
                                                                  (("3"
                                                                    (ground)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("4"
                                                                (inst-cp
                                                                 -
                                                                 "j!1"
                                                                 "K-1")
                                                                (("4"
                                                                  (inst-cp
                                                                   -
                                                                   "1+j!1"
                                                                   "K-1")
                                                                  (("4"
                                                                    (ground)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("5"
                                                                (inst-cp
                                                                 -
                                                                 "j!1"
                                                                 "K-1")
                                                                (("5"
                                                                  (inst-cp
                                                                   -
                                                                   "1+j!1"
                                                                   "K-1")
                                                                  (("5"
                                                                    (ground)
                                                                    (("5"
                                                                      (inst-cp
                                                                       -
                                                                       "j!1"
                                                                       "1+j!1")
                                                                      (("5"
                                                                        (inst
                                                                         -
                                                                         "1+j!1"
                                                                         "2+j!1")
                                                                        (("5"
                                                                          (ground)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("6"
                                                                (inst-cp
                                                                 -
                                                                 "j!1"
                                                                 "1+j!1")
                                                                (("6"
                                                                  (inst
                                                                   -
                                                                   "1+j!1"
                                                                   "2+j!1")
                                                                  (("6"
                                                                    (ground)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("7"
                                                                (inst-cp
                                                                 -
                                                                 "j!1"
                                                                 "1+j!1")
                                                                (("7"
                                                                  (inst
                                                                   -
                                                                   "1+j!1"
                                                                   "2+j!1")
                                                                  (("7"
                                                                    (ground)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("8"
                                                                (inst-cp
                                                                 -
                                                                 "j!1"
                                                                 "1+j!1")
                                                                (("8"
                                                                  (inst
                                                                   -
                                                                   "1+j!1"
                                                                   "2+j!1")
                                                                  (("8"
                                                                    (ground)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (skosimp*)
                                            (("3" (assert) nil nil))
                                            nil)
                                           ("4"
                                            (skosimp*)
                                            (("4" (assert) nil nil))
                                            nil)
                                           ("5"
                                            (hide -1)
                                            (("5"
                                              (skeep)
                                              (("5" (assert) nil nil))
                                              nil))
                                            nil)
                                           ("6"
                                            (skeep)
                                            (("6" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("3"
                                        (skeep)
                                        (("3" (assert) nil nil))
                                        nil))
                                      nil)
                                     ("2" (hide -1)
                                      (("2"
                                        (skeep)
                                        (("2"
                                          (case "j = 0")
                                          (("1"
                                            (hide 2)
                                            (("1"
                                              (replace -1)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand "Gseq" 1 1)
                                                  (("1"
                                                    (expand
                                                     "FFF"
                                                     1
                                                     :assert?
                                                     none)
                                                    (("1"
                                                      (skoletin 1)
                                                      (("1"
                                                        (skoletin 1)
                                                        (("1"
                                                          (case "Nroots = 0")
                                                          (("1"
                                                            (case
                                                             "NOT EXISTS (bb:real): x < bb AND bb <= Gseq(1) AND polynomial(p(0),n(0))(bb) = 0")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (inst
                                                                 2
                                                                 "LAMBDA (ii:below(Nroots)): 0")
                                                                (("1"
                                                                  (expand
                                                                   "bijective?")
                                                                  (("1"
                                                                    (split +)
                                                                    (("1"
                                                                      (expand
                                                                       "injective?")
                                                                      (("1"
                                                                        (skosimp*)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "surjective?")
                                                                      (("2"
                                                                        (skosimp*)
                                                                        (("2"
                                                                          (inst
                                                                           2
                                                                           "y!1")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide 2)
                                                                  (("2"
                                                                    (skosimp*)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (skeep -1)
                                                              (("2"
                                                                (hide +)
                                                                (("2"
                                                                  (expand
                                                                   "Gseq"
                                                                   -2)
                                                                  (("2"
                                                                    (inst-cp
                                                                     "rbj"
                                                                     "bb"
                                                                     "0")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (copy
                                                                         "rij")
                                                                        (("2"
                                                                          (case
                                                                           "bb<=y")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (case
                                                                               "0<=m-1")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (skosimp*)
                                                                                  (("1"
                                                                                    (inst-cp
                                                                                     -
                                                                                     "0"
                                                                                     "i!1")
                                                                                    (("1"
                                                                                      (inst-cp
                                                                                       -
                                                                                       "1"
                                                                                       "i!1")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "constructed_sturm_sequence?")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (inst-cp
                                                                               -
                                                                               "0"
                                                                               "K-1")
                                                                              (("2"
                                                                                (split
                                                                                 -)
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "1"
                                                                                   "K-1")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide 2)
                                                            (("2"
                                                              (lemma
                                                               "constructed_sturm_lem_no_roots_full")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "m"
                                                                 "n"
                                                                 "p"
                                                                 "x"
                                                                 "Gseq(1)")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (copy
                                                                     "rij")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "0"
                                                                       "1")
                                                                      (("2"
                                                                        (case
                                                                         "NOT x<Gseq(1)")
                                                                        (("1"
                                                                          (expand
                                                                           "Gseq"
                                                                           1)
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (split
                                                                               -3)
                                                                              (("1"
                                                                                (expand
                                                                                 "sturm_sig"
                                                                                 -1)
                                                                                (("1"
                                                                                  (replace
                                                                                   -5)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (skeep)
                                                                                (("2"
                                                                                  (copy
                                                                                   "rbj")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "c"
                                                                                     "i")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "1")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (case
                                                                                             "NOT c<=y")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "Gseq"
                                                                                               -4)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (copy
                                                                                                   "rij")
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "1"
                                                                                                     "i!1")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "NOT 1 = i!1")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "Gseq"
                                                                                                             -6)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "Gseq"
                                                                                                             -7)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (ground)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (assert)
                                            (("2"
                                              (case "j < K-1")
                                              (("1"
                                                (case
                                                 "NOT FORALL (yy:real): Gseq(j) < yy AND yy <= Gseq(1 + j) AND polynomial(p(0), n(0))(yy) = 0 IMPLIES yy = enum(j)")
                                                (("1"
                                                  (skeep)
                                                  (("1"
                                                    (copy "rbj")
                                                    (("1"
                                                      (inst - "yy" "0")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (case
                                                           "NOT (x<Gseq(j) AND Gseq(1+j)<=y)")
                                                          (("1"
                                                            (hide -1)
                                                            (("1"
                                                              (inst-cp - "j")
                                                              (("1"
                                                                (inst-cp
                                                                 -
                                                                 "j-1")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "j+1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (expand
                                                                         "Gseq"
                                                                         1)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (copy
                                                                             "rij")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "0"
                                                                               "j")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (case
                                                                 "NOT 0 <= m-1")
                                                                (("1"
                                                                  (expand
                                                                   "constructed_sturm_sequence?")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (hide -1)
                                                                    (("2"
                                                                      (skosimp*)
                                                                      (("2"
                                                                        (case
                                                                         "i!1 < j")
                                                                        (("1"
                                                                          (copy
                                                                           "rij")
                                                                          (("1"
                                                                            (inst-cp
                                                                             -
                                                                             "i!1"
                                                                             "j-1")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "i!1"
                                                                               "j")
                                                                              (("1"
                                                                                (expand
                                                                                 "Gseq")
                                                                                (("1"
                                                                                  (ground)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (copy
                                                                           "rij")
                                                                          (("2"
                                                                            (inst-cp
                                                                             -
                                                                             "j"
                                                                             "i!1")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "j+1"
                                                                               "i!1")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (expand
                                                                                   "Gseq")
                                                                                  (("2"
                                                                                    (ground)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (label "allzeros" -1)
                                                  (("2"
                                                    (hide "allzeros")
                                                    (("2"
                                                      (hide -2)
                                                      (("2"
                                                        (label "rrj" -2)
                                                        (("2"
                                                          (case
                                                           "NOT (polynomial(p(1), n(1))(enum(j)) = 0 AND polynomial(p(0), n(0))(enum(j)) = 0)")
                                                          (("1"
                                                            (lemma
                                                             "constructed_sturm_lem_one_simple_root")
                                                            (("1"
                                                              (inst
                                                               -
                                                               "enum(j)"
                                                               "m"
                                                               "n"
                                                               "p"
                                                               "Gseq(j)"
                                                               "Gseq(1+j)")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (split -)
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (hide
                                                                       -1)
                                                                      (("1"
                                                                        (hide
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "FFF"
                                                                           2)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (invoke
                                                                               (name
                                                                                "Nsteps"
                                                                                "%1")
                                                                               (!
                                                                                2
                                                                                1
                                                                                1))
                                                                              (("1"
                                                                                (replace
                                                                                 -1)
                                                                                (("1"
                                                                                  (case
                                                                                   "NOT Nsteps>=0")
                                                                                  (("1"
                                                                                    (hide
                                                                                     3)
                                                                                    (("1"
                                                                                      (lift-if)
                                                                                      (("1"
                                                                                        (ground)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (reveal
                                                                                       "allzeros")
                                                                                      (("2"
                                                                                        (copy
                                                                                         "allzeros")
                                                                                        (("2"
                                                                                          (hide
                                                                                           "allzeros")
                                                                                          (("2"
                                                                                            (label
                                                                                             "eppypen"
                                                                                             -1)
                                                                                            (("2"
                                                                                              (hide
                                                                                               "eppypen")
                                                                                              (("2"
                                                                                                (case
                                                                                                 "NOT polynomial(p(0),n(0))(enum(j)) = 0")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "LAMBDA (ii:below(0)): 0")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "bijective?")
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "injective?")
                                                                                                        (("1"
                                                                                                          (skosimp*)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (expand
                                                                                                         "surjective?")
                                                                                                        (("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (hide
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (typepred
                                                                                                               "y!1")
                                                                                                              (("2"
                                                                                                                (reveal
                                                                                                                 "eppypen")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "y!1")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (skosimp*)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (skosimp*)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (label
                                                                                                   "enumjzero"
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     +
                                                                                                     "LAMBDA (ii:below(1)): enum(j)")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "bijective?")
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         +)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "injective?")
                                                                                                          (("1"
                                                                                                            (skosimp*)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (expand
                                                                                                           "surjective?")
                                                                                                          (("2"
                                                                                                            (skosimp*)
                                                                                                            (("2"
                                                                                                              (typepred
                                                                                                               "y!1")
                                                                                                              (("2"
                                                                                                                (case
                                                                                                                 "y!1 = enum(j)")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   +
                                                                                                                   "0")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (hide
                                                                                                                     (-6
                                                                                                                      -7))
                                                                                                                    (("2"
                                                                                                                      (copy
                                                                                                                       "rbj")
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "y!1"
                                                                                                                         "0")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (case
                                                                                                                             "NOT (x<Gseq(j) AND Gseq(1+j)<=y)")
                                                                                                                            (("1"
                                                                                                                              (split
                                                                                                                               1)
                                                                                                                              (("1"
                                                                                                                                (copy
                                                                                                                                 "rij")
                                                                                                                                (("1"
                                                                                                                                  (hide
                                                                                                                                   -2)
                                                                                                                                  (("1"
                                                                                                                                    (inst-cp
                                                                                                                                     -
                                                                                                                                     "0"
                                                                                                                                     "j")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "Gseq"
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "0"
                                                                                                                                         "j-1")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (ground)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (expand
                                                                                                                                 "Gseq"
                                                                                                                                 1)
                                                                                                                                (("2"
                                                                                                                                  (copy
                                                                                                                                   "rij")
                                                                                                                                  (("2"
                                                                                                                                    (inst-cp
                                                                                                                                     -
                                                                                                                                     "j"
                                                                                                                                     "K-1")
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "1+j"
                                                                                                                                       "K-1")
                                                                                                                                      (("2"
                                                                                                                                        (ground)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (flatten)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "NOT 0<=m-1")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "constructed_sturm_sequence?")
                                                                                                                                    (("1"
                                                                                                                                      (flatten)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (hide
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (skosimp*)
                                                                                                                                        (("2"
                                                                                                                                          (case
                                                                                                                                           "i!1 <= j")
                                                                                                                                          (("1"
                                                                                                                                            (copy
                                                                                                                                             "rij")
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "i!1"
                                                                                                                                               "j")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (copy
                                                                                                                                                   "rij")
                                                                                                                                                  (("1"
                                                                                                                                                    (inst-cp
                                                                                                                                                     -
                                                                                                                                                     "i!1"
                                                                                                                                                     "j-1")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "Gseq")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "Gseq"
                                                                                                                                               -5)
                                                                                                                                              (("2"
                                                                                                                                                (copy
                                                                                                                                                 "rij")
                                                                                                                                                (("2"
                                                                                                                                                  (inst-cp
                                                                                                                                                   -
                                                                                                                                                   "j"
                                                                                                                                                   "i!1")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "j+1"
                                                                                                                                                     "i!1")
                                                                                                                                                    (("2"
                                                                                                                                                      (ground)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (ground)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (assert)
                                                                                                      (("3"
                                                                                                        (skosimp*)
                                                                                                        (("3"
                                                                                                          (copy
                                                                                                           "rij")
                                                                                                          (("3"
                                                                                                            (inst-cp
                                                                                                             -
                                                                                                             "j-1"
                                                                                                             "j")
                                                                                                            (("3"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "j"
                                                                                                               "j+1")
                                                                                                              (("3"
                                                                                                                (assert)
                                                                                                                (("3"
                                                                                                                  (expand
                                                                                                                   "Gseq"
                                                                                                                   1)
                                                                                                                  (("3"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (copy
                                                                     "rij")
                                                                    (("2"
                                                                      (inst-cp
                                                                       -
                                                                       "j-1"
                                                                       "j")
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "j"
                                                                         "j+1")
                                                                        (("2"
                                                                          (expand
                                                                           "Gseq"
                                                                           1)
                                                                          (("2"
                                                                            (ground)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("3"
                                                                    (copy
                                                                     "rij")
                                                                    (("3"
                                                                      (inst
                                                                       -
                                                                       "j-1"
                                                                       "j")
                                                                      (("3"
                                                                        (expand
                                                                         "Gseq"
                                                                         1)
                                                                        (("3"
                                                                          (ground)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("4"
                                                                    (copy
                                                                     "rij")
                                                                    (("4"
                                                                      (inst
                                                                       -
                                                                       "j"
                                                                       "j+1")
                                                                      (("4"
                                                                        (expand
                                                                         "Gseq"
                                                                         1)
                                                                        (("4"
                                                                          (ground)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("5"
                                                                    (skeep)
                                                                    (("5"
                                                                      (case
                                                                       "NOT (x<Gseq(j) AND Gseq(1+j)<=y)")
                                                                      (("1"
                                                                        (copy
                                                                         "rrj")
                                                                        (("1"
                                                                          (inst-cp
                                                                           -
                                                                           "j-1")
                                                                          (("1"
                                                                            (inst-cp
                                                                             -
                                                                             "j")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "j+1")
                                                                              (("1"
                                                                                (expand
                                                                                 "Gseq"
                                                                                 1)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (copy
                                                                                         "rij")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "0"
                                                                                           "j")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (copy
                                                                             "rbj")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "c"
                                                                               "i")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (skosimp*)
                                                                                  (("2"
                                                                                    (case
                                                                                     "i!1 < j")
                                                                                    (("1"
                                                                                      (copy
                                                                                       "rij")
                                                                                      (("1"
                                                                                        (inst-cp
                                                                                         -
                                                                                         "i!1"
                                                                                         "j-1")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "i!1"
                                                                                           "j")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "Gseq")
                                                                                            (("1"
                                                                                              (ground)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (copy
                                                                                       "rij")
                                                                                      (("2"
                                                                                        (inst-cp
                                                                                         -
                                                                                         "j"
                                                                                         "i!1")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "j+1"
                                                                                           "i!1")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "Gseq")
                                                                                            (("2"
                                                                                              (ground)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("6"
                                                                    (ground)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (lemma
                                                               "constructed_sturm_lem_one_multi_root")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "enum(j)"
                                                                 "m"
                                                                 "n"
                                                                 "p"
                                                                 "Gseq(j)"
                                                                 "Gseq(1+j)")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (split -)
                                                                    (("1"
                                                                      (expand
                                                                       "FFF"
                                                                       2)
                                                                      (("1"
                                                                        (invoke
                                                                         (name
                                                                          "Nsteps"
                                                                          "%1")
                                                                         (!
                                                                          2
                                                                          1
                                                                          1))
                                                                        (("1"
                                                                          (case
                                                                           "NOT Nsteps>=0")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (reveal
                                                                               "allzeros")
                                                                              (("2"
                                                                                (copy
                                                                                 "allzeros")
                                                                                (("2"
                                                                                  (hide
                                                                                   "allzeros")
                                                                                  (("2"
                                                                                    (label
                                                                                     "eppypen"
                                                                                     -1)
                                                                                    (("2"
                                                                                      (hide
                                                                                       "eppypen")
                                                                                      (("2"
                                                                                        (inst
                                                                                         +
                                                                                         "LAMBDA (ii:below(1)): enum(j)")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "bijective?")
                                                                                          (("1"
                                                                                            (split
                                                                                             +)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "injective?")
                                                                                              (("1"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "surjective?")
                                                                                                (("2"
                                                                                                  (skosimp*)
                                                                                                  (("2"
                                                                                                    (typepred
                                                                                                     "y!1")
                                                                                                    (("2"
                                                                                                      (case
                                                                                                       "y!1 = enum(j)")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         +
                                                                                                         "0")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (hide
                                                                                                             (-5
                                                                                                              -6))
                                                                                                            (("2"
                                                                                                              (copy
                                                                                                               "rbj")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "y!1"
                                                                                                                 "0")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (case
                                                                                                                     "NOT (x<Gseq(j) AND Gseq(1+j)<=y)")
                                                                                                                    (("1"
                                                                                                                      (split
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (copy
                                                                                                                         "rij")
                                                                                                                        (("1"
                                                                                                                          (hide
                                                                                                                           -2)
                                                                                                                          (("1"
                                                                                                                            (inst-cp
                                                                                                                             -
                                                                                                                             "0"
                                                                                                                             "j")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "Gseq"
                                                                                                                               1)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "0"
                                                                                                                                 "j-1")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (ground)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (expand
                                                                                                                         "Gseq"
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (copy
                                                                                                                           "rij")
                                                                                                                          (("2"
                                                                                                                            (inst-cp
                                                                                                                             -
                                                                                                                             "j"
                                                                                                                             "K-1")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "1+j"
                                                                                                                               "K-1")
                                                                                                                              (("2"
                                                                                                                                (ground)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (flatten)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (case
                                                                                                                           "NOT 0<=m-1")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "constructed_sturm_sequence?")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (hide
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (skosimp*)
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "i!1 <= j")
                                                                                                                                  (("1"
                                                                                                                                    (copy
                                                                                                                                     "rij")
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "i!1"
                                                                                                                                       "j")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (copy
                                                                                                                                           "rij")
                                                                                                                                          (("1"
                                                                                                                                            (inst-cp
                                                                                                                                             -
                                                                                                                                             "i!1"
                                                                                                                                             "j-1")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "Gseq")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "Gseq"
                                                                                                                                       -5)
                                                                                                                                      (("2"
                                                                                                                                        (copy
                                                                                                                                         "rij")
                                                                                                                                        (("2"
                                                                                                                                          (inst-cp
                                                                                                                                           -
                                                                                                                                           "j"
                                                                                                                                           "i!1")
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "j+1"
                                                                                                                                             "i!1")
                                                                                                                                            (("2"
                                                                                                                                              (ground)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (skosimp*)
                                                                                            (("2"
                                                                                              (ground)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (assert)
                                                                                          (("3"
                                                                                            (skosimp*)
                                                                                            (("3"
                                                                                              (copy
                                                                                               "rij")
                                                                                              (("3"
                                                                                                (inst-cp
                                                                                                 -
                                                                                                 "j-1"
                                                                                                 "j")
                                                                                                (("3"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "j"
                                                                                                   "j+1")
                                                                                                  (("3"
                                                                                                    (assert)
                                                                                                    (("3"
                                                                                                      (expand
                                                                                                       "Gseq"
                                                                                                       1)
                                                                                                      (("3"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (copy
                                                                       "rij")
                                                                      (("2"
                                                                        (inst-cp
                                                                         -
                                                                         "j-1"
                                                                         "j")
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "j"
                                                                           "j+1")
                                                                          (("2"
                                                                            (expand
                                                                             "Gseq"
                                                                             1)
                                                                            (("2"
                                                                              (ground)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (copy
                                                                       "rij")
                                                                      (("3"
                                                                        (inst
                                                                         -
                                                                         "j-1"
                                                                         "j")
                                                                        (("3"
                                                                          (expand
                                                                           "Gseq"
                                                                           1)
                                                                          (("3"
                                                                            (ground)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("4"
                                                                      (copy
                                                                       "rij")
                                                                      (("4"
                                                                        (inst
                                                                         -
                                                                         "j"
                                                                         "j+1")
                                                                        (("4"
                                                                          (expand
                                                                           "Gseq"
                                                                           1)
                                                                          (("4"
                                                                            (ground)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("5"
                                                                      (skeep)
                                                                      (("5"
                                                                        (case
                                                                         "NOT (x<Gseq(j) AND Gseq(1+j)<=y)")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (copy
                                                                             "rrj")
                                                                            (("1"
                                                                              (inst-cp
                                                                               -
                                                                               "j-1")
                                                                              (("1"
                                                                                (inst-cp
                                                                                 -
                                                                                 "j")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "j+1")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "Gseq"
                                                                                     1)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (copy
                                                                               "rbj")
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "c"
                                                                                 "i")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (skosimp*)
                                                                                    (("2"
                                                                                      (case
                                                                                       "i!1 < j")
                                                                                      (("1"
                                                                                        (copy
                                                                                         "rij")
                                                                                        (("1"
                                                                                          (inst-cp
                                                                                           -
                                                                                           "i!1"
                                                                                           "j-1")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "i!1"
                                                                                             "j")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "Gseq")
                                                                                              (("1"
                                                                                                (ground)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (copy
                                                                                         "rij")
                                                                                        (("2"
                                                                                          (inst-cp
                                                                                           -
                                                                                           "j"
                                                                                           "i!1")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "j+1"
                                                                                             "i!1")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "Gseq")
                                                                                              (("2"
                                                                                                (ground)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand "FFF" 3)
                                                (("2"
                                                  (invoke
                                                   (name "Nsteps" "%1")
                                                   (! 3 1 1))
                                                  (("2"
                                                    (replace -1)
                                                    (("2"
                                                      (lemma
                                                       "constructed_sturm_lem_edge_root")
                                                      (("2"
                                                        (inst
                                                         -
                                                         "y"
                                                         "m"
                                                         "n"
                                                         "p"
                                                         "Gseq(j)"
                                                         "y")
                                                        (("2"
                                                          (case
                                                           "NOT Gseq(1+j) = y")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (expand
                                                               "Gseq"
                                                               1)
                                                              (("1"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            (("2"
                                                              (case
                                                               "Gseq(j) < Gseq(1+j)")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replace -2)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (case
                                                                       "(FORALL (c: real, i: nat):
                                                                                                                 i <= m-1 AND
                                                                                                                  Gseq(j) <= c AND c <= y AND polynomial(p(i), n(i))(c) = 0
                                                                                                                  IMPLIES c = y)")
                                                                      (("1"
                                                                        (label
                                                                         "DB"
                                                                         -1)
                                                                        (("1"
                                                                          (replace
                                                                           "DB")
                                                                          (("1"
                                                                            (hide
                                                                             "DB")
                                                                            (("1"
                                                                              (split
                                                                               -)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("1"
                                                                                    (case
                                                                                     "NOT Nsteps >= 0")
                                                                                    (("1"
                                                                                      (hide
                                                                                       4)
                                                                                      (("1"
                                                                                        (lift-if)
                                                                                        (("1"
                                                                                          (ground)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (case
                                                                                         "polynomial(p(0),n(0))(y) /= 0")
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (inst
                                                                                             +
                                                                                             "LAMBDA (ii:below(0)): 0")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "bijective?")
                                                                                              (("1"
                                                                                                (split
                                                                                                 +)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "injective?")
                                                                                                  (("1"
                                                                                                    (skosimp*)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (expand
                                                                                                   "surjective?")
                                                                                                  (("2"
                                                                                                    (skosimp*)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (typepred
                                                                                                         "y!1")
                                                                                                        (("2"
                                                                                                          (reveal
                                                                                                           "DB")
                                                                                                          (("2"
                                                                                                            (copy
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (hide
                                                                                                               "DB")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "y!1"
                                                                                                                 "0")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "constructed_sturm_sequence?")
                                                                                                                    (("2"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("3"
                                                                                              (skosimp*)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (inst
                                                                                               +
                                                                                               "LAMBDA (ii:below(1)): y")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "bijective?")
                                                                                                (("1"
                                                                                                  (split
                                                                                                   +)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "injective?")
                                                                                                    (("1"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (expand
                                                                                                     "surjective?")
                                                                                                    (("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         +
                                                                                                         "0")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (typepred
                                                                                                             "y!1")
                                                                                                            (("2"
                                                                                                              (reveal
                                                                                                               "DB")
                                                                                                              (("2"
                                                                                                                (copy
                                                                                                                 "DB")
                                                                                                                (("2"
                                                                                                                  (hide
                                                                                                                   "DB")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "y!1"
                                                                                                                     "0")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "constructed_sturm_sequence?")
                                                                                                                        (("2"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (ground)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 4)
                                                                                (("2"
                                                                                  (skosimp*)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (case
                                                                           "NOT j = K-1")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (replaces
                                                                             -1)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (copy
                                                                                 "rbj")
                                                                                (("2"
                                                                                  (expand
                                                                                   "Gseq"
                                                                                   -2)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (inst-cp
                                                                                       "rij"
                                                                                       "K-2"
                                                                                       "K-1")
                                                                                      (("2"
                                                                                        (split
                                                                                         "rij")
                                                                                        (("1"
                                                                                          (inst-cp
                                                                                           -
                                                                                           "K-2")
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 4)
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   (-5
                                                                                                    -6))
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     4)
                                                                                                    (("1"
                                                                                                      (skosimp*)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "NOT j = K-1")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (copy
                                                                                                             "rbj")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "c!1"
                                                                                                               "0")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (split
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (skeep
                                                                                                                     -)
                                                                                                                    (("1"
                                                                                                                      (case
                                                                                                                       "NOT i<K")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (inst-cp
                                                                                                                           "rij"
                                                                                                                           "K-2"
                                                                                                                           "K-1")
                                                                                                                          (("2"
                                                                                                                            (split
                                                                                                                             "rij")
                                                                                                                            (("1"
                                                                                                                              (inst-cp
                                                                                                                               -
                                                                                                                               "K-2")
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (case
                                                                                                                                   "i = K-1")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (case
                                                                                                                                     "i = K-2")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (replace
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "Gseq"
                                                                                                                                           -9)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (inst
                                                                                                                                       "rij"
                                                                                                                                       "i"
                                                                                                                                       "K-2")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "Gseq")
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (inst-cp
                                                                                                                       -
                                                                                                                       "K-1")
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "K-2")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "Gseq")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("3"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "c!1"
                                                                                                                     "i!1")
                                                                                                                    (("3"
                                                                                                                      (assert)
                                                                                                                      (("3"
                                                                                                                        (split
                                                                                                                         -)
                                                                                                                        (("1"
                                                                                                                          (skeep
                                                                                                                           -)
                                                                                                                          (("1"
                                                                                                                            (case
                                                                                                                             "i = K-1")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "Gseq")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (case
                                                                                                                                 "i = K-2")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "Gseq")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (inst
                                                                                                                                   "rij"
                                                                                                                                   "i"
                                                                                                                                   "K-2")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "Gseq")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "K-2")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "Gseq")
                                                                                                                            (("2"
                                                                                                                              (flatten)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide 4)
                                                                (("2"
                                                                  (hide
                                                                   (-2 -3))
                                                                  (("2"
                                                                    (expand
                                                                     "Gseq"
                                                                     1)
                                                                    (("2"
                                                                      (copy
                                                                       "rij")
                                                                      (("2"
                                                                        (inst-cp
                                                                         -
                                                                         "j-1"
                                                                         "K-1")
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "j"
                                                                           "K-1")
                                                                          (("2"
                                                                            (ground)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("3" (skosimp*) (("3" (assert) nil nil))
                                      nil)
                                     ("4" (skosimp*) (("4" (assert) nil nil))
                                      nil))
                                    nil)
                                   ("2" (hide -)
                                    (("2" (hide 2)
                                      (("2"
                                        (skeep)
                                        (("2"
                                          (expand "FFF")
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (invoke
                                                 (name "Nsteps1" "%1")
                                                 (! -3 1))
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (invoke
                                                     (name "Nsteps2" "%1")
                                                     (! -6 1))
                                                    (("2"
                                                      (replace -1)
                                                      (("2"
                                                        (skosimp*)
                                                        (("2"
                                                          (name
                                                           "cable"
                                                           "LAMBDA (ii:below(Nsteps1+Nsteps2)): IF ii<Nsteps1 THEN bij!1(ii) ELSE bij!2(ii-Nsteps1) ENDIF")
                                                          (("1"
                                                            (inst + "cable")
                                                            (("1"
                                                              (expand
                                                               "bijective?")
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (split)
                                                                  (("1"
                                                                    (expand
                                                                     "injective?")
                                                                    (("1"
                                                                      (skeep)
                                                                      (("1"
                                                                        (expand
                                                                         "cable"
                                                                         -1)
                                                                        (("1"
                                                                          (lift-if)
                                                                          (("1"
                                                                            (lift-if)
                                                                            (("1"
                                                                              (lift-if)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (ground)
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "x1!1"
                                                                                     "x2!1")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     -8)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "x1!1-Nsteps1"
                                                                                       "x2!1-Nsteps1")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "surjective?"
                                                                     +)
                                                                    (("2"
                                                                      (skosimp*)
                                                                      (("2"
                                                                        (case
                                                                         "y!1 <=x2")
                                                                        (("1"
                                                                          (expand
                                                                           "surjective?"
                                                                           -9)
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "y!1")
                                                                            (("1"
                                                                              (skosimp*)
                                                                              (("1"
                                                                                (inst
                                                                                 +
                                                                                 "x!1")
                                                                                (("1"
                                                                                  (expand
                                                                                   "cable"
                                                                                   +)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "surjective?"
                                                                           -11)
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "y!1")
                                                                            (("1"
                                                                              (skosimp*)
                                                                              (("1"
                                                                                (inst
                                                                                 +
                                                                                 "Nsteps1+x!1")
                                                                                (("1"
                                                                                  (expand
                                                                                   "cable"
                                                                                   +)
                                                                                  (("1"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (split)
                                                                (("1"
                                                                  (skosimp*)
                                                                  (("1"
                                                                    (ground)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "cable"
                                                                   +)
                                                                  (("2"
                                                                    (skosimp*)
                                                                    (("2"
                                                                      (lift-if)
                                                                      (("2"
                                                                        (ground)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide 2)
                                                            (("2"
                                                              (skosimp*)
                                                              (("2"
                                                                (ground)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (hide 2)
                                                            (("3"
                                                              (skosimp*)
                                                              (("3"
                                                                (ground)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (skeep)
                                  (("2" (inst-cp - "0" "j")
                                    (("2" (inst - "j" "K-1")
                                      (("2" (ground) nil nil)) nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (skosimp*) (("2" (ground) nil nil)) nil)
                               ("3" (skosimp*) (("3" (ground) nil nil)) nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (expand "constructed_sturm_sequence?") (("2" (assert) nil nil))
        nil))
      nil))
    nil)
   nil shostak)
  (sturm-1 nil 3592831156
   ("" (skeep)
    ((""
      (name "FFF" "LAMBDA (xx,yy:real): (LET nsc =
                                                                           LAMBDA (xyz: real):
                                                                             number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(xyz),
                                                                                                 m-1),
                                                                         Nroots = nsc(xx)`num - nsc(yy)`num
                                                                       IN
                                                                       Nroots >= 0 AND
                                                                        (EXISTS (bij:
                                                                                   [below(Nroots) ->
                                                                                      {xr: real |
                                                                                               xx < xr AND
                                                                                                xr <= yy AND
                                                                                                 polynomial(p(0), n(0))(xr) = 0}]):
                                                                           bijective?(bij)))")
      (("1" (label "FFFname" -1)
        (("1" (hide "FFFname")
          (("1" (case "FFF(x,y)")
            (("1" (expand "FFF") (("1" (assert) nil nil)) nil)
             ("2" (hide 2)
              (("2" (lemma "constructed_sturm_roots_between_enum")
                (("2" (inst?)
                  (("2" (inst - "x" "y")
                    (("2" (assert)
                      (("2" (skeep -1)
                        (("2" (label "rij" -1)
                          (("2" (label "rbj" -4)
                            (("2"
                              (name "Gseq"
                                    "LAMBDA (j:upto(K)): IF j = 0 THEN x ELSIF j = K THEN y ELSE (enum(j-1)+enum(j))/2 ENDIF")
                              (("1"
                                (case "FORALL (j:below(K)): x <= enum(j) AND enum(j)<=y")
                                (("1"
                                  (case "FORALL (x1,x2,x3:real): x1<x2 AND x2<x3 AND FFF(x1,x2) AND FFF(x2,x3) IMPLIES FFF(x1,x3)")
                                  (("1"
                                    (case "FORALL (j:nat):j<K IMPLIES FFF(Gseq(j),Gseq(j+1))")
                                    (("1"
                                      (case
                                       "FORALL (j:nat):j<K IMPLIES FFF(x,Gseq(j+1))")
                                      (("1"
                                        (inst - "K-1")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (expand "Gseq" -1)
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide 2)
                                        (("2"
                                          (induct "j")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (inst - "0")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand "Gseq" -1 1)
                                                  (("1" (propax) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (skosimp*)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (inst - "1+j!1")
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (inst
                                                     -
                                                     "x"
                                                     "Gseq(1+j!1)"
                                                     "Gseq(2+j!1)")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (split 2)
                                                        (("1"
                                                          (expand "Gseq" 1)
                                                          (("1"
                                                            (inst-cp
                                                             -
                                                             "0"
                                                             "1+j!1")
                                                            (("1"
                                                              (inst
                                                               -
                                                               "0"
                                                               "j!1")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (ground)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand "Gseq" 1)
                                                          (("2"
                                                            (lift-if)
                                                            (("2"
                                                              (ground)
                                                              (("1"
                                                                (inst-cp
                                                                 -
                                                                 "j!1"
                                                                 "K-1")
                                                                (("1"
                                                                  (inst-cp
                                                                   -
                                                                   "1+j!1"
                                                                   "K-1")
                                                                  (("1"
                                                                    (ground)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (inst-cp
                                                                 -
                                                                 "j!1"
                                                                 "1+j!1")
                                                                (("2"
                                                                  (ground)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (inst-cp
                                                                 -
                                                                 "j!1"
                                                                 "K-1")
                                                                (("3"
                                                                  (inst-cp
                                                                   -
                                                                   "1+j!1"
                                                                   "K-1")
                                                                  (("3"
                                                                    (ground)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("4"
                                                                (inst-cp
                                                                 -
                                                                 "j!1"
                                                                 "K-1")
                                                                (("4"
                                                                  (inst-cp
                                                                   -
                                                                   "1+j!1"
                                                                   "K-1")
                                                                  (("4"
                                                                    (ground)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("5"
                                                                (inst-cp
                                                                 -
                                                                 "j!1"
                                                                 "K-1")
                                                                (("5"
                                                                  (inst-cp
                                                                   -
                                                                   "1+j!1"
                                                                   "K-1")
                                                                  (("5"
                                                                    (ground)
                                                                    (("5"
                                                                      (inst-cp
                                                                       -
                                                                       "j!1"
                                                                       "1+j!1")
                                                                      (("5"
                                                                        (inst
                                                                         -
                                                                         "1+j!1"
                                                                         "2+j!1")
                                                                        (("5"
                                                                          (ground)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("6"
                                                                (inst-cp
                                                                 -
                                                                 "j!1"
                                                                 "1+j!1")
                                                                (("6"
                                                                  (inst
                                                                   -
                                                                   "1+j!1"
                                                                   "2+j!1")
                                                                  (("6"
                                                                    (ground)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("7"
                                                                (inst-cp
                                                                 -
                                                                 "j!1"
                                                                 "1+j!1")
                                                                (("7"
                                                                  (inst
                                                                   -
                                                                   "1+j!1"
                                                                   "2+j!1")
                                                                  (("7"
                                                                    (ground)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("8"
                                                                (inst-cp
                                                                 -
                                                                 "j!1"
                                                                 "1+j!1")
                                                                (("8"
                                                                  (inst
                                                                   -
                                                                   "1+j!1"
                                                                   "2+j!1")
                                                                  (("8"
                                                                    (ground)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (skosimp*)
                                            (("3" (assert) nil nil))
                                            nil)
                                           ("4"
                                            (skosimp*)
                                            (("4" (assert) nil nil))
                                            nil)
                                           ("5"
                                            (hide -1)
                                            (("5"
                                              (skeep)
                                              (("5" (assert) nil nil))
                                              nil))
                                            nil)
                                           ("6"
                                            (skeep)
                                            (("6" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("3"
                                        (skeep)
                                        (("3" (assert) nil nil))
                                        nil))
                                      nil)
                                     ("2" (hide -1)
                                      (("2"
                                        (skeep)
                                        (("2"
                                          (case "j = 0")
                                          (("1"
                                            (hide 2)
                                            (("1"
                                              (replace -1)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand "Gseq" 1 1)
                                                  (("1"
                                                    (expand
                                                     "FFF"
                                                     1
                                                     :assert?
                                                     none)
                                                    (("1"
                                                      (skoletin 1)
                                                      (("1"
                                                        (skoletin 1)
                                                        (("1"
                                                          (case "Nroots = 0")
                                                          (("1"
                                                            (case
                                                             "NOT EXISTS (bb:real): x < bb AND bb <= Gseq(1) AND polynomial(p(0),n(0))(bb) = 0")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (inst
                                                                 2
                                                                 "LAMBDA (ii:below(Nroots)): 0")
                                                                (("1"
                                                                  (expand
                                                                   "bijective?")
                                                                  (("1"
                                                                    (split +)
                                                                    (("1"
                                                                      (expand
                                                                       "injective?")
                                                                      (("1"
                                                                        (skosimp*)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "surjective?")
                                                                      (("2"
                                                                        (skosimp*)
                                                                        (("2"
                                                                          (inst
                                                                           2
                                                                           "y!1")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide 2)
                                                                  (("2"
                                                                    (skosimp*)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (skeep -1)
                                                              (("2"
                                                                (hide +)
                                                                (("2"
                                                                  (expand
                                                                   "Gseq"
                                                                   -2)
                                                                  (("2"
                                                                    (inst-cp
                                                                     "rbj"
                                                                     "bb"
                                                                     "0")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (copy
                                                                         "rij")
                                                                        (("2"
                                                                          (case
                                                                           "bb<=y")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (case
                                                                               "0<=m-1")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (skosimp*)
                                                                                  (("1"
                                                                                    (inst-cp
                                                                                     -
                                                                                     "0"
                                                                                     "i!1")
                                                                                    (("1"
                                                                                      (inst-cp
                                                                                       -
                                                                                       "1"
                                                                                       "i!1")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "constructed_sturm_sequence?")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (inst-cp
                                                                               -
                                                                               "0"
                                                                               "K-1")
                                                                              (("2"
                                                                                (split
                                                                                 -)
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "1"
                                                                                   "K-1")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide 2)
                                                            (("2"
                                                              (lemma
                                                               "constructed_sturm_lem_no_roots_full")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "m"
                                                                 "n"
                                                                 "p"
                                                                 "x"
                                                                 "Gseq(1)")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (copy
                                                                     "rij")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "0"
                                                                       "1")
                                                                      (("2"
                                                                        (case
                                                                         "NOT x<Gseq(1)")
                                                                        (("1"
                                                                          (expand
                                                                           "Gseq"
                                                                           1)
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (split
                                                                               -3)
                                                                              (("1"
                                                                                (expand
                                                                                 "sturm_sig"
                                                                                 -1)
                                                                                (("1"
                                                                                  (replace
                                                                                   -5)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (skeep)
                                                                                (("2"
                                                                                  (copy
                                                                                   "rbj")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "c"
                                                                                     "i")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "1")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (case
                                                                                             "NOT c<=y")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "Gseq"
                                                                                               -4)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (copy
                                                                                                   "rij")
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "1"
                                                                                                     "i!1")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "NOT 1 = i!1")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "Gseq"
                                                                                                             -6)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "Gseq"
                                                                                                             -7)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (ground)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (assert)
                                            (("2"
                                              (case "j < K-1")
                                              (("1"
                                                (case
                                                 "NOT FORALL (yy:real): Gseq(j) < yy AND yy <= Gseq(1 + j) AND polynomial(p(0), n(0))(yy) = 0 IMPLIES yy = enum(j)")
                                                (("1"
                                                  (skeep)
                                                  (("1"
                                                    (copy "rbj")
                                                    (("1"
                                                      (inst - "yy" "0")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (case
                                                           "NOT (x<Gseq(j) AND Gseq(1+j)<=y)")
                                                          (("1"
                                                            (hide -1)
                                                            (("1"
                                                              (inst-cp - "j")
                                                              (("1"
                                                                (inst-cp
                                                                 -
                                                                 "j-1")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "j+1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (expand
                                                                         "Gseq"
                                                                         1)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (copy
                                                                             "rij")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "0"
                                                                               "j")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (case
                                                                 "NOT 0 <= m-1")
                                                                (("1"
                                                                  (expand
                                                                   "constructed_sturm_sequence?")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (hide -1)
                                                                    (("2"
                                                                      (skosimp*)
                                                                      (("2"
                                                                        (case
                                                                         "i!1 < j")
                                                                        (("1"
                                                                          (copy
                                                                           "rij")
                                                                          (("1"
                                                                            (inst-cp
                                                                             -
                                                                             "i!1"
                                                                             "j-1")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "i!1"
                                                                               "j")
                                                                              (("1"
                                                                                (expand
                                                                                 "Gseq")
                                                                                (("1"
                                                                                  (ground)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (copy
                                                                           "rij")
                                                                          (("2"
                                                                            (inst-cp
                                                                             -
                                                                             "j"
                                                                             "i!1")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "j+1"
                                                                               "i!1")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (expand
                                                                                   "Gseq")
                                                                                  (("2"
                                                                                    (ground)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (label "allzeros" -1)
                                                  (("2"
                                                    (hide "allzeros")
                                                    (("2"
                                                      (hide -2)
                                                      (("2"
                                                        (label "rrj" -2)
                                                        (("2"
                                                          (case
                                                           "NOT (polynomial(p(1), n(1))(enum(j)) = 0 AND polynomial(p(0), n(0))(enum(j)) = 0)")
                                                          (("1"
                                                            (lemma
                                                             "constructed_sturm_lem_one_simple_root")
                                                            (("1"
                                                              (inst
                                                               -
                                                               "enum(j)"
                                                               "m"
                                                               "n"
                                                               "p"
                                                               "Gseq(j)"
                                                               "Gseq(1+j)")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (split -)
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (hide
                                                                       -1)
                                                                      (("1"
                                                                        (hide
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "FFF"
                                                                           2)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (invoke
                                                                               (name
                                                                                "Nsteps"
                                                                                "%1")
                                                                               (!
                                                                                2
                                                                                1
                                                                                1))
                                                                              (("1"
                                                                                (replace
                                                                                 -1)
                                                                                (("1"
                                                                                  (case
                                                                                   "NOT Nsteps>=0")
                                                                                  (("1"
                                                                                    (hide
                                                                                     3)
                                                                                    (("1"
                                                                                      (lift-if)
                                                                                      (("1"
                                                                                        (ground)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (reveal
                                                                                       "allzeros")
                                                                                      (("2"
                                                                                        (copy
                                                                                         "allzeros")
                                                                                        (("2"
                                                                                          (hide
                                                                                           "allzeros")
                                                                                          (("2"
                                                                                            (label
                                                                                             "eppypen"
                                                                                             -1)
                                                                                            (("2"
                                                                                              (hide
                                                                                               "eppypen")
                                                                                              (("2"
                                                                                                (case
                                                                                                 "NOT polynomial(p(0),n(0))(enum(j)) = 0")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "LAMBDA (ii:below(0)): 0")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "bijective?")
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "injective?")
                                                                                                        (("1"
                                                                                                          (skosimp*)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (expand
                                                                                                         "surjective?")
                                                                                                        (("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (hide
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (typepred
                                                                                                               "y!1")
                                                                                                              (("2"
                                                                                                                (reveal
                                                                                                                 "eppypen")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "y!1")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (skosimp*)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (skosimp*)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (label
                                                                                                   "enumjzero"
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     +
                                                                                                     "LAMBDA (ii:below(1)): enum(j)")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "bijective?")
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         +)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "injective?")
                                                                                                          (("1"
                                                                                                            (skosimp*)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (expand
                                                                                                           "surjective?")
                                                                                                          (("2"
                                                                                                            (skosimp*)
                                                                                                            (("2"
                                                                                                              (typepred
                                                                                                               "y!1")
                                                                                                              (("2"
                                                                                                                (case
                                                                                                                 "y!1 = enum(j)")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   +
                                                                                                                   "0")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (hide
                                                                                                                     (-6
                                                                                                                      -7))
                                                                                                                    (("2"
                                                                                                                      (copy
                                                                                                                       "rbj")
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "y!1"
                                                                                                                         "0")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (case
                                                                                                                             "NOT (x<Gseq(j) AND Gseq(1+j)<=y)")
                                                                                                                            (("1"
                                                                                                                              (split
                                                                                                                               1)
                                                                                                                              (("1"
                                                                                                                                (copy
                                                                                                                                 "rij")
                                                                                                                                (("1"
                                                                                                                                  (hide
                                                                                                                                   -2)
                                                                                                                                  (("1"
                                                                                                                                    (inst-cp
                                                                                                                                     -
                                                                                                                                     "0"
                                                                                                                                     "j")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "Gseq"
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "0"
                                                                                                                                         "j-1")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (ground)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (expand
                                                                                                                                 "Gseq"
                                                                                                                                 1)
                                                                                                                                (("2"
                                                                                                                                  (copy
                                                                                                                                   "rij")
                                                                                                                                  (("2"
                                                                                                                                    (inst-cp
                                                                                                                                     -
                                                                                                                                     "j"
                                                                                                                                     "K-1")
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "1+j"
                                                                                                                                       "K-1")
                                                                                                                                      (("2"
                                                                                                                                        (ground)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (flatten)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "NOT 0<=m-1")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "constructed_sturm_sequence?")
                                                                                                                                    (("1"
                                                                                                                                      (flatten)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (hide
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (skosimp*)
                                                                                                                                        (("2"
                                                                                                                                          (case
                                                                                                                                           "i!1 <= j")
                                                                                                                                          (("1"
                                                                                                                                            (copy
                                                                                                                                             "rij")
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "i!1"
                                                                                                                                               "j")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (copy
                                                                                                                                                   "rij")
                                                                                                                                                  (("1"
                                                                                                                                                    (inst-cp
                                                                                                                                                     -
                                                                                                                                                     "i!1"
                                                                                                                                                     "j-1")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "Gseq")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "Gseq"
                                                                                                                                               -5)
                                                                                                                                              (("2"
                                                                                                                                                (copy
                                                                                                                                                 "rij")
                                                                                                                                                (("2"
                                                                                                                                                  (inst-cp
                                                                                                                                                   -
                                                                                                                                                   "j"
                                                                                                                                                   "i!1")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "j+1"
                                                                                                                                                     "i!1")
                                                                                                                                                    (("2"
                                                                                                                                                      (ground)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (ground)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (assert)
                                                                                                      (("3"
                                                                                                        (assert)
                                                                                                        (("3"
                                                                                                          (skosimp*)
                                                                                                          (("3"
                                                                                                            (copy
                                                                                                             "rij")
                                                                                                            (("3"
                                                                                                              (inst-cp
                                                                                                               -
                                                                                                               "j-1"
                                                                                                               "j")
                                                                                                              (("3"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "j"
                                                                                                                 "j+1")
                                                                                                                (("3"
                                                                                                                  (assert)
                                                                                                                  (("3"
                                                                                                                    (expand
                                                                                                                     "Gseq"
                                                                                                                     1)
                                                                                                                    (("3"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (copy
                                                                     "rij")
                                                                    (("2"
                                                                      (inst-cp
                                                                       -
                                                                       "j-1"
                                                                       "j")
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "j"
                                                                         "j+1")
                                                                        (("2"
                                                                          (expand
                                                                           "Gseq"
                                                                           1)
                                                                          (("2"
                                                                            (ground)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("3"
                                                                    (copy
                                                                     "rij")
                                                                    (("3"
                                                                      (inst
                                                                       -
                                                                       "j-1"
                                                                       "j")
                                                                      (("3"
                                                                        (expand
                                                                         "Gseq"
                                                                         1)
                                                                        (("3"
                                                                          (ground)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("4"
                                                                    (copy
                                                                     "rij")
                                                                    (("4"
                                                                      (inst
                                                                       -
                                                                       "j"
                                                                       "j+1")
                                                                      (("4"
                                                                        (expand
                                                                         "Gseq"
                                                                         1)
                                                                        (("4"
                                                                          (ground)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("5"
                                                                    (skeep)
                                                                    (("5"
                                                                      (case
                                                                       "NOT (x<Gseq(j) AND Gseq(1+j)<=y)")
                                                                      (("1"
                                                                        (copy
                                                                         "rrj")
                                                                        (("1"
                                                                          (inst-cp
                                                                           -
                                                                           "j-1")
                                                                          (("1"
                                                                            (inst-cp
                                                                             -
                                                                             "j")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "j+1")
                                                                              (("1"
                                                                                (expand
                                                                                 "Gseq"
                                                                                 1)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (copy
                                                                                         "rij")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "0"
                                                                                           "j")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (copy
                                                                             "rbj")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "c"
                                                                               "i")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (skosimp*)
                                                                                  (("2"
                                                                                    (case
                                                                                     "i!1 < j")
                                                                                    (("1"
                                                                                      (copy
                                                                                       "rij")
                                                                                      (("1"
                                                                                        (inst-cp
                                                                                         -
                                                                                         "i!1"
                                                                                         "j-1")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "i!1"
                                                                                           "j")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "Gseq")
                                                                                            (("1"
                                                                                              (ground)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (copy
                                                                                       "rij")
                                                                                      (("2"
                                                                                        (inst-cp
                                                                                         -
                                                                                         "j"
                                                                                         "i!1")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "j+1"
                                                                                           "i!1")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "Gseq")
                                                                                            (("2"
                                                                                              (ground)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("6"
                                                                    (ground)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (lemma
                                                               "constructed_sturm_lem_one_multi_root")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "enum(j)"
                                                                 "m"
                                                                 "n"
                                                                 "p"
                                                                 "Gseq(j)"
                                                                 "Gseq(1+j)")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (split -)
                                                                    (("1"
                                                                      (expand
                                                                       "FFF"
                                                                       2)
                                                                      (("1"
                                                                        (invoke
                                                                         (name
                                                                          "Nsteps"
                                                                          "%1")
                                                                         (!
                                                                          2
                                                                          1
                                                                          1))
                                                                        (("1"
                                                                          (case
                                                                           "NOT Nsteps>=0")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (reveal
                                                                               "allzeros")
                                                                              (("2"
                                                                                (copy
                                                                                 "allzeros")
                                                                                (("2"
                                                                                  (hide
                                                                                   "allzeros")
                                                                                  (("2"
                                                                                    (label
                                                                                     "eppypen"
                                                                                     -1)
                                                                                    (("2"
                                                                                      (hide
                                                                                       "eppypen")
                                                                                      (("2"
                                                                                        (inst
                                                                                         +
                                                                                         "LAMBDA (ii:below(1)): enum(j)")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "bijective?")
                                                                                          (("1"
                                                                                            (split
                                                                                             +)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "injective?")
                                                                                              (("1"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "surjective?")
                                                                                                (("2"
                                                                                                  (skosimp*)
                                                                                                  (("2"
                                                                                                    (typepred
                                                                                                     "y!1")
                                                                                                    (("2"
                                                                                                      (case
                                                                                                       "y!1 = enum(j)")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         +
                                                                                                         "0")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (hide
                                                                                                             (-5
                                                                                                              -6))
                                                                                                            (("2"
                                                                                                              (copy
                                                                                                               "rbj")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "y!1"
                                                                                                                 "0")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (case
                                                                                                                     "NOT (x<Gseq(j) AND Gseq(1+j)<=y)")
                                                                                                                    (("1"
                                                                                                                      (split
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (copy
                                                                                                                         "rij")
                                                                                                                        (("1"
                                                                                                                          (hide
                                                                                                                           -2)
                                                                                                                          (("1"
                                                                                                                            (inst-cp
                                                                                                                             -
                                                                                                                             "0"
                                                                                                                             "j")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "Gseq"
                                                                                                                               1)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "0"
                                                                                                                                 "j-1")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (ground)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (expand
                                                                                                                         "Gseq"
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (copy
                                                                                                                           "rij")
                                                                                                                          (("2"
                                                                                                                            (inst-cp
                                                                                                                             -
                                                                                                                             "j"
                                                                                                                             "K-1")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "1+j"
                                                                                                                               "K-1")
                                                                                                                              (("2"
                                                                                                                                (ground)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (flatten)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (case
                                                                                                                           "NOT 0<=m-1")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "constructed_sturm_sequence?")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (hide
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (skosimp*)
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "i!1 <= j")
                                                                                                                                  (("1"
                                                                                                                                    (copy
                                                                                                                                     "rij")
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "i!1"
                                                                                                                                       "j")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (copy
                                                                                                                                           "rij")
                                                                                                                                          (("1"
                                                                                                                                            (inst-cp
                                                                                                                                             -
                                                                                                                                             "i!1"
                                                                                                                                             "j-1")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "Gseq")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "Gseq"
                                                                                                                                       -5)
                                                                                                                                      (("2"
                                                                                                                                        (copy
                                                                                                                                         "rij")
                                                                                                                                        (("2"
                                                                                                                                          (inst-cp
                                                                                                                                           -
                                                                                                                                           "j"
                                                                                                                                           "i!1")
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "j+1"
                                                                                                                                             "i!1")
                                                                                                                                            (("2"
                                                                                                                                              (ground)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (skosimp*)
                                                                                            (("2"
                                                                                              (ground)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (assert)
                                                                                          (("3"
                                                                                            (skosimp*)
                                                                                            (("3"
                                                                                              (copy
                                                                                               "rij")
                                                                                              (("3"
                                                                                                (inst-cp
                                                                                                 -
                                                                                                 "j-1"
                                                                                                 "j")
                                                                                                (("3"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "j"
                                                                                                   "j+1")
                                                                                                  (("3"
                                                                                                    (assert)
                                                                                                    (("3"
                                                                                                      (expand
                                                                                                       "Gseq"
                                                                                                       1)
                                                                                                      (("3"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (copy
                                                                       "rij")
                                                                      (("2"
                                                                        (inst-cp
                                                                         -
                                                                         "j-1"
                                                                         "j")
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "j"
                                                                           "j+1")
                                                                          (("2"
                                                                            (expand
                                                                             "Gseq"
                                                                             1)
                                                                            (("2"
                                                                              (ground)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (copy
                                                                       "rij")
                                                                      (("3"
                                                                        (inst
                                                                         -
                                                                         "j-1"
                                                                         "j")
                                                                        (("3"
                                                                          (expand
                                                                           "Gseq"
                                                                           1)
                                                                          (("3"
                                                                            (ground)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("4"
                                                                      (copy
                                                                       "rij")
                                                                      (("4"
                                                                        (inst
                                                                         -
                                                                         "j"
                                                                         "j+1")
                                                                        (("4"
                                                                          (expand
                                                                           "Gseq"
                                                                           1)
                                                                          (("4"
                                                                            (ground)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("5"
                                                                      (skeep)
                                                                      (("5"
                                                                        (case
                                                                         "NOT (x<Gseq(j) AND Gseq(1+j)<=y)")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (copy
                                                                             "rrj")
                                                                            (("1"
                                                                              (inst-cp
                                                                               -
                                                                               "j-1")
                                                                              (("1"
                                                                                (inst-cp
                                                                                 -
                                                                                 "j")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "j+1")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "Gseq"
                                                                                     1)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (copy
                                                                               "rbj")
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "c"
                                                                                 "i")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (skosimp*)
                                                                                    (("2"
                                                                                      (case
                                                                                       "i!1 < j")
                                                                                      (("1"
                                                                                        (copy
                                                                                         "rij")
                                                                                        (("1"
                                                                                          (inst-cp
                                                                                           -
                                                                                           "i!1"
                                                                                           "j-1")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "i!1"
                                                                                             "j")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "Gseq")
                                                                                              (("1"
                                                                                                (ground)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (copy
                                                                                         "rij")
                                                                                        (("2"
                                                                                          (inst-cp
                                                                                           -
                                                                                           "j"
                                                                                           "i!1")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "j+1"
                                                                                             "i!1")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "Gseq")
                                                                                              (("2"
                                                                                                (ground)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand "FFF" 3)
                                                (("2"
                                                  (invoke
                                                   (name "Nsteps" "%1")
                                                   (! 3 1 1))
                                                  (("2"
                                                    (replace -1)
                                                    (("2"
                                                      (lemma
                                                       "constructed_sturm_lem_edge_root")
                                                      (("2"
                                                        (inst
                                                         -
                                                         "y"
                                                         "m"
                                                         "n"
                                                         "p"
                                                         "Gseq(j)"
                                                         "y")
                                                        (("2"
                                                          (case
                                                           "NOT Gseq(1+j) = y")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (expand
                                                               "Gseq"
                                                               1)
                                                              (("1"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            (("2"
                                                              (case
                                                               "Gseq(j) < Gseq(1+j)")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replace -2)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (case
                                                                       "(FORALL (c: real, i: nat):
                                                                                                                 i <= m-1 AND
                                                                                                                  Gseq(j) <= c AND c <= y AND polynomial(p(i), n(i))(c) = 0
                                                                                                                  IMPLIES c = y)")
                                                                      (("1"
                                                                        (label
                                                                         "DB"
                                                                         -1)
                                                                        (("1"
                                                                          (replace
                                                                           "DB")
                                                                          (("1"
                                                                            (hide
                                                                             "DB")
                                                                            (("1"
                                                                              (split
                                                                               -)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("1"
                                                                                    (case
                                                                                     "NOT Nsteps >= 0")
                                                                                    (("1"
                                                                                      (hide
                                                                                       4)
                                                                                      (("1"
                                                                                        (lift-if)
                                                                                        (("1"
                                                                                          (ground)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (case
                                                                                         "polynomial(p(0),n(0))(y) /= 0")
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (inst
                                                                                             +
                                                                                             "LAMBDA (ii:below(0)): 0")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "bijective?")
                                                                                              (("1"
                                                                                                (split
                                                                                                 +)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "injective?")
                                                                                                  (("1"
                                                                                                    (skosimp*)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (expand
                                                                                                   "surjective?")
                                                                                                  (("2"
                                                                                                    (skosimp*)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (typepred
                                                                                                         "y!1")
                                                                                                        (("2"
                                                                                                          (reveal
                                                                                                           "DB")
                                                                                                          (("2"
                                                                                                            (copy
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (hide
                                                                                                               "DB")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "y!1"
                                                                                                                 "0")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "constructed_sturm_sequence?")
                                                                                                                    (("2"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("3"
                                                                                              (skosimp*)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (inst
                                                                                               +
                                                                                               "LAMBDA (ii:below(1)): y")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "bijective?")
                                                                                                (("1"
                                                                                                  (split
                                                                                                   +)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "injective?")
                                                                                                    (("1"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (expand
                                                                                                     "surjective?")
                                                                                                    (("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         +
                                                                                                         "0")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (typepred
                                                                                                             "y!1")
                                                                                                            (("2"
                                                                                                              (reveal
                                                                                                               "DB")
                                                                                                              (("2"
                                                                                                                (copy
                                                                                                                 "DB")
                                                                                                                (("2"
                                                                                                                  (hide
                                                                                                                   "DB")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "y!1"
                                                                                                                     "0")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "constructed_sturm_sequence?")
                                                                                                                        (("2"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (ground)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 4)
                                                                                (("2"
                                                                                  (skosimp*)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (case
                                                                           "NOT j = K-1")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (replaces
                                                                             -1)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (copy
                                                                                 "rbj")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "Gseq"
                                                                                     -2)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (inst-cp
                                                                                         "rij"
                                                                                         "K-2"
                                                                                         "K-1")
                                                                                        (("2"
                                                                                          (split
                                                                                           "rij")
                                                                                          (("1"
                                                                                            (inst-cp
                                                                                             -
                                                                                             "K-2")
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   4)
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     (-5
                                                                                                      -6))
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       4)
                                                                                                      (("1"
                                                                                                        (skosimp*)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (case
                                                                                                             "NOT j = K-1")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (replaces
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (copy
                                                                                                                 "rbj")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "c!1"
                                                                                                                   "0")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (split
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (skeep
                                                                                                                         -)
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "NOT i<K")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (inst-cp
                                                                                                                               "rij"
                                                                                                                               "K-2"
                                                                                                                               "K-1")
                                                                                                                              (("2"
                                                                                                                                (split
                                                                                                                                 "rij")
                                                                                                                                (("1"
                                                                                                                                  (inst-cp
                                                                                                                                   -
                                                                                                                                   "K-2")
                                                                                                                                  (("1"
                                                                                                                                    (flatten)
                                                                                                                                    (("1"
                                                                                                                                      (case
                                                                                                                                       "i = K-1")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (case
                                                                                                                                         "i = K-2")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "Gseq"
                                                                                                                                               -9)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (inst
                                                                                                                                           "rij"
                                                                                                                                           "i"
                                                                                                                                           "K-2")
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "Gseq")
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (inst-cp
                                                                                                                           -
                                                                                                                           "K-1")
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "K-2")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "Gseq")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "c!1"
                                                                                                                         "i!1")
                                                                                                                        (("3"
                                                                                                                          (assert)
                                                                                                                          (("3"
                                                                                                                            (split
                                                                                                                             -)
                                                                                                                            (("1"
                                                                                                                              (skeep
                                                                                                                               -)
                                                                                                                              (("1"
                                                                                                                                (case
                                                                                                                                 "i = K-1")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "Gseq")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (case
                                                                                                                                     "i = K-2")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "Gseq")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (inst
                                                                                                                                       "rij"
                                                                                                                                       "i"
                                                                                                                                       "K-2")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "Gseq")
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "K-2")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "Gseq")
                                                                                                                                (("2"
                                                                                                                                  (flatten)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide 4)
                                                                (("2"
                                                                  (hide
                                                                   (-2 -3))
                                                                  (("2"
                                                                    (expand
                                                                     "Gseq"
                                                                     1)
                                                                    (("2"
                                                                      (copy
                                                                       "rij")
                                                                      (("2"
                                                                        (inst-cp
                                                                         -
                                                                         "j-1"
                                                                         "K-1")
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "j"
                                                                           "K-1")
                                                                          (("2"
                                                                            (ground)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("3" (skosimp*) (("3" (assert) nil nil))
                                      nil)
                                     ("4" (skosimp*) (("4" (assert) nil nil))
                                      nil))
                                    nil)
                                   ("2" (hide -)
                                    (("2" (hide 2)
                                      (("2"
                                        (skeep)
                                        (("2"
                                          (expand "FFF")
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (invoke
                                                 (name "Nsteps1" "%1")
                                                 (! -3 1))
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (invoke
                                                     (name "Nsteps2" "%1")
                                                     (! -6 1))
                                                    (("2"
                                                      (replace -1)
                                                      (("2"
                                                        (skosimp*)
                                                        (("2"
                                                          (name
                                                           "cable"
                                                           "LAMBDA (ii:below(Nsteps1+Nsteps2)): IF ii<Nsteps1 THEN bij!1(ii) ELSE bij!2(ii-Nsteps1) ENDIF")
                                                          (("1"
                                                            (inst + "cable")
                                                            (("1"
                                                              (expand
                                                               "bijective?")
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (split)
                                                                  (("1"
                                                                    (expand
                                                                     "injective?")
                                                                    (("1"
                                                                      (skeep)
                                                                      (("1"
                                                                        (expand
                                                                         "cable"
                                                                         -1)
                                                                        (("1"
                                                                          (lift-if)
                                                                          (("1"
                                                                            (lift-if)
                                                                            (("1"
                                                                              (lift-if)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (ground)
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "x1!1"
                                                                                     "x2!1")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     -8)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "x1!1-Nsteps1"
                                                                                       "x2!1-Nsteps1")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "surjective?"
                                                                     +)
                                                                    (("2"
                                                                      (skosimp*)
                                                                      (("2"
                                                                        (case
                                                                         "y!1 <=x2")
                                                                        (("1"
                                                                          (expand
                                                                           "surjective?"
                                                                           -9)
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "y!1")
                                                                            (("1"
                                                                              (skosimp*)
                                                                              (("1"
                                                                                (inst
                                                                                 +
                                                                                 "x!1")
                                                                                (("1"
                                                                                  (expand
                                                                                   "cable"
                                                                                   +)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "surjective?"
                                                                           -11)
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "y!1")
                                                                            (("1"
                                                                              (skosimp*)
                                                                              (("1"
                                                                                (inst
                                                                                 +
                                                                                 "Nsteps1+x!1")
                                                                                (("1"
                                                                                  (expand
                                                                                   "cable"
                                                                                   +)
                                                                                  (("1"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (split)
                                                                (("1"
                                                                  (skosimp*)
                                                                  (("1"
                                                                    (ground)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "cable"
                                                                   +)
                                                                  (("2"
                                                                    (skosimp*)
                                                                    (("2"
                                                                      (lift-if)
                                                                      (("2"
                                                                        (ground)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide 2)
                                                            (("2"
                                                              (skosimp*)
                                                              (("2"
                                                                (ground)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (hide 2)
                                                            (("3"
                                                              (skosimp*)
                                                              (("3"
                                                                (ground)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (skeep)
                                  (("2" (inst-cp - "0" "j")
                                    (("2" (inst - "j" "K-1")
                                      (("2" (ground) nil nil)) nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (skosimp*) (("2" (ground) nil nil)) nil)
                               ("3" (skosimp*) (("3" (ground) nil nil)) nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (expand "constructed_sturm_sequence?") (("2" (assert) nil nil))
        nil))
      nil))
    nil)
   ((number_sign_changes def-decl "NSC" number_sign_changes nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (bijective? const-decl "bool" functions nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (sequence type-eq-decl nil sequences nil) (<= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil) (>= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (NSC type-eq-decl nil number_sign_changes nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (/= const-decl "boolean" notequal nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (TRUE const-decl "bool" booleans nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (constructed_sturm_sequence? const-decl "bool" sturm nil)
    (surjective? const-decl "bool" functions nil)
    (injective? const-decl "bool" functions nil)
    (n skolem-const-decl "[nat -> nat]" sturm nil)
    (p skolem-const-decl "[nat -> [nat -> real]]" sturm nil)
    (x skolem-const-decl "real" sturm nil)
    (Nroots skolem-const-decl "int" sturm nil)
    (constructed_sturm_lem_no_roots_full formula-decl nil sturm nil)
    (sturm_sig const-decl "nat" sturm nil)
    (even_plus_odd_is_odd application-judgement "odd_int" integers nil)
    (enum skolem-const-decl "[below(K) -> real]" sturm nil)
    (FALSE const-decl "bool" booleans nil)
    (j skolem-const-decl "nat" sturm nil)
    (m skolem-const-decl "nat" sturm nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (constructed_sturm_lem_one_simple_root formula-decl nil sturm nil)
    (constructed_sturm_lem_one_multi_root formula-decl nil sturm nil)
    (constructed_sturm_lem_edge_root formula-decl nil sturm nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (Gseq skolem-const-decl "[upto(K) -> real]" sturm nil)
    (K skolem-const-decl "{K: nat | K >= 2}" sturm nil)
    (pred type-eq-decl nil defined_types nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (x!1 skolem-const-decl
     "below(number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x2),
                          m - 1)`num
       -
       number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x3),
                           m - 1)`num)" sturm nil)
    (x2 skolem-const-decl "real" sturm nil)
    (y!1 skolem-const-decl
     "{xr: real | x1 < xr AND xr <= x3 AND polynomial(p(0), n(0))(xr) = 0}"
     sturm nil)
    (cable skolem-const-decl "[below(Nsteps1 + Nsteps2) -> real]" sturm nil)
    (x3 skolem-const-decl "real" sturm nil)
    (x1 skolem-const-decl "real" sturm nil)
    (Nsteps2 skolem-const-decl "int" sturm nil)
    (Nsteps1 skolem-const-decl "int" sturm nil)
    (constructed_sturm_roots_between_enum formula-decl nil sturm nil)
    (FFF skolem-const-decl "[[real, real] -> bool]" sturm nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (sturm_unbounded_left_TCC1 0
  (sturm_unbounded_left_TCC1-1 nil 3594052684 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (/= const-decl "boolean" notequal nil)
    (constructed_sturm_sequence? const-decl "bool" sturm nil)
    (^ const-decl "real" exponentiation nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil (sturm_unbounded_left subtype "(number_fields.-)(sturm.m, 1)" "nat")))
 (sturm_unbounded_left 0
  (sturm_unbounded_left-3 "" 3790098471
   ("" (skeep)
    (("" (lemma "poly_sign_near_negative_infinity")
      ((""
        (case "FORALL (kk:nat): kk<=m-1 IMPLIES EXISTS (M:posnat): -M < y AND FORALL (x:real,ii:nat):ii<=kk AND x<=-M IMPLIES sign_ext(polynomial(p(ii),n(ii))(x)) = sign_ext((-1)^n(ii)*p(ii)(n(ii)))")
        (("1" (inst - "m-1")
          (("1" (hide -2)
            (("1" (skoletin 1)
              (("1" (skoletin 1)
                (("1" (skoletin 1)
                  (("1" (assert)
                    (("1" (skeep)
                      (("1" (lemma "sturm")
                        (("1" (inst - "m" "n" "p" "-M" "y")
                          (("1" (assert)
                            (("1"
                              (case "number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(-M),
                                                 m - 1)`num = nscninf`num")
                              (("1" (replace -1)
                                (("1" (replace -5 :dir rl)
                                  (("1" (assert)
                                    (("1" (split -2)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (skeep -2)
                                            (("1"
                                              (inst + "bij")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand "bijective?")
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (split +)
                                                      (("1"
                                                        (expand "injective?")
                                                        (("1"
                                                          (skosimp*)
                                                          (("1"
                                                            (inst
                                                             -
                                                             "x1!1"
                                                             "x2!1")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand "surjective?")
                                                        (("2"
                                                          (skosimp*)
                                                          (("2"
                                                            (inst - "y!1")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (skosimp*)
                                                                (("1"
                                                                  (inst
                                                                   +
                                                                   "x!1")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (typepred "y!1")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "y!1"
                                                                 "0")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (split -)
                                                                    (("1"
                                                                      (expand
                                                                       "sign_ext"
                                                                       -1)
                                                                      (("1"
                                                                        (lift-if)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (split
                                                                             -)
                                                                            (("1"
                                                                              (propax)
                                                                              nil
                                                                              nil)
                                                                             ("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (split
                                                                                 -)
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (lemma
                                                                                   "nzreal_times_nzreal_is_nzreal")
                                                                                  (("2"
                                                                                    (inst?)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (copy
                                                                                       -11)
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (copy
                                                                                             -12)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "constructed_sturm_sequence?"
                                                                                               -1)
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "0")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (copy
                                                                       -11)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (expand
                                                                           "constructed_sturm_sequence?")
                                                                          (("2"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (skosimp*)
                                                (("2" (ground) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (inst - "-M" "0")
                                          (("2"
                                            (assert)
                                            (("2"
                                              (split -)
                                              (("1"
                                                (expand "sign_ext" -1)
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (hide +)
                                                      (("1"
                                                        (ground)
                                                        (("1"
                                                          (lemma
                                                           "nzreal_times_nzreal_is_nzreal")
                                                          (("1"
                                                            (copy -9)
                                                            (("1"
                                                              (expand
                                                               "constructed_sturm_sequence?"
                                                               -1)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (inst - "0")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (copy -8)
                                                          (("2"
                                                            (expand
                                                             "constructed_sturm_sequence?"
                                                             -1)
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (inst - "0")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand
                                                 "constructed_sturm_sequence?")
                                                (("2" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("3" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (hide (-1 2))
                                (("2" (replace -2 +)
                                  (("2" (lemma "nsc_regular_swap")
                                    (("2"
                                      (inst
                                       -
                                       "LAMBDA (i): polynomial(p(i), n(i))(-M)"
                                       "LAMBDA (i): (-1) ^ (n(i)) * p(i)(n(i))"
                                       "m-1"
                                       "m-1")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (split -)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (replace -2 +)
                                                (("1"
                                                  (invoke
                                                   (case "%1 = 0")
                                                   (! 1 1 2))
                                                  (("1"
                                                    (replaces -1)
                                                    (("1" (assert) nil nil))
                                                    nil)
                                                   ("2"
                                                    (hide 2)
                                                    (("2"
                                                      (case "m>=2")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (lift-if)
                                                          (("1"
                                                            (ground)
                                                            (("1"
                                                              (inst
                                                               -
                                                               "-M"
                                                               "0")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replace
                                                                   -10)
                                                                  (("1"
                                                                    (expand
                                                                     "sign_ext"
                                                                     -1)
                                                                    (("1"
                                                                      (lift-if)
                                                                      (("1"
                                                                        (ground)
                                                                        (("1"
                                                                          (expand
                                                                           "constructed_sturm_sequence?")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "0")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (inst
                                                               -
                                                               "-M"
                                                               "0")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (replace
                                                                   -10)
                                                                  (("2"
                                                                    (expand
                                                                     "sign_ext"
                                                                     -1)
                                                                    (("2"
                                                                      (lift-if)
                                                                      (("2"
                                                                        (ground)
                                                                        (("2"
                                                                          (expand
                                                                           "constructed_sturm_sequence?")
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "0")
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide (-1 2))
                                                        (("2"
                                                          (expand
                                                           "constructed_sturm_sequence?")
                                                          (("2"
                                                            (flatten)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide 2)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (skeep)
                                                (("2"
                                                  (hide 2)
                                                  (("2"
                                                    (inst - "-M" "j")
                                                    (("2" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (hide 2)
                                            (("3"
                                              (inst - "-M" "m-1")
                                              (("1" (assert) nil nil)
                                               ("2"
                                                (expand
                                                 "constructed_sturm_sequence?")
                                                (("2"
                                                  (flatten)
                                                  (("2" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("4"
                                            (hide 2)
                                            (("4"
                                              (skeep)
                                              (("4"
                                                (copy -7)
                                                (("4"
                                                  (expand
                                                   "constructed_sturm_sequence?"
                                                   -1)
                                                  (("4"
                                                    (flatten)
                                                    (("4"
                                                      (inst - "j")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (hide
                                                             (-2 -3 -4 -5 -6))
                                                            (("1"
                                                              (hide -1)
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "-M"
                                                                 "j")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "sign_ext")
                                                                    (("1"
                                                                      (lift-if)
                                                                      (("1"
                                                                        (lift-if)
                                                                        (("1"
                                                                          (lift-if)
                                                                          (("1"
                                                                            (lift-if)
                                                                            (("1"
                                                                              (ground)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2" (assert) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand "constructed_sturm_sequence?")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("3" (expand "constructed_sturm_sequence?")
                                (("3" (assert) nil nil)) nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand "constructed_sturm_sequence?")
            (("2" (assert) nil nil)) nil))
          nil)
         ("2" (hide 2)
          (("2" (induct "kk")
            (("1" (assert)
              (("1" (flatten)
                (("1" (inst - "p(0)" "n(0)")
                  (("1" (assert)
                    (("1" (split -)
                      (("1" (skeep)
                        (("1" (inst + "max(M+1,floor(abs(y))+6)")
                          (("1" (assert)
                            (("1" (split +)
                              (("1" (hide -) (("1" (grind) nil nil)) nil)
                               ("2" (skeep)
                                (("2" (case "ii = 0")
                                  (("1" (assert)
                                    (("1" (inst - "x")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (replaces -1)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (replace -3)
                                              (("1"
                                                (hide -3)
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (rewrite "sign_ext_mult")
                                                    (("1"
                                                      (ground)
                                                      (("1"
                                                        (lemma "even_m1_pow")
                                                        (("1"
                                                          (inst?)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (replaces -1)
                                                              (("1"
                                                                (expand
                                                                 "sign_ext"
                                                                 2
                                                                 2)
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (lemma "even_m1_pow")
                                                        (("2"
                                                          (inst?)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (replaces -1)
                                                              (("2"
                                                                (expand
                                                                 "sign_ext"
                                                                 2
                                                                 2)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (lemma
                                                         "not_even_m1_pow")
                                                        (("3"
                                                          (inst?)
                                                          (("3"
                                                            (assert)
                                                            (("3"
                                                              (replaces -1)
                                                              (("3"
                                                                (hide-all-but
                                                                 3)
                                                                (("3"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("4"
                                                        (lemma
                                                         "not_even_m1_pow")
                                                        (("4"
                                                          (inst?)
                                                          (("4"
                                                            (assert)
                                                            (("4"
                                                              (replaces -1)
                                                              (("4"
                                                                (hide-all-but
                                                                 3)
                                                                (("4"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (expand "constructed_sturm_sequence?")
                        (("2" (flatten)
                          (("2" (inst - "0") (("2" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (skeep)
              (("2" (assert)
                (("2" (skeep)
                  (("2" (inst -4 "p(1+j)" "n(1+j)")
                    (("2" (assert)
                      (("2" (split -)
                        (("1" (skosimp*)
                          (("1" (inst + "max(M!1,M)")
                            (("1" (assert)
                              (("1" (split +)
                                (("1" (hide-all-but (-2 1))
                                  (("1" (grind) nil nil)) nil)
                                 ("2" (skeep)
                                  (("2" (case "ii /= 1+j")
                                    (("1" (inst -6 "x" "ii")
                                      (("1" (assert) nil nil)) nil)
                                     ("2" (flatten)
                                      (("2"
                                        (replaces -1)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (inst - "x")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (replace -3 +)
                                                (("2"
                                                  (hide -)
                                                  (("2"
                                                    (lift-if)
                                                    (("2"
                                                      (ground)
                                                      (("1"
                                                        (lemma "even_m1_pow")
                                                        (("1"
                                                          (inst?)
                                                          (("1"
                                                            (rewrite
                                                             "sign_ext_mult")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (rewrite
                                                         "sign_ext_mult")
                                                        (("2"
                                                          (lemma
                                                           "not_even_m1_pow")
                                                          (("2"
                                                            (inst?)
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide 2)
                          (("2" (expand "constructed_sturm_sequence?")
                            (("2" (flatten)
                              (("2" (inst - "1+j") (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (sturm_unbounded_left-2 nil 3594055558
   ("" (skeep)
    (("" (lemma "poly_sign_near_negative_infinity")
      ((""
        (case "FORALL (kk:nat): kk<=m-1 IMPLIES EXISTS (M:posnat): -M < y AND FORALL (x:real,ii:nat):ii<=kk AND x<=-M IMPLIES sign_ext(polynomial(p(ii),n(ii))(x)) = sign_ext((-1)^n(ii)*p(ii)(n(ii)))")
        (("1" (inst - "m-1")
          (("1" (hide -2)
            (("1" (skoletin 1)
              (("1" (skoletin 1)
                (("1" (skoletin 1)
                  (("1" (assert)
                    (("1" (skeep)
                      (("1" (lemma "sturm")
                        (("1" (inst - "m" "n" "p" "-M" "y")
                          (("1" (assert)
                            (("1"
                              (case "number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(-M),
                                                 m - 1)`num = nscninf`num")
                              (("1" (replace -1)
                                (("1" (replace -5 :dir rl)
                                  (("1" (assert)
                                    (("1" (split -2)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (skeep -2)
                                            (("1"
                                              (inst + "bij")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand "bijective?")
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (split +)
                                                      (("1"
                                                        (expand "injective?")
                                                        (("1"
                                                          (skosimp*)
                                                          (("1"
                                                            (inst
                                                             -
                                                             "x1!1"
                                                             "x2!1")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand "surjective?")
                                                        (("2"
                                                          (skosimp*)
                                                          (("2"
                                                            (inst - "y!1")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (skosimp*)
                                                                (("1"
                                                                  (inst
                                                                   +
                                                                   "x!1")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (typepred "y!1")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "y!1"
                                                                 "0")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (split -)
                                                                    (("1"
                                                                      (expand
                                                                       "sign_ext"
                                                                       -1)
                                                                      (("1"
                                                                        (lift-if)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (split
                                                                             -)
                                                                            (("1"
                                                                              (propax)
                                                                              nil
                                                                              nil)
                                                                             ("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (split
                                                                                 -)
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (lemma
                                                                                   "nzreal_times_nzreal_is_nzreal")
                                                                                  (("2"
                                                                                    (inst?)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (copy
                                                                                       -11)
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (copy
                                                                                             -12)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "constructed_sturm_sequence?"
                                                                                               -1)
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "0")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (copy
                                                                       -11)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (expand
                                                                           "constructed_sturm_sequence?")
                                                                          (("2"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (skosimp*)
                                                (("2" (ground) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (inst - "-M" "0")
                                          (("2"
                                            (assert)
                                            (("2"
                                              (split -)
                                              (("1"
                                                (expand "sign_ext" -1)
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (hide +)
                                                      (("1"
                                                        (ground)
                                                        (("1"
                                                          (lemma
                                                           "nzreal_times_nzreal_is_nzreal")
                                                          (("1"
                                                            (copy -9)
                                                            (("1"
                                                              (expand
                                                               "constructed_sturm_sequence?"
                                                               -1)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (inst - "0")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (copy -8)
                                                          (("2"
                                                            (expand
                                                             "constructed_sturm_sequence?"
                                                             -1)
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (inst - "0")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand
                                                 "constructed_sturm_sequence?")
                                                (("2" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("3" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (hide (-1 2))
                                (("2" (replace -2 +)
                                  (("2" (lemma "nsc_regular_swap")
                                    (("2"
                                      (inst
                                       -
                                       "LAMBDA (i): polynomial(p(i), n(i))(-M)"
                                       "LAMBDA (i): (-1) ^ (n(i)) * p(i)(n(i))"
                                       "m-1"
                                       "m-1")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (split -)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (replace -2 +)
                                                (("1"
                                                  (invoke
                                                   (case "%1 = 0")
                                                   (! 1 1 2))
                                                  (("1"
                                                    (replaces -1)
                                                    (("1" (assert) nil nil))
                                                    nil)
                                                   ("2"
                                                    (hide 2)
                                                    (("2"
                                                      (case "m>=2")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (lift-if)
                                                          (("1"
                                                            (ground)
                                                            (("1"
                                                              (inst
                                                               -
                                                               "-M"
                                                               "0")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replace
                                                                   -10)
                                                                  (("1"
                                                                    (expand
                                                                     "sign_ext"
                                                                     -1)
                                                                    (("1"
                                                                      (lift-if)
                                                                      (("1"
                                                                        (ground)
                                                                        (("1"
                                                                          (expand
                                                                           "constructed_sturm_sequence?")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "0")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (inst
                                                               -
                                                               "-M"
                                                               "0")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (replace
                                                                   -10)
                                                                  (("2"
                                                                    (expand
                                                                     "sign_ext"
                                                                     -1)
                                                                    (("2"
                                                                      (lift-if)
                                                                      (("2"
                                                                        (ground)
                                                                        (("2"
                                                                          (expand
                                                                           "constructed_sturm_sequence?")
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "0")
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide (-1 2))
                                                        (("2"
                                                          (expand
                                                           "constructed_sturm_sequence?")
                                                          (("2"
                                                            (flatten)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide 2)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (skeep)
                                                (("2"
                                                  (hide 2)
                                                  (("2"
                                                    (inst - "-M" "j")
                                                    (("2" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (hide 2)
                                            (("3"
                                              (inst - "-M" "m-1")
                                              (("1" (assert) nil nil)
                                               ("2"
                                                (expand
                                                 "constructed_sturm_sequence?")
                                                (("2"
                                                  (flatten)
                                                  (("2" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("4"
                                            (hide 2)
                                            (("4"
                                              (skeep)
                                              (("4"
                                                (copy -7)
                                                (("4"
                                                  (expand
                                                   "constructed_sturm_sequence?"
                                                   -1)
                                                  (("4"
                                                    (flatten)
                                                    (("4"
                                                      (inst - "j")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (hide
                                                             (-2 -3 -4 -5 -6))
                                                            (("1"
                                                              (hide -1)
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "-M"
                                                                 "j")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "sign_ext")
                                                                    (("1"
                                                                      (lift-if)
                                                                      (("1"
                                                                        (lift-if)
                                                                        (("1"
                                                                          (lift-if)
                                                                          (("1"
                                                                            (lift-if)
                                                                            (("1"
                                                                              (ground)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2" (assert) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand "constructed_sturm_sequence?")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("3" (expand "constructed_sturm_sequence?")
                                (("3" (assert) nil nil)) nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand "constructed_sturm_sequence?")
            (("2" (assert) nil nil)) nil))
          nil)
         ("2" (hide 2)
          (("2" (induct "kk")
            (("1" (assert)
              (("1" (flatten)
                (("1" (inst - "p(0)" "n(0)")
                  (("1" (assert)
                    (("1" (split -)
                      (("1" (skeep)
                        (("1" (inst + "max(M+1,floor(abs(y))+6)")
                          (("1" (assert)
                            (("1" (split +)
                              (("1" (hide -) (("1" (grind) nil nil)) nil)
                               ("2" (skeep)
                                (("2" (case "ii = 0")
                                  (("1" (assert)
                                    (("1" (inst - "x")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (replaces -1)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (replace -3)
                                              (("1"
                                                (hide -3)
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (rewrite "sign_ext_mult")
                                                    (("1"
                                                      (ground)
                                                      (("1"
                                                        (lemma "even_m1_pow")
                                                        (("1"
                                                          (inst?)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (replaces -1)
                                                              (("1"
                                                                (expand
                                                                 "sign_ext"
                                                                 2
                                                                 2)
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (lemma "even_m1_pow")
                                                        (("2"
                                                          (inst?)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (replaces -1)
                                                              (("2"
                                                                (expand
                                                                 "sign_ext"
                                                                 2
                                                                 2)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (lemma
                                                         "not_even_m1_pow")
                                                        (("3"
                                                          (inst?)
                                                          (("3"
                                                            (assert)
                                                            (("3"
                                                              (replaces -1)
                                                              (("3"
                                                                (hide-all-but
                                                                 3)
                                                                (("3"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("4"
                                                        (lemma
                                                         "not_even_m1_pow")
                                                        (("4"
                                                          (inst?)
                                                          (("4"
                                                            (assert)
                                                            (("4"
                                                              (replaces -1)
                                                              (("4"
                                                                (hide-all-but
                                                                 3)
                                                                (("4"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (expand "constructed_sturm_sequence?")
                        (("2" (flatten)
                          (("2" (inst - "0") (("2" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (skeep)
              (("2" (assert)
                (("2" (skeep)
                  (("2" (inst -4 "p(1+j)" "n(1+j)")
                    (("2" (assert)
                      (("2" (split -)
                        (("1" (skosimp*)
                          (("1" (inst + "max(M!1,M)")
                            (("1" (assert)
                              (("1" (split +)
                                (("1" (hide-all-but (-2 1))
                                  (("1" (grind) nil nil)) nil)
                                 ("2" (skeep)
                                  (("2" (case "ii /= 1+j")
                                    (("1" (inst -6 "x" "ii")
                                      (("1" (assert) nil nil)) nil)
                                     ("2" (flatten)
                                      (("2"
                                        (replaces -1)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (inst - "x")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (replace -3 +)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (hide -)
                                                    (("2"
                                                      (lift-if)
                                                      (("2"
                                                        (ground)
                                                        (("1"
                                                          (lemma
                                                           "even_m1_pow")
                                                          (("1"
                                                            (inst?)
                                                            (("1"
                                                              (rewrite
                                                               "sign_ext_mult")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (rewrite
                                                           "sign_ext_mult")
                                                          (("2"
                                                            (lemma
                                                             "not_even_m1_pow")
                                                            (("2"
                                                              (inst?)
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide 2)
                          (("2" (expand "constructed_sturm_sequence?")
                            (("2" (flatten)
                              (("2" (inst - "1+j") (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((poly_sign_near_negative_infinity formula-decl nil more_polynomial_props
     reals)
    (posrat_max application-judgement "{s: posrat | s >= q AND s >= r}"
     real_defs nil)
    (posint_max application-judgement "{k: posint | i <= k AND j <= k}"
     real_defs nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (floor const-decl "{i | i <= x & x < i + 1}" floor_ceil nil)
    (integer nonempty-type-from-decl nil integers nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (even_m1_pow formula-decl nil exponentiation nil)
    (not_even_m1_pow formula-decl nil exponentiation nil)
    (sign_ext_mult formula-decl nil sign reals)
    (nat_induction formula-decl nil naturalnumbers nil)
    (pred type-eq-decl nil defined_types nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (m skolem-const-decl "nat" sturm nil)
    (number_sign_changes def-decl "NSC" number_sign_changes nil)
    (NSC type-eq-decl nil number_sign_changes nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (TRUE const-decl "bool" booleans nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (below type-eq-decl nil naturalnumbers nil)
    (p skolem-const-decl "[nat -> [nat -> real]]" sturm nil)
    (n skolem-const-decl "[nat -> nat]" sturm nil)
    (M skolem-const-decl "posnat" sturm nil)
    (y skolem-const-decl "real" sturm nil)
    (Nroots skolem-const-decl "int" sturm nil)
    (injective? const-decl "bool" functions nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (nzreal_times_nzreal_is_nzreal judgement-tcc nil real_types nil)
    (constructed_sturm_sequence? const-decl "bool" sturm nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (y!1 skolem-const-decl
     "{xr: real | xr <= y AND polynomial(p(0), n(0))(xr) = 0}" sturm nil)
    (surjective? const-decl "bool" functions nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (j skolem-const-decl "nat" sturm nil)
    (nsc_regular_swap formula-decl nil number_sign_changes nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sturm formula-decl nil sturm nil)
    (int_exp application-judgement "int" exponentiation nil)
    (nzreal_exp application-judgement "nzreal" exponentiation nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (< const-decl "bool" reals nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (sign_ext const-decl
     "{sig: real | (sig = -1 OR sig = 1 OR sig = 0) AND sig * x = abs(x)}"
     sign reals)
    (sequence type-eq-decl nil sequences nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (/= const-decl "boolean" notequal nil)
    (^ const-decl "real" exponentiation nil))
   nil)
  (sturm_unbounded_left-1 nil 3594052785
   ("" (skeep)
    (("" (lemma "poly_sign_near_negative_infinity")
      ((""
        (case "FORALL (kk:nat): kk<=m-1 IMPLIES EXISTS (M:posnat): -M < y AND FORALL (x:real,ii:nat):ii<=kk AND x<=-M IMPLIES sign(polynomial(p(ii),n(ii))(x)) = sign((-1)^ii*p(ii)(n(ii)))")
        (("1" (inst - "m-1")
          (("1" (hide -2)
            (("1" (skoletin 1)
              (("1" (skoletin 1)
                (("1" (skoletin 1)
                  (("1" (assert)
                    (("1" (skeep)
                      (("1" (lemma "sturm")
                        (("1" (inst - "m" "n" "p" "-M" "y")
                          (("1" (assert)
                            (("1"
                              (case "number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(-M),
                           m - 1)`num = nscninf`num")
                              (("1" (replace -1)
                                (("1" (replace -5 :dir rl)
                                  (("1" (assert)
                                    (("1" (split -2)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (skeep -2)
                                            (("1"
                                              (inst + "bij")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand "bijective?")
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (split +)
                                                      (("1"
                                                        (expand "injective?")
                                                        (("1"
                                                          (skosimp*)
                                                          (("1"
                                                            (inst
                                                             -
                                                             "x1!1"
                                                             "x2!1")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand "surjective?")
                                                        (("2"
                                                          (skosimp*)
                                                          (("2"
                                                            (inst - "y!1")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (skosimp*)
                                                                (("1"
                                                                  (inst
                                                                   +
                                                                   "x!1")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (typepred "y!1")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "y!1"
                                                                 "0")
                                                                (("2"
                                                                  (postpone)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2" (postpone) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2" (postpone) nil nil)
                                       ("3" (postpone) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (postpone) nil nil)
                               ("3" (postpone) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (postpone) nil nil))
          nil)
         ("2" (postpone) nil nil))
        nil))
      nil))
    nil)
   nil shostak))
 (sturm_unbounded_right 0
  (sturm_unbounded_right-2 nil 3594057623
   ("" (skeep)
    (("" (lemma "poly_sign_near_infinity")
      ((""
        (case "FORALL (kk:nat): kk<=m-1 IMPLIES EXISTS (M:posnat): x<M AND FORALL (x:real,ii:nat):ii<=kk AND x>=M IMPLIES sign_ext(polynomial(p(ii),n(ii))(x)) = sign_ext(p(ii)(n(ii)))")
        (("1" (inst - "m-1")
          (("1" (hide -2)
            (("1" (skoletin 1)
              (("1" (skoletin 1)
                (("1" (skoletin 1)
                  (("1" (assert)
                    (("1" (skeep)
                      (("1" (lemma "sturm")
                        (("1" (inst - "m" "n" "p" "x" "M")
                          (("1" (assert)
                            (("1"
                              (case "number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(M),
                                                                       m - 1)`num = nscinf`num")
                              (("1" (replace -1)
                                (("1" (replace -5 :dir rl)
                                  (("1" (assert)
                                    (("1" (split -2)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (skeep -2)
                                            (("1"
                                              (inst + "bij")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand "bijective?")
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (split +)
                                                      (("1"
                                                        (expand "injective?")
                                                        (("1"
                                                          (skosimp*)
                                                          (("1"
                                                            (inst
                                                             -
                                                             "x1!1"
                                                             "x2!1")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand "surjective?")
                                                        (("2"
                                                          (skosimp*)
                                                          (("2"
                                                            (inst - "y!1")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (skosimp*)
                                                                (("1"
                                                                  (inst
                                                                   +
                                                                   "x!1")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (typepred "y!1")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "y!1"
                                                                 "0")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (split -)
                                                                    (("1"
                                                                      (expand
                                                                       "sign_ext"
                                                                       -1)
                                                                      (("1"
                                                                        (lift-if)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (split
                                                                             -)
                                                                            (("1"
                                                                              (propax)
                                                                              nil
                                                                              nil)
                                                                             ("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (split
                                                                                 -)
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (expand
                                                                                   "constructed_sturm_sequence?")
                                                                                  (("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "0")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (split +)
                                                (("1"
                                                  (skosimp*)
                                                  (("1"
                                                    (assert)
                                                    (("1" (ground) nil nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (skosimp*)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (typepred "bij(x1!1)")
                                                      (("2" (assert) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2" (propax) nil nil)
                                       ("3"
                                        (hide 2)
                                        (("3"
                                          (flatten)
                                          (("3"
                                            (inst - "M" "0")
                                            (("3"
                                              (assert)
                                              (("3"
                                                (split -)
                                                (("1"
                                                  (replace -3)
                                                  (("1"
                                                    (expand "sign_ext" -1)
                                                    (("1"
                                                      (lift-if)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (ground)
                                                          (("1"
                                                            (expand
                                                             "constructed_sturm_sequence?")
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (inst - "0")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "constructed_sturm_sequence?")
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (inst - "0")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand
                                                   "constructed_sturm_sequence?")
                                                  (("2" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (hide 2)
                                (("2" (hide (-1 2))
                                  (("2" (replace -2 +)
                                    (("2" (lemma "nsc_regular_swap")
                                      (("2"
                                        (inst
                                         -
                                         "LAMBDA (i): polynomial(p(i), n(i))(M)"
                                         "LAMBDA (i): p(i)(n(i))"
                                         "m-1"
                                         "m-1")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (split -)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (replace -2 +)
                                                  (("1"
                                                    (invoke
                                                     (case "%1 = 0")
                                                     (! 1 1 2))
                                                    (("1"
                                                      (replaces -1)
                                                      (("1" (assert) nil nil))
                                                      nil)
                                                     ("2"
                                                      (hide 2)
                                                      (("2"
                                                        (hide (-1 -2))
                                                        (("2"
                                                          (case "m>=2")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (lift-if)
                                                              (("1"
                                                                (ground)
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "M"
                                                                   "0")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (replace
                                                                       -7)
                                                                      (("1"
                                                                        (expand
                                                                         "sign_ext"
                                                                         -1)
                                                                        (("1"
                                                                          (lift-if)
                                                                          (("1"
                                                                            (ground)
                                                                            (("1"
                                                                              (expand
                                                                               "constructed_sturm_sequence?")
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "0")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (inst
                                                                   -
                                                                   "M"
                                                                   "0")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (replace
                                                                       -7)
                                                                      (("2"
                                                                        (expand
                                                                         "sign_ext"
                                                                         -1)
                                                                        (("2"
                                                                          (lift-if)
                                                                          (("2"
                                                                            (ground)
                                                                            (("2"
                                                                              (expand
                                                                               "constructed_sturm_sequence?")
                                                                              (("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "0")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide (-1 2))
                                                            (("2"
                                                              (expand
                                                               "constructed_sturm_sequence?")
                                                              (("2"
                                                                (flatten)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide 2)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (skeep)
                                                  (("2"
                                                    (hide 2)
                                                    (("2"
                                                      (inst - "M" "j")
                                                      (("2" (assert) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (hide 2)
                                              (("3"
                                                (inst - "M" "m-1")
                                                (("1" (assert) nil nil)
                                                 ("2"
                                                  (expand
                                                   "constructed_sturm_sequence?")
                                                  (("2"
                                                    (flatten)
                                                    (("2" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("4"
                                              (hide 2)
                                              (("4"
                                                (skeep)
                                                (("4"
                                                  (copy -7)
                                                  (("4"
                                                    (expand
                                                     "constructed_sturm_sequence?"
                                                     -1)
                                                    (("4"
                                                      (flatten)
                                                      (("4"
                                                        (inst - "j")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (hide
                                                               (-2
                                                                -3
                                                                -4
                                                                -5
                                                                -6))
                                                              (("1"
                                                                (hide -1)
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "M"
                                                                   "j")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "sign_ext")
                                                                      (("1"
                                                                        (lift-if)
                                                                        (("1"
                                                                          (ground)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand
                                           "constructed_sturm_sequence?")
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("3" (expand "constructed_sturm_sequence?")
                                (("3" (assert) nil nil)) nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand "constructed_sturm_sequence?")
            (("2" (assert) nil nil)) nil))
          nil)
         ("2" (hide 2)
          (("2" (induct "kk")
            (("1" (assert)
              (("1" (flatten)
                (("1" (inst - "p(0)" "n(0)")
                  (("1" (assert)
                    (("1" (split -)
                      (("1" (skeep)
                        (("1" (inst + "max(M+1,floor(abs(x))+6)")
                          (("1" (assert)
                            (("1" (split +)
                              (("1" (hide -) (("1" (grind) nil nil)) nil)
                               ("2" (skeep)
                                (("2" (case "ii = 0")
                                  (("1" (assert)
                                    (("1" (inst - "x_1")
                                      (("1" (assert) nil nil)) nil))
                                    nil)
                                   ("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (expand "constructed_sturm_sequence?")
                        (("2" (flatten)
                          (("2" (inst - "0") (("2" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (skeep)
              (("2" (assert)
                (("2" (skeep)
                  (("2" (inst -4 "p(1+j)" "n(1+j)")
                    (("2" (assert)
                      (("2" (split -)
                        (("1" (skosimp*)
                          (("1" (inst + "max(M!1,M)")
                            (("1" (assert)
                              (("1" (split +)
                                (("1" (hide-all-but (-2 1))
                                  (("1" (grind) nil nil)) nil)
                                 ("2" (skeep)
                                  (("2" (case "ii /= 1+j")
                                    (("1" (inst -6 "x!1" "ii")
                                      (("1" (assert) nil nil)) nil)
                                     ("2" (flatten)
                                      (("2"
                                        (replaces -1)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (inst - "x!1")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (expand "constructed_sturm_sequence?")
                          (("2" (flatten)
                            (("2" (inst - "1+j") (("2" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((poly_sign_near_infinity formula-decl nil more_polynomial_props reals)
    (/= const-decl "boolean" notequal nil)
    (posrat_max application-judgement "{s: posrat | s >= q AND s >= r}"
     real_defs nil)
    (posint_max application-judgement "{k: posint | i <= k AND j <= k}"
     real_defs nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (floor const-decl "{i | i <= x & x < i + 1}" floor_ceil nil)
    (integer nonempty-type-from-decl nil integers nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (pred type-eq-decl nil defined_types nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (m skolem-const-decl "nat" sturm nil)
    (number_sign_changes def-decl "NSC" number_sign_changes nil)
    (NSC type-eq-decl nil number_sign_changes nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (TRUE const-decl "bool" booleans nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (below type-eq-decl nil naturalnumbers nil)
    (p skolem-const-decl "[nat -> [nat -> real]]" sturm nil)
    (n skolem-const-decl "[nat -> nat]" sturm nil)
    (x skolem-const-decl "real" sturm nil)
    (M skolem-const-decl "posnat" sturm nil)
    (Nroots skolem-const-decl "int" sturm nil)
    (bij skolem-const-decl
     "[below(number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x),
                           m - 1)`num
        -
        number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(M),
                            m - 1)`num) ->
   {xr: real | x < xr AND xr <= M AND polynomial(p(0), n(0))(xr) = 0}]" sturm
     nil)
    (injective? const-decl "bool" functions nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (constructed_sturm_sequence? const-decl "bool" sturm nil)
    (y!1 skolem-const-decl
     "{xr: real | xr > x AND polynomial(p(0), n(0))(xr) = 0}" sturm nil)
    (surjective? const-decl "bool" functions nil)
    (nsc_regular_swap formula-decl nil number_sign_changes nil)
    (j skolem-const-decl "nat" sturm nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sturm formula-decl nil sturm nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (< const-decl "bool" reals nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (sign_ext const-decl
     "{sig: real | (sig = -1 OR sig = 1 OR sig = 0) AND sig * x = abs(x)}"
     sign reals)
    (sequence type-eq-decl nil sequences nil)
    (polynomial const-decl "[real -> real]" polynomials reals))
   nil)
  (sturm_unbounded_right-1 nil 3594057584
   ("" (skeep)
    (("" (lemma "poly_sign_near_negative_infinity")
      ((""
        (case "FORALL (kk:nat): kk<=m-1 IMPLIES EXISTS (M:posnat): -M < y AND FORALL (x:real,ii:nat):ii<=kk AND x<=-M IMPLIES sign_ext(polynomial(p(ii),n(ii))(x)) = sign_ext((-1)^n(ii)*p(ii)(n(ii)))")
        (("1" (inst - "m-1")
          (("1" (hide -2)
            (("1" (skoletin 1)
              (("1" (skoletin 1)
                (("1" (skoletin 1)
                  (("1" (assert)
                    (("1" (skeep)
                      (("1" (lemma "sturm")
                        (("1" (inst - "m" "n" "p" "-M" "y")
                          (("1" (assert)
                            (("1"
                              (case "number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(-M),
                                                            m - 1)`num = nscninf`num")
                              (("1" (replace -1)
                                (("1" (replace -5 :dir rl)
                                  (("1" (assert)
                                    (("1" (split -2)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (skeep -2)
                                            (("1"
                                              (inst + "bij")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand "bijective?")
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (split +)
                                                      (("1"
                                                        (expand "injective?")
                                                        (("1"
                                                          (skosimp*)
                                                          (("1"
                                                            (inst
                                                             -
                                                             "x1!1"
                                                             "x2!1")
                                                            (("1"
                                                              (assert)
                                                              nil)))))))
                                                       ("2"
                                                        (expand "surjective?")
                                                        (("2"
                                                          (skosimp*)
                                                          (("2"
                                                            (inst - "y!1")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (skosimp*)
                                                                (("1"
                                                                  (inst
                                                                   +
                                                                   "x!1")
                                                                  nil)))))
                                                             ("2"
                                                              (typepred "y!1")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "y!1"
                                                                 "0")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (split -)
                                                                    (("1"
                                                                      (expand
                                                                       "sign_ext"
                                                                       -1)
                                                                      (("1"
                                                                        (lift-if)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (split
                                                                             -)
                                                                            (("1"
                                                                              (propax)
                                                                              nil)
                                                                             ("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (split
                                                                                 -)
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil)
                                                                                 ("2"
                                                                                  (lemma
                                                                                   "nzreal_times_nzreal_is_nzreal")
                                                                                  (("2"
                                                                                    (inst?)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil)
                                                                                     ("2"
                                                                                      (copy
                                                                                       -11)
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (copy
                                                                                             -12)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "constructed_sturm_sequence?"
                                                                                               -1)
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "0")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    nil)))))))))))))))))))))))))))))))
                                                                     ("2"
                                                                      (copy
                                                                       -11)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (expand
                                                                           "constructed_sturm_sequence?")
                                                                          (("2"
                                                                            (propax)
                                                                            nil)))))))))))))))))))))))))))))
                                               ("2"
                                                (skosimp*)
                                                (("2" (ground) nil)))))))))))
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (inst - "-M" "0")
                                          (("2"
                                            (assert)
                                            (("2"
                                              (split -)
                                              (("1"
                                                (expand "sign_ext" -1)
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (hide +)
                                                      (("1"
                                                        (ground)
                                                        (("1"
                                                          (lemma
                                                           "nzreal_times_nzreal_is_nzreal")
                                                          (("1"
                                                            (copy -9)
                                                            (("1"
                                                              (expand
                                                               "constructed_sturm_sequence?"
                                                               -1)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (inst - "0")
                                                                  (("1"
                                                                    (assert)
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    nil)))))))))))
                                                         ("2"
                                                          (copy -8)
                                                          (("2"
                                                            (expand
                                                             "constructed_sturm_sequence?"
                                                             -1)
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (inst - "0")
                                                                (("1"
                                                                  (assert)
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  nil)))))))))))))))))))
                                               ("2"
                                                (expand
                                                 "constructed_sturm_sequence?")
                                                (("2" (assert) nil)))))))))))
                                       ("3" (propax) nil)))))))))
                               ("2" (hide (-1 2))
                                (("2" (replace -2 +)
                                  (("2" (lemma "nsc_regular_swap")
                                    (("2"
                                      (inst
                                       -
                                       "LAMBDA (i): polynomial(p(i), n(i))(-M)"
                                       "LAMBDA (i): (-1) ^ (n(i)) * p(i)(n(i))"
                                       "m-1"
                                       "m-1")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (split -)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (replace -2 +)
                                                (("1"
                                                  (invoke
                                                   (case "%1 = 0")
                                                   (! 1 1 2))
                                                  (("1"
                                                    (replaces -1)
                                                    (("1" (assert) nil)))
                                                   ("2"
                                                    (hide 2)
                                                    (("2"
                                                      (case "m>=2")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (lift-if)
                                                          (("1"
                                                            (ground)
                                                            (("1"
                                                              (inst
                                                               -
                                                               "-M"
                                                               "0")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replace
                                                                   -10)
                                                                  (("1"
                                                                    (expand
                                                                     "sign_ext"
                                                                     -1)
                                                                    (("1"
                                                                      (lift-if)
                                                                      (("1"
                                                                        (ground)
                                                                        (("1"
                                                                          (expand
                                                                           "constructed_sturm_sequence?")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "0")
                                                                              (("1"
                                                                                (assert)
                                                                                nil)))))))))))))))))))
                                                             ("2"
                                                              (inst
                                                               -
                                                               "-M"
                                                               "0")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (replace
                                                                   -10)
                                                                  (("2"
                                                                    (expand
                                                                     "sign_ext"
                                                                     -1)
                                                                    (("2"
                                                                      (lift-if)
                                                                      (("2"
                                                                        (ground)
                                                                        (("2"
                                                                          (expand
                                                                           "constructed_sturm_sequence?")
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "0")
                                                                              (("2"
                                                                                (assert)
                                                                                nil)))))))))))))))))))))))))
                                                       ("2"
                                                        (hide (-1 2))
                                                        (("2"
                                                          (expand
                                                           "constructed_sturm_sequence?")
                                                          (("2"
                                                            (flatten)
                                                            nil)))))))))))))))))
                                           ("2"
                                            (hide 2)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (skeep)
                                                (("2"
                                                  (hide 2)
                                                  (("2"
                                                    (inst - "-M" "j")
                                                    (("2"
                                                      (assert)
                                                      nil)))))))))))
                                           ("3"
                                            (hide 2)
                                            (("3"
                                              (inst - "-M" "m-1")
                                              (("1" (assert) nil)
                                               ("2"
                                                (expand
                                                 "constructed_sturm_sequence?")
                                                (("2"
                                                  (flatten)
                                                  (("2" (assert) nil)))))))))
                                           ("4"
                                            (hide 2)
                                            (("4"
                                              (skeep)
                                              (("4"
                                                (copy -7)
                                                (("4"
                                                  (expand
                                                   "constructed_sturm_sequence?"
                                                   -1)
                                                  (("4"
                                                    (flatten)
                                                    (("4"
                                                      (inst - "j")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (hide
                                                             (-2 -3 -4 -5 -6))
                                                            (("1"
                                                              (hide -1)
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "-M"
                                                                 "j")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "sign_ext")
                                                                    (("1"
                                                                      (lift-if)
                                                                      (("1"
                                                                        (lift-if)
                                                                        (("1"
                                                                          (lift-if)
                                                                          (("1"
                                                                            (lift-if)
                                                                            (("1"
                                                                              (ground)
                                                                              nil)))))))))))))))))))))))
                                                       ("2"
                                                        (assert)
                                                        nil)))))))))))))))))
                                       ("2"
                                        (expand "constructed_sturm_sequence?")
                                        (("2" (assert) nil)))))))))))
                               ("3" (expand "constructed_sturm_sequence?")
                                (("3" (assert) nil)))))))))))))))))))))))
           ("2" (expand "constructed_sturm_sequence?") (("2" (assert) nil)))))
         ("2" (hide 2)
          (("2" (induct "kk")
            (("1" (assert)
              (("1" (flatten)
                (("1" (inst - "p(0)" "n(0)")
                  (("1" (assert)
                    (("1" (split -)
                      (("1" (skeep)
                        (("1" (inst + "max(M+1,floor(abs(y))+6)")
                          (("1" (assert)
                            (("1" (split +)
                              (("1" (hide -) (("1" (grind) nil)))
                               ("2" (skeep)
                                (("2" (case "ii = 0")
                                  (("1" (assert)
                                    (("1" (inst - "x")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (replaces -1)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (replace -3)
                                              (("1"
                                                (hide -3)
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (rewrite "sign_ext_mult")
                                                    (("1"
                                                      (ground)
                                                      (("1"
                                                        (lemma "even_m1_pow")
                                                        (("1"
                                                          (inst?)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (replaces -1)
                                                              (("1"
                                                                (expand
                                                                 "sign_ext"
                                                                 2
                                                                 2)
                                                                (("1"
                                                                  (assert)
                                                                  nil)))))))))))
                                                       ("2"
                                                        (lemma "even_m1_pow")
                                                        (("2"
                                                          (inst?)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (replaces -1)
                                                              (("2"
                                                                (expand
                                                                 "sign_ext"
                                                                 2
                                                                 2)
                                                                (("2"
                                                                  (assert)
                                                                  nil)))))))))))
                                                       ("3"
                                                        (lemma
                                                         "not_even_m1_pow")
                                                        (("3"
                                                          (inst?)
                                                          (("3"
                                                            (assert)
                                                            (("3"
                                                              (replaces -1)
                                                              (("3"
                                                                (hide-all-but
                                                                 3)
                                                                (("3"
                                                                  (grind)
                                                                  nil)))))))))))
                                                       ("4"
                                                        (lemma
                                                         "not_even_m1_pow")
                                                        (("4"
                                                          (inst?)
                                                          (("4"
                                                            (assert)
                                                            (("4"
                                                              (replaces -1)
                                                              (("4"
                                                                (hide-all-but
                                                                 3)
                                                                (("4"
                                                                  (grind)
                                                                  nil)))))))))))))))))))))))))))))))
                                   ("2" (assert) nil)))))))))))))
                       ("2" (expand "constructed_sturm_sequence?")
                        (("2" (flatten)
                          (("2" (inst - "0")
                            (("2" (assert) nil)))))))))))))))))
             ("2" (skeep)
              (("2" (assert)
                (("2" (skeep)
                  (("2" (inst -4 "p(1+j)" "n(1+j)")
                    (("2" (assert)
                      (("2" (split -)
                        (("1" (skosimp*)
                          (("1" (inst + "max(M!1,M)")
                            (("1" (assert)
                              (("1" (split +)
                                (("1" (hide-all-but (-2 1))
                                  (("1" (grind) nil)))
                                 ("2" (skeep)
                                  (("2" (case "ii /= 1+j")
                                    (("1" (inst -6 "x" "ii")
                                      (("1" (assert) nil)))
                                     ("2" (flatten)
                                      (("2"
                                        (replaces -1)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (inst - "x")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (replace -3 +)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (hide -)
                                                    (("2"
                                                      (lift-if)
                                                      (("2"
                                                        (ground)
                                                        (("1"
                                                          (lemma
                                                           "even_m1_pow")
                                                          (("1"
                                                            (inst?)
                                                            (("1"
                                                              (rewrite
                                                               "sign_ext_mult")
                                                              (("1"
                                                                (assert)
                                                                nil)))))))
                                                         ("2"
                                                          (rewrite
                                                           "sign_ext_mult")
                                                          (("2"
                                                            (lemma
                                                             "not_even_m1_pow")
                                                            (("2"
                                                              (inst?)
                                                              (("2"
                                                                (assert)
                                                                nil)))))))))))))))))))))))))))))))))))))))
                         ("2" (hide 2)
                          (("2" (expand "constructed_sturm_sequence?")
                            (("2" (flatten)
                              (("2" (inst - "1+j")
                                (("2" (assert)
                                  nil))))))))))))))))))))))))))))))
    nil)
   nil nil))
 (sturm_unbounded_TCC1 0
  (sturm_unbounded_TCC1-1 nil 3595070478 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (/= const-decl "boolean" notequal nil)
    (constructed_sturm_sequence? const-decl "bool" sturm nil))
   nil (sturm_unbounded subtype "(number_fields.-)(sturm.m, 1)" "nat")))
 (sturm_unbounded 0
  (sturm_unbounded-1 nil 3595070479
   ("" (skeep)
    (("" (skoletin 1)
      (("" (skoletin 1)
        (("" (skoletin 1)
          (("" (case "EXISTS (x:real): polynomial(p(0),n(0))(x)/=0")
            (("1" (skeep -)
              (("1" (lemma "sturm_unbounded_left")
                (("1" (inst - "m" "n" "p" "x")
                  (("1" (replace -3 :dir rl)
                    (("1"
                      (name "K"
                            "number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x),
                                 m - 1)")
                      (("1" (replace -1)
                        (("1" (assert)
                          (("1" (flatten)
                            (("1" (skolem -3 "bijlow")
                              (("1" (lemma "sturm_unbounded_right")
                                (("1" (inst - "m" "n" "p" "x")
                                  (("1" (replace -2)
                                    (("1" (replace -7 :dir rl)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (skolem -2 "bijhigh")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (inst
                                                 +
                                                 "LAMBDA (i:below(Nroots)): IF i < nsclow`num-K`num THEN bijlow(i) ELSE bijhigh(i-(nsclow`num-K`num)) ENDIF")
                                                (("1"
                                                  (label "bh" -2)
                                                  (("1"
                                                    (label "bl" -5)
                                                    (("1"
                                                      (expand "bijective?")
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (split +)
                                                          (("1"
                                                            (expand
                                                             "injective?"
                                                             ("bl" 1))
                                                            (("1"
                                                              (skeep)
                                                              (("1"
                                                                (lift-if)
                                                                (("1"
                                                                  (lift-if)
                                                                  (("1"
                                                                    (lift-if)
                                                                    (("1"
                                                                      (ground)
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "x1"
                                                                         "x2")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide
                                                                         "bl")
                                                                        (("2"
                                                                          (expand
                                                                           "injective?"
                                                                           ("bh"
                                                                            1))
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "K`num-nsclow`num+x1"
                                                                             "K`num-nsclow`num+x2")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "surjective?"
                                                             1)
                                                            (("2"
                                                              (skeep)
                                                              (("2"
                                                                (case "y > x")
                                                                (("1"
                                                                  (expand
                                                                   "surjective?"
                                                                   "bh")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "y")
                                                                    (("1"
                                                                      (skeep
                                                                       -)
                                                                      (("1"
                                                                        (inst
                                                                         +
                                                                         "nsclow`num-K`num + x!1")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "surjective?"
                                                                   "bl")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "y")
                                                                    (("1"
                                                                      (skeep
                                                                       -7)
                                                                      (("1"
                                                                        (inst
                                                                         +
                                                                         "x!1")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (skosimp*)
                                                  (("2" (ground) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (assert)
                        (("2" (hide (-1 3))
                          (("2" (expand "constructed_sturm_sequence?")
                            (("2" (propax) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (hide (-1 -2 -3 2))
              (("2" (expand "constructed_sturm_sequence?")
                (("2" (flatten)
                  (("2" (hide (-2 -3 -4 -5 -6 -7))
                    (("2" (lemma "poly_eq_0_le_degree")
                      (("2" (inst - "p(0)" "n(0)")
                        (("2" (ground)
                          (("1" (inst - "n(0)")
                            (("1" (inst -3 "0") (("1" (assert) nil nil)) nil))
                            nil)
                           ("2" (skeep 1)
                            (("2" (inst 3 "x") (("2" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((real_times_real_is_real application-judgement "real" reals nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (NSC type-eq-decl nil number_sign_changes nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (number_sign_changes def-decl "NSC" number_sign_changes nil)
    (TRUE const-decl "bool" booleans nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (bijective? const-decl "bool" functions nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (^ const-decl "real" exponentiation nil)
    (/= const-decl "boolean" notequal nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (sequence type-eq-decl nil sequences nil)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (poly_eq_0_le_degree formula-decl nil polynomials reals)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (injective? const-decl "bool" functions nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (x skolem-const-decl "real" sturm nil)
    (y skolem-const-decl "{xr: real | polynomial(p(0), n(0))(xr) = 0}" sturm
     nil)
    (n skolem-const-decl "[nat -> nat]" sturm nil)
    (p skolem-const-decl "[nat -> [nat -> real]]" sturm nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (surjective? const-decl "bool" functions nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (<= const-decl "bool" reals nil) (> const-decl "bool" reals nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (K skolem-const-decl "NSC" sturm nil)
    (nsclow skolem-const-decl "NSC" sturm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Nroots skolem-const-decl "int" sturm nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (sturm_unbounded_right formula-decl nil sturm nil)
    (constructed_sturm_sequence? const-decl "bool" sturm nil)
    (sturm_unbounded_left formula-decl nil sturm nil)
    (int_exp application-judgement "int" exponentiation nil)
    (nzreal_exp application-judgement "nzreal" exponentiation nil))
   shostak)))

