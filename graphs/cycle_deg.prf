(cycle_deg
 (reachable_TCC1 0
  (reachable_TCC1-2 nil 3312297543
   ("" (skosimp*)
    (("" (typepred "vert(G!1)")
      (("" (lemma "finite_subset[T]")
        ((""
          (inst -1 "vert(G!1)" "{y: T |
                  vert(G!1)(y) AND
                   (EXISTS (w: Seq[T](G!1)): walk_from?[T](G!1, w, x!1, y))}")
          (("" (bddsimp)
            (("" (hide 2)
              (("" (expand "subset?")
                (("" (expand "member") (("" (skosimp*) nil nil)) nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((graph type-eq-decl nil graphs nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (pregraph type-eq-decl nil graphs nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (doubleton type-eq-decl nil doubletons structures)
    (dbl const-decl "set[T]" doubletons structures)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (/= const-decl "boolean" notequal nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil) (T formal-type-decl nil cycle_deg nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil) (prewalk type-eq-decl nil walks nil)
    (verts_in? const-decl "bool" walks nil) (Seq type-eq-decl nil walks nil)
    (walk_from? const-decl "bool" walks nil)
    (member const-decl "bool" sets nil) (subset? const-decl "bool" sets nil)
    (finite_subset formula-decl nil finite_sets nil))
   nil
   (reachable subtype
    "{y: cycle_deg.T | booleans.AND(vert(cycle_deg.G)(y), EXISTS (w: walks[cycle_deg.T].Seq(cycle_deg.G)): walks[cycle_deg.T].walk_from?(cycle_deg.G, w, cycle_deg.x, y))}"
    "finite_set[T]"))
  (reachable_TCC1-1 nil 3312285093 ("" (subtype-tcc) nil nil) nil nil
   (reachable subtype
    "{y: cycle_deg.T | booleans.AND(vert(cycle_deg.G)(y), EXISTS (w: walks[cycle_deg.T].Seq(cycle_deg.G)): walks[cycle_deg.T].walk_from?(cycle_deg.G, w, cycle_deg.x, y))}"
    "finite_set[T]")))
 (reachable_subset 0
  (reachable_subset-1 nil 3312297501 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (T formal-type-decl nil cycle_deg nil) (set type-eq-decl nil sets nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (dbl const-decl "set[T]" doubletons structures)
    (doubleton type-eq-decl nil doubletons structures)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (pregraph type-eq-decl nil graphs nil) (graph type-eq-decl nil graphs nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences nil)
    (/= const-decl "boolean" notequal nil)
    (edge? const-decl "bool" graphs nil) (walk? const-decl "bool" walks nil)
    (walk_from? const-decl "bool" walks nil)
    (reachable const-decl "finite_set[T]" cycle_deg nil)
    (member const-decl "bool" sets nil) (subset? const-decl "bool" sets nil)
    (nil application-judgement "finite_set[T]" cycle_deg nil))
   shostak))
 (reachable_conn 0
  (reachable_conn-5 nil 3559571065
   ("" (skosimp*)
    (("" (lemma "conn_eq_path")
      (("" (inst -1 "subgraph(G!1, reachable(G!1, x!1))")
        (("" (iff -1)
          (("" (bddsimp)
            (("" (hide 1)
              (("" (expand "path_connected?")
                (("" (bddsimp)
                  (("1" (install-rewrites "subgraphs")
                    (("1" (assert)
                      (("1" (inst -1 "x!1")
                        (("1" (bddsimp)
                          (("1"
                            (inst 1
                             "(#length := 1, seq :=(LAMBDA (i:below(1)): x!1)#)")
                            (("1" (assert) nil nil)) nil)
                           ("2" (typepred "x!1") (("2" (propax) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (skosimp*)
                    (("2" (typepred "x!2")
                      (("2" (typepred "y!1")
                        (("2" (expand "subgraph" -)
                          (("2" (flatten)
                            (("2" (expand "reachable" -)
                              (("2" (bddsimp)
                                (("2" (skosimp*)
                                  (("2" (lemma "walk?_reverse")
                                    (("2" (inst-cp -1 "G!1" "x!1" "y!1" "w!1")
                                      (("2"
                                        (inst -1 "G!1" "x!1" "x!2" "w!2")
                                        (("2"
                                          (bddsimp)
                                          (("2"
                                            (skosimp*)
                                            (("2"
                                              (lemma "walk_merge")
                                              (("2"
                                                (inst
                                                 -1
                                                 "G!1"
                                                 "w!4"
                                                 "w!3"
                                                 "x!2"
                                                 "y!1"
                                                 "x!1")
                                                (("2"
                                                  (bddsimp)
                                                  (("2"
                                                    (skosimp*)
                                                    (("2"
                                                      (inst 1 "p!1")
                                                      (("1"
                                                        (install-rewrites
                                                         "walks")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (bddsimp)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (assert)
                                                        (("2"
                                                          (install-rewrites
                                                           "walks")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (skosimp*)
                                                              (("2"
                                                                (bddsimp)
                                                                (("1"
                                                                  (skosimp*)
                                                                  (("1"
                                                                    (bddsimp)
                                                                    (("1"
                                                                      (typepred
                                                                       "p!1")
                                                                      (("1"
                                                                        (inst
                                                                         -11
                                                                         "n!1")
                                                                        (("1"
                                                                          (bddsimp)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (skosimp*)
                                                                      (("2"
                                                                        (inst-cp
                                                                         -9
                                                                         "n!1")
                                                                        (("1"
                                                                          (inst
                                                                           -9
                                                                           "1+n!1")
                                                                          (("1"
                                                                            (hide
                                                                             -3
                                                                             -4
                                                                             -5
                                                                             -6)
                                                                            (("1"
                                                                              (bddsimp
                                                                               (-2
                                                                                -5
                                                                                -6
                                                                                1))
                                                                              (("1"
                                                                                (hide
                                                                                 -8
                                                                                 -9
                                                                                 -11
                                                                                 -12)
                                                                                (("1"
                                                                                  (reveal
                                                                                   -10
                                                                                   -11)
                                                                                  (("1"
                                                                                    (reveal
                                                                                     (-1
                                                                                      -2
                                                                                      -7
                                                                                      -8))
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "walk?_caret")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -1
                                                                                         "G!1"
                                                                                         "0"
                                                                                         "n!1"
                                                                                         "p!1")
                                                                                        (("1"
                                                                                          (stop-rewrite)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (case
                                                                                               "walk?(G!1,p!1)")
                                                                                              (("1"
                                                                                                (bddsimp)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -8
                                                                                                   "G!1"
                                                                                                   "x!2"
                                                                                                   "x!3"
                                                                                                   "p!1 ^ (0,  n!1)")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "walk_from?"
                                                                                                     -8)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "^"
                                                                                                       -8
                                                                                                       (1
                                                                                                        2
                                                                                                        3))
                                                                                                      (("1"
                                                                                                        (bddsimp
                                                                                                         (-2
                                                                                                          -8))
                                                                                                        (("1"
                                                                                                          (skosimp*)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -9
                                                                                                             "G!1"
                                                                                                             "w!5"
                                                                                                             "w!2"
                                                                                                             "x!1"
                                                                                                             "x!3"
                                                                                                             "x!2")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "walk_from?"
                                                                                                               -9
                                                                                                               (1
                                                                                                                2))
                                                                                                              (("1"
                                                                                                                (typepred
                                                                                                                 "w!2")
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "walk?(G!1,w!2)")
                                                                                                                  (("1"
                                                                                                                    (bddsimp)
                                                                                                                    (("1"
                                                                                                                      (skosimp*)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         1
                                                                                                                         "p!2")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "walk_from?"
                                                                                                                           -12)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "walk?"
                                                                                                                               -14)
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (hide-all-but
                                                                                                                                   (-4
                                                                                                                                    -7
                                                                                                                                    -12
                                                                                                                                    -13
                                                                                                                                    -14
                                                                                                                                    -15
                                                                                                                                    -25
                                                                                                                                    -26)
                                                                                                                                   -)
                                                                                                                                  (("1"
                                                                                                                                    (grind)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (hide-all-but
                                                                                                                           -12
                                                                                                                           -)
                                                                                                                          (("2"
                                                                                                                            (grind)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (hide-all-but
                                                                                                                     (-2
                                                                                                                      -7
                                                                                                                      -8
                                                                                                                      -19)
                                                                                                                     -)
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       2)
                                                                                                                      (("2"
                                                                                                                        (install-rewrites
                                                                                                                         "walks")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (expand
                                                                                                           min)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (reveal
                                                                                                 -10)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   (-16
                                                                                                    -17))
                                                                                                  (("2"
                                                                                                    (hide-all-but
                                                                                                     (-1
                                                                                                      -9
                                                                                                      -12
                                                                                                      -13
                                                                                                      -14
                                                                                                      -15)
                                                                                                     -)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (grind)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 (-1
                                                                                  -3)
                                                                                 -)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (reveal
                                                                                 -6
                                                                                 -7)
                                                                                (("3"
                                                                                  (lemma
                                                                                   "walk?_caret")
                                                                                  (("3"
                                                                                    (inst
                                                                                     -1
                                                                                     "G!1"
                                                                                     "0"
                                                                                     "1+n!1"
                                                                                     "p!1")
                                                                                    (("3"
                                                                                      (inst
                                                                                       -3
                                                                                       "G!1"
                                                                                       "x!2"
                                                                                       "x!3"
                                                                                       "p!1 ^ (0, 1 + n!1)")
                                                                                      (("1"
                                                                                        (typepred
                                                                                         "n!1")
                                                                                        (("1"
                                                                                          (bddsimp
                                                                                           (-1
                                                                                            -2
                                                                                            -4
                                                                                            -5
                                                                                            -8))
                                                                                          (("1"
                                                                                            (skosimp*)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -6
                                                                                               "G!1"
                                                                                               "w!5"
                                                                                               "w!2"
                                                                                               "x!1"
                                                                                               "x!3"
                                                                                               "x!2")
                                                                                              (("1"
                                                                                                (hide-all-but
                                                                                                 (-3
                                                                                                  -6
                                                                                                  -12
                                                                                                  -13
                                                                                                  -14)
                                                                                                 -)
                                                                                                (("1"
                                                                                                  (typepred
                                                                                                   "w!2")
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "walk_from?(G!1, w!2, x!1, x!2)")
                                                                                                    (("1"
                                                                                                      (bddsimp
                                                                                                       (-1
                                                                                                        -4
                                                                                                        -5))
                                                                                                      (("1"
                                                                                                        (skosimp*)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           1
                                                                                                           "p!2")
                                                                                                          (("1"
                                                                                                            (hide-all-but
                                                                                                             -3
                                                                                                             -)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (grind)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             -3
                                                                                                             -)
                                                                                                            (("2"
                                                                                                              (grind)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide-all-but
                                                                                                       (-1
                                                                                                        -2
                                                                                                        -5
                                                                                                        -6
                                                                                                        -7)
                                                                                                       -)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (hide
                                                                                               (-5
                                                                                                -11
                                                                                                -12
                                                                                                -13
                                                                                                -14
                                                                                                -15
                                                                                                -16
                                                                                                -17
                                                                                                -18))
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (bddsimp)
                                                                                                  (("1"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (hide
                                                                                             2)
                                                                                            (("3"
                                                                                              (hide
                                                                                               -2
                                                                                               -5
                                                                                               -11
                                                                                               -12
                                                                                               -13
                                                                                               -14
                                                                                               -15
                                                                                               -16)
                                                                                              (("3"
                                                                                                (assert)
                                                                                                (("3"
                                                                                                  (bddsimp)
                                                                                                  (("3"
                                                                                                    (typepred
                                                                                                     "p!1")
                                                                                                    (("3"
                                                                                                      (reveal
                                                                                                       -13)
                                                                                                      (("3"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("4"
                                                                                            (hide
                                                                                             -4
                                                                                             -12
                                                                                             -15
                                                                                             3)
                                                                                            (("4"
                                                                                              (reveal
                                                                                               -8)
                                                                                              (("4"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("4"
                                                                                                  (assert)
                                                                                                  (("4"
                                                                                                    (bddsimp)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("5"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("6"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("7"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("8"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         -2
                                                                                         -9
                                                                                         -12
                                                                                         -15
                                                                                         2)
                                                                                        (("2"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("2"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("4"
                                                                                (assert
                                                                                 (-1
                                                                                  -2
                                                                                  1))
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert
                                                                             (-1
                                                                              1))
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (assert
                                                                           (-1
                                                                            1))
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (inst
                                                                       -9
                                                                       "n!1")
                                                                      (("3"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (skosimp*)
                                                                  (("2"
                                                                    (inst
                                                                     -7
                                                                     "i!1")
                                                                    (("2"
                                                                      (bddsimp)
                                                                      (("2"
                                                                        (lemma
                                                                         "walk?_caret")
                                                                        (("2"
                                                                          (inst
                                                                           -1
                                                                           "G!1"
                                                                           "0"
                                                                           "i!1"
                                                                           "p!1")
                                                                          (("2"
                                                                            (typepred
                                                                             "i!1")
                                                                            (("2"
                                                                              (reveal
                                                                               -4)
                                                                              (("2"
                                                                                (inst
                                                                                 -1
                                                                                 "G!1"
                                                                                 "x!2"
                                                                                 "seq(p!1)(i!1)"
                                                                                 "p!1 ^ (0, i!1)")
                                                                                (("1"
                                                                                  (case
                                                                                   "walk?(G!1,p!1)")
                                                                                  (("1"
                                                                                    (bddsimp
                                                                                     (-1
                                                                                      -3
                                                                                      -4))
                                                                                    (("1"
                                                                                      (expand
                                                                                       "walk_from?"
                                                                                       -4
                                                                                       1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "^"
                                                                                         -4
                                                                                         (1
                                                                                          2))
                                                                                        (("1"
                                                                                          (expand
                                                                                           "^"
                                                                                           -4
                                                                                           1)
                                                                                          (("1"
                                                                                            (bddsimp
                                                                                             (-3
                                                                                              -4
                                                                                              -10))
                                                                                            (("1"
                                                                                              (skosimp*)
                                                                                              (("1"
                                                                                                (reveal
                                                                                                 -3)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "G!1"
                                                                                                   "w!5"
                                                                                                   "w!2"
                                                                                                   "x!1"
                                                                                                   "seq(p!1)(i!1)"
                                                                                                   "x!2")
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "walk_from?(G!1, w!2, x!1, x!2)")
                                                                                                    (("1"
                                                                                                      (bddsimp
                                                                                                       (-1
                                                                                                        -2
                                                                                                        -5))
                                                                                                      (("1"
                                                                                                        (skosimp*)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           1
                                                                                                           "p!2")
                                                                                                          (("1"
                                                                                                            (hide-all-but
                                                                                                             -3
                                                                                                             -)
                                                                                                            (("1"
                                                                                                              (grind)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (typepred
                                                                                                             "p!2")
                                                                                                            (("2"
                                                                                                              (hide-all-but
                                                                                                               (-1
                                                                                                                -4)
                                                                                                               -)
                                                                                                              (("2"
                                                                                                                (grind)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (expand
                                                                                                       "walk_from?"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (hide-all-but
                                                                                                         (-14
                                                                                                          -15
                                                                                                          -16)
                                                                                                         -)
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (expand
                                                                                               min)
                                                                                              (("2"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (reveal
                                                                                     -2)
                                                                                    (("2"
                                                                                      (hide-all-but
                                                                                       (-1
                                                                                        -10
                                                                                        -11
                                                                                        -12)
                                                                                       -)
                                                                                      (("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide
                                                                                   2)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "^"
                                                                                     1)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (expand
                                                                                         min)
                                                                                        (("2"
                                                                                          (typepred
                                                                                           i!1)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((T formal-type-decl nil cycle_deg nil)
    (conn_eq_path formula-decl nil graph_connected nil)
    (nil application-judgement "finite_set[T]" cycle_deg nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences nil)
    (edge? const-decl "bool" graphs nil) (walk? const-decl "bool" walks nil)
    (walk_from? const-decl "bool" walks nil)
    (member const-decl "bool" sets nil) (empty? const-decl "bool" sets nil)
    (empty? const-decl "bool" graphs nil)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (Seq type-eq-decl nil walks nil) (verts_in? const-decl "bool" walks nil)
    (prewalk type-eq-decl nil walks nil) (> const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (walk_merge formula-decl nil walks nil)
    (G!1 skolem-const-decl "graph[T]" cycle_deg nil)
    (x!1 skolem-const-decl "(vert(G!1))" cycle_deg nil)
    (p!1 skolem-const-decl "prewalk[T]" cycle_deg nil)
    (nil application-judgement "finite_set[T]" graph_conn_piece nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (p!2 skolem-const-decl "prewalk[T]" cycle_deg nil)
    (i!1 skolem-const-decl "below(length(p!1))" cycle_deg nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (walk?_caret formula-decl nil walks nil)
    (^ const-decl "finseq" finite_sequences nil)
    (nat_min application-judgement "{k: nat | k <= i AND k <= j}" real_defs
     nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (int_min application-judgement "{k: int | k <= i AND k <= j}" real_defs
     nil)
    (p!2 skolem-const-decl "prewalk[T]" cycle_deg nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (p!2 skolem-const-decl "prewalk[T]" cycle_deg nil)
    (n!1 skolem-const-decl "nat" cycle_deg nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (Walk type-eq-decl nil walks nil)
    (walk?_reverse formula-decl nil walks nil)
    (path_connected? const-decl "bool" graph_conn_defs nil)
    (reachable const-decl "finite_set[T]" cycle_deg nil)
    (is_finite const-decl "bool" finite_sets nil)
    (subgraph const-decl "Subgraph(G)" subgraphs nil)
    (Subgraph type-eq-decl nil subgraphs nil)
    (subgraph? const-decl "bool" subgraphs nil)
    (graph type-eq-decl nil graphs nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (pregraph type-eq-decl nil graphs nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (doubleton type-eq-decl nil doubletons structures)
    (dbl const-decl "set[T]" doubletons structures)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (/= const-decl "boolean" notequal nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   nil)
  (reachable_conn-4 nil 3559570741
   ("" (skosimp*)
    (("" (lemma "conn_eq_path")
      (("" (inst -1 "subgraph(G!1, reachable(G!1, x!1))")
        (("" (iff -1)
          (("" (bddsimp)
            (("" (hide 1)
              (("" (expand "path_connected?")
                (("" (bddsimp)
                  (("1" (install-rewrites "subgraphs")
                    (("1" (assert)
                      (("1" (inst -1 "x!1")
                        (("1" (bddsimp)
                          (("1"
                            (inst 1
                             "(#l := 1, seq :=(LAMBDA (i:below(1)): x!1)#)")
                            (("1" (assert) nil)))
                           ("2" (typepred "x!1") (("2" (propax) nil)))))))))))
                   ("2" (skosimp*)
                    (("2" (typepred "x!2")
                      (("2" (typepred "y!1")
                        (("2" (expand "subgraph" -)
                          (("2" (flatten)
                            (("2" (expand "reachable" -)
                              (("2" (bddsimp)
                                (("2" (skosimp*)
                                  (("2" (lemma "walk?_reverse")
                                    (("2" (inst-cp -1 "G!1" "x!1" "y!1" "w!1")
                                      (("2"
                                        (inst -1 "G!1" "x!1" "x!2" "w!2")
                                        (("2"
                                          (bddsimp)
                                          (("2"
                                            (skosimp*)
                                            (("2"
                                              (lemma "walk_merge")
                                              (("2"
                                                (inst
                                                 -1
                                                 "G!1"
                                                 "w!4"
                                                 "w!3"
                                                 "x!2"
                                                 "y!1"
                                                 "x!1")
                                                (("2"
                                                  (bddsimp)
                                                  (("2"
                                                    (skosimp*)
                                                    (("2"
                                                      (inst 1 "p!1")
                                                      (("1"
                                                        (install-rewrites
                                                         "walks")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (bddsimp)
                                                            nil)))))
                                                       ("2"
                                                        (assert)
                                                        (("2"
                                                          (install-rewrites
                                                           "walks")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (skosimp*)
                                                              (("2"
                                                                (bddsimp)
                                                                (("1"
                                                                  (skosimp*)
                                                                  (("1"
                                                                    (bddsimp)
                                                                    (("1"
                                                                      (typepred
                                                                       "p!1")
                                                                      (("1"
                                                                        (inst
                                                                         -11
                                                                         "n!1")
                                                                        (("1"
                                                                          (bddsimp)
                                                                          nil)))))
                                                                     ("2"
                                                                      (skosimp*)
                                                                      (("2"
                                                                        (inst-cp
                                                                         -9
                                                                         "n!1")
                                                                        (("1"
                                                                          (inst
                                                                           -9
                                                                           "1+n!1")
                                                                          (("1"
                                                                            (hide
                                                                             -3
                                                                             -4
                                                                             -5
                                                                             -6)
                                                                            (("1"
                                                                              (bddsimp
                                                                               (-2
                                                                                -5
                                                                                -6
                                                                                1))
                                                                              (("1"
                                                                                (hide
                                                                                 -8
                                                                                 -9
                                                                                 -11
                                                                                 -12)
                                                                                (("1"
                                                                                  (reveal
                                                                                   -10
                                                                                   -11)
                                                                                  (("1"
                                                                                    (reveal
                                                                                     (-1
                                                                                      -2
                                                                                      -7
                                                                                      -8))
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "walk?_caret")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -1
                                                                                         "G!1"
                                                                                         "0"
                                                                                         "n!1"
                                                                                         "p!1")
                                                                                        (("1"
                                                                                          (stop-rewrite)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (case
                                                                                               "walk?(G!1,p!1)")
                                                                                              (("1"
                                                                                                (bddsimp)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -8
                                                                                                   "G!1"
                                                                                                   "x!2"
                                                                                                   "x!3"
                                                                                                   "p!1 ^ (0,  n!1)")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "walk_from?"
                                                                                                     -8)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "^"
                                                                                                       -8
                                                                                                       (1
                                                                                                        2
                                                                                                        3))
                                                                                                      (("1"
                                                                                                        (bddsimp
                                                                                                         (-2
                                                                                                          -8))
                                                                                                        (("1"
                                                                                                          (skosimp*)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -9
                                                                                                             "G!1"
                                                                                                             "w!5"
                                                                                                             "w!2"
                                                                                                             "x!1"
                                                                                                             "x!3"
                                                                                                             "x!2")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "walk_from?"
                                                                                                               -9
                                                                                                               (1
                                                                                                                2))
                                                                                                              (("1"
                                                                                                                (typepred
                                                                                                                 "w!2")
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "walk?(G!1,w!2)")
                                                                                                                  (("1"
                                                                                                                    (bddsimp)
                                                                                                                    (("1"
                                                                                                                      (skosimp*)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         1
                                                                                                                         "p!2")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "walk_from?"
                                                                                                                           -12)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "walk?"
                                                                                                                               -14)
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (hide-all-but
                                                                                                                                   (-4
                                                                                                                                    -7
                                                                                                                                    -12
                                                                                                                                    -13
                                                                                                                                    -14
                                                                                                                                    -15
                                                                                                                                    -25
                                                                                                                                    -26)
                                                                                                                                   -)
                                                                                                                                  (("1"
                                                                                                                                    (grind)
                                                                                                                                    nil)))))))))))
                                                                                                                         ("2"
                                                                                                                          (hide-all-but
                                                                                                                           -12
                                                                                                                           -)
                                                                                                                          (("2"
                                                                                                                            (grind)
                                                                                                                            nil)))))))))
                                                                                                                   ("2"
                                                                                                                    (hide-all-but
                                                                                                                     (-2
                                                                                                                      -7
                                                                                                                      -8
                                                                                                                      -19)
                                                                                                                     -)
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       2)
                                                                                                                      (("2"
                                                                                                                        (install-rewrites
                                                                                                                         "walks")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil)))))))))))))))))))))))))))
                                                                                               ("2"
                                                                                                (reveal
                                                                                                 -10)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   (-16
                                                                                                    -17))
                                                                                                  (("2"
                                                                                                    (hide-all-but
                                                                                                     (-1
                                                                                                      -9
                                                                                                      -12
                                                                                                      -13
                                                                                                      -14
                                                                                                      -15)
                                                                                                     -)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (grind)
                                                                                                          nil)))))))))))))))))))))))))))
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 (-1
                                                                                  -3)
                                                                                 -)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil)))
                                                                               ("3"
                                                                                (reveal
                                                                                 -6
                                                                                 -7)
                                                                                (("3"
                                                                                  (lemma
                                                                                   "walk?_caret")
                                                                                  (("3"
                                                                                    (inst
                                                                                     -1
                                                                                     "G!1"
                                                                                     "0"
                                                                                     "1+n!1"
                                                                                     "p!1")
                                                                                    (("3"
                                                                                      (inst
                                                                                       -3
                                                                                       "G!1"
                                                                                       "x!2"
                                                                                       "x!3"
                                                                                       "p!1 ^ (0, 1 + n!1)")
                                                                                      (("1"
                                                                                        (typepred
                                                                                         "n!1")
                                                                                        (("1"
                                                                                          (bddsimp
                                                                                           (-1
                                                                                            -2
                                                                                            -4
                                                                                            -5
                                                                                            -8))
                                                                                          (("1"
                                                                                            (skosimp*)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -6
                                                                                               "G!1"
                                                                                               "w!5"
                                                                                               "w!2"
                                                                                               "x!1"
                                                                                               "x!3"
                                                                                               "x!2")
                                                                                              (("1"
                                                                                                (hide-all-but
                                                                                                 (-3
                                                                                                  -6
                                                                                                  -12
                                                                                                  -13
                                                                                                  -14)
                                                                                                 -)
                                                                                                (("1"
                                                                                                  (typepred
                                                                                                   "w!2")
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "walk_from?(G!1, w!2, x!1, x!2)")
                                                                                                    (("1"
                                                                                                      (bddsimp
                                                                                                       (-1
                                                                                                        -4
                                                                                                        -5))
                                                                                                      (("1"
                                                                                                        (skosimp*)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           1
                                                                                                           "p!2")
                                                                                                          (("1"
                                                                                                            (hide-all-but
                                                                                                             -3
                                                                                                             -)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (grind)
                                                                                                                nil)))))
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             -3
                                                                                                             -)
                                                                                                            (("2"
                                                                                                              (grind)
                                                                                                              nil)))))))))
                                                                                                     ("2"
                                                                                                      (hide-all-but
                                                                                                       (-1
                                                                                                        -2
                                                                                                        -5
                                                                                                        -6
                                                                                                        -7)
                                                                                                       -)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil)))))))))))))))))
                                                                                           ("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (hide
                                                                                               (-5
                                                                                                -11
                                                                                                -12
                                                                                                -13
                                                                                                -14
                                                                                                -15
                                                                                                -16
                                                                                                -17
                                                                                                -18))
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (bddsimp)
                                                                                                  (("1"
                                                                                                    (grind)
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (grind)
                                                                                                    nil)))))))))
                                                                                           ("3"
                                                                                            (hide
                                                                                             2)
                                                                                            (("3"
                                                                                              (hide
                                                                                               -2
                                                                                               -5
                                                                                               -11
                                                                                               -12
                                                                                               -13
                                                                                               -14
                                                                                               -15
                                                                                               -16)
                                                                                              (("3"
                                                                                                (assert)
                                                                                                (("3"
                                                                                                  (bddsimp)
                                                                                                  (("3"
                                                                                                    (typepred
                                                                                                     "p!1")
                                                                                                    (("3"
                                                                                                      (reveal
                                                                                                       -13)
                                                                                                      (("3"
                                                                                                        (propax)
                                                                                                        nil)))))))))))))
                                                                                           ("4"
                                                                                            (hide
                                                                                             -4
                                                                                             -12
                                                                                             -15
                                                                                             3)
                                                                                            (("4"
                                                                                              (reveal
                                                                                               -8)
                                                                                              (("4"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("4"
                                                                                                  (assert)
                                                                                                  (("4"
                                                                                                    (bddsimp)
                                                                                                    nil)))))))))
                                                                                           ("5"
                                                                                            (assert)
                                                                                            nil)
                                                                                           ("6"
                                                                                            (assert)
                                                                                            nil)
                                                                                           ("7"
                                                                                            (assert)
                                                                                            nil)
                                                                                           ("8"
                                                                                            (assert)
                                                                                            nil)))))
                                                                                       ("2"
                                                                                        (hide
                                                                                         -2
                                                                                         -9
                                                                                         -12
                                                                                         -15
                                                                                         2)
                                                                                        (("2"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("2"
                                                                                            (grind)
                                                                                            nil)))))))))))))
                                                                               ("4"
                                                                                (assert
                                                                                 (-1
                                                                                  -2
                                                                                  1))
                                                                                nil)))))
                                                                           ("2"
                                                                            (assert
                                                                             (-1
                                                                              1))
                                                                            nil)))
                                                                         ("2"
                                                                          (assert
                                                                           (-1
                                                                            1))
                                                                          nil)))))
                                                                     ("3"
                                                                      (inst
                                                                       -9
                                                                       "n!1")
                                                                      (("3"
                                                                        (assert)
                                                                        nil)))))))
                                                                 ("2"
                                                                  (skosimp*)
                                                                  (("2"
                                                                    (inst
                                                                     -7
                                                                     "i!1")
                                                                    (("2"
                                                                      (bddsimp)
                                                                      (("2"
                                                                        (lemma
                                                                         "walk?_caret")
                                                                        (("2"
                                                                          (inst
                                                                           -1
                                                                           "G!1"
                                                                           "0"
                                                                           "i!1"
                                                                           "p!1")
                                                                          (("2"
                                                                            (typepred
                                                                             "i!1")
                                                                            (("2"
                                                                              (reveal
                                                                               -4)
                                                                              (("2"
                                                                                (inst
                                                                                 -1
                                                                                 "G!1"
                                                                                 "x!2"
                                                                                 "seq(p!1)(i!1)"
                                                                                 "p!1 ^ (0, i!1)")
                                                                                (("1"
                                                                                  (case
                                                                                   "walk?(G!1,p!1)")
                                                                                  (("1"
                                                                                    (bddsimp
                                                                                     (-1
                                                                                      -3
                                                                                      -4))
                                                                                    (("1"
                                                                                      (expand
                                                                                       "walk_from?"
                                                                                       -4
                                                                                       1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "^"
                                                                                         -4
                                                                                         (1
                                                                                          2))
                                                                                        (("1"
                                                                                          (expand
                                                                                           "^"
                                                                                           -4
                                                                                           1)
                                                                                          (("1"
                                                                                            (bddsimp
                                                                                             (-3
                                                                                              -4
                                                                                              -10))
                                                                                            (("1"
                                                                                              (skosimp*)
                                                                                              (("1"
                                                                                                (reveal
                                                                                                 -3)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "G!1"
                                                                                                   "w!5"
                                                                                                   "w!2"
                                                                                                   "x!1"
                                                                                                   "seq(p!1)(i!1)"
                                                                                                   "x!2")
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "walk_from?(G!1, w!2, x!1, x!2)")
                                                                                                    (("1"
                                                                                                      (bddsimp
                                                                                                       (-1
                                                                                                        -2
                                                                                                        -5))
                                                                                                      (("1"
                                                                                                        (skosimp*)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           1
                                                                                                           "p!2")
                                                                                                          (("1"
                                                                                                            (hide-all-but
                                                                                                             -3
                                                                                                             -)
                                                                                                            (("1"
                                                                                                              (grind)
                                                                                                              nil)))
                                                                                                           ("2"
                                                                                                            (typepred
                                                                                                             "p!2")
                                                                                                            (("2"
                                                                                                              (hide-all-but
                                                                                                               (-1
                                                                                                                -4)
                                                                                                               -)
                                                                                                              (("2"
                                                                                                                (grind)
                                                                                                                nil)))))))))))
                                                                                                     ("2"
                                                                                                      (expand
                                                                                                       "walk_from?"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (hide-all-but
                                                                                                         (-14
                                                                                                          -15
                                                                                                          -16)
                                                                                                         -)
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil)))))))))))))))))))))))
                                                                                     ("2"
                                                                                      (grind)
                                                                                      nil)))
                                                                                   ("2"
                                                                                    (reveal
                                                                                     -2)
                                                                                    (("2"
                                                                                      (hide-all-but
                                                                                       (-1
                                                                                        -10
                                                                                        -11
                                                                                        -12)
                                                                                       -)
                                                                                      (("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (grind)
                                                                                          nil)))))))))
                                                                                 ("2"
                                                                                  (hide
                                                                                   2)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "^"
                                                                                     1)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
    nil)
   nil nil)
  (reachable_conn-3 nil 3559570524
   ("" (skosimp*)
    (("" (lemma "conn_eq_path")
      (("" (inst -1 "subgraph(G!1, reachable(G!1, x!1))")
        (("" (iff -1)
          (("" (bddsimp)
            (("" (hide 1)
              (("" (expand "path_connected?")
                (("" (bddsimp)
                  (("1" (install-rewrites "subgraphs")
                    (("1" (assert)
                      (("1" (inst -1 "x!1")
                        (("1" (bddsimp)
                          (("1"
                            (inst 1
                             "(#l := 1, seq :=(LAMBDA (i:below(1)): x!1)#)")
                            (("1" (assert) nil)))
                           ("2" (typepred "x!1") (("2" (propax) nil)))))))))))
                   ("2" (skosimp*)
                    (("2" (typepred "x!2")
                      (("2" (typepred "y!1")
                        (("2" (expand "subgraph" -)
                          (("2" (flatten)
                            (("2" (expand "reachable" -)
                              (("2" (bddsimp)
                                (("2" (skosimp*)
                                  (("2" (lemma "walk?_reverse")
                                    (("2" (inst-cp -1 "G!1" "x!1" "y!1" "w!1")
                                      (("2"
                                        (inst -1 "G!1" "x!1" "x!2" "w!2")
                                        (("2"
                                          (bddsimp)
                                          (("2"
                                            (skosimp*)
                                            (("2"
                                              (lemma "walk_merge")
                                              (("2"
                                                (inst
                                                 -1
                                                 "G!1"
                                                 "w!4"
                                                 "w!3"
                                                 "x!2"
                                                 "y!1"
                                                 "x!1")
                                                (("2"
                                                  (bddsimp)
                                                  (("2"
                                                    (skosimp*)
                                                    (("2"
                                                      (inst 1 "p!1")
                                                      (("1"
                                                        (install-rewrites
                                                         "walks")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (bddsimp)
                                                            nil)))))
                                                       ("2"
                                                        (assert)
                                                        (("2"
                                                          (install-rewrites
                                                           "walks")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (skosimp*)
                                                              (("2"
                                                                (bddsimp)
                                                                (("1"
                                                                  (skosimp*)
                                                                  (("1"
                                                                    (bddsimp)
                                                                    (("1"
                                                                      (typepred
                                                                       "p!1")
                                                                      (("1"
                                                                        (inst
                                                                         -11
                                                                         "n!1")
                                                                        (("1"
                                                                          (bddsimp)
                                                                          nil)))))
                                                                     ("2"
                                                                      (skosimp*)
                                                                      (("2"
                                                                        (inst-cp
                                                                         -9
                                                                         "n!1")
                                                                        (("1"
                                                                          (inst
                                                                           -9
                                                                           "1+n!1")
                                                                          (("1"
                                                                            (hide
                                                                             -3
                                                                             -4
                                                                             -5
                                                                             -6)
                                                                            (("1"
                                                                              (bddsimp
                                                                               (-2
                                                                                -5
                                                                                -6
                                                                                1))
                                                                              (("1"
                                                                                (hide
                                                                                 -8
                                                                                 -9
                                                                                 -11
                                                                                 -12)
                                                                                (("1"
                                                                                  (reveal
                                                                                   -10
                                                                                   -11)
                                                                                  (("1"
                                                                                    (reveal
                                                                                     (-1
                                                                                      -2
                                                                                      -7
                                                                                      -8))
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "walk?_caret")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -1
                                                                                         "G!1"
                                                                                         "0"
                                                                                         "n!1"
                                                                                         "p!1")
                                                                                        (("1"
                                                                                          (stop-rewrite)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (case
                                                                                               "walk?(G!1,p!1)")
                                                                                              (("1"
                                                                                                (bddsimp)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -8
                                                                                                   "G!1"
                                                                                                   "x!2"
                                                                                                   "x!3"
                                                                                                   "p!1 ^ (0,  n!1)")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "walk_from?"
                                                                                                     -8)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "^"
                                                                                                       -8
                                                                                                       (1
                                                                                                        2
                                                                                                        3))
                                                                                                      (("1"
                                                                                                        (expand*
                                                                                                         min
                                                                                                         empty_seq)
                                                                                                        (("1"
                                                                                                          (bddsimp
                                                                                                           (-2
                                                                                                            -8))
                                                                                                          (("1"
                                                                                                            (skosimp*)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -9
                                                                                                               "G!1"
                                                                                                               "w!5"
                                                                                                               "w!2"
                                                                                                               "x!1"
                                                                                                               "x!3"
                                                                                                               "x!2")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "walk_from?"
                                                                                                                 -9
                                                                                                                 (1
                                                                                                                  2))
                                                                                                                (("1"
                                                                                                                  (typepred
                                                                                                                   "w!2")
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "walk?(G!1,w!2)")
                                                                                                                    (("1"
                                                                                                                      (bddsimp)
                                                                                                                      (("1"
                                                                                                                        (skosimp*)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           1
                                                                                                                           "p!2")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "walk_from?"
                                                                                                                             -12)
                                                                                                                            (("1"
                                                                                                                              (flatten)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "walk?"
                                                                                                                                 -14)
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (hide-all-but
                                                                                                                                     (-4
                                                                                                                                      -7
                                                                                                                                      -12
                                                                                                                                      -13
                                                                                                                                      -14
                                                                                                                                      -15
                                                                                                                                      -25
                                                                                                                                      -26)
                                                                                                                                     -)
                                                                                                                                    (("1"
                                                                                                                                      (grind)
                                                                                                                                      nil)))))))))))
                                                                                                                           ("2"
                                                                                                                            (hide-all-but
                                                                                                                             -12
                                                                                                                             -)
                                                                                                                            (("2"
                                                                                                                              (grind)
                                                                                                                              nil)))))))))
                                                                                                                     ("2"
                                                                                                                      (hide-all-but
                                                                                                                       (-2
                                                                                                                        -7
                                                                                                                        -8
                                                                                                                        -19)
                                                                                                                       -)
                                                                                                                      (("2"
                                                                                                                        (hide
                                                                                                                         2)
                                                                                                                        (("2"
                                                                                                                          (install-rewrites
                                                                                                                           "walks")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil)))))))))))))))))))))))))))))
                                                                                               ("2"
                                                                                                (reveal
                                                                                                 -10)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   (-16
                                                                                                    -17))
                                                                                                  (("2"
                                                                                                    (hide-all-but
                                                                                                     (-1
                                                                                                      -9
                                                                                                      -12
                                                                                                      -13
                                                                                                      -14
                                                                                                      -15)
                                                                                                     -)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (grind)
                                                                                                          nil)))))))))))))))))))))))))))
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 (-1
                                                                                  -3)
                                                                                 -)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil)))
                                                                               ("3"
                                                                                (reveal
                                                                                 -6
                                                                                 -7)
                                                                                (("3"
                                                                                  (lemma
                                                                                   "walk?_caret")
                                                                                  (("3"
                                                                                    (inst
                                                                                     -1
                                                                                     "G!1"
                                                                                     "0"
                                                                                     "1+n!1"
                                                                                     "p!1")
                                                                                    (("3"
                                                                                      (inst
                                                                                       -3
                                                                                       "G!1"
                                                                                       "x!2"
                                                                                       "x!3"
                                                                                       "p!1 ^ (0, 1 + n!1)")
                                                                                      (("1"
                                                                                        (typepred
                                                                                         "n!1")
                                                                                        (("1"
                                                                                          (bddsimp
                                                                                           (-1
                                                                                            -2
                                                                                            -4
                                                                                            -5
                                                                                            -8))
                                                                                          (("1"
                                                                                            (skosimp*)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -6
                                                                                               "G!1"
                                                                                               "w!5"
                                                                                               "w!2"
                                                                                               "x!1"
                                                                                               "x!3"
                                                                                               "x!2")
                                                                                              (("1"
                                                                                                (hide-all-but
                                                                                                 (-3
                                                                                                  -6
                                                                                                  -12
                                                                                                  -13
                                                                                                  -14)
                                                                                                 -)
                                                                                                (("1"
                                                                                                  (typepred
                                                                                                   "w!2")
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "walk_from?(G!1, w!2, x!1, x!2)")
                                                                                                    (("1"
                                                                                                      (bddsimp
                                                                                                       (-1
                                                                                                        -4
                                                                                                        -5))
                                                                                                      (("1"
                                                                                                        (skosimp*)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           1
                                                                                                           "p!2")
                                                                                                          (("1"
                                                                                                            (hide-all-but
                                                                                                             -3
                                                                                                             -)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (grind)
                                                                                                                nil)))))
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             -3
                                                                                                             -)
                                                                                                            (("2"
                                                                                                              (grind)
                                                                                                              nil)))))))))
                                                                                                     ("2"
                                                                                                      (hide-all-but
                                                                                                       (-1
                                                                                                        -2
                                                                                                        -5
                                                                                                        -6
                                                                                                        -7)
                                                                                                       -)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil)))))))))))))))))
                                                                                           ("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (hide
                                                                                               (-5
                                                                                                -11
                                                                                                -12
                                                                                                -13
                                                                                                -14
                                                                                                -15
                                                                                                -16
                                                                                                -17
                                                                                                -18))
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (bddsimp)
                                                                                                  (("1"
                                                                                                    (grind)
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (grind)
                                                                                                    nil)))))))))
                                                                                           ("3"
                                                                                            (hide
                                                                                             2)
                                                                                            (("3"
                                                                                              (hide
                                                                                               -2
                                                                                               -5
                                                                                               -11
                                                                                               -12
                                                                                               -13
                                                                                               -14
                                                                                               -15
                                                                                               -16)
                                                                                              (("3"
                                                                                                (assert)
                                                                                                (("3"
                                                                                                  (bddsimp)
                                                                                                  (("3"
                                                                                                    (typepred
                                                                                                     "p!1")
                                                                                                    (("3"
                                                                                                      (reveal
                                                                                                       -13)
                                                                                                      (("3"
                                                                                                        (propax)
                                                                                                        nil)))))))))))))
                                                                                           ("4"
                                                                                            (hide
                                                                                             -4
                                                                                             -12
                                                                                             -15
                                                                                             3)
                                                                                            (("4"
                                                                                              (reveal
                                                                                               -8)
                                                                                              (("4"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("4"
                                                                                                  (assert)
                                                                                                  (("4"
                                                                                                    (bddsimp)
                                                                                                    nil)))))))))
                                                                                           ("5"
                                                                                            (assert)
                                                                                            nil)
                                                                                           ("6"
                                                                                            (assert)
                                                                                            nil)
                                                                                           ("7"
                                                                                            (assert)
                                                                                            nil)
                                                                                           ("8"
                                                                                            (assert)
                                                                                            nil)))))
                                                                                       ("2"
                                                                                        (hide
                                                                                         -2
                                                                                         -9
                                                                                         -12
                                                                                         -15
                                                                                         2)
                                                                                        (("2"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("2"
                                                                                            (grind)
                                                                                            nil)))))))))))))
                                                                               ("4"
                                                                                (assert
                                                                                 (-1
                                                                                  -2
                                                                                  1))
                                                                                nil)))))
                                                                           ("2"
                                                                            (assert
                                                                             (-1
                                                                              1))
                                                                            nil)))
                                                                         ("2"
                                                                          (assert
                                                                           (-1
                                                                            1))
                                                                          nil)))))
                                                                     ("3"
                                                                      (inst
                                                                       -9
                                                                       "n!1")
                                                                      (("3"
                                                                        (assert)
                                                                        nil)))))))
                                                                 ("2"
                                                                  (skosimp*)
                                                                  (("2"
                                                                    (inst
                                                                     -7
                                                                     "i!1")
                                                                    (("2"
                                                                      (bddsimp)
                                                                      (("2"
                                                                        (lemma
                                                                         "walk?_caret")
                                                                        (("2"
                                                                          (inst
                                                                           -1
                                                                           "G!1"
                                                                           "0"
                                                                           "i!1"
                                                                           "p!1")
                                                                          (("2"
                                                                            (typepred
                                                                             "i!1")
                                                                            (("2"
                                                                              (reveal
                                                                               -4)
                                                                              (("2"
                                                                                (inst
                                                                                 -1
                                                                                 "G!1"
                                                                                 "x!2"
                                                                                 "seq(p!1)(i!1)"
                                                                                 "p!1 ^ (0, i!1)")
                                                                                (("1"
                                                                                  (case
                                                                                   "walk?(G!1,p!1)")
                                                                                  (("1"
                                                                                    (bddsimp
                                                                                     (-1
                                                                                      -3
                                                                                      -4))
                                                                                    (("1"
                                                                                      (expand
                                                                                       "walk_from?"
                                                                                       -4
                                                                                       1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "^"
                                                                                         -4
                                                                                         (1
                                                                                          2))
                                                                                        (("1"
                                                                                          (expand*
                                                                                           min
                                                                                           empty_seq)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "^"
                                                                                             -4
                                                                                             1)
                                                                                            (("1"
                                                                                              (expand*
                                                                                               min
                                                                                               empty_seq)
                                                                                              (("1"
                                                                                                (bddsimp
                                                                                                 (-3
                                                                                                  -4
                                                                                                  -10))
                                                                                                (("1"
                                                                                                  (skosimp*)
                                                                                                  (("1"
                                                                                                    (reveal
                                                                                                     -3)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "G!1"
                                                                                                       "w!5"
                                                                                                       "w!2"
                                                                                                       "x!1"
                                                                                                       "seq(p!1)(i!1)"
                                                                                                       "x!2")
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "walk_from?(G!1, w!2, x!1, x!2)")
                                                                                                        (("1"
                                                                                                          (bddsimp
                                                                                                           (-1
                                                                                                            -2
                                                                                                            -5))
                                                                                                          (("1"
                                                                                                            (skosimp*)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               1
                                                                                                               "p!2")
                                                                                                              (("1"
                                                                                                                (hide-all-but
                                                                                                                 -3
                                                                                                                 -)
                                                                                                                (("1"
                                                                                                                  (grind)
                                                                                                                  nil)))
                                                                                                               ("2"
                                                                                                                (typepred
                                                                                                                 "p!2")
                                                                                                                (("2"
                                                                                                                  (hide-all-but
                                                                                                                   (-1
                                                                                                                    -4)
                                                                                                                   -)
                                                                                                                  (("2"
                                                                                                                    (grind)
                                                                                                                    nil)))))))))))
                                                                                                         ("2"
                                                                                                          (expand
                                                                                                           "walk_from?"
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (hide-all-but
                                                                                                             (-14
                                                                                                              -15
                                                                                                              -16)
                                                                                                             -)
                                                                                                            (("2"
                                                                                                              (hide
                                                                                                               2)
                                                                                                              (("2"
                                                                                                                (grind)
                                                                                                                nil)))))))))))))))))))))))))))
                                                                                     ("2"
                                                                                      (grind)
                                                                                      nil)))
                                                                                   ("2"
                                                                                    (reveal
                                                                                     -2)
                                                                                    (("2"
                                                                                      (hide-all-but
                                                                                       (-1
                                                                                        -10
                                                                                        -11
                                                                                        -12)
                                                                                       -)
                                                                                      (("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (grind)
                                                                                          nil)))))))))
                                                                                 ("2"
                                                                                  (hide
                                                                                   2)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "^"
                                                                                     1)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
    nil)
   nil nil)
  (reachable_conn-2 nil 3559570298
   ("" (skosimp*)
    (("" (lemma "conn_eq_path")
      (("" (inst -1 "subgraph(G!1, reachable(G!1, x!1))")
        (("" (iff -1)
          (("" (bddsimp)
            (("" (hide 1)
              (("" (expand "path_connected?")
                (("" (bddsimp)
                  (("1" (install-rewrites "subgraphs")
                    (("1" (assert)
                      (("1" (inst -1 "x!1")
                        (("1" (bddsimp)
                          (("1"
                            (inst 1
                             "(#l := 1, seq :=(LAMBDA (i:below(1)): x!1)#)")
                            (("1" (assert) nil)))
                           ("2" (typepred "x!1") (("2" (propax) nil)))))))))))
                   ("2" (skosimp*)
                    (("2" (typepred "x!2")
                      (("2" (typepred "y!1")
                        (("2" (expand "subgraph" -)
                          (("2" (flatten)
                            (("2" (expand "reachable" -)
                              (("2" (bddsimp)
                                (("2" (skosimp*)
                                  (("2" (lemma "walk?_reverse")
                                    (("2" (inst-cp -1 "G!1" "x!1" "y!1" "w!1")
                                      (("2"
                                        (inst -1 "G!1" "x!1" "x!2" "w!2")
                                        (("2"
                                          (bddsimp)
                                          (("2"
                                            (skosimp*)
                                            (("2"
                                              (lemma "walk_merge")
                                              (("2"
                                                (inst
                                                 -1
                                                 "G!1"
                                                 "w!4"
                                                 "w!3"
                                                 "x!2"
                                                 "y!1"
                                                 "x!1")
                                                (("2"
                                                  (bddsimp)
                                                  (("2"
                                                    (skosimp*)
                                                    (("2"
                                                      (inst 1 "p!1")
                                                      (("1"
                                                        (install-rewrites
                                                         "walks")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (bddsimp)
                                                            nil)))))
                                                       ("2"
                                                        (assert)
                                                        (("2"
                                                          (install-rewrites
                                                           "walks")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (skosimp*)
                                                              (("2"
                                                                (bddsimp)
                                                                (("1"
                                                                  (skosimp*)
                                                                  (("1"
                                                                    (bddsimp)
                                                                    (("1"
                                                                      (typepred
                                                                       "p!1")
                                                                      (("1"
                                                                        (inst
                                                                         -11
                                                                         "n!1")
                                                                        (("1"
                                                                          (bddsimp)
                                                                          nil)))))
                                                                     ("2"
                                                                      (skosimp*)
                                                                      (("2"
                                                                        (inst-cp
                                                                         -9
                                                                         "n!1")
                                                                        (("1"
                                                                          (inst
                                                                           -9
                                                                           "1+n!1")
                                                                          (("1"
                                                                            (hide
                                                                             -3
                                                                             -4
                                                                             -5
                                                                             -6)
                                                                            (("1"
                                                                              (bddsimp
                                                                               (-2
                                                                                -5
                                                                                -6
                                                                                1))
                                                                              (("1"
                                                                                (hide
                                                                                 -8
                                                                                 -9
                                                                                 -11
                                                                                 -12)
                                                                                (("1"
                                                                                  (reveal
                                                                                   -10
                                                                                   -11)
                                                                                  (("1"
                                                                                    (reveal
                                                                                     (-1
                                                                                      -2
                                                                                      -7
                                                                                      -8))
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "walk?_caret")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -1
                                                                                         "G!1"
                                                                                         "0"
                                                                                         "n!1"
                                                                                         "p!1")
                                                                                        (("1"
                                                                                          (stop-rewrite)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (case
                                                                                               "walk?(G!1,p!1)")
                                                                                              (("1"
                                                                                                (bddsimp)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -8
                                                                                                   "G!1"
                                                                                                   "x!2"
                                                                                                   "x!3"
                                                                                                   "p!1 ^ (0,  n!1)")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "walk_from?"
                                                                                                     -8)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "^"
                                                                                                       -8
                                                                                                       (1
                                                                                                        2
                                                                                                        3))
                                                                                                      (("1"
                                                                                                        (expand*
                                                                                                         min
                                                                                                         empty_seq)
                                                                                                        (("1"
                                                                                                          (bddsimp
                                                                                                           (-2
                                                                                                            -8))
                                                                                                          (("1"
                                                                                                            (skosimp*)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -9
                                                                                                               "G!1"
                                                                                                               "w!5"
                                                                                                               "w!2"
                                                                                                               "x!1"
                                                                                                               "x!3"
                                                                                                               "x!2")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "walk_from?"
                                                                                                                 -9
                                                                                                                 (1
                                                                                                                  2))
                                                                                                                (("1"
                                                                                                                  (typepred
                                                                                                                   "w!2")
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "walk?(G!1,w!2)")
                                                                                                                    (("1"
                                                                                                                      (bddsimp)
                                                                                                                      (("1"
                                                                                                                        (skosimp*)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           1
                                                                                                                           "p!2")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "walk_from?"
                                                                                                                             -12)
                                                                                                                            (("1"
                                                                                                                              (flatten)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "walk?"
                                                                                                                                 -14)
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (hide-all-but
                                                                                                                                     (-4
                                                                                                                                      -7
                                                                                                                                      -12
                                                                                                                                      -13
                                                                                                                                      -14
                                                                                                                                      -15
                                                                                                                                      -25
                                                                                                                                      -26)
                                                                                                                                     -)
                                                                                                                                    (("1"
                                                                                                                                      (grind)
                                                                                                                                      nil)))))))))))
                                                                                                                           ("2"
                                                                                                                            (hide-all-but
                                                                                                                             -12
                                                                                                                             -)
                                                                                                                            (("2"
                                                                                                                              (grind)
                                                                                                                              nil)))))))))
                                                                                                                     ("2"
                                                                                                                      (hide-all-but
                                                                                                                       (-2
                                                                                                                        -7
                                                                                                                        -8
                                                                                                                        -19)
                                                                                                                       -)
                                                                                                                      (("2"
                                                                                                                        (hide
                                                                                                                         2)
                                                                                                                        (("2"
                                                                                                                          (install-rewrites
                                                                                                                           "walks")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil)))))))))))))))))))))))))))))
                                                                                               ("2"
                                                                                                (reveal
                                                                                                 -10)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   (-16
                                                                                                    -17))
                                                                                                  (("2"
                                                                                                    (hide-all-but
                                                                                                     (-1
                                                                                                      -9
                                                                                                      -12
                                                                                                      -13
                                                                                                      -14
                                                                                                      -15)
                                                                                                     -)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (grind)
                                                                                                          nil)))))))))))))))))))))))))))
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 (-1
                                                                                  -3)
                                                                                 -)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil)))
                                                                               ("3"
                                                                                (reveal
                                                                                 -6
                                                                                 -7)
                                                                                (("3"
                                                                                  (lemma
                                                                                   "walk?_caret")
                                                                                  (("3"
                                                                                    (inst
                                                                                     -1
                                                                                     "G!1"
                                                                                     "0"
                                                                                     "1+n!1"
                                                                                     "p!1")
                                                                                    (("3"
                                                                                      (inst
                                                                                       -3
                                                                                       "G!1"
                                                                                       "x!2"
                                                                                       "x!3"
                                                                                       "p!1 ^ (0, 1 + n!1)")
                                                                                      (("1"
                                                                                        (typepred
                                                                                         "n!1")
                                                                                        (("1"
                                                                                          (bddsimp
                                                                                           (-1
                                                                                            -2
                                                                                            -4
                                                                                            -5
                                                                                            -8))
                                                                                          (("1"
                                                                                            (skosimp*)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -6
                                                                                               "G!1"
                                                                                               "w!5"
                                                                                               "w!2"
                                                                                               "x!1"
                                                                                               "x!3"
                                                                                               "x!2")
                                                                                              (("1"
                                                                                                (hide-all-but
                                                                                                 (-3
                                                                                                  -6
                                                                                                  -12
                                                                                                  -13
                                                                                                  -14)
                                                                                                 -)
                                                                                                (("1"
                                                                                                  (typepred
                                                                                                   "w!2")
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "walk_from?(G!1, w!2, x!1, x!2)")
                                                                                                    (("1"
                                                                                                      (bddsimp
                                                                                                       (-1
                                                                                                        -4
                                                                                                        -5))
                                                                                                      (("1"
                                                                                                        (skosimp*)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           1
                                                                                                           "p!2")
                                                                                                          (("1"
                                                                                                            (hide-all-but
                                                                                                             -3
                                                                                                             -)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (grind)
                                                                                                                nil)))))
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             -3
                                                                                                             -)
                                                                                                            (("2"
                                                                                                              (grind)
                                                                                                              nil)))))))))
                                                                                                     ("2"
                                                                                                      (hide-all-but
                                                                                                       (-1
                                                                                                        -2
                                                                                                        -5
                                                                                                        -6
                                                                                                        -7)
                                                                                                       -)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil)))))))))))))))))
                                                                                           ("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (hide
                                                                                               (-5
                                                                                                -11
                                                                                                -12
                                                                                                -13
                                                                                                -14
                                                                                                -15
                                                                                                -16
                                                                                                -17
                                                                                                -18))
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (bddsimp)
                                                                                                  (("1"
                                                                                                    (grind)
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (grind)
                                                                                                    nil)))))))))
                                                                                           ("3"
                                                                                            (hide
                                                                                             2)
                                                                                            (("3"
                                                                                              (hide
                                                                                               -2
                                                                                               -5
                                                                                               -11
                                                                                               -12
                                                                                               -13
                                                                                               -14
                                                                                               -15
                                                                                               -16)
                                                                                              (("3"
                                                                                                (assert)
                                                                                                (("3"
                                                                                                  (bddsimp)
                                                                                                  (("3"
                                                                                                    (typepred
                                                                                                     "p!1")
                                                                                                    (("3"
                                                                                                      (reveal
                                                                                                       -13)
                                                                                                      (("3"
                                                                                                        (propax)
                                                                                                        nil)))))))))))))
                                                                                           ("4"
                                                                                            (hide
                                                                                             -4
                                                                                             -12
                                                                                             -15
                                                                                             3)
                                                                                            (("4"
                                                                                              (reveal
                                                                                               -8)
                                                                                              (("4"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("4"
                                                                                                  (assert)
                                                                                                  (("4"
                                                                                                    (bddsimp)
                                                                                                    nil)))))))))
                                                                                           ("5"
                                                                                            (assert)
                                                                                            nil)
                                                                                           ("6"
                                                                                            (assert)
                                                                                            nil)
                                                                                           ("7"
                                                                                            (assert)
                                                                                            nil)
                                                                                           ("8"
                                                                                            (assert)
                                                                                            nil)))))
                                                                                       ("2"
                                                                                        (hide
                                                                                         -2
                                                                                         -9
                                                                                         -12
                                                                                         -15
                                                                                         2)
                                                                                        (("2"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("2"
                                                                                            (grind)
                                                                                            nil)))))))))))))
                                                                               ("4"
                                                                                (assert
                                                                                 (-1
                                                                                  -2
                                                                                  1))
                                                                                nil)))))
                                                                           ("2"
                                                                            (assert
                                                                             (-1
                                                                              1))
                                                                            nil)))
                                                                         ("2"
                                                                          (assert
                                                                           (-1
                                                                            1))
                                                                          nil)))))
                                                                     ("3"
                                                                      (inst
                                                                       -9
                                                                       "n!1")
                                                                      (("3"
                                                                        (assert)
                                                                        nil)))))))
                                                                 ("2"
                                                                  (skosimp*)
                                                                  (("2"
                                                                    (inst
                                                                     -7
                                                                     "i!1")
                                                                    (("2"
                                                                      (bddsimp)
                                                                      (("2"
                                                                        (lemma
                                                                         "walk?_caret")
                                                                        (("2"
                                                                          (inst
                                                                           -1
                                                                           "G!1"
                                                                           "0"
                                                                           "i!1"
                                                                           "p!1")
                                                                          (("2"
                                                                            (typepred
                                                                             "i!1")
                                                                            (("2"
                                                                              (reveal
                                                                               -4)
                                                                              (("2"
                                                                                (inst
                                                                                 -1
                                                                                 "G!1"
                                                                                 "x!2"
                                                                                 "seq(p!1)(i!1)"
                                                                                 "p!1 ^ (0, i!1)")
                                                                                (("1"
                                                                                  (case
                                                                                   "walk?(G!1,p!1)")
                                                                                  (("1"
                                                                                    (bddsimp
                                                                                     (-1
                                                                                      -3
                                                                                      -4))
                                                                                    (("1"
                                                                                      (expand
                                                                                       "walk_from?"
                                                                                       -4
                                                                                       1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "^"
                                                                                         -4
                                                                                         (1
                                                                                          2))
                                                                                        (("1"
                                                                                          (expand*
                                                                                           min
                                                                                           empty_seq)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "^"
                                                                                             -4
                                                                                             1)
                                                                                            (("1"
                                                                                              (expand*
                                                                                               min
                                                                                               empty_seq)
                                                                                              (("1"
                                                                                                (bddsimp
                                                                                                 (-3
                                                                                                  -4
                                                                                                  -10))
                                                                                                (("1"
                                                                                                  (skosimp*)
                                                                                                  (("1"
                                                                                                    (reveal
                                                                                                     -3)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "G!1"
                                                                                                       "w!5"
                                                                                                       "w!2"
                                                                                                       "x!1"
                                                                                                       "seq(p!1)(i!1)"
                                                                                                       "x!2")
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "walk_from?(G!1, w!2, x!1, x!2)")
                                                                                                        (("1"
                                                                                                          (bddsimp
                                                                                                           (-1
                                                                                                            -2
                                                                                                            -5))
                                                                                                          (("1"
                                                                                                            (skosimp*)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               1
                                                                                                               "p!2")
                                                                                                              (("1"
                                                                                                                (hide-all-but
                                                                                                                 -3
                                                                                                                 -)
                                                                                                                (("1"
                                                                                                                  (grind)
                                                                                                                  nil)))
                                                                                                               ("2"
                                                                                                                (typepred
                                                                                                                 "p!2")
                                                                                                                (("2"
                                                                                                                  (hide-all-but
                                                                                                                   (-1
                                                                                                                    -4)
                                                                                                                   -)
                                                                                                                  (("2"
                                                                                                                    (grind)
                                                                                                                    nil)))))))))))
                                                                                                         ("2"
                                                                                                          (expand
                                                                                                           "walk_from?"
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (hide-all-but
                                                                                                             (-14
                                                                                                              -15
                                                                                                              -16)
                                                                                                             -)
                                                                                                            (("2"
                                                                                                              (hide
                                                                                                               2)
                                                                                                              (("2"
                                                                                                                (grind)
                                                                                                                nil)))))))))))))))))))))))))))
                                                                                     ("2"
                                                                                      (grind)
                                                                                      nil)))
                                                                                   ("2"
                                                                                    (reveal
                                                                                     -2)
                                                                                    (("2"
                                                                                      (hide-all-but
                                                                                       (-1
                                                                                        -10
                                                                                        -11
                                                                                        -12)
                                                                                       -)
                                                                                      (("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (grind)
                                                                                          nil)))))))))
                                                                                 ("2"
                                                                                  (hide
                                                                                   2)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "^"
                                                                                     1)
                                                                                    (("2"
                                                                                      (expand*
                                                                                       min
                                                                                       empty_seq)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
    nil)
   nil nil)
  (reachable_conn-1 nil 3312285132
   ("" (skosimp*)
    (("" (lemma "conn_eq_path")
      (("" (inst -1 "subgraph(G!1, reachable(G!1, x!1))")
        (("" (iff -1)
          (("" (bddsimp)
            (("" (hide 1)
              (("" (expand "path_connected?")
                (("" (bddsimp)
                  (("1" (install-rewrites "subgraphs")
                    (("1" (assert)
                      (("1" (inst -1 "x!1")
                        (("1" (bddsimp)
                          (("1"
                            (inst 1
                             "(#l := 1, seq :=(LAMBDA (i:below(1)): x!1)#)")
                            (("1" (assert) nil nil)) nil)
                           ("2" (typepred "x!1") (("2" (propax) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (skosimp*)
                    (("2" (typepred "x!2")
                      (("2" (typepred "y!1")
                        (("2" (expand "subgraph" -)
                          (("2" (flatten)
                            (("2" (expand "reachable" -)
                              (("2" (bddsimp)
                                (("2" (skosimp*)
                                  (("2" (lemma "walk?_reverse")
                                    (("2" (inst-cp -1 "G!1" "x!1" "y!1" "w!1")
                                      (("2"
                                        (inst -1 "G!1" "x!1" "x!2" "w!2")
                                        (("2"
                                          (bddsimp)
                                          (("2"
                                            (skosimp*)
                                            (("2"
                                              (lemma "walk_merge")
                                              (("2"
                                                (inst
                                                 -1
                                                 "G!1"
                                                 "w!4"
                                                 "w!3"
                                                 "x!2"
                                                 "y!1"
                                                 "x!1")
                                                (("2"
                                                  (bddsimp)
                                                  (("2"
                                                    (skosimp*)
                                                    (("2"
                                                      (inst 1 "p!1")
                                                      (("1"
                                                        (install-rewrites
                                                         "walks")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (bddsimp)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (assert)
                                                        (("2"
                                                          (install-rewrites
                                                           "walks")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (skosimp*)
                                                              (("2"
                                                                (bddsimp)
                                                                (("1"
                                                                  (skosimp*)
                                                                  (("1"
                                                                    (bddsimp)
                                                                    (("1"
                                                                      (typepred
                                                                       "p!1")
                                                                      (("1"
                                                                        (inst
                                                                         -11
                                                                         "n!1")
                                                                        (("1"
                                                                          (bddsimp)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (skosimp*)
                                                                      (("2"
                                                                        (inst-cp
                                                                         -9
                                                                         "n!1")
                                                                        (("1"
                                                                          (inst
                                                                           -9
                                                                           "1+n!1")
                                                                          (("1"
                                                                            (hide
                                                                             -3
                                                                             -4
                                                                             -5
                                                                             -6)
                                                                            (("1"
                                                                              (bddsimp
                                                                               (-2
                                                                                -5
                                                                                -6
                                                                                1))
                                                                              (("1"
                                                                                (hide
                                                                                 -8
                                                                                 -9
                                                                                 -11
                                                                                 -12)
                                                                                (("1"
                                                                                  (reveal
                                                                                   -10
                                                                                   -11)
                                                                                  (("1"
                                                                                    (reveal
                                                                                     (-1
                                                                                      -2
                                                                                      -7
                                                                                      -8))
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "walk?_caret")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -1
                                                                                         "G!1"
                                                                                         "0"
                                                                                         "n!1"
                                                                                         "p!1")
                                                                                        (("1"
                                                                                          (stop-rewrite)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (case
                                                                                               "walk?(G!1,p!1)")
                                                                                              (("1"
                                                                                                (bddsimp)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -8
                                                                                                   "G!1"
                                                                                                   "x!2"
                                                                                                   "x!3"
                                                                                                   "p!1 ^ (0,  n!1)")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "walk_from?"
                                                                                                     -8)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "^"
                                                                                                       -8
                                                                                                       (1
                                                                                                        2
                                                                                                        3))
                                                                                                      (("1"
                                                                                                        (bddsimp
                                                                                                         (-2
                                                                                                          -8))
                                                                                                        (("1"
                                                                                                          (skosimp*)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -9
                                                                                                             "G!1"
                                                                                                             "w!5"
                                                                                                             "w!2"
                                                                                                             "x!1"
                                                                                                             "x!3"
                                                                                                             "x!2")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "walk_from?"
                                                                                                               -9
                                                                                                               (1
                                                                                                                2))
                                                                                                              (("1"
                                                                                                                (typepred
                                                                                                                 "w!2")
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "walk?(G!1,w!2)")
                                                                                                                  (("1"
                                                                                                                    (bddsimp)
                                                                                                                    (("1"
                                                                                                                      (skosimp*)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         1
                                                                                                                         "p!2")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "walk_from?"
                                                                                                                           -12)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "walk?"
                                                                                                                               -14)
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (hide-all-but
                                                                                                                                   (-4
                                                                                                                                    -7
                                                                                                                                    -12
                                                                                                                                    -13
                                                                                                                                    -14
                                                                                                                                    -15
                                                                                                                                    -25
                                                                                                                                    -26)
                                                                                                                                   -)
                                                                                                                                  (("1"
                                                                                                                                    (grind)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (hide-all-but
                                                                                                                           -12
                                                                                                                           -)
                                                                                                                          (("2"
                                                                                                                            (grind)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (hide-all-but
                                                                                                                     (-2
                                                                                                                      -7
                                                                                                                      -8
                                                                                                                      -19)
                                                                                                                     -)
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       2)
                                                                                                                      (("2"
                                                                                                                        (install-rewrites
                                                                                                                         "walks")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (reveal
                                                                                                 -10)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   (-16
                                                                                                    -17))
                                                                                                  (("2"
                                                                                                    (hide-all-but
                                                                                                     (-1
                                                                                                      -9
                                                                                                      -12
                                                                                                      -13
                                                                                                      -14
                                                                                                      -15)
                                                                                                     -)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (grind)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 (-1
                                                                                  -3)
                                                                                 -)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (reveal
                                                                                 -6
                                                                                 -7)
                                                                                (("3"
                                                                                  (lemma
                                                                                   "walk?_caret")
                                                                                  (("3"
                                                                                    (inst
                                                                                     -1
                                                                                     "G!1"
                                                                                     "0"
                                                                                     "1+n!1"
                                                                                     "p!1")
                                                                                    (("3"
                                                                                      (inst
                                                                                       -3
                                                                                       "G!1"
                                                                                       "x!2"
                                                                                       "x!3"
                                                                                       "p!1 ^ (0, 1 + n!1)")
                                                                                      (("1"
                                                                                        (typepred
                                                                                         "n!1")
                                                                                        (("1"
                                                                                          (bddsimp
                                                                                           (-1
                                                                                            -2
                                                                                            -4
                                                                                            -5
                                                                                            -8))
                                                                                          (("1"
                                                                                            (skosimp*)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -6
                                                                                               "G!1"
                                                                                               "w!5"
                                                                                               "w!2"
                                                                                               "x!1"
                                                                                               "x!3"
                                                                                               "x!2")
                                                                                              (("1"
                                                                                                (hide-all-but
                                                                                                 (-3
                                                                                                  -6
                                                                                                  -12
                                                                                                  -13
                                                                                                  -14)
                                                                                                 -)
                                                                                                (("1"
                                                                                                  (typepred
                                                                                                   "w!2")
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "walk_from?(G!1, w!2, x!1, x!2)")
                                                                                                    (("1"
                                                                                                      (bddsimp
                                                                                                       (-1
                                                                                                        -4
                                                                                                        -5))
                                                                                                      (("1"
                                                                                                        (skosimp*)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           1
                                                                                                           "p!2")
                                                                                                          (("1"
                                                                                                            (hide-all-but
                                                                                                             -3
                                                                                                             -)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (grind)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             -3
                                                                                                             -)
                                                                                                            (("2"
                                                                                                              (grind)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide-all-but
                                                                                                       (-1
                                                                                                        -2
                                                                                                        -5
                                                                                                        -6
                                                                                                        -7)
                                                                                                       -)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (hide
                                                                                               (-5
                                                                                                -11
                                                                                                -12
                                                                                                -13
                                                                                                -14
                                                                                                -15
                                                                                                -16
                                                                                                -17
                                                                                                -18))
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (bddsimp)
                                                                                                  (("1"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (hide
                                                                                             2)
                                                                                            (("3"
                                                                                              (hide
                                                                                               -2
                                                                                               -5
                                                                                               -11
                                                                                               -12
                                                                                               -13
                                                                                               -14
                                                                                               -15
                                                                                               -16)
                                                                                              (("3"
                                                                                                (assert)
                                                                                                (("3"
                                                                                                  (bddsimp)
                                                                                                  (("3"
                                                                                                    (typepred
                                                                                                     "p!1")
                                                                                                    (("3"
                                                                                                      (reveal
                                                                                                       -13)
                                                                                                      (("3"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("4"
                                                                                            (hide
                                                                                             -4
                                                                                             -12
                                                                                             -15
                                                                                             3)
                                                                                            (("4"
                                                                                              (reveal
                                                                                               -8)
                                                                                              (("4"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("4"
                                                                                                  (assert)
                                                                                                  (("4"
                                                                                                    (bddsimp)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("5"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("6"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("7"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("8"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         -2
                                                                                         -9
                                                                                         -12
                                                                                         -15
                                                                                         2)
                                                                                        (("2"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("2"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("4"
                                                                                (assert
                                                                                 (-1
                                                                                  -2
                                                                                  1))
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert
                                                                             (-1
                                                                              1))
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (assert
                                                                           (-1
                                                                            1))
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (inst
                                                                       -9
                                                                       "n!1")
                                                                      (("3"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (skosimp*)
                                                                  (("2"
                                                                    (inst
                                                                     -7
                                                                     "i!1")
                                                                    (("2"
                                                                      (bddsimp)
                                                                      (("2"
                                                                        (lemma
                                                                         "walk?_caret")
                                                                        (("2"
                                                                          (inst
                                                                           -1
                                                                           "G!1"
                                                                           "0"
                                                                           "i!1"
                                                                           "p!1")
                                                                          (("2"
                                                                            (typepred
                                                                             "i!1")
                                                                            (("2"
                                                                              (reveal
                                                                               -4)
                                                                              (("2"
                                                                                (inst
                                                                                 -1
                                                                                 "G!1"
                                                                                 "x!2"
                                                                                 "seq(p!1)(i!1)"
                                                                                 "p!1 ^ (0, i!1)")
                                                                                (("1"
                                                                                  (case
                                                                                   "walk?(G!1,p!1)")
                                                                                  (("1"
                                                                                    (bddsimp
                                                                                     (-1
                                                                                      -3
                                                                                      -4))
                                                                                    (("1"
                                                                                      (expand
                                                                                       "walk_from?"
                                                                                       -4
                                                                                       1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "^"
                                                                                         -4
                                                                                         (1
                                                                                          2))
                                                                                        (("1"
                                                                                          (expand
                                                                                           "^"
                                                                                           -4
                                                                                           1)
                                                                                          (("1"
                                                                                            (bddsimp
                                                                                             (-3
                                                                                              -4
                                                                                              -10))
                                                                                            (("1"
                                                                                              (skosimp*)
                                                                                              (("1"
                                                                                                (reveal
                                                                                                 -3)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "G!1"
                                                                                                   "w!5"
                                                                                                   "w!2"
                                                                                                   "x!1"
                                                                                                   "seq(p!1)(i!1)"
                                                                                                   "x!2")
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "walk_from?(G!1, w!2, x!1, x!2)")
                                                                                                    (("1"
                                                                                                      (bddsimp
                                                                                                       (-1
                                                                                                        -2
                                                                                                        -5))
                                                                                                      (("1"
                                                                                                        (skosimp*)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           1
                                                                                                           "p!2")
                                                                                                          (("1"
                                                                                                            (hide-all-but
                                                                                                             -3
                                                                                                             -)
                                                                                                            (("1"
                                                                                                              (grind)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (typepred
                                                                                                             "p!2")
                                                                                                            (("2"
                                                                                                              (hide-all-but
                                                                                                               (-1
                                                                                                                -4)
                                                                                                               -)
                                                                                                              (("2"
                                                                                                                (grind)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (expand
                                                                                                       "walk_from?"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (hide-all-but
                                                                                                         (-14
                                                                                                          -15
                                                                                                          -16)
                                                                                                         -)
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (reveal
                                                                                     -2)
                                                                                    (("2"
                                                                                      (hide-all-but
                                                                                       (-1
                                                                                        -10
                                                                                        -11
                                                                                        -12)
                                                                                       -)
                                                                                      (("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide
                                                                                   2)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "^"
                                                                                     1)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((conn_eq_path formula-decl nil graph_connected nil)
    (edge? const-decl "bool" graphs nil) (walk? const-decl "bool" walks nil)
    (walk_from? const-decl "bool" walks nil)
    (empty? const-decl "bool" graphs nil) (Seq type-eq-decl nil walks nil)
    (verts_in? const-decl "bool" walks nil)
    (prewalk type-eq-decl nil walks nil)
    (walk_merge formula-decl nil walks nil)
    (walk?_caret formula-decl nil walks nil) (Walk type-eq-decl nil walks nil)
    (walk?_reverse formula-decl nil walks nil)
    (path_connected? const-decl "bool" graph_conn_defs nil)
    (subgraph const-decl "Subgraph(G)" subgraphs nil)
    (Subgraph type-eq-decl nil subgraphs nil)
    (subgraph? const-decl "bool" subgraphs nil)
    (graph type-eq-decl nil graphs nil) (pregraph type-eq-decl nil graphs nil)
    (doubleton type-eq-decl nil doubletons structures)
    (dbl const-decl "set[T]" doubletons structures))
   nil))
 (conn_compon 0
  (conn_compon-3 nil 3312284893
   ("" (skosimp*)
    (("" (inst 1 "subgraph(G!1,reachable(G!1,x!1))")
      (("" (bddsimp)
        (("1" (skosimp*)
          (("1" (typepred "y!1")
            (("1" (expand "deg")
              (("1"
                (case "incident_edges(y!1, G!1) =
                 incident_edges(y!1, subgraph(G!1, reachable(G!1, x!1)))")
                (("1" (auto-rewrite-theories "finite_sets[doubleton[T]]")
                  (("1" (replace -1 1) (("1" (propax) nil nil)) nil)) nil)
                 ("2" (hide 2)
                  (("2" (expand "incident_edges")
                    (("2" (apply-extensionality 1 :hide? t)
                      (("2" (iff 1)
                        (("2" (bddsimp)
                          (("1" (expand "reachable")
                            (("1" (expand "subgraph")
                              (("1" (bddsimp)
                                (("1" (skosimp*)
                                  (("1" (bddsimp)
                                    (("1" (case "y!1=x!3")
                                      (("1"
                                        (replace -1 1 rl)
                                        (("1" (inst 1 "w!1") nil nil))
                                        nil)
                                       ("2"
                                        (inst 2 "add1(w!1,x!3)")
                                        (("1"
                                          (expand "walk_from?")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (bddsimp)
                                              (("1"
                                                (lemma "walk?_add1")
                                                (("1"
                                                  (inst -1 "G!1" "w!1" "x!3")
                                                  (("1"
                                                    (bddsimp)
                                                    (("1"
                                                      (replace -7 1)
                                                      (("1"
                                                        (hide -1 -6 -7 2)
                                                        (("1"
                                                          (grind)
                                                          (("1"
                                                            (lemma
                                                             "edge_has_2_verts")
                                                            (("1"
                                                              (inst
                                                               -1
                                                               "x!2"
                                                               "x!3"
                                                               "y!1")
                                                              (("1"
                                                                (bddsimp)
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (typepred "G!1")
                                                      (("2"
                                                        (inst -1 "x!2")
                                                        (("2"
                                                          (bddsimp)
                                                          (("2"
                                                            (inst -2 "x!3")
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (assert)
                                                (("2"
                                                  (install-rewrites "walks")
                                                  (("2" (assert) nil nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (assert)
                                                (("3"
                                                  (hide -1 -2 -3 -7)
                                                  (("3" (grind) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand "walk_from?")
                                          (("2"
                                            (bddsimp)
                                            (("2"
                                              (expand "walk?")
                                              (("2"
                                                (expand "verts_in?")
                                                (("2"
                                                  (skosimp*)
                                                  (("2"
                                                    (typepred "i!1")
                                                    (("2"
                                                      (expand "add1" -1)
                                                      (("2"
                                                        (case
                                                         "i!1=length(w!1)")
                                                        (("1"
                                                          (replace -1 1)
                                                          (("1"
                                                            (case
                                                             "seq(add1[T](w!1, x!3))(length(w!1))=x!3")
                                                            (("1"
                                                              (replace -1 1)
                                                              (("1"
                                                                (typepred
                                                                 "G!1")
                                                                (("1"
                                                                  (inst
                                                                   -1
                                                                   "x!2")
                                                                  (("1"
                                                                    (bddsimp)
                                                                    (("1"
                                                                      (inst
                                                                       -2
                                                                       "x!3")
                                                                      (("1"
                                                                        (bddsimp)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide -3 -9 2)
                                                              (("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (inst -8 "i!1-1")
                                                          (("1"
                                                            (bddsimp)
                                                            (("1"
                                                              (assert -8)
                                                              (("1"
                                                                (hide
                                                                 -2
                                                                 -3
                                                                 -4
                                                                 -5
                                                                 -6
                                                                 -7)
                                                                (("1"
                                                                  (typepred
                                                                   "G!1")
                                                                  (("1"
                                                                    (expand
                                                                     "add1")
                                                                    (("1"
                                                                      (prop)
                                                                      (("1"
                                                                        (typepred
                                                                         "w!1")
                                                                        (("1"
                                                                          (expand
                                                                           "verts_in?")
                                                                          (("1"
                                                                            (inst?)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (reveal
                                                                         -1
                                                                         -3)
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "x!2")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (case "i!1=0")
                                                            (("1"
                                                              (replace -1 3)
                                                              (("1"
                                                                (expand
                                                                 "add1")
                                                                (("1"
                                                                  (typepred
                                                                   "w!1")
                                                                  (("1"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (typepred "G!1")
                                      (("2"
                                        (inst? -1)
                                        (("2"
                                          (bddsimp)
                                          (("2"
                                            (inst -2 "x!3")
                                            (("2" (prop) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (install-rewrites "subgraphs[T]")
                            (("2" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (typepred "x!1")
          (("2" (assert)
            (("2" (expand "reachable")
              (("2" (assert)
                (("2" (expand "subgraph")
                  (("2" (inst 1 "gen_seq1(G!1,x!1)")
                    (("2" (install-rewrites "walks[T]")
                      (("2" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("3" (lemma "reachable_conn") (("3" (inst? -1) nil nil)) nil)
         ("4" (install-rewrites "subgraphs[T]")
          (("4" (stop-rewrite)
            (("4" (auto-rewrite-theory "subgraphs[T]")
              (("4" (typepred "x!1")
                (("4" (assert)
                  (("4" (bddsimp)
                    (("1" (install-rewrites "finite_sets[doubleton[T]]")
                      (("1" (assert) (("1" (grind) nil nil)) nil)) nil)
                     ("2" (assert)
                      (("2" (install-rewrites "finite_sets[T]")
                        (("2" (assert) (("2" (grind) nil nil)) nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((T formal-type-decl nil cycle_deg nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (dbl const-decl "set[T]" doubletons structures)
    (doubleton type-eq-decl nil doubletons structures)
    (finite_set type-eq-decl nil finite_sets nil)
    (pregraph type-eq-decl nil graphs nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (graph type-eq-decl nil graphs nil)
    (subgraph? const-decl "bool" subgraphs nil)
    (Subgraph type-eq-decl nil subgraphs nil)
    (subgraph const-decl "Subgraph(G)" subgraphs nil)
    (is_finite const-decl "bool" finite_sets nil)
    (reachable const-decl "finite_set[T]" cycle_deg nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     cycle_deg nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (subset? const-decl "bool" sets nil) (member const-decl "bool" sets nil)
    (reachable_conn formula-decl nil cycle_deg nil)
    (gen_seq1 const-decl "Seq(G)" walks nil)
    (deg const-decl "nat" graph_deg nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil) (prewalk type-eq-decl nil walks nil)
    (verts_in? const-decl "bool" walks nil) (Seq type-eq-decl nil walks nil)
    (walk? const-decl "bool" walks nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (i!1 skolem-const-decl "below(length(add1[T](w!1, x!3)))" cycle_deg nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (below type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (< const-decl "bool" reals nil) (walk_from? const-decl "bool" walks nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (edge? const-decl "bool" graphs nil)
    (nil application-judgement "finite_set[T]" cycle_deg nil)
    (edge_has_2_verts formula-decl nil graphs nil)
    (walk?_add1 formula-decl nil walks nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (G!1 skolem-const-decl "graph[T]" cycle_deg nil)
    (add1 const-decl "prewalk" walks nil)
    (w!1 skolem-const-decl "Seq[T](G!1)" cycle_deg nil)
    (x!3 skolem-const-decl "T" cycle_deg nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences nil)
    (incident_edges const-decl "finite_set[doubleton[T]]" graph_deg nil)
    (NOT const-decl "[bool -> bool]" booleans nil))
   nil)
  (conn_compon-2 nil 3312284858
   ("" (skosimp*)
    (("" (inst 1 "subgraph(G!1,reachable(G!1,x!1))")
      (("" (bddsimp)
        (("1" (skosimp*)
          (("1" (typepred "y!1")
            (("1" (expand "deg")
              (("1"
                (case "incident_edges(y!1, G!1) =
                 incident_edges(y!1, subgraph(G!1, reachable(G!1, x!1)))")
                (("1" (auto-rewrite-theories "finite_sets[doubleton[T]]")
                  (("1" (replace -1 1) (("1" (propax) nil)))))
                 ("2" (hide 2)
                  (("2" (expand "incident_edges")
                    (("2" (apply-extensionality 1 :hide? t)
                      (("2" (iff 1)
                        (("2" (bddsimp)
                          (("1" (expand "reachable")
                            (("1" (expand "subgraph")
                              (("1" (bddsimp)
                                (("1" (skosimp*)
                                  (("1" (bddsimp)
                                    (("1" (case "y!1=x!3")
                                      (("1"
                                        (replace -1 1 rl)
                                        (("1" (inst 1 "w!1") nil)))
                                       ("2"
                                        (inst 2 "add1(w!1,x!3)")
                                        (("1"
                                          (expand "walk_from?")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (bddsimp)
                                              (("1"
                                                (lemma "walk?_add1")
                                                (("1"
                                                  (inst -1 "G!1" "w!1" "x!3")
                                                  (("1"
                                                    (bddsimp)
                                                    (("1"
                                                      (replace -7 1)
                                                      (("1"
                                                        (hide -1 -6 -7 2)
                                                        (("1"
                                                          (grind)
                                                          (("1"
                                                            (lemma
                                                             "edge_has_2_verts")
                                                            (("1"
                                                              (inst
                                                               -1
                                                               "x!2"
                                                               "x!3"
                                                               "y!1")
                                                              (("1"
                                                                (bddsimp)
                                                                (("1"
                                                                  (assert)
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  nil)))))))))))))
                                                     ("2"
                                                      (typepred "G!1")
                                                      (("2"
                                                        (inst -1 "x!2")
                                                        (("2"
                                                          (bddsimp)
                                                          (("2"
                                                            (inst -2 "x!3")
                                                            (("2"
                                                              (assert)
                                                              nil)))))))))))))))
                                               ("2"
                                                (assert)
                                                (("2"
                                                  (install-rewrites "walks")
                                                  (("2" (assert) nil)))))
                                               ("3"
                                                (assert)
                                                (("3"
                                                  (hide -1 -2 -3 -7)
                                                  (("3" (grind) nil)))))))))))
                                         ("2"
                                          (expand "walk_from?")
                                          (("2"
                                            (bddsimp)
                                            (("2"
                                              (expand "walk?")
                                              (("2"
                                                (expand "verts_in?")
                                                (("2"
                                                  (skosimp*)
                                                  (("2"
                                                    (typepred "i!1")
                                                    (("2"
                                                      (expand "add1" -1)
                                                      (("2"
                                                        (case
                                                         "i!1=length(w!1)")
                                                        (("1"
                                                          (replace -1 1)
                                                          (("1"
                                                            (case
                                                             "seq(add1[T](w!1, x!3))(length(w!1))=x!3")
                                                            (("1"
                                                              (replace -1 1)
                                                              (("1"
                                                                (typepred
                                                                 "G!1")
                                                                (("1"
                                                                  (inst
                                                                   -1
                                                                   "x!2")
                                                                  (("1"
                                                                    (bddsimp)
                                                                    (("1"
                                                                      (inst
                                                                       -2
                                                                       "x!3")
                                                                      (("1"
                                                                        (bddsimp)
                                                                        nil)))))))))))
                                                             ("2"
                                                              (hide -3 -9 2)
                                                              (("2"
                                                                (grind)
                                                                nil)))))))
                                                         ("2"
                                                          (inst -8 "i!1-1")
                                                          (("1"
                                                            (bddsimp)
                                                            (("1"
                                                              (assert -8)
                                                              (("1"
                                                                (hide
                                                                 -2
                                                                 -3
                                                                 -4
                                                                 -5
                                                                 -6
                                                                 -7)
                                                                (("1"
                                                                  (typepred
                                                                   "G!1")
                                                                  (("1"
                                                                    (expand
                                                                     "add1")
                                                                    (("1"
                                                                      (prop)
                                                                      (("1"
                                                                        (typepred
                                                                         "w!1")
                                                                        (("1"
                                                                          (expand
                                                                           "verts_in?")
                                                                          (("1"
                                                                            (inst?)
                                                                            nil)))))
                                                                       ("2"
                                                                        (reveal
                                                                         -1
                                                                         -3)
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "x!2")
                                                                          (("2"
                                                                            (assert)
                                                                            nil)))))))))))))))
                                                             ("2"
                                                              (assert)
                                                              nil)))
                                                           ("2"
                                                            (case "i!1=0")
                                                            (("1"
                                                              (replace -1 3)
                                                              (("1"
                                                                (expand
                                                                 "add1")
                                                                (("1"
                                                                  (typepred
                                                                   "w!1")
                                                                  (("1"
                                                                    (grind)
                                                                    nil)))))))
                                                             ("2"
                                                              (assert)
                                                              nil)))))))))))))))))))))))))
                                     ("2" (typepred "G!1")
                                      (("2"
                                        (inst? -1)
                                        (("2"
                                          (bddsimp)
                                          (("2"
                                            (inst -2 "x!3")
                                            (("2"
                                              (prop)
                                              nil)))))))))))))))))))
                           ("2" (install-rewrites "subgraphs[T]")
                            (("2" (assert) nil)))))))))))))))))))))
         ("2" (typepred "x!1")
          (("2" (assert)
            (("2" (expand "reachable")
              (("2" (assert)
                (("2" (expand "subgraph")
                  (("2" (inst 1 "gen_seq1(G!1,x!1)")
                    (("2" (install-rewrites "walks[T]")
                      (("2" (assert) nil)))))))))))))))
         ("3" (lemma "reachable_conn") (("3" (inst? -1) nil)))
         ("4" (install-rewrites "subgraphs[T]")
          (("4" (stop-rewrite)
            (("4" (auto-rewrite-theory "subgraphs[T]")
              (("4" (typepred "x!1")
                (("4" (assert)
                  (("4" (bddsimp)
                    (("1" (install-rewrites "finite_sets[doubleton[T]]")
                      (("1" (assert) (("1" (grind) nil)))))
                     ("2" (assert)
                      (("2" (install-rewrites "finite_sets[T]")
                        (("2" (assert)
                          (("2" (grind) nil))))))))))))))))))))))))
    nil)
   nil nil)
  (conn_compon-1 nil 3312283698
   ("" (skosimp*)
    (("" (inst 1 "subgraph(G!1,reachable(G!1,x!1))")
      (("" (bddsimp)
        (("1" (skosimp*)
          (("1" (typepred "y!1")
            (("1" (expand "deg")
              (("1"
                (case "incident_edges(y!1, G!1) =
                 incident_edges(y!1, subgraph(G!1, reachable(G!1, x!1)))")
                (("1" (auto-rewrite-theories "finite_sets[doubleton[T]]")
                  (("1" (replace -1 1) (("1" (propax) nil)))))
                 ("2" (hide 2)
                  (("2" (expand "incident_edges")
                    (("2" (apply-extensionality 1 :hide? t)
                      (("2" (iff 1)
                        (("2" (bddsimp)
                          (("1" (expand "reachable")
                            (("1" (expand "subgraph")
                              (("1" (bddsimp)
                                (("1" (skosimp*)
                                  (("1" (bddsimp)
                                    (("1" (case "y!1=x!3")
                                      (("1"
                                        (replace -1 1 rl)
                                        (("1" (inst 1 "w!1") nil)))
                                       ("2"
                                        (inst 2 "add1(w!1,x!3)")
                                        (("1"
                                          (expand "walk_from?")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (bddsimp)
                                              (("1"
                                                (lemma "walk?_add1")
                                                (("1"
                                                  (inst -1 "G!1" "w!1" "x!3")
                                                  (("1"
                                                    (bddsimp)
                                                    (("1"
                                                      (replace -7 1)
                                                      (("1"
                                                        (hide -1 -6 -7 2)
                                                        (("1"
                                                          (grind)
                                                          (("1"
                                                            (lemma
                                                             "edge_has_2_verts")
                                                            (("1"
                                                              (inst
                                                               -1
                                                               "x!2"
                                                               "x!3"
                                                               "y!1")
                                                              (("1"
                                                                (bddsimp)
                                                                (("1"
                                                                  (assert)
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  nil)))))))))))))
                                                     ("2"
                                                      (typepred "G!1")
                                                      (("2"
                                                        (inst -1 "x!2")
                                                        (("2"
                                                          (bddsimp)
                                                          (("2"
                                                            (inst -2 "x!3")
                                                            (("2"
                                                              (assert)
                                                              nil)))))))))))))))
                                               ("2"
                                                (assert)
                                                (("2"
                                                  (install-rewrites "walks")
                                                  (("2" (assert) nil)))))
                                               ("3"
                                                (assert)
                                                (("3"
                                                  (hide -1 -2 -3 -7)
                                                  (("3" (grind) nil)))))))))))
                                         ("2"
                                          (expand "walk_from?")
                                          (("2"
                                            (bddsimp)
                                            (("2"
                                              (expand "walk?")
                                              (("2"
                                                (expand "finseq_appl")
                                                (("2"
                                                  (expand "verts_in?")
                                                  (("2"
                                                    (skosimp*)
                                                    (("2"
                                                      (typepred "i!1")
                                                      (("2"
                                                        (expand "add1" -1)
                                                        (("2"
                                                          (case
                                                           "i!1=length(w!1)")
                                                          (("1"
                                                            (replace -1 1)
                                                            (("1"
                                                              (case
                                                               "seq(add1[T](w!1, x!3))(length(w!1))=x!3")
                                                              (("1"
                                                                (replace -1 1)
                                                                (("1"
                                                                  (typepred
                                                                   "G!1")
                                                                  (("1"
                                                                    (inst
                                                                     -1
                                                                     "x!2")
                                                                    (("1"
                                                                      (bddsimp)
                                                                      (("1"
                                                                        (inst
                                                                         -2
                                                                         "x!3")
                                                                        (("1"
                                                                          (bddsimp)
                                                                          nil)))))))))))
                                                               ("2"
                                                                (hide -3 -9 2)
                                                                (("2"
                                                                  (grind)
                                                                  nil)))
                                                               ("3"
                                                                (hide -3 -9 2)
                                                                (("3"
                                                                  (grind)
                                                                  nil)))))))
                                                           ("2"
                                                            (inst -8 "i!1-1")
                                                            (("1"
                                                              (bddsimp)
                                                              (("1"
                                                                (assert -8)
                                                                (("1"
                                                                  (hide
                                                                   -2
                                                                   -3
                                                                   -4
                                                                   -5
                                                                   -6
                                                                   -7)
                                                                  (("1"
                                                                    (typepred
                                                                     "G!1")
                                                                    (("1"
                                                                      (inst
                                                                       -1
                                                                       "dbl[T](seq(w!1)(i!1 - 1), seq(w!1)(i!1))")
                                                                      (("1"
                                                                        (bddsimp)
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "seq(add1[T](w!1, x!3))(i!1)")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (expand
                                                                               "add1")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (hide
                                                                                   -2
                                                                                   3)
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil)))))))))))
                                                                         ("2"
                                                                          (hide
                                                                           3)
                                                                          (("2"
                                                                            (grind)
                                                                            nil)))))
                                                                       ("2"
                                                                        (inst
                                                                         1
                                                                         "seq(w!1)(i!1 - 1)"
                                                                         "seq(w!1)(i!1)")
                                                                        (("1"
                                                                          (bddsimp)
                                                                          (("1"
                                                                            (propax)
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "edge?")
                                                                            (("2"
                                                                              (assert)
                                                                              nil)))))
                                                                         ("2"
                                                                          (assert)
                                                                          nil)
                                                                         ("3"
                                                                          (assert)
                                                                          (("3"
                                                                            (reveal
                                                                             -1)
                                                                            (("3"
                                                                              (case
                                                                               "i!1=0")
                                                                              (("1"
                                                                                (replace
                                                                                 -1
                                                                                 3)
                                                                                (("1"
                                                                                  (expand
                                                                                   "add1")
                                                                                  (("1"
                                                                                    (typepred
                                                                                     "w!1")
                                                                                    (("1"
                                                                                      (hide
                                                                                       -4
                                                                                       -6)
                                                                                      (("1"
                                                                                        (grind)
                                                                                        nil)))))))))
                                                                               ("2"
                                                                                (assert)
                                                                                nil)))))))))
                                                                       ("3"
                                                                        (assert)
                                                                        nil)
                                                                       ("4"
                                                                        (assert)
                                                                        (("4"
                                                                          (case
                                                                           "i!1=0")
                                                                          (("1"
                                                                            (replace
                                                                             -1
                                                                             3)
                                                                            (("1"
                                                                              (expand
                                                                               "add1")
                                                                              (("1"
                                                                                (typepred
                                                                                 "w!1")
                                                                                (("1"
                                                                                  (hide
                                                                                   -5)
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil)))))))))
                                                                           ("2"
                                                                            (assert)
                                                                            nil)))))))))))))
                                                               ("2"
                                                                (assert)
                                                                nil)))
                                                             ("2"
                                                              (case "i!1=0")
                                                              (("1"
                                                                (replace -1 3)
                                                                (("1"
                                                                  (expand
                                                                   "add1")
                                                                  (("1"
                                                                    (typepred
                                                                     "w!1")
                                                                    (("1"
                                                                      (grind)
                                                                      nil)))))))
                                                               ("2"
                                                                (assert)
                                                                nil)))))))))))))))))))))))))))
                                     ("2" (typepred "G!1")
                                      (("2"
                                        (inst? -1)
                                        (("2"
                                          (bddsimp)
                                          (("2"
                                            (inst -2 "x!3")
                                            (("2"
                                              (prop)
                                              nil)))))))))))))))))))
                           ("2" (install-rewrites "subgraphs[T]")
                            (("2" (assert) nil)))))))))))))))))))))
         ("2" (typepred "x!1")
          (("2" (assert)
            (("2" (expand "reachable")
              (("2" (assert)
                (("2" (expand "subgraph")
                  (("2" (inst 1 "gen_seq1(G!1,x!1)")
                    (("2" (install-rewrites "walks[T]")
                      (("2" (assert) nil)))))))))))))))
         ("3" (lemma "reachable_conn") (("3" (inst? -1) nil)))
         ("4" (install-rewrites "subgraphs[T]")
          (("4" (stop-rewrite)
            (("4" (auto-rewrite-theory "subgraphs[T]")
              (("4" (typepred "x!1")
                (("4" (assert)
                  (("4" (bddsimp)
                    (("1" (install-rewrites "finite_sets[doubleton[T]]")
                      (("1" (assert) (("1" (grind) nil)))))
                     ("2" (assert)
                      (("2" (install-rewrites "finite_sets[T]")
                        (("2" (assert)
                          (("2" (grind) nil))))))))))))))))))))))))
    nil)
   nil nil))
 (sub_cycle_TCC1 0
  (sub_cycle_TCC1-2 nil 3312297570
   ("" (skosimp*)
    (("" (typepred "w!1")
      (("" (expand "verts_in?")
        (("" (skosimp*)
          (("" (expand "subgraph?")
            (("" (flatten)
              (("" (hide -5)
                (("" (expand "subset?")
                  (("" (expand "member")
                    (("" (assert)
                      (("" (inst?) (("" (inst?) (("" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Seq type-eq-decl nil walks nil) (verts_in? const-decl "bool" walks nil)
    (graph type-eq-decl nil graphs nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (pregraph type-eq-decl nil graphs nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (doubleton type-eq-decl nil doubletons structures)
    (dbl const-decl "set[T]" doubletons structures)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (/= const-decl "boolean" notequal nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (set type-eq-decl nil sets nil) (prewalk type-eq-decl nil walks nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (T formal-type-decl nil cycle_deg nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (> const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (subset? const-decl "bool" sets nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (member const-decl "bool" sets nil)
    (subgraph? const-decl "bool" subgraphs nil))
   nil
   (sub_cycle subtype "cycle_deg.w" "walks[cycle_deg.T].Seq(cycle_deg.G)"))
  (sub_cycle_TCC1-1 nil 3312285654 ("" (subtype-tcc) nil nil) nil nil
   (sub_cycle subtype "cycle_deg.w" "walks[cycle_deg.T].Seq(cycle_deg.G)")))
 (sub_cycle 0
  (sub_cycle-2 nil 3393153710
   ("" (skosimp*)
    (("" (expand "cycle?")
      (("" (flatten)
        (("" (bddsimp)
          (("1" (assert) nil nil)
           ("2" (inst -4 "1" "length(w!1)-2")
            (("1" (bddsimp)
              (("1" (expand "pre_circuit?")
                (("1" (flatten)
                  (("1" (bddsimp)
                    (("1" (lemma "walk?_subgraph[T]")
                      (("1" (inst -1 "G!1" "H!1" "w!1")
                        (("1" (bddsimp (-1 -2 -3)) (("1" (propax) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (assert) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((cycle? const-decl "bool" cycles nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (walk?_subgraph formula-decl nil subgraph_paths nil)
    (pre_circuit? const-decl "bool" walks nil)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (T formal-type-decl nil cycle_deg nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (> const-decl "bool" reals nil) (prewalk type-eq-decl nil walks nil)
    (set type-eq-decl nil sets nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (dbl const-decl "set[T]" doubletons structures)
    (doubleton type-eq-decl nil doubletons structures)
    (finite_set type-eq-decl nil finite_sets nil)
    (pregraph type-eq-decl nil graphs nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (graph type-eq-decl nil graphs nil)
    (verts_in? const-decl "bool" walks nil)
    (H!1 skolem-const-decl "graph[T]" cycle_deg nil)
    (Seq type-eq-decl nil walks nil)
    (w!1 skolem-const-decl "Seq[T](H!1)" cycle_deg nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil))
   nil)
  (sub_cycle-1 nil 3312297681
   ("" (skosimp*)
    (("" (expand "cycle?")
      (("" (flatten)
        (("" (bddsimp)
          (("1" (assert) nil nil)
           ("2" (inst -4 "1" "length(w!1)-2")
            (("1" (bddsimp)
              (("1" (expand "pre_circuit?")
                (("1" (flatten)
                  (("1" (bddsimp)
                    (("1" (lemma "meng_scaff_defs[T].walk?_subgraph")
                      (("1" (inst -1 "G!1" "H!1" "w!1")
                        (("1" (bddsimp (-1 -2 -3)) (("1" (propax) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (assert) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((pre_circuit? const-decl "bool" walks nil)
    (prewalk type-eq-decl nil walks nil)
    (dbl const-decl "set[T]" doubletons structures)
    (doubleton type-eq-decl nil doubletons structures)
    (pregraph type-eq-decl nil graphs nil) (graph type-eq-decl nil graphs nil)
    (verts_in? const-decl "bool" walks nil) (Seq type-eq-decl nil walks nil))
   nil))
 (uniq_del_vert 0
  (uniq_del_vert-1 nil 3312297467
   ("" (skosimp*)
    (("" (expand "uniq_paths?" 1)
      (("" (skosimp*)
        (("" (lemma "path_ops[T].path?_del_vert")
          (("" (inst -1 "G!1" "v!1" "p!1")
            (("" (reveal -1)
              (("" (inst -1 "G!1" "v!1" "q!1")
                (("" (expand "path_from?" -)
                  (("" (flatten)
                    (("" (bddsimp)
                      (("" (expand "uniq_paths?" -)
                        (("" (inst -5 "s!1" "t!1" "p!1" "q!1")
                          (("" (expand "path_from?" -)
                            (("" (bddsimp) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((uniq_paths? const-decl "bool" cycle_deg nil)
    (T formal-type-decl nil cycle_deg nil)
    (path?_del_vert formula-decl nil path_ops nil)
    (path_from? const-decl "bool" paths nil)
    (prewalk type-eq-decl nil walks nil) (> const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (graph type-eq-decl nil graphs nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (pregraph type-eq-decl nil graphs nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (doubleton type-eq-decl nil doubletons structures)
    (dbl const-decl "set[T]" doubletons structures)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (/= const-decl "boolean" notequal nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   nil))
 (del_edge_uniq 0
  (del_edge_uniq-1 nil 3312297438
   ("" (skosimp*)
    (("" (lemma "graph_connected[T].conn_eq_path")
      (("" (inst -1 "del_edge(G!1, e!1)")
        (("" (iff -1)
          (("" (bddsimp)
            (("" (hide -1)
              (("" (typepred "e!1")
                (("" (skosimp*)
                  (("" (expand "path_connected?" -3)
                    (("" (bddsimp)
                      (("" (inst -3 "x!1" "y!1")
                        (("1" (lemma "path_ops[T].walk_to_path_from")
                          (("1" (skosimp*)
                            (("1"
                              (inst -1 "del_edge(G!1, e!1)" "x!1" "y!1" "w!1")
                              (("1" (typepred "w!1")
                                (("1" (expand "walk_from?" -3)
                                  (("1" (bddsimp (-3 -6 -7))
                                    (("1" (skosimp*)
                                      (("1"
                                        (lemma "walks[T].edge_to_walk")
                                        (("1"
                                          (inst -1 "G!1" "x!1" "y!1")
                                          (("1"
                                            (bddsimp (-1 -8 1))
                                            (("1"
                                              (case
                                               "path_from?(G!1,gen_seq2(G!1, x!1, y!1),x!1,y!1)")
                                              (("1"
                                                (case
                                                 "path_from?(G!1, p!1, x!1, y!1)")
                                                (("1"
                                                  (expand "uniq_paths?" -11)
                                                  (("1"
                                                    (inst
                                                     -11
                                                     "x!1"
                                                     "y!1"
                                                     "p!1"
                                                     "gen_seq2(G!1, x!1, y!1)")
                                                    (("1"
                                                      (bddsimp (-1 -2 -11))
                                                      (("1"
                                                        (hide
                                                         -1
                                                         -2
                                                         -4
                                                         -6
                                                         -7
                                                         -10)
                                                        (("1"
                                                          (typepred "p!1")
                                                          (("1"
                                                            (hide -5)
                                                            (("1"
                                                              (expand
                                                               "path_from?"
                                                               -4)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (expand
                                                                   "path?"
                                                                   -4)
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (hide
                                                                       -5)
                                                                      (("1"
                                                                        (expand
                                                                         "walk?"
                                                                         -4)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (inst
                                                                             -5
                                                                             "0")
                                                                            (("1"
                                                                              (replace
                                                                               -2
                                                                               -5)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (install-rewrites
                                                                                   "walks[T]")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide -1 -2 -4 -5 -7 -8 -10)
                                                  (("2"
                                                    (install-rewrites
                                                     "paths[T]")
                                                    (("2" (grind) nil nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide -3 -4 -5 -6 -7 -9)
                                                (("2"
                                                  (expand "path_from?" 1)
                                                  (("2"
                                                    (expand "path?" 1)
                                                    (("2"
                                                      (bddsimp)
                                                      (("1" (grind) nil nil)
                                                       ("2" (grind) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (replace -7 -1)
                                              (("2"
                                                (hide -2 -3 -4 -5 -6 -8)
                                                (("2" (grind) nil nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (hide-all-but -1 -)
                                              (("3" (grind) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide -3)
                          (("2" (grind)
                            (("2" (typepred "G!1")
                              (("2" (inst? -1)
                                (("2" (bddsimp)
                                  (("2" (inst -2 "y!1")
                                    (("2" (grind) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("3" (lemma "graph_ops[T].vert_del_edge")
                          (("3" (inst? -1)
                            (("3" (typepred "G!1")
                              (("3" (inst -1 "e!1")
                                (("3" (bddsimp)
                                  (("3" (inst -2 "x!1")
                                    (("3" (assert)
                                      (("3"
                                        (replace -3 1)
                                        (("3"
                                          (hide -2 -3 -4 2 4)
                                          (("3" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((T formal-type-decl nil cycle_deg nil)
    (conn_eq_path formula-decl nil graph_connected nil)
    (vert_del_edge formula-decl nil graph_ops nil)
    (walk_to_path_from formula-decl nil path_ops nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil) (prewalk type-eq-decl nil walks nil)
    (walk? const-decl "bool" walks nil) (Walk type-eq-decl nil walks nil)
    (walk_from? const-decl "bool" walks nil)
    (edg const-decl "doubleton[T]" graphs nil)
    (path_from? const-decl "bool" paths nil)
    (verts_in? const-decl "bool" walks nil) (Seq type-eq-decl nil walks nil)
    (gen_seq2 const-decl "Seq(G)" walks nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (< const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (uniq_paths? const-decl "bool" cycle_deg nil)
    (path? const-decl "bool" paths nil)
    (finite_remove application-judgement "finite_set" finite_sets nil)
    (nil application-judgement "finite_set[T]" graph_conn_piece nil)
    (edge? const-decl "bool" graphs nil) (remove const-decl "set" sets nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences nil)
    (empty? const-decl "bool" graphs nil) (empty? const-decl "bool" sets nil)
    (member const-decl "bool" sets nil) (from? const-decl "bool" walks nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil application-judgement "finite_set[T]" cycle_deg nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil) (edge_to_walk formula-decl nil walks nil)
    (y!1 skolem-const-decl "T" cycle_deg nil)
    (G!1 skolem-const-decl "graph[T]" cycle_deg nil)
    (e!1 skolem-const-decl "(edges(G!1))" cycle_deg nil)
    (x!1 skolem-const-decl "T" cycle_deg nil)
    (path_connected? const-decl "bool" graph_conn_defs nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (del_edge const-decl "graph[T]" graph_ops nil)
    (graph type-eq-decl nil graphs nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (pregraph type-eq-decl nil graphs nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (doubleton type-eq-decl nil doubletons structures)
    (dbl const-decl "set[T]" doubletons structures)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (/= const-decl "boolean" notequal nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   nil))
 (charact_tree 0
  (charact_tree-1 nil 3312297339
   ("" (lemma "size_prep")
    ((""
      (inst -1 "LAMBDA G:(connected?(G) AND uniq_paths?(G) IMPLIES tree?(G))")
      (("" (bddsimp)
        (("" (hide 1)
          (("" (induct "n" 1 "nat_induction")
            (("1" (skosimp*)
              (("1" (hide -3 1)
                (("1" (lemma "graph_complected[T].connected_not_empty")
                  (("1" (inst -1 "G!1")
                    (("1" (bddsimp)
                      (("1" (hide -1)
                        (("1" (grind)
                          (("1" (lemma "finite_sets[T].nonempty_card")
                            (("1" (inst -1 "vert(G!1)")
                              (("1" (bddsimp)
                                (("1" (grind) nil nil)
                                 ("2" (expand "nonempty?" 1)
                                  (("2" (expand "empty?" -1)
                                    (("2" (inst -1 "x!1")
                                      (("2"
                                        (expand "member" 1)
                                        (("2" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (skosimp*)
              (("2" (lemma "graph_complected[T].conn_lem3")
                (("2" (inst -1 "G!1")
                  (("2" (bddsimp)
                    (("1" (lemma "graph_complected[T].conn_eq_compl")
                      (("1" (inst? -1)
                        (("1" (bddsimp)
                          (("1" (expand "tree?")
                            (("1" (flatten)
                              (("1" (expand "singleton?")
                                (("1" (expand "size") (("1" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (skosimp*)
                      (("2" (typepred "v!1")
                        (("2" (lemma "graph_complected[T].rev_lem2")
                          (("2" (inst? -1)
                            (("2" (bddsimp)
                              (("2" (lemma "graph_ops[T].size_del_vert")
                                (("2" (inst? -1)
                                  (("2" (lemma "uniq_del_vert")
                                    (("2" (inst? -1)
                                      (("2"
                                        (bddsimp)
                                        (("2"
                                          (inst -8 "del_vert(G!1, v!1)")
                                          (("2"
                                            (replace -9 -3)
                                            (("2"
                                              (assert -3)
                                              (("2"
                                                (bddsimp)
                                                (("2"
                                                  (expand "tree?" 1)
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (inst 2 "v!1")
                                                      (("2" (assert) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("3" (lemma "del_edge_uniq")
                      (("3" (inst? -1)
                        (("3" (skolem! -3)
                          (("3" (inst? -1) (("3" (bddsimp) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (dbl const-decl "set[T]" doubletons structures)
    (doubleton type-eq-decl nil doubletons structures)
    (finite_set type-eq-decl nil finite_sets nil)
    (pregraph type-eq-decl nil graphs nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (graph type-eq-decl nil graphs nil)
    (pred type-eq-decl nil defined_types nil)
    (connected? def-decl "bool" graph_conn_defs nil)
    (uniq_paths? const-decl "bool" cycle_deg nil)
    (tree? def-decl "bool" trees nil)
    (del_edge_uniq formula-decl nil cycle_deg nil)
    (rev_lem2 formula-decl nil graph_complected nil)
    (del_vert const-decl "graph[T]" graph_ops nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (uniq_del_vert formula-decl nil cycle_deg nil)
    (size_del_vert formula-decl nil graph_ops nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (conn_eq_compl formula-decl nil graph_complected nil)
    (singleton? const-decl "bool" graphs nil)
    (conn_lem3 formula-decl nil graph_complected nil)
    (connected_not_empty formula-decl nil graph_complected nil)
    (empty? const-decl "bool" graphs nil) (empty? const-decl "bool" sets nil)
    (member const-decl "bool" sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (nonempty? const-decl "bool" sets nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nonempty_card formula-decl nil finite_sets nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (size const-decl "nat" graphs nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (size_prep formula-decl nil graph_inductions nil)
    (T formal-type-decl nil cycle_deg nil))
   nil))
 (exclus_cycl 0
  (exclus_cycl-1 nil 3312285692
   ("" (skosimp*)
    (("" (expand "XOR")
      (("" (flatten)
        (("" (iff)
          (("" (bddsimp)
            (("1" (skosimp*)
              (("1" (lemma "tree_no_circuits")
                (("1" (inst? -1)
                  (("1" (inst -1 "w!1")
                    (("1" (bddsimp)
                      (("1" (hide -1 -2)
                        (("1" (expand "cycle?")
                          (("1" (flatten)
                            (("1" (install-rewrites "circuits[T]")
                              (("1" (assert)
                                (("1" (bddsimp)
                                  (("1" (skosimp*)
                                    (("1" (typepred "k!1")
                                      (("1"
                                        (inst -7 "k!1-1" "k!1+1")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (flatten)
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (case "length(w!1)=2")
                                    (("1" (replace -1 * lr)
                                      (("1" (assert) nil nil)) nil)
                                     ("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide -1 -2)
                      (("2" (expand "cycle?")
                        (("2" (flatten)
                          (("2" (expand "pre_circuit?")
                            (("2" (flatten) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (case "uniq_paths?(G!1)")
              (("1" (lemma "charact_tree")
                (("1" (inst? -1) (("1" (bddsimp) nil nil)) nil)) nil)
               ("2" (expand "uniq_paths?")
                (("2" (skosimp*)
                  (("2" (hide 2)
                    (("2" (case "tree_paths[T].dual_paths?(G!1,p!1,q!1)")
                      (("1" (lemma "min_dual_exists")
                        (("1" (inst? -1)
                          (("1" (bddsimp (-1 -2))
                            (("1" (hide -1)
                              (("1" (skosimp*)
                                (("1" (lemma "min_dual_distin")
                                  (("1" (inst -1 "G!1" "p!2" "q!2")
                                    (("1" (lemma "dual_cycle")
                                      (("1"
                                        (inst -1 "G!1" "p!2" "q!2")
                                        (("1"
                                          (bddsimp (-2 -3))
                                          (("1"
                                            (expand "is_min_dual?")
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (bddsimp (-1 -3 -4))
                                                (("1"
                                                  (inst
                                                   2
                                                   "trunc1(p!2) o rev(q!2)")
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (lemma
                                           "graph_complected[T].connected_not_empty")
                                          (("2"
                                            (inst -1 "G!1")
                                            (("2"
                                              (bddsimp (-1 -6))
                                              (("2"
                                                (expand "empty?")
                                                (("2"
                                                  (expand "nonempty?")
                                                  (("2" (propax) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (lemma
                                       "graph_complected[T].connected_not_empty")
                                      (("2"
                                        (inst -1 "G!1")
                                        (("2"
                                          (bddsimp (-1 -5))
                                          (("2"
                                            (expand "empty?")
                                            (("2"
                                              (expand "nonempty?")
                                              (("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (typepred "q!1")
                            (("2" (expand "path_from?")
                              (("2" (flatten)
                                (("2" (expand "nonempty?")
                                  (("2" (expand "empty?")
                                    (("2" (expand "member")
                                      (("2"
                                        (expand "path?" -6)
                                        (("2"
                                          (flatten)
                                          (("2"
                                            (expand "walk?")
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (expand "verts_in?")
                                                (("2"
                                                  (inst -6 "0")
                                                  (("2"
                                                    (inst - "seq(q!1)(0)")
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (expand "dual_paths?")
                        (("2" (hide -3 3)
                          (("2" (install-rewrites "paths[T]")
                            (("2" (assert)
                              (("2" (flatten) (("2" (assert) nil nil)) nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("3" (expand "path_from?") (("3" (flatten) nil nil))
                        nil)
                       ("4" (expand "path_from?") (("4" (flatten) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((XOR const-decl "bool" xor_def nil)
    (uniq_paths? const-decl "bool" cycle_deg nil)
    (charact_tree formula-decl nil cycle_deg nil)
    (dual_paths? const-decl "bool" tree_paths nil)
    (Path type-eq-decl nil paths nil) (path? const-decl "bool" paths nil)
    (nonempty? const-decl "bool" sets nil) (Graph type-eq-decl nil graphs nil)
    (min_dual_distin formula-decl nil tree_paths nil)
    (dual_cycle formula-decl nil tree_paths nil)
    (connected_not_empty formula-decl nil graph_complected nil)
    (empty? const-decl "bool" graphs nil)
    (rev const-decl "finseq[T]" doubletons structures)
    (trunc1 const-decl "prewalk" walks nil)
    (Longprewalk type-eq-decl nil walks nil)
    (O const-decl "finseq" finite_sequences nil)
    (is_min_dual? const-decl "bool" tree_paths nil)
    (path_from? const-decl "bool" paths nil)
    (member const-decl "bool" sets nil) (empty? const-decl "bool" sets nil)
    (min_dual_exists formula-decl nil tree_paths nil)
    (from? const-decl "bool" walks nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (dbl const-decl "set[T]" doubletons structures)
    (doubleton type-eq-decl nil doubletons structures)
    (finite_set type-eq-decl nil finite_sets nil)
    (pregraph type-eq-decl nil graphs nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (graph type-eq-decl nil graphs nil) (cycle? const-decl "bool" cycles nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (below type-eq-decl nil naturalnumbers nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (k!1 skolem-const-decl "posnat" cycle_deg nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (< const-decl "bool" reals nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (even_minus_even_is_even application-judgement "even_int" integers nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers nil)
    (endpoint? const-decl "bool" paths nil)
    (circuit? const-decl "bool" circuits nil)
    (pre_circuit? const-decl "bool" walks nil)
    (edge? const-decl "bool" graphs nil)
    (cyclically_reduced? const-decl "bool" circuits nil)
    (reduced? const-decl "bool" circuits nil)
    (reducible? const-decl "bool" circuits nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nil application-judgement "finite_set[T]" graph_conn_piece nil)
    (nil application-judgement "finite_set[T]" cycle_deg nil)
    (Walk type-eq-decl nil walks nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil) (prewalk type-eq-decl nil walks nil)
    (walk? const-decl "bool" walks nil)
    (G!1 skolem-const-decl "graph[T]" cycle_deg nil)
    (verts_in? const-decl "bool" walks nil) (Seq type-eq-decl nil walks nil)
    (w!1 skolem-const-decl "Seq[T](G!1)" cycle_deg nil)
    (tree_no_circuits formula-decl nil tree_circ nil)
    (T formal-type-decl nil cycle_deg nil))
   nil))
 (num_edge_tree 0
  (num_edge_tree-3 "RWB NEW" 3312544218
   ("" (lemma "size_prep[T]")
    ((""
      (inst -1
       "LAMBDA G: (connected?(G) and num_edges(G)<size(G) IMPLIES tree?(G))")
      (("" (assert)
        (("" (ground)
          (("" (hide 2 3)
            (("" (induct "n" 1 "nat_induction")
              (("1" (skosimp*)
                (("1" (hide -3 1)
                  (("1" (lemma "graph_complected[T].connected_not_empty")
                    (("1" (inst -1 "G!1")
                      (("1" (bddsimp)
                        (("1" (hide -1)
                          (("1" (grind)
                            (("1" (lemma "finite_sets[T].nonempty_card")
                              (("1" (inst -1 "vert(G!1)")
                                (("1" (ground) nil nil)) nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (skosimp*)
                (("2" (lemma "graph_complected[T].connect_deg_0")
                  (("2" (case "forall (v:(vert(G!1))):deg(v,G!1)>1")
                    (("1" (lemma "graph_deg_sum[T].deg_gt_one")
                      (("1" (inst -1 "G!1")
                        (("1" (bddsimp (-1 -2))
                          (("1" (assert (-2 -7)) nil nil)) nil))
                        nil))
                      nil)
                     ("2" (skosimp*)
                      (("2" (case "deg(v!1,G!1)=0")
                        (("1" (typepred "v!1")
                          (("1" (inst -3 "G!1" "v!1")
                            (("1" (bddsimp (-1 -2 -3 -6))
                              (("1" (expand "tree?" 2)
                                (("1" (prop)
                                  (("1" (hide -2 -3 -5 -6 -7 1 3)
                                    (("1" (grind)
                                      (("1"
                                        (grind)
                                        (("1"
                                          (expand "singleton" 1)
                                          (("1"
                                            (hide -2)
                                            (("1"
                                              (grind)
                                              (("1"
                                                (lemma
                                                 "finite_sets[T].card_one")
                                                (("1"
                                                  (inst -1 "{y: T | y = v!1}")
                                                  (("1"
                                                    (bddsimp)
                                                    (("1"
                                                      (inst 2 "v!1")
                                                      (("1"
                                                        (grind)
                                                        (("1"
                                                          (hide -1 1)
                                                          (("1"
                                                            (expand
                                                             "singleton"
                                                             1)
                                                            (("1"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (inst
                                                     1
                                                     "1"
                                                     "LAMBDA (y:T): 0")
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (case "deg(v!1,G!1)=1")
                          (("1" (hide -2)
                            (("1" (lemma "graph_complected[T].rev_lem2")
                              (("1" (inst -1 "G!1" "v!1")
                                (("1" (bddsimp (-1 -2 -5))
                                  (("1" (inst -4 "del_vert(G!1, v!1)")
                                    (("1" (lemma "graph_ops[T].size_del_vert")
                                      (("1"
                                        (inst? -1)
                                        (("1"
                                          (replace -6 -1)
                                          (("1"
                                            (assert -1)
                                            (("1"
                                              (bddsimp (-1 -5))
                                              (("1"
                                                (hide -1 -3 -5 -6 -7)
                                                (("1"
                                                  (expand "tree?" 3)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (inst 4 "v!1")
                                                      (("1" (assert) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide -1 -2 -4 -5 2 3)
                                                (("2"
                                                  (hide 2)
                                                  (("2"
                                                    (install-rewrites
                                                     "graph_ops")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (case
                                                         "card[T](remove[T](v!1, vert(G!1)))=card[T](vert(G!1))-1")
                                                        (("1"
                                                          (case-replace
                                                           "{e: doubleton[T] | edges(G!1)(e) AND NOT e(v!1)} = edges(del_vert(G!1,v!1))")
                                                          (("1"
                                                            (case
                                                             "card(edges(del_vert(G!1,v!1)))=card(edges(G!1))-1")
                                                            (("1"
                                                              (expand
                                                               "del_vert")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide -1 -3 2)
                                                              (("2"
                                                                (stop-rewrite
                                                                 "is_finite")
                                                                (("2"
                                                                  (lemma
                                                                   "finite_sets[doubleton[T]].card_one")
                                                                  (("2"
                                                                    (inst
                                                                     -1
                                                                     "incident_edges(v!1, G!1)")
                                                                    (("2"
                                                                      (bddsimp)
                                                                      (("1"
                                                                        (skosimp*)
                                                                        (("1"
                                                                          (expand
                                                                           "incident_edges"
                                                                           -2)
                                                                          (("1"
                                                                            (lemma
                                                                             "finite_sets[doubleton[T]].card_disj_union")
                                                                            (("1"
                                                                              (inst
                                                                               -1
                                                                               "{e: doubleton[T] | edges(G!1)(e) AND e(v!1)}"
                                                                               "{e: doubleton[T] | edges(G!1)(e) AND NOT e(v!1)}")
                                                                              (("1"
                                                                                (bddsimp)
                                                                                (("1"
                                                                                  (expand
                                                                                   "union"
                                                                                   -1)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "member"
                                                                                     -1)
                                                                                    (("1"
                                                                                      (case
                                                                                       "{x: doubleton[T] |
                                                                                                                                                 edges(G!1)(x) AND x(v!1) OR edges(G!1)(x) AND NOT x(v!1)}=edges(G!1)")
                                                                                      (("1"
                                                                                        (replace
                                                                                         -1
                                                                                         -2)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "incident_edges"
                                                                                             -2)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -2
                                                                                               -1)
                                                                                              (("1"
                                                                                                (assert
                                                                                                 (-1
                                                                                                  1))
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         -1
                                                                                         -2
                                                                                         -3
                                                                                         2)
                                                                                        (("2"
                                                                                          (apply-extensionality
                                                                                           1)
                                                                                          (("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (iff
                                                                                               1)
                                                                                              (("2"
                                                                                                (ground)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide
                                                                                   -1
                                                                                   -2
                                                                                   2)
                                                                                  (("2"
                                                                                    (install-rewrites
                                                                                     "finite_sets[doubleton[T]]")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (skosimp*)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 -1
                                                                                 -2
                                                                                 2)
                                                                                (("2"
                                                                                  (lemma
                                                                                   "finite_subset[doubleton[T]]")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "edges(G!1)"
                                                                                     "{e: doubleton[T] | edges(G!1)(e) AND NOT e(v!1)}")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (hide
                                                                                 -1
                                                                                 -2
                                                                                 2)
                                                                                (("3"
                                                                                  (lemma
                                                                                   "finite_subset[doubleton[T]]")
                                                                                  (("3"
                                                                                    (inst
                                                                                     -
                                                                                     "edges(G!1)"
                                                                                     "{e: doubleton[T] | edges(G!1)(e) AND e(v!1)}")
                                                                                    (("3"
                                                                                      (assert)
                                                                                      (("3"
                                                                                        (hide
                                                                                         2)
                                                                                        (("3"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but 1)
                                                            (("2"
                                                              (expand
                                                               "del_vert")
                                                              (("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide -1 -2 2)
                                                          (("2"
                                                            (lemma
                                                             "finite_sets[T].card_remove")
                                                            (("2"
                                                              (inst
                                                               -1
                                                               "vert(G!1)"
                                                               "v!1")
                                                              (("2"
                                                                (typepred
                                                                 "v!1")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide -1 -2 -3 -4 -5 4)
                            (("2" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (dbl const-decl "set[T]" doubletons structures)
    (doubleton type-eq-decl nil doubletons structures)
    (finite_set type-eq-decl nil finite_sets nil)
    (pregraph type-eq-decl nil graphs nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (graph type-eq-decl nil graphs nil)
    (pred type-eq-decl nil defined_types nil)
    (connected? def-decl "bool" graph_conn_defs nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (num_edges const-decl "nat" graph_ops nil)
    (size const-decl "nat" graphs nil) (tree? def-decl "bool" trees nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (nonempty_card formula-decl nil finite_sets nil)
    (nonempty? const-decl "bool" sets nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (is_finite const-decl "bool" finite_sets nil)
    (member const-decl "bool" sets nil) (empty? const-decl "bool" sets nil)
    (empty? const-decl "bool" graphs nil)
    (connected_not_empty formula-decl nil graph_complected nil)
    (connect_deg_0 formula-decl nil graph_complected nil)
    (rev_lem2 formula-decl nil graph_complected nil)
    (size_del_vert formula-decl nil graph_ops nil)
    (finite_remove application-judgement "finite_set" cycle_deg nil)
    (card_remove formula-decl nil finite_sets nil)
    (intersection const-decl "set" sets nil)
    (disjoint? const-decl "bool" sets nil) (union const-decl "set" sets nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (finite_subset formula-decl nil finite_sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (subset? const-decl "bool" sets nil)
    (card_disj_union formula-decl nil finite_sets nil)
    (incident_edges const-decl "finite_set[doubleton[T]]" graph_deg nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (remove const-decl "set" sets nil)
    (card const-decl "{n: nat | n = Card(S)}" finite_sets nil)
    (Card const-decl "nat" finite_sets nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (del_vert const-decl "graph[T]" graph_ops nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (singleton_graph const-decl "(singleton?)" graphs nil)
    (nonempty_singleton_finite application-judgement "non_empty_finite_set"
     cycle_deg nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (G!1 skolem-const-decl "graph[T]" cycle_deg nil)
    (v!1 skolem-const-decl "(vert(G!1))" cycle_deg nil)
    (below type-eq-decl nil nat_types nil)
    (TRUE const-decl "bool" booleans nil)
    (injective? const-decl "bool" functions nil)
    (restrict const-decl "R" restrict nil)
    (card_one formula-decl nil finite_sets nil)
    (deg_gt_one formula-decl nil graph_deg_sum nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (deg const-decl "nat" graph_deg nil) (> const-decl "bool" reals nil)
    (size_prep formula-decl nil graph_inductions nil)
    (T formal-type-decl nil cycle_deg nil))
   shostak)
  (num_edge_tree-2 nil 3312286644
   ("" (lemma "size_prep[T]")
    ((""
      (inst -1
       "LAMBDA G: (connected?(G) and num_edges(G)<size(G) IMPLIES tree?(G))")
      (("" (bddsimp)
        (("1" (assert) nil)
         ("2" (hide 1 3)
          (("2" (induct "n" 1 "nat_induction")
            (("1" (skosimp*)
              (("1" (hide -3 1)
                (("1" (lemma "graph_complected[T].connected_not_empty")
                  (("1" (inst -1 "G!1")
                    (("1" (bddsimp)
                      (("1" (hide -1)
                        (("1" (grind)
                          (("1" (lemma "finite_sets[T].nonempty_card")
                            (("1" (inst -1 "vert(G!1)")
                              (("1" (bddsimp)
                                (("1" (grind) nil)
                                 ("2" (expand "nonempty?" 1)
                                  (("2" (expand "empty?" -1)
                                    (("2" (inst -1 "x!1")
                                      (("2"
                                        (expand "member" 1)
                                        (("2"
                                          (propax)
                                          nil)))))))))))))))))))))))))))))
             ("2" (skosimp*)
              (("2" (lemma "graph_complected[T].connect_deg_0")
                (("2" (case "forall (v:(vert(G!1))):deg(v,G!1)>1")
                  (("1" (lemma "graph_deg_sum[T].deg_gt_one")
                    (("1" (inst -1 "G!1")
                      (("1" (bddsimp (-1 -2))
                        (("1" (assert (-2 -7)) nil)))))))
                   ("2" (skosimp*)
                    (("2" (case "deg(v!1,G!1)=0")
                      (("1" (typepred "v!1")
                        (("1" (inst -3 "G!1" "v!1")
                          (("1" (bddsimp (-1 -2 -3 -6))
                            (("1" (expand "tree?" 2)
                              (("1" (prop)
                                (("1" (hide -2 -3 -5 -6 -7 1 3)
                                  (("1" (grind)
                                    (("1" (grind)
                                      (("1"
                                        (expand "singleton" 1)
                                        (("1"
                                          (hide -2)
                                          (("1"
                                            (grind)
                                            (("1"
                                              (lemma
                                               "finite_sets[T].card_one")
                                              (("1"
                                                (inst -1 "{y: T | y = v!1}")
                                                (("1"
                                                  (bddsimp)
                                                  (("1"
                                                    (inst 2 "v!1")
                                                    (("1"
                                                      (grind)
                                                      (("1"
                                                        (hide -1 1)
                                                        (("1"
                                                          (expand
                                                           "singleton"
                                                           1)
                                                          (("1"
                                                            (propax)
                                                            nil)))))))))))
                                                 ("2"
                                                  (lemma
                                                   "finite_sets[T].card_one")
                                                  (("2"
                                                    (hide -1 -2 2)
                                                    (("2"
                                                      (grind)
                                                      (("2"
                                                        (inst
                                                         1
                                                         "1"
                                                         "LAMBDA (y:T): 0")
                                                        (("2"
                                                          (grind)
                                                          nil)))))))))))))))))))))))))))))))))))
                       ("2" (case "deg(v!1,G!1)=1")
                        (("1" (hide -2)
                          (("1" (lemma "graph_complected[T].rev_lem2")
                            (("1" (inst -1 "G!1" "v!1")
                              (("1" (bddsimp (-1 -2 -5))
                                (("1" (inst -4 "del_vert(G!1, v!1)")
                                  (("1" (lemma "graph_ops[T].size_del_vert")
                                    (("1" (inst? -1)
                                      (("1"
                                        (replace -6 -1)
                                        (("1"
                                          (assert -1)
                                          (("1"
                                            (bddsimp (-1 -5))
                                            (("1"
                                              (hide -1 -3 -5 -6 -7)
                                              (("1"
                                                (expand "tree?" 3)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (inst 4 "v!1")
                                                    (("1"
                                                      (assert)
                                                      nil)))))))))
                                             ("2"
                                              (hide -1 -2 -4 -5 2 3)
                                              (("2"
                                                (hide 2)
                                                (("2"
                                                  (install-rewrites
                                                   "graph_ops")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (case
                                                       "card[T](remove[T](v!1, vert(G!1)))=card[T](vert(G!1))-1")
                                                      (("1"
                                                        (case
                                                         "card({e: doubleton[T] | edges(G!1)(e) AND NOT e(v!1)})=card(edges(G!1))-1")
                                                        (("1" (assert) nil)
                                                         ("2"
                                                          (hide -1 -3 2)
                                                          (("2"
                                                            (grind)
                                                            (("2"
                                                              (lemma
                                                               "finite_sets[doubleton[T]].card_one")
                                                              (("2"
                                                                (inst
                                                                 -1
                                                                 "incident_edges(v!1, G!1)")
                                                                (("2"
                                                                  (bddsimp)
                                                                  (("2"
                                                                    (skosimp*)
                                                                    (("2"
                                                                      (expand
                                                                       "incident_edges"
                                                                       -2)
                                                                      (("2"
                                                                        (lemma
                                                                         "finite_sets[doubleton[T]].card_disj_union")
                                                                        (("2"
                                                                          (inst
                                                                           -1
                                                                           "{e: doubleton[T] | edges(G!1)(e) AND e(v!1)}"
                                                                           "{e: doubleton[T] | edges(G!1)(e) AND NOT e(v!1)}")
                                                                          (("1"
                                                                            (bddsimp)
                                                                            (("1"
                                                                              (expand
                                                                               "union"
                                                                               -1)
                                                                              (("1"
                                                                                (expand
                                                                                 "member"
                                                                                 -1)
                                                                                (("1"
                                                                                  (case
                                                                                   "{x: doubleton[T] |
                                                                    edges(G!1)(x) AND x(v!1) OR edges(G!1)(x) AND NOT x(v!1)}=edges(G!1)")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -1
                                                                                     -2)
                                                                                    (("1"
                                                                                      (hide
                                                                                       -1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "incident_edges"
                                                                                         -2)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -2
                                                                                           -1)
                                                                                          (("1"
                                                                                            (assert
                                                                                             (-1
                                                                                              1))
                                                                                            nil)))))))))
                                                                                   ("2"
                                                                                    (hide
                                                                                     -1
                                                                                     -2
                                                                                     -3
                                                                                     2)
                                                                                    (("2"
                                                                                      (grind)
                                                                                      (("2"
                                                                                        (apply-extensionality
                                                                                         1)
                                                                                        (("2"
                                                                                          (hide
                                                                                           2)
                                                                                          (("2"
                                                                                            (iff
                                                                                             1)
                                                                                            (("2"
                                                                                              (bddsimp)
                                                                                              nil)))))))))))))))))
                                                                             ("2"
                                                                              (hide
                                                                               -1
                                                                               -2
                                                                               2)
                                                                              (("2"
                                                                                (install-rewrites
                                                                                 "finite_sets[doubleton[T]]")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (skosimp*)
                                                                                    nil)))))))))
                                                                           ("2"
                                                                            (lemma
                                                                             "graph_deg[T].incident_edges_TCC1")
                                                                            (("2"
                                                                              (inst
                                                                               -1
                                                                               "G!1"
                                                                               "v!1")
                                                                              (("2"
                                                                                (hide
                                                                                 -2
                                                                                 -3
                                                                                 2)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil)))))))))))))))))))))))))))
                                                       ("2"
                                                        (hide -1 -2 2)
                                                        (("2"
                                                          (grind)
                                                          (("2"
                                                            (lemma
                                                             "finite_sets[T].card_remove")
                                                            (("2"
                                                              (inst
                                                               -1
                                                               "vert(G!1)"
                                                               "v!1")
                                                              (("2"
                                                                (typepred
                                                                 "v!1")
                                                                (("2"
                                                                  (assert)
                                                                  nil)))))))))))))))))))))
                                             ("3"
                                              (propax)
                                              nil)))))))))))))))))))))
                         ("2" (hide -1 -2 -3 -4 -5 4)
                          (("2" (assert) nil))))))))))))))))))))))))
    nil)
   nil nil)
  (num_edge_tree-1 nil 3312286544
   ("" (lemma "size_prep")
    ((""
      (inst -1
       "LAMBDA G: (connected?(G) and num_edges(G)<size(G) IMPLIES tree?(G))")
      (("" (bddsimp)
        (("1" (assert) nil)
         ("2" (hide 1 3)
          (("2" (induct "n" 1 "nat_induction")
            (("1" (skosimp*)
              (("1" (hide -3 1)
                (("1" (lemma "graph_complected[T].connected_not_empty")
                  (("1" (inst -1 "G!1")
                    (("1" (bddsimp)
                      (("1" (hide -1)
                        (("1" (grind)
                          (("1" (lemma "finite_sets[T].nonempty_card")
                            (("1" (inst -1 "vert(G!1)")
                              (("1" (bddsimp)
                                (("1" (grind) nil)
                                 ("2" (expand "nonempty?" 1)
                                  (("2" (expand "empty?" -1)
                                    (("2" (inst -1 "x!1")
                                      (("2"
                                        (expand "member" 1)
                                        (("2"
                                          (propax)
                                          nil)))))))))))))))))))))))))))))
             ("2" (skosimp*)
              (("2" (lemma "graph_complected[T].connect_deg_0")
                (("2" (case "forall (v:(vert(G!1))):deg(v,G!1)>1")
                  (("1" (lemma "graph_deg_sum[T].deg_gt_one")
                    (("1" (inst -1 "G!1")
                      (("1" (bddsimp (-1 -2))
                        (("1" (assert (-2 -7)) nil)))))))
                   ("2" (skosimp*)
                    (("2" (case "deg(v!1,G!1)=0")
                      (("1" (typepred "v!1")
                        (("1" (inst -3 "G!1" "v!1")
                          (("1" (bddsimp (-1 -2 -3 -6))
                            (("1" (expand "tree?" 2)
                              (("1" (prop)
                                (("1" (hide -2 -3 -5 -6 -7 1 3)
                                  (("1" (grind)
                                    (("1" (grind)
                                      (("1"
                                        (expand "singleton" 1)
                                        (("1"
                                          (hide -2)
                                          (("1"
                                            (grind)
                                            (("1"
                                              (lemma
                                               "finite_sets[T].card_one")
                                              (("1"
                                                (inst -1 "{y: T | y = v!1}")
                                                (("1"
                                                  (bddsimp)
                                                  (("1"
                                                    (inst 2 "v!1")
                                                    (("1"
                                                      (grind)
                                                      (("1"
                                                        (hide -1 1)
                                                        (("1"
                                                          (expand
                                                           "singleton"
                                                           1)
                                                          (("1"
                                                            (propax)
                                                            nil)))))))))))
                                                 ("2"
                                                  (lemma
                                                   "finite_sets[T].card_one")
                                                  (("2"
                                                    (hide -1 -2 2)
                                                    (("2"
                                                      (grind)
                                                      (("2"
                                                        (inst
                                                         1
                                                         "1"
                                                         "LAMBDA (y:T): 0")
                                                        (("2"
                                                          (grind)
                                                          nil)))))))))))))))))))))))))))))))))))
                       ("2" (case "deg(v!1,G!1)=1")
                        (("1" (hide -2)
                          (("1" (lemma "graph_complected[T].rev_lem2")
                            (("1" (inst -1 "G!1" "v!1")
                              (("1" (bddsimp (-1 -2 -5))
                                (("1" (inst -4 "del_vert(G!1, v!1)")
                                  (("1" (lemma "graph_ops[T].size_del_vert")
                                    (("1" (inst? -1)
                                      (("1"
                                        (replace -6 -1)
                                        (("1"
                                          (assert -1)
                                          (("1"
                                            (bddsimp (-1 -5))
                                            (("1"
                                              (hide -1 -3 -5 -6 -7)
                                              (("1"
                                                (expand "tree?" 3)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (inst 4 "v!1")
                                                    (("1"
                                                      (assert)
                                                      nil)))))))))
                                             ("2"
                                              (hide -1 -2 -4 -5 2 3)
                                              (("2"
                                                (hide 2)
                                                (("2"
                                                  (install-rewrites
                                                   "graph_ops")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (case
                                                       "card[T](remove[T](v!1, vert(G!1)))=card[T](vert(G!1))-1")
                                                      (("1"
                                                        (case
                                                         "card({e: doubleton[T] | edges(G!1)(e) AND NOT e(v!1)})=card(edges(G!1))-1")
                                                        (("1" (assert) nil)
                                                         ("2"
                                                          (hide -1 -3 2)
                                                          (("2"
                                                            (grind)
                                                            (("2"
                                                              (lemma
                                                               "finite_sets[doubleton[T]].card_one")
                                                              (("2"
                                                                (inst
                                                                 -1
                                                                 "incident_edges(v!1, G!1)")
                                                                (("2"
                                                                  (bddsimp)
                                                                  (("2"
                                                                    (skosimp*)
                                                                    (("2"
                                                                      (expand
                                                                       "incident_edges"
                                                                       -2)
                                                                      (("2"
                                                                        (lemma
                                                                         "finite_sets[doubleton[T]].card_disj_union")
                                                                        (("2"
                                                                          (inst
                                                                           -1
                                                                           "{e: doubleton[T] | edges(G!1)(e) AND e(v!1)}"
                                                                           "{e: doubleton[T] | edges(G!1)(e) AND NOT e(v!1)}")
                                                                          (("1"
                                                                            (bddsimp)
                                                                            (("1"
                                                                              (expand
                                                                               "union"
                                                                               -1)
                                                                              (("1"
                                                                                (expand
                                                                                 "member"
                                                                                 -1)
                                                                                (("1"
                                                                                  (case
                                                                                   "{x: doubleton[T] |
                                         edges(G!1)(x) AND x(v!1) OR edges(G!1)(x) AND NOT x(v!1)}=edges(G!1)")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -1
                                                                                     -2)
                                                                                    (("1"
                                                                                      (hide
                                                                                       -1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "incident_edges"
                                                                                         -2)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -2
                                                                                           -1)
                                                                                          (("1"
                                                                                            (assert
                                                                                             (-1
                                                                                              1))
                                                                                            nil)))))))))
                                                                                   ("2"
                                                                                    (hide
                                                                                     -1
                                                                                     -2
                                                                                     -3
                                                                                     2)
                                                                                    (("2"
                                                                                      (grind)
                                                                                      (("2"
                                                                                        (apply-extensionality
                                                                                         1)
                                                                                        (("2"
                                                                                          (hide
                                                                                           2)
                                                                                          (("2"
                                                                                            (iff
                                                                                             1)
                                                                                            (("2"
                                                                                              (bddsimp)
                                                                                              nil)))))))))))))))))
                                                                             ("2"
                                                                              (hide
                                                                               -1
                                                                               -2
                                                                               2)
                                                                              (("2"
                                                                                (install-rewrites
                                                                                 "finite_sets[doubleton[T]]")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (skosimp*)
                                                                                    nil)))))))))
                                                                           ("2"
                                                                            (lemma
                                                                             "graph_deg[T].incident_edges_TCC1")
                                                                            (("2"
                                                                              (inst
                                                                               -1
                                                                               "G!1"
                                                                               "v!1")
                                                                              (("2"
                                                                                (hide
                                                                                 -2
                                                                                 -3
                                                                                 2)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil)))))))))))))))))))))))))))
                                                       ("2"
                                                        (hide -1 -2 2)
                                                        (("2"
                                                          (grind)
                                                          (("2"
                                                            (lemma
                                                             "finite_sets[T].card_remove")
                                                            (("2"
                                                              (inst
                                                               -1
                                                               "vert(G!1)"
                                                               "v!1")
                                                              (("2"
                                                                (typepred
                                                                 "v!1")
                                                                (("2"
                                                                  (assert)
                                                                  nil)))))))))))))))))))))
                                             ("3"
                                              (propax)
                                              nil)))))))))))))))))))))
                         ("2" (hide -1 -2 -3 -4 -5 4)
                          (("2" (assert) nil))))))))))))))))))))))))
    nil)
   nil nil))
 (iff_tree 0
  (iff_tree-3 nil 3559572018
   ("" (skosimp*)
    (("" (bddsimp)
      (("1" (lemma "tree_paths[T].tree_one_path")
        (("1" (expand "uniq_paths?")
          (("1" (skosimp*)
            (("1" (inst? -1)
              (("1" (inst -1 "q!1") (("1" (assert) nil nil)) nil)) nil))
            nil))
          nil))
        nil)
       ("2" (lemma "graph_path_conn[T].path_implies_conn")
        (("2" (inst? -1)
          (("2" (lemma "graph_path_conn[T].tree_has_walk")
            (("2" (expand "path_connected?")
              (("2" (lemma "trees[T].tree_nonempty")
                (("2" (inst? -1)
                  (("2" (bddsimp)
                    (("2" (hide 3)
                      (("2" (skosimp*)
                        (("2" (inst -2 "G!1" "x!1" "y!1")
                          (("2" (typepred "x!1")
                            (("2" (typepred "y!1")
                              (("2" (bddsimp)
                                (("1" (expand "walk_from?")
                                  (("1" (propax) nil nil)) nil)
                                 ("2"
                                  (inst 3
                                   "(#length := 1, seq :=(LAMBDA (i:below(1)): x!1)#)")
                                  (("1" (hide -3 1) (("1" (grind) nil nil))
                                    nil)
                                   ("2" (hide -1 -3 2 3)
                                    (("2" (grind) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("3" (lemma "charact_tree")
        (("3" (inst? -1) (("3" (assert) nil nil)) nil)) nil))
      nil))
    nil)
   ((uniq_paths? const-decl "bool" cycle_deg nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (dbl const-decl "set[T]" doubletons structures)
    (doubleton type-eq-decl nil doubletons structures)
    (finite_set type-eq-decl nil finite_sets nil)
    (pregraph type-eq-decl nil graphs nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (graph type-eq-decl nil graphs nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil) (prewalk type-eq-decl nil walks nil)
    (tree_one_path formula-decl nil tree_paths nil)
    (T formal-type-decl nil cycle_deg nil)
    (path_connected? const-decl "bool" graph_conn_defs nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (x!1 skolem-const-decl "(vert(G!1))" cycle_deg nil)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (G!1 skolem-const-decl "graph[T]" cycle_deg nil)
    (walk? const-decl "bool" walks nil) (Walk type-eq-decl nil walks nil)
    (verts_in? const-decl "bool" walks nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences nil)
    (edge? const-decl "bool" graphs nil)
    (nil application-judgement "finite_set[T]" cycle_deg nil)
    (walk_from? const-decl "bool" walks nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (tree_nonempty formula-decl nil trees nil)
    (tree_has_walk formula-decl nil graph_path_conn nil)
    (path_implies_conn formula-decl nil graph_path_conn nil)
    (charact_tree formula-decl nil cycle_deg nil))
   nil)
  (iff_tree-2 nil 3312297085
   ("" (skosimp*)
    (("" (bddsimp)
      (("1" (lemma "tree_paths[T].tree_one_path")
        (("1" (expand "uniq_paths?")
          (("1" (skosimp*)
            (("1" (inst? -1)
              (("1" (inst -1 "q!1") (("1" (assert) nil nil)) nil)) nil))
            nil))
          nil))
        nil)
       ("2" (lemma "graph_path_conn[T].path_implies_conn")
        (("2" (inst? -1)
          (("2" (lemma "graph_path_conn[T].tree_has_walk")
            (("2" (expand "path_connected?")
              (("2" (lemma "trees[T].tree_nonempty")
                (("2" (inst? -1)
                  (("2" (bddsimp)
                    (("2" (hide 3)
                      (("2" (skosimp*)
                        (("2" (inst -2 "G!1" "x!1" "y!1")
                          (("2" (typepred "x!1")
                            (("2" (typepred "y!1")
                              (("2" (bddsimp)
                                (("1" (expand "walk_from?")
                                  (("1" (propax) nil nil)) nil)
                                 ("2"
                                  (inst 3
                                   "(#l := 1, seq :=(LAMBDA (i:below(1)): x!1)#)")
                                  (("1" (hide -3 1) (("1" (grind) nil nil))
                                    nil)
                                   ("2" (hide -1 -3 2 3)
                                    (("2" (grind) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("3" (lemma "charact_tree")
        (("3" (inst? -1) (("3" (assert) nil nil)) nil)) nil))
      nil))
    nil)
   ((dbl const-decl "set[T]" doubletons structures)
    (doubleton type-eq-decl nil doubletons structures)
    (pregraph type-eq-decl nil graphs nil) (graph type-eq-decl nil graphs nil)
    (prewalk type-eq-decl nil walks nil)
    (tree_one_path formula-decl nil tree_paths nil)
    (path_connected? const-decl "bool" graph_conn_defs nil)
    (walk? const-decl "bool" walks nil) (Walk type-eq-decl nil walks nil)
    (verts_in? const-decl "bool" walks nil)
    (edge? const-decl "bool" graphs nil)
    (walk_from? const-decl "bool" walks nil)
    (tree_nonempty formula-decl nil trees nil)
    (tree_has_walk formula-decl nil graph_path_conn nil)
    (path_implies_conn formula-decl nil graph_path_conn nil))
   nil)
  (iff_tree-1 nil 3312297045 ("" (postpone) nil nil) nil shostak))
 (tree_num_iff 0
  (tree_num_iff-1 nil 3312285994
   ("" (skosimp*)
    (("" (bddsimp)
      (("1" (lemma "num_edge_tree")
        (("1" (inst? -1) (("1" (assert) nil nil)) nil)) nil)
       ("2" (lemma "tree_edge_card")
        (("2" (inst? -1)
          (("2" (assert)
            (("2" (install-rewrites "graph_ops") (("2" (assert) nil nil))
              nil))
            nil))
          nil))
        nil)
       ("3" (assert)
        (("3" (install-rewrites "graph_ops")
          (("3" (lemma "iff_tree")
            (("3" (inst? -1)
              (("3" (stop-rewrite-theory "graph_ops")
                (("3" (stop-rewrite) (("3" (assert) nil nil)) nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((T formal-type-decl nil cycle_deg nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (dbl const-decl "set[T]" doubletons structures)
    (doubleton type-eq-decl nil doubletons structures)
    (finite_set type-eq-decl nil finite_sets nil)
    (pregraph type-eq-decl nil graphs nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (graph type-eq-decl nil graphs nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (num_edge_tree formula-decl nil cycle_deg nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (num_edges const-decl "nat" graph_ops nil)
    (size const-decl "nat" graphs nil)
    (tree_edge_card formula-decl nil trees nil)
    (iff_tree formula-decl nil cycle_deg nil))
   nil))
 (deg_gt_1_cycle 0
  (deg_gt_1_cycle-2 nil 3312283508
   ("" (skosimp*)
    (("" (lemma "conn_compon")
      (("" (expand "empty?")
        (("" (expand "empty?")
          (("" (skosimp*)
            (("" (expand "member")
              (("" (inst? -1)
                (("" (inst -1 "x!1")
                  (("" (skosimp*)
                    (("" (lemma "graph_deg_sum[T].deg_gt_one")
                      (("" (inst -1 "H!1")
                        ((""
                          (case "FORALL (v: T): vert(H!1)(v) IMPLIES deg(v, H!1) > 1")
                          (("1" (bddsimp (-1 -2))
                            (("1" (lemma "tree_num_iff")
                              (("1" (inst -1 "H!1")
                                (("1" (bddsimp)
                                  (("1" (assert) nil nil)
                                   ("2" (lemma "exclus_cycl")
                                    (("2" (inst -1 "H!1")
                                      (("2"
                                        (bddsimp)
                                        (("2"
                                          (expand "XOR")
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (iff 1)
                                              (("2"
                                                (bddsimp)
                                                (("2"
                                                  (lemma "sub_cycle")
                                                  (("2"
                                                    (inst? -1)
                                                    (("2"
                                                      (skosimp*)
                                                      (("2"
                                                        (inst -1 "w!1")
                                                        (("2"
                                                          (inst 3 "w!1")
                                                          (("1"
                                                            (bddsimp
                                                             (-1 -3 -6))
                                                            (("1"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (typepred "w!1")
                                                            (("2"
                                                              (hide-all-but
                                                               (-1 -2 -8)
                                                               -)
                                                              (("2"
                                                                (hide 2 3)
                                                                (("2"
                                                                  (install-rewrites
                                                                   "walks[T]")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (skosimp*)
                                                                      (("2"
                                                                        (inst?)
                                                                        (("2"
                                                                          (inst?)
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (assert)
                              (("2" (skosimp*)
                                (("2" (inst -1 "v!1")
                                  (("2" (typepred "v!1")
                                    (("2" (bddsimp (-1 -2))
                                      (("2" (propax) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (skosimp*)
                            (("2" (inst -6 "v!1")
                              (("2" (inst -7 "v!1")
                                (("2" (hide -2 -4 -8)
                                  (("2" (case "vert(G!1)(v!1)")
                                    (("1" (bddsimp) (("1" (assert) nil nil))
                                      nil)
                                     ("2" (hide -3 -4 -5 2 3)
                                      (("2"
                                        (install-rewrites "subgraphs[T]")
                                        (("2"
                                          (assert)
                                          (("2" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((conn_compon formula-decl nil cycle_deg nil)
    (empty? const-decl "bool" sets nil) (member const-decl "bool" sets nil)
    (G!1 skolem-const-decl "graph[T]" cycle_deg nil)
    (x!1 skolem-const-decl "T" cycle_deg nil)
    (deg_gt_one formula-decl nil graph_deg_sum nil)
    (deg const-decl "nat" graph_deg nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (> const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (tree_num_iff formula-decl nil cycle_deg nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (XOR const-decl "bool" xor_def nil)
    (sub_cycle formula-decl nil cycle_deg nil)
    (H!1 skolem-const-decl "graph[T]" cycle_deg nil)
    (w!1 skolem-const-decl "Seq[T](H!1)" cycle_deg nil)
    (< const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (subgraph? const-decl "bool" subgraphs nil)
    (subset? const-decl "bool" sets nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     cycle_deg nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (below type-eq-decl nil nat_types nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (prewalk type-eq-decl nil walks nil)
    (verts_in? const-decl "bool" walks nil) (Seq type-eq-decl nil walks nil)
    (exclus_cycl formula-decl nil cycle_deg nil)
    (v!1 skolem-const-decl "T" cycle_deg nil)
    (graph type-eq-decl nil graphs nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (pregraph type-eq-decl nil graphs nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (doubleton type-eq-decl nil doubletons structures)
    (dbl const-decl "set[T]" doubletons structures)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (/= const-decl "boolean" notequal nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T formal-type-decl nil cycle_deg nil)
    (empty? const-decl "bool" graphs nil))
   nil)
  (deg_gt_1_cycle-1 nil 3312283478 ("" (postpone) nil nil) nil nil)))

