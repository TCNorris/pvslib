

cartesian_product_quot_ring[T:Type+,+,*:[T,T->T],zero,one:T]: THEORY

BEGIN

    ASSUMING IMPORTING algebra@ring_with_one_def[T,+,*,zero,one]
    
	fullset_is_ring: ASSUMPTION ring?(fullset[T])
        fullset_is_ring_with_one: ASSUMPTION
                                         ring_with_one?(fullset[T])
    ENDASSUMING
  

IMPORTING comaximal_finseqs_ideals[T,+,*,zero,one],
          cartesian_product_finite


            R: VAR ring[T,+,*,zero]
          fsA: VAR finseq[set[T]]
          fsQ: VAR finseq[setof[set[T]]]
   
%-------------------------------------------------

  Sfs(R)(fsA: fsI(R))(fsx,fsy:(cartesian_product_n[set[T]](fsQ(R)(fsA)))): finseq[set[T]] =
   IF length(fsA) = 0
    THEN empty_seq
    ELSE
     (# length := length(fsA),
           seq := (LAMBDA (i: below[length(fsA)]): add(R,fsA(i))(fsx(i), fsy(i))) #)
   ENDIF


  Pfs(R)(fsA: fsI(R))(fsx,fsy:(cartesian_product_n[set[T]](fsQ(R)(fsA)))): finseq[set[T]] =
   IF length(fsA) = 0
    THEN empty_seq
    ELSE
     (# length := length(fsA),
           seq := (LAMBDA (i: below[length(fsA)]): product(R,fsA(i))(fsx(i), fsy(i))) #)
   ENDIF

 %-------------------------------------------------

  cartesian_product_quot_ring_is_ring: LEMMA
     FORALL (fsA: fsI(R)):
      length(fsA) /= 0
        IMPLIES
         ring?[(cartesian_product_n[set[T]](fsQ(R)(fsA))), Sfs(R)(fsA), Pfs(R)(fsA),fsA]
	     (cartesian_product_n[set[T]](fsQ(R)(fsA)))


END cartesian_product_quot_ring
