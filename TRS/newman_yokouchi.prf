(newman_yokouchi
 (Newman_lemma 0
  (Newman_lemma-1 nil 3374070016
   ("" (skeep)
    (("" (split)
      (("1" (flatten)
        (("1" (hide -2)
          (("1" (expand* "confluent?" "locally_confluent?")
            (("1" (skeep)
              (("1" (inst -1 "x" "y" "z")
                (("1" (lemma "R_subset_RTC")
                  (("1" (inst?)
                    (("1" (expand* "subset?" "member")
                      (("1" (inst -1 "(x, y)")
                        (("1" (lemma "R_subset_RTC")
                          (("1" (inst?)
                            (("1" (expand* "subset?" "member")
                              (("1" (inst -1 "(x, z)")
                                (("1" (assert) nil nil)) nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (flatten)
        (("2" (lemma "noetherian_induction")
          (("2" (inst?)
            (("2"
              (inst -1
               "(LAMBDA (a: T): (FORALL (b, c: T): RTC(R)(a, b) AND RTC(R)(a, c) IMPLIES joinable?(R)(b,c)))")
              (("2" (split)
                (("1" (hide (-2 -3))
                  (("1" (expand "confluent?")
                    (("1" (skeep)
                      (("1" (inst -1 "x" "y" "z") (("1" (assert) nil nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide 2)
                  (("2" (skeep)
                    (("2" (skeep)
                      (("2" (expand "RTC" -2)
                        (("2" (expand "IUnion")
                          (("2" (expand "RTC" -3)
                            (("2" (expand "IUnion")
                              (("2" (skolem * "i")
                                (("2" (skolem * "j")
                                  (("2" (case-replace "i = 0" :hide? t)
                                    (("1" (hide-all-but (-2 -3 1))
                                      (("1"
                                        (expand "joinable?")
                                        (("1"
                                          (inst 1 "c")
                                          (("1"
                                            (expand "RTC")
                                            (("1"
                                              (expand "IUnion")
                                              (("1"
                                                (split)
                                                (("1"
                                                  (expand "iterate" -1)
                                                  (("1"
                                                    (replaces -1)
                                                    (("1"
                                                      (inst 1 "j")
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (inst 1 "0")
                                                  (("2"
                                                    (expand "iterate" 1)
                                                    (("2" (propax) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (case-replace "j = 0" :hide? t)
                                      (("1"
                                        (hide-all-but (-2 -3 2))
                                        (("1"
                                          (expand "joinable?")
                                          (("1"
                                            (inst 1 "b")
                                            (("1"
                                              (expand "RTC")
                                              (("1"
                                                (expand "IUnion")
                                                (("1"
                                                  (split)
                                                  (("1"
                                                    (inst 1 "0")
                                                    (("1"
                                                      (expand "iterate" 1)
                                                      (("1" (propax) nil nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (expand "iterate" -2)
                                                    (("2"
                                                      (replaces -2)
                                                      (("2"
                                                        (inst 1 "i")
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (lemma iterate_add_one)
                                        (("2"
                                          (copy -1)
                                          (("2"
                                            (inst? -1 ("R" "R" "n" "i - 1"))
                                            (("1"
                                              (inst? -2 ("R" "R" "n" "j - 1"))
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (decompose-equality)
                                                  (("1"
                                                    (decompose-equality)
                                                    (("1"
                                                      (inst -2 "(x, b)")
                                                      (("1"
                                                        (inst -1 "(x, c)")
                                                        (("1"
                                                          (replaces -1)
                                                          (("1"
                                                            (replaces -1)
                                                            (("1"
                                                              (expand "o")
                                                              (("1"
                                                                (skolem
                                                                 *
                                                                 "x1")
                                                                (("1"
                                                                  (skolem
                                                                   *
                                                                   "x2")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (lemma
                                                                       "iterate_RTC")
                                                                      (("1"
                                                                        (copy
                                                                         -1)
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "R"
                                                                           "i - 1")
                                                                          (("1"
                                                                            (inst
                                                                             -2
                                                                             "R"
                                                                             "j - 1")
                                                                            (("1"
                                                                              (expand*
                                                                               "subset?"
                                                                               "member")
                                                                              (("1"
                                                                                (inst
                                                                                 -1
                                                                                 "(x1, b)")
                                                                                (("1"
                                                                                  (inst
                                                                                   -2
                                                                                   "(x2, c)")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "locally_confluent?")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -8
                                                                                       "x"
                                                                                       "x1"
                                                                                       "x2")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "joinable?"
                                                                                           -8)
                                                                                          (("1"
                                                                                            (skolem
                                                                                             *
                                                                                             "u")
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 (-5
                                                                                                  -7))
                                                                                                (("1"
                                                                                                  (copy
                                                                                                   -3)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -4
                                                                                                     "x1")
                                                                                                    (("1"
                                                                                                      (split)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "b"
                                                                                                         "u")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "joinable?"
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (skolem
                                                                                                               *
                                                                                                               "v")
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (typepred
                                                                                                                   "RTC(R)")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "reflexive_transitive?")
                                                                                                                    (("1"
                                                                                                                      (flatten)
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "transitive?")
                                                                                                                          (("1"
                                                                                                                            (copy
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -2
                                                                                                                               "x2"
                                                                                                                               "u"
                                                                                                                               "v")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (hide
                                                                                                                                   (-11
                                                                                                                                    -4))
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -4
                                                                                                                                     "x2")
                                                                                                                                    (("1"
                                                                                                                                      (split)
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -1
                                                                                                                                         "v"
                                                                                                                                         "c")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (hide-all-but
                                                                                                                                             (-1
                                                                                                                                              -2
                                                                                                                                              -4
                                                                                                                                              3))
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "joinable?"
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (skolem
                                                                                                                                                 *
                                                                                                                                                 "w")
                                                                                                                                                (("1"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "joinable?")
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       -3
                                                                                                                                                       "b"
                                                                                                                                                       "v"
                                                                                                                                                       "w")
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         1
                                                                                                                                                         "w")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (hide-all-but
                                                                                                                                         (-7
                                                                                                                                          1))
                                                                                                                                        (("2"
                                                                                                                                          (lemma
                                                                                                                                           "R_subset_TC")
                                                                                                                                          (("2"
                                                                                                                                            (inst?)
                                                                                                                                            (("2"
                                                                                                                                              (expand*
                                                                                                                                               "subset?"
                                                                                                                                               "member")
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "(x, x2)")
                                                                                                                                                (("2"
                                                                                                                                                  (prop)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide-all-but
                                                                                                         (-4
                                                                                                          1))
                                                                                                        (("2"
                                                                                                          (lemma
                                                                                                           "R_subset_TC")
                                                                                                          (("2"
                                                                                                            (inst?)
                                                                                                            (("2"
                                                                                                              (expand*
                                                                                                               "subset?"
                                                                                                               "member")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -1
                                                                                                                 "(x, x1)")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide-all-but (1 2))
                                                (("2"
                                                  (typepred "j")
                                                  (("2" (assert) nil nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (hide-all-but (1 2))
                                                (("3"
                                                  (typepred "j")
                                                  (("3" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide-all-but (1 3))
                                              (("2"
                                                (typepred "i")
                                                (("2" (assert) nil nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (hide-all-but (1 3))
                                              (("3"
                                                (typepred "i")
                                                (("3" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((R_subset_RTC formula-decl nil relations_closure nil)
    (member const-decl "bool" sets nil) (subset? const-decl "bool" sets nil)
    (PRED type-eq-decl nil defined_types nil)
    (pred type-eq-decl nil defined_types nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T formal-type-decl nil newman_yokouchi nil)
    (confluent? const-decl "bool" ars_terminology nil)
    (locally_confluent? const-decl "bool" ars_terminology nil)
    (noetherian_induction formula-decl nil noetherian nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (reflexive_transitive? const-decl "bool" relations_closure nil)
    (reflexive_transitive type-eq-decl nil relations_closure nil)
    (RTC const-decl "reflexive_transitive" relations_closure nil)
    (joinable? const-decl "bool" ars_terminology nil)
    (IUnion const-decl "set[T]" indexed_sets nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (j skolem-const-decl "nat" newman_yokouchi nil)
    (O const-decl "bool" relation_props nil)
    (iterate_RTC formula-decl nil relations_closure nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (transitive? const-decl "bool" relations nil)
    (R_subset_TC formula-decl nil relations_closure nil)
    (i skolem-const-decl "nat" newman_yokouchi nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (iterate_add_one formula-decl nil relation_iterate orders)
    (iterate def-decl "pred[[T, T]]" relation_iterate orders)
    (TRUE const-decl "bool" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (noetherian type-eq-decl nil noetherian nil)
    (noetherian? const-decl "bool" noetherian nil)
    (R skolem-const-decl "PRED[[T, T]]" newman_yokouchi nil))
   shostak))
 (Yokouchi_lemma_ax1 0
  (Yokouchi_lemma_ax1-1 nil 3374070253
   ("" (skeep)
    (("" (skeep)
      (("" (lemma "noetherian_induction")
        (("" (inst?)
          ((""
            (inst -1
             "LAMBDA (a:T): (FORALL (b,c:T): RTC(R)(a,c) & S(a,b) => (EXISTS (d:T): RTC(R)(b,d) & (RTC(R) o S o RTC(R))(c,d)))")
            (("" (split)
              (("1" (inst -1 "x")
                (("1" (inst -1 "y" "z") (("1" (assert) nil nil)) nil)) nil)
               ("2" (skosimp*)
                (("2" (hide 2)
                  (("2" (expand "RTC" -2)
                    (("2" (expand "IUnion")
                      (("2" (skolem * "i")
                        (("2" (case-replace "i = 0")
                          (("1" (expand "iterate")
                            (("1" (hide-all-but (-3 -4 1))
                              (("1" (inst 1 "b!1")
                                (("1" (split)
                                  (("1" (expand* "RTC" "IUnion")
                                    (("1" (inst 1 "0")
                                      (("1"
                                        (expand "iterate")
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (expand "o")
                                    (("2" (replaces -1)
                                      (("2"
                                        (inst 1 "b!1")
                                        (("2"
                                          (split)
                                          (("1"
                                            (inst 1 "c!1")
                                            (("1"
                                              (split)
                                              (("1"
                                                (expand* "RTC" "IUnion")
                                                (("1"
                                                  (inst 1 "0")
                                                  (("1"
                                                    (expand "iterate")
                                                    (("1" (propax) nil nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2" (propax) nil nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand* "RTC" "IUnion")
                                            (("2"
                                              (inst 1 "0")
                                              (("2"
                                                (expand "iterate")
                                                (("2" (propax) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (lemma "iterate_add_one")
                            (("2" (inst -1 "R" "i - 1")
                              (("1" (assert)
                                (("1" (replaces -1)
                                  (("1" (expand "o" -2)
                                    (("1" (skolem * "z1")
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (inst -7 "x!1" "b!1" "z1")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (skolem * "y1")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (expand "o" -8)
                                                  (("1"
                                                    (skolem * "w2")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (skolem * "w1")
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (lemma
                                                             "iterate_RTC")
                                                            (("1"
                                                              (inst
                                                               -1
                                                               "R"
                                                               "i - 1")
                                                              (("1"
                                                                (expand*
                                                                 "subset?"
                                                                 "member")
                                                                (("1"
                                                                  (inst
                                                                   -1
                                                                   "(z1, c!1)")
                                                                  (("1"
                                                                    (hide -4)
                                                                    (("1"
                                                                      (copy
                                                                       -6)
                                                                      (("1"
                                                                        (expand
                                                                         "confluent?"
                                                                         -7)
                                                                        (("1"
                                                                          (inst
                                                                           -7
                                                                           "z1"
                                                                           "w1"
                                                                           "c!1")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (expand
                                                                               "joinable?")
                                                                              (("1"
                                                                                (skolem
                                                                                 *
                                                                                 "d1")
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (inst
                                                                                     -3
                                                                                     "w1")
                                                                                    (("1"
                                                                                      (case
                                                                                       "(R o RTC(R))(x!1, w1)")
                                                                                      (("1"
                                                                                        (case-replace
                                                                                         "TC(R)(x!1, w1) = (R o RTC(R))(x!1, w1)"
                                                                                         :hide?
                                                                                         t)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -4
                                                                                             "w2"
                                                                                             "d1")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (skolem
                                                                                                 *
                                                                                                 "d2")
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "confluent?")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -2
                                                                                                       "w2"
                                                                                                       "d2"
                                                                                                       "y1")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "joinable?")
                                                                                                          (("1"
                                                                                                            (skolem
                                                                                                             *
                                                                                                             "d")
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "o"
                                                                                                                   -5)
                                                                                                                  (("1"
                                                                                                                    (skolem
                                                                                                                     *
                                                                                                                     "u2")
                                                                                                                    (("1"
                                                                                                                      (flatten)
                                                                                                                      (("1"
                                                                                                                        (skolem
                                                                                                                         *
                                                                                                                         "u1")
                                                                                                                        (("1"
                                                                                                                          (flatten)
                                                                                                                          (("1"
                                                                                                                            (typepred
                                                                                                                             "RTC(R)")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "reflexive_transitive?")
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (hide
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "transitive?")
                                                                                                                                    (("1"
                                                                                                                                      (copy
                                                                                                                                       -1)
                                                                                                                                      (("1"
                                                                                                                                        (copy
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -1
                                                                                                                                           "c!1"
                                                                                                                                           "d1"
                                                                                                                                           "u1")
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -2
                                                                                                                                             "u2"
                                                                                                                                             "d2"
                                                                                                                                             "d")
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -3
                                                                                                                                               "b!1"
                                                                                                                                               "y1"
                                                                                                                                               "d")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (hide-all-but
                                                                                                                                                   (-1
                                                                                                                                                    -2
                                                                                                                                                    -9
                                                                                                                                                    -3
                                                                                                                                                    2))
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     1
                                                                                                                                                     "d")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "o")
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           1
                                                                                                                                                           "u2")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               1
                                                                                                                                                               "u1")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (lemma
                                                                                             "transitive_closure_step_l")
                                                                                            (("2"
                                                                                              (inst?)
                                                                                              (("2"
                                                                                                (rewrite-lemma
                                                                                                 "change_to_TC"
                                                                                                 ("R"
                                                                                                  "R"))
                                                                                                (("2"
                                                                                                  (rewrite-lemma
                                                                                                   "change_to_RTC"
                                                                                                   ("R"
                                                                                                    "R"))
                                                                                                  (("2"
                                                                                                    (decompose-equality)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "(x!1, w1)")
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         (-4
                                                                                          -10
                                                                                          1))
                                                                                        (("2"
                                                                                          (expand
                                                                                           "o")
                                                                                          (("2"
                                                                                            (inst
                                                                                             1
                                                                                             "z1")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (hide-all-but (1 2))
                                (("2" (typepred "i") (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((R skolem-const-decl "PRED[[T, T]]" newman_yokouchi nil)
    (noetherian? const-decl "bool" noetherian nil)
    (PRED type-eq-decl nil defined_types nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (noetherian type-eq-decl nil noetherian nil)
    (IUnion const-decl "set[T]" indexed_sets nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (number nonempty-type-decl nil numbers nil)
    (TRUE const-decl "bool" booleans nil)
    (iterate def-decl "pred[[T, T]]" relation_iterate orders)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (i skolem-const-decl "nat" newman_yokouchi nil)
    (joinable? const-decl "bool" ars_terminology nil)
    (change_to_RTC formula-decl nil relations_closure nil)
    (change_to_TC formula-decl nil relations_closure nil)
    (transitive_closure_step_l formula-decl nil closure_ops orders)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (transitive? const-decl "bool" relations nil)
    (transitive type-eq-decl nil relations_closure nil)
    (TC const-decl "transitive" relations_closure nil)
    (confluent? const-decl "bool" ars_terminology nil)
    (subset? const-decl "bool" sets nil) (member const-decl "bool" sets nil)
    (iterate_RTC formula-decl nil relations_closure nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (iterate_add_one formula-decl nil relation_iterate orders)
    (O const-decl "bool" relation_props nil)
    (RTC const-decl "reflexive_transitive" relations_closure nil)
    (reflexive_transitive type-eq-decl nil relations_closure nil)
    (reflexive_transitive? const-decl "bool" relations_closure nil)
    (pred type-eq-decl nil defined_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (noetherian_induction formula-decl nil noetherian nil)
    (T formal-type-decl nil newman_yokouchi nil))
   shostak))
 (Yokouchi_lemma 0
  (Yokouchi_lemma-1 nil 3374070369
   ("" (skeep)
    (("" (lemma "Yokouchi_lemma_ax1")
      (("" (inst?)
        (("" (assert)
          (("" (prop)
            (("" (expand "diamond_property?")
              (("" (skeep)
                (("" (lemma "noetherian_induction")
                  ((""
                    (inst -1 "R"
                     "LAMBDA (a:T): (FORALL (b,c:T): (RTC(R) o S o RTC(R))(a,c) & (RTC(R) o S o RTC(R))(a,b) => (EXISTS (d:T): (RTC(R) o S o RTC(R))(b,d) & (RTC(R) o S o RTC(R))(c,d)))")
                    (("" (split)
                      (("1" (inst -1 "x")
                        (("1" (inst -1 "y" "z") (("1" (assert) nil nil)) nil))
                        nil)
                       ("2" (skosimp*)
                        (("2" (hide 2)
                          (("2" (expand "o" (-2 -3))
                            (("2" (skolem * "z2")
                              (("2" (skolem * "y2")
                                (("2" (flatten)
                                  (("2" (skolem * "z1")
                                    (("2" (skolem * "y1")
                                      (("2"
                                        (flatten)
                                        (("2"
                                          (expand "RTC" -2)
                                          (("2"
                                            (expand "RTC" -5)
                                            (("2"
                                              (expand "IUnion")
                                              (("2"
                                                (skolem * "j")
                                                (("2"
                                                  (skolem * "i")
                                                  (("2"
                                                    (hide (-14 -13))
                                                    (("2"
                                                      (case-replace "i = 0")
                                                      (("1"
                                                        (case-replace "j = 0")
                                                        (("1"
                                                          (expand "iterate")
                                                          (("1"
                                                            (replaces -4)
                                                            (("1"
                                                              (replaces -6)
                                                              (("1"
                                                                (inst
                                                                 -11
                                                                 "y1"
                                                                 "y2"
                                                                 "z2")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (hide
                                                                     (-1 -2))
                                                                    (("1"
                                                                      (skolem
                                                                       *
                                                                       "r1")
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (copy
                                                                           -6)
                                                                          (("1"
                                                                            (copy
                                                                             -1)
                                                                            (("1"
                                                                              (inst
                                                                               -1
                                                                               "z2"
                                                                               "r1"
                                                                               "c!1")
                                                                              (("1"
                                                                                (inst
                                                                                 -2
                                                                                 "y2"
                                                                                 "r1"
                                                                                 "b!1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (skolem
                                                                                     *
                                                                                     "u1")
                                                                                    (("1"
                                                                                      (skolem
                                                                                       *
                                                                                       "d1")
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "confluent?")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -12
                                                                                             "r1"
                                                                                             "u1"
                                                                                             "d1")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "joinable?"
                                                                                                 -12)
                                                                                                (("1"
                                                                                                  (skolem
                                                                                                   *
                                                                                                   "d")
                                                                                                  (("1"
                                                                                                    (hide-all-but
                                                                                                     (-2
                                                                                                      -4
                                                                                                      -12
                                                                                                      -13
                                                                                                      1))
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       1
                                                                                                       "d")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "o")
                                                                                                        (("1"
                                                                                                          (skolem
                                                                                                           *
                                                                                                           "c3")
                                                                                                          (("1"
                                                                                                            (skolem
                                                                                                             *
                                                                                                             "b3")
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (skolem
                                                                                                                 *
                                                                                                                 "c2")
                                                                                                                (("1"
                                                                                                                  (skolem
                                                                                                                   *
                                                                                                                   "b2")
                                                                                                                  (("1"
                                                                                                                    (typepred
                                                                                                                     "RTC(R)")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "reflexive_transitive?")
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (hide
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "transitive?")
                                                                                                                            (("1"
                                                                                                                              (copy
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -1
                                                                                                                                 "c3"
                                                                                                                                 "u1"
                                                                                                                                 "d")
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -2
                                                                                                                                   "b3"
                                                                                                                                   "d1"
                                                                                                                                   "d")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (split)
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         1
                                                                                                                                         "b3")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             1
                                                                                                                                             "b2")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (inst
                                                                                                                                         1
                                                                                                                                         "c3")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             1
                                                                                                                                             "c2")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide -1)
                                                          (("2"
                                                            (lemma
                                                             "iterate_add_one")
                                                            (("2"
                                                              (inst
                                                               -1
                                                               "R"
                                                               "j - 1")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replaces
                                                                   -1)
                                                                  (("1"
                                                                    (expand
                                                                     "o"
                                                                     -2)
                                                                    (("1"
                                                                      (skolem
                                                                       *
                                                                       "w1")
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (lemma
                                                                           "iterate_RTC")
                                                                          (("1"
                                                                            (inst
                                                                             -1
                                                                             "R"
                                                                             "j - 1")
                                                                            (("1"
                                                                              (expand*
                                                                               "subset?"
                                                                               "member")
                                                                              (("1"
                                                                                (inst
                                                                                 -1
                                                                                 "(w1, z1)")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (hide
                                                                                     -4)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "iterate")
                                                                                      (("1"
                                                                                        (replaces
                                                                                         -6)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -12
                                                                                           "y1"
                                                                                           "y2"
                                                                                           "w1")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (skolem
                                                                                               *
                                                                                               "u1")
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -2
                                                                                                   "w1")
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "R_subset_TC")
                                                                                                    (("1"
                                                                                                      (inst?)
                                                                                                      (("1"
                                                                                                        (expand*
                                                                                                         "subset?"
                                                                                                         "member")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "(y1, w1)")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -3
                                                                                                               "u1"
                                                                                                               "c!1")
                                                                                                              (("1"
                                                                                                                (prop)
                                                                                                                (("1"
                                                                                                                  (skolem
                                                                                                                   *
                                                                                                                   "t1")
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (hide-all-but
                                                                                                                       (-1
                                                                                                                        -2
                                                                                                                        -9
                                                                                                                        -10
                                                                                                                        -12
                                                                                                                        -14
                                                                                                                        2))
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "o"
                                                                                                                         (-1
                                                                                                                          -2))
                                                                                                                        (("1"
                                                                                                                          (skolem
                                                                                                                           *
                                                                                                                           "u3")
                                                                                                                          (("1"
                                                                                                                            (skolem
                                                                                                                             *
                                                                                                                             "c3")
                                                                                                                            (("1"
                                                                                                                              (flatten)
                                                                                                                              (("1"
                                                                                                                                (skolem
                                                                                                                                 *
                                                                                                                                 "u2")
                                                                                                                                (("1"
                                                                                                                                  (skolem
                                                                                                                                   *
                                                                                                                                   "c2")
                                                                                                                                  (("1"
                                                                                                                                    (flatten)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "confluent?")
                                                                                                                                      (("1"
                                                                                                                                        (copy
                                                                                                                                         -9)
                                                                                                                                        (("1"
                                                                                                                                          (copy
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -11
                                                                                                                                             "y2"
                                                                                                                                             "u1"
                                                                                                                                             "b!1")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "joinable?"
                                                                                                                                                 -11)
                                                                                                                                                (("1"
                                                                                                                                                  (skolem
                                                                                                                                                   *
                                                                                                                                                   "d1")
                                                                                                                                                  (("1"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       -1
                                                                                                                                                       "u1"
                                                                                                                                                       "u2"
                                                                                                                                                       "d1")
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "joinable?"
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (skolem
                                                                                                                                                             *
                                                                                                                                                             "d2")
                                                                                                                                                            (("1"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 -11
                                                                                                                                                                 "u2"
                                                                                                                                                                 "u3"
                                                                                                                                                                 "d2")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (skolem
                                                                                                                                                                     *
                                                                                                                                                                     "d3")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (flatten)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         -3
                                                                                                                                                                         "u3"
                                                                                                                                                                         "t1"
                                                                                                                                                                         "d3")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (expand
                                                                                                                                                                             "joinable?"
                                                                                                                                                                             -3)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (skolem
                                                                                                                                                                               *
                                                                                                                                                                               "d")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (typepred
                                                                                                                                                                                   "RTC(R)")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "reflexive_transitive?")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (flatten)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (hide
                                                                                                                                                                                         -1)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "transitive?")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (copy
                                                                                                                                                                                             -1)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (copy
                                                                                                                                                                                               -1)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (copy
                                                                                                                                                                                                 -1)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "o")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (skolem
                                                                                                                                                                                                     *
                                                                                                                                                                                                     "r2")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (flatten)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (skolem
                                                                                                                                                                                                         *
                                                                                                                                                                                                         "r1")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (flatten)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (inst
                                                                                                                                                                                                             -1
                                                                                                                                                                                                             "b!1"
                                                                                                                                                                                                             "d1"
                                                                                                                                                                                                             "d2")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (inst
                                                                                                                                                                                                               -2
                                                                                                                                                                                                               "b!1"
                                                                                                                                                                                                               "d2"
                                                                                                                                                                                                               "r1")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                 -3
                                                                                                                                                                                                                 "r2"
                                                                                                                                                                                                                 "d3"
                                                                                                                                                                                                                 "d")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                   -4
                                                                                                                                                                                                                   "c3"
                                                                                                                                                                                                                   "t1"
                                                                                                                                                                                                                   "d")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (inst
                                                                                                                                                                                                                       1
                                                                                                                                                                                                                       "d")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (split)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (inst
                                                                                                                                                                                                                           1
                                                                                                                                                                                                                           "r2")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (inst
                                                                                                                                                                                                                               1
                                                                                                                                                                                                                               "r1")
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                nil
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                          (inst
                                                                                                                                                                                                                           1
                                                                                                                                                                                                                           "c3")
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (inst
                                                                                                                                                                                                                               1
                                                                                                                                                                                                                               "c2")
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                nil
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide-all-but
                                                                                                                   (-2
                                                                                                                    -4
                                                                                                                    -5
                                                                                                                    1))
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "o")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       1
                                                                                                                       "z2")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           1
                                                                                                                           "z1")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 (1 2))
                                                                (("2"
                                                                  (typepred
                                                                   "j")
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (lemma
                                                         "iterate_add_one")
                                                        (("2"
                                                          (inst
                                                           -1
                                                           "R"
                                                           "i - 1")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (replaces -1)
                                                              (("1"
                                                                (expand
                                                                 "o"
                                                                 -5)
                                                                (("1"
                                                                  (skolem
                                                                   *
                                                                   "w1")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (lemma
                                                                       "iterate_RTC")
                                                                      (("1"
                                                                        (copy
                                                                         -1)
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "R"
                                                                           "j")
                                                                          (("1"
                                                                            (inst
                                                                             -2
                                                                             "R"
                                                                             "i - 1")
                                                                            (("1"
                                                                              (expand*
                                                                               "subset?"
                                                                               "member")
                                                                              (("1"
                                                                                (inst
                                                                                 -1
                                                                                 "(x!1, z1)")
                                                                                (("1"
                                                                                  (inst
                                                                                   -2
                                                                                   "(w1, y1)")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "confluent?")
                                                                                    (("1"
                                                                                      (copy
                                                                                       -13)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -14
                                                                                         "x!1"
                                                                                         "z1"
                                                                                         "w1")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "R_subset_RTC")
                                                                                            (("1"
                                                                                              (inst?)
                                                                                              (("1"
                                                                                                (expand*
                                                                                                 "subset?"
                                                                                                 "member")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "(x!1, w1)")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "joinable?")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (skolem
                                                                                                         *
                                                                                                         "w2")
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -13
                                                                                                             "z1"
                                                                                                             "z2"
                                                                                                             "w2")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (skolem
                                                                                                                 *
                                                                                                                 "w3")
                                                                                                                (("1"
                                                                                                                  (flatten)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -2
                                                                                                                     "z2"
                                                                                                                     "w3"
                                                                                                                     "c!1")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (skolem
                                                                                                                         *
                                                                                                                         "w4")
                                                                                                                        (("1"
                                                                                                                          (flatten)
                                                                                                                          (("1"
                                                                                                                            (case
                                                                                                                             "(RTC(R) o S o RTC(R))(w1, b!1) & (RTC(R) o S o RTC(R))(w1, w4)")
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -7
                                                                                                                               "w1")
                                                                                                                              (("1"
                                                                                                                                (lemma
                                                                                                                                 "R_subset_TC")
                                                                                                                                (("1"
                                                                                                                                  (inst?)
                                                                                                                                  (("1"
                                                                                                                                    (expand*
                                                                                                                                     "subset?"
                                                                                                                                     "member")
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -1
                                                                                                                                       "(x!1, w1)")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -8
                                                                                                                                           "b!1"
                                                                                                                                           "w4")
                                                                                                                                          (("1"
                                                                                                                                            (prop)
                                                                                                                                            (("1"
                                                                                                                                              (skolem
                                                                                                                                               *
                                                                                                                                               "d")
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                (("1"
                                                                                                                                                  (case
                                                                                                                                                   "(RTC(R) o S o RTC(R))(c!1, d)")
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     2
                                                                                                                                                     "d")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     (-2
                                                                                                                                                      -8
                                                                                                                                                      1))
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "o")
                                                                                                                                                      (("2"
                                                                                                                                                        (skolem
                                                                                                                                                         *
                                                                                                                                                         "r2")
                                                                                                                                                        (("2"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("2"
                                                                                                                                                            (skolem
                                                                                                                                                             *
                                                                                                                                                             "r1")
                                                                                                                                                            (("2"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("2"
                                                                                                                                                                (typepred
                                                                                                                                                                 "RTC(R)")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "reflexive_transitive?")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (hide
                                                                                                                                                                       -1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "transitive?")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           -1
                                                                                                                                                                           "c!1"
                                                                                                                                                                           "w4"
                                                                                                                                                                           "r1")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               1
                                                                                                                                                                               "r2")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   1
                                                                                                                                                                                   "r1")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (hide-all-but
                                                                                                                               (-2
                                                                                                                                -5
                                                                                                                                -12
                                                                                                                                -13
                                                                                                                                -15
                                                                                                                                -18
                                                                                                                                1))
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "o")
                                                                                                                                (("2"
                                                                                                                                  (skolem
                                                                                                                                   *
                                                                                                                                   "u2")
                                                                                                                                  (("2"
                                                                                                                                    (flatten)
                                                                                                                                    (("2"
                                                                                                                                      (skolem
                                                                                                                                       *
                                                                                                                                       "u1")
                                                                                                                                      (("2"
                                                                                                                                        (flatten)
                                                                                                                                        (("2"
                                                                                                                                          (typepred
                                                                                                                                           "RTC(R)")
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "reflexive_transitive?")
                                                                                                                                            (("2"
                                                                                                                                              (flatten)
                                                                                                                                              (("2"
                                                                                                                                                (hide
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "transitive?")
                                                                                                                                                  (("2"
                                                                                                                                                    (copy
                                                                                                                                                     -1)
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       -1
                                                                                                                                                       "w1"
                                                                                                                                                       "w2"
                                                                                                                                                       "u1")
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         -2
                                                                                                                                                         "u2"
                                                                                                                                                         "w3"
                                                                                                                                                         "w4")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (split)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               1
                                                                                                                                                               "y2")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   1
                                                                                                                                                                   "y1")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (inst
                                                                                                                                                               1
                                                                                                                                                               "u2")
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   1
                                                                                                                                                                   "u1")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             (1 2))
                                                            (("2"
                                                              (typepred "i")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Yokouchi_lemma_ax1 formula-decl nil newman_yokouchi nil)
    (diamond_property? const-decl "bool" ars_terminology nil)
    (noetherian_induction formula-decl nil noetherian nil)
    (IUnion const-decl "set[T]" indexed_sets nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (number nonempty-type-decl nil numbers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (j skolem-const-decl "nat" newman_yokouchi nil)
    (iterate_RTC formula-decl nil relations_closure nil)
    (member const-decl "bool" sets nil) (subset? const-decl "bool" sets nil)
    (R_subset_TC formula-decl nil relations_closure nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (iterate_add_one formula-decl nil relation_iterate orders)
    (iterate def-decl "pred[[T, T]]" relation_iterate orders)
    (confluent? const-decl "bool" ars_terminology nil)
    (transitive? const-decl "bool" relations nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (joinable? const-decl "bool" ars_terminology nil)
    (TRUE const-decl "bool" booleans nil)
    (i skolem-const-decl "nat" newman_yokouchi nil)
    (R_subset_RTC formula-decl nil relations_closure nil)
    (RTC const-decl "reflexive_transitive" relations_closure nil)
    (reflexive_transitive type-eq-decl nil relations_closure nil)
    (reflexive_transitive? const-decl "bool" relations_closure nil)
    (O const-decl "bool" relation_props nil)
    (pred type-eq-decl nil defined_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (noetherian type-eq-decl nil noetherian nil)
    (noetherian? const-decl "bool" noetherian nil)
    (PRED type-eq-decl nil defined_types nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T formal-type-decl nil newman_yokouchi nil))
   shostak)))

