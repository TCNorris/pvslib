reals_safe_ops: THEORY
BEGIN

  % Division

  div_safe(x,y:real): real = IF y = 0 THEN 0 ELSE x/y ENDIF

  div_safe_eq
  : LEMMA FORALL(x,y: real)
    : NOT y=0 IMPLIES div_safe(x,y) = x/y

  % Square Root

  IMPORTING sqrt

  sqrt_safe(x:real): nnreal = sqrt(max(x,0))

  sqrt_safe_eq
  : LEMMA FORALL(nnx: nnreal)
    : sqrt_safe(nnx) = sqrt(nnx)

  co_sqrt(x:real): real
  = IF x >= 0
    THEN sqrt(x)
    ELSE -sqrt(-x) ENDIF

  co_sqrt_eq
  : LEMMA FORALL(nnx: nnreal)
    : co_sqrt(nnx) = sqrt(nnx)

  co_sqrt_alt
  : LEMMA FORALL(x: real)
    : co_sqrt(x) = sign(x) * sqrt(abs(x))

  % Power

  pow_safe(x:real,y:int)
  : real
  = IF (NOT x = 0 OR y >= 0) THEN x^y ELSE 0 ENDIF

  pow_safe_eq
  : LEMMA FORALL(x: real,y: int)
    : (NOT x = 0 OR y >= 0) IMPLIES pow_safe(x,y) = x^y

END reals_safe_ops
