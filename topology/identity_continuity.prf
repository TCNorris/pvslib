(identity_continuity
 (id_continuous_at 0
  (id_continuous_at-1 nil 3301762820
   ("" (expand "continuous_at?")
    (("" (expand "neighbourhood?")
      (("" (expand "interior_point?")
        (("" (expand "subset?")
          (("" (skosimp*)
            (("" (assert)
              (("" (expand "I")
                (("" (expand "inverse_image")
                  (("" (assert)
                    (("" (typepred "U!2")
                      (("" (inst + "U!2") (("" (assert) nil nil)) nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((neighbourhood? const-decl "bool" topology nil)
    (subset? const-decl "bool" sets nil) (member const-decl "bool" sets nil)
    (inverse_image const-decl "set[D]" function_image nil)
    (open nonempty-type-eq-decl nil topology nil)
    (open? const-decl "bool" topology nil)
    (S formal-const-decl "topology" identity_continuity nil)
    (topology nonempty-type-eq-decl nil topology_prelim nil)
    (topology? const-decl "bool" topology_prelim nil)
    (setofsets type-eq-decl nil sets nil)
    (setof type-eq-decl nil defined_types nil) (set type-eq-decl nil sets nil)
    (T formal-type-decl nil identity_continuity nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (I const-decl "(bijective?[T, T])" identity nil)
    (interior_point? const-decl "bool" topology nil)
    (continuous_at? const-decl "bool" continuity_def nil))
   shostak))
 (id_continuous 0
  (id_continuous-1 nil 3301762791
   ("" (expand "continuous?")
    (("" (lemma "id_continuous_at") (("" (propax) nil nil)) nil)) nil)
   ((id_continuous_at formula-decl nil identity_continuity nil)
    (continuous? const-decl "bool" continuity_def nil))
   shostak))
 (I_is_continuous 0
  (I_is_continuous-1 nil 3454592304 ("" (judgement-tcc) nil nil)
   ((I const-decl "(bijective?[T, T])" identity nil)
    (member const-decl "bool" sets nil) (subset? const-decl "bool" sets nil)
    (S formal-const-decl "topology" identity_continuity nil)
    (topology nonempty-type-eq-decl nil topology_prelim nil)
    (topology? const-decl "bool" topology_prelim nil)
    (setofsets type-eq-decl nil sets nil)
    (setof type-eq-decl nil defined_types nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T formal-type-decl nil identity_continuity nil)
    (interior_point? const-decl "bool" topology nil)
    (neighbourhood? const-decl "bool" topology nil)
    (inverse_image const-decl "set[D]" function_image nil)
    (continuous_at? const-decl "bool" continuity_def nil)
    (continuous? const-decl "bool" continuity_def nil))
   nil
   (I_is_continuous subtype "identity[identity_continuity.T].I"
    "continuous[T, S, T, S]"))))

