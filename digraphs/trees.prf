(trees
 (tree?_TCC1 0
  (tree?_TCC1-1 nil 3300198183
   ("" (skosimp*)
    (("" (expand "size")
      (("" (assert)
        (("" (expand "del_vert")
          (("" (rewrite "card_remove") (("" (assert) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   ((size const-decl "nat" digraph_def nil)
    (del_vert const-decl "digraph[T]" digraph_ops nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (T formal-type-decl nil trees nil)
    (digraph type-eq-decl nil digraph_def nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (predigraph type-eq-decl nil digraph_def nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (card_remove formula-decl nil finite_sets nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   shostak
   (tree? termination
    "trees.tree?(digraph_ops[trees.T].del_vert(trees.G, trees.v))" "nil")))
 (tree_nonempty 0
  (tree_nonempty-5 "" 3790101491
   ("" (skosimp*)
    (("" (expand "empty?")
      (("" (use "card_empty?[T]")
        (("" (iff)
          (("" (assert)
            (("" (expand "tree?")
              (("" (skosimp*)
                (("" (lemma "deg_1_sing")
                  (("" (inst?)
                    (("" (inst - "v!1")
                      (("" (assert)
                        (("" (expand "in?")
                          (("" (expand "empty?")
                            (("" (inst?)
                              (("" (expand "member") (("" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((empty? const-decl "bool" digraphs_ nil) (tree? def-decl "bool" trees nil)
    (deg_1_sing formula-decl nil digraph_deg nil)
    (in? const-decl "bool" pairs structures)
    (member const-decl "bool" sets nil) (empty? const-decl "bool" sets nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (predigraph type-eq-decl nil digraph_def nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (digraph type-eq-decl nil digraph_def nil)
    (card_empty? formula-decl nil finite_sets nil)
    (digraph_verts const-decl "[digraph -> [T -> bool]]" digraphs_imp nil)
    (T formal-type-decl nil trees nil))
   shostak)
  (tree_nonempty-4 "" 3300809694
   ("" (skosimp*)
    (("" (expand "empty?")
      (("" (use "card_empty?[T]")
        (("" (iff)
          (("" (assert)
            (("" (expand "tree?")
              (("" (skosimp*)
                (("" (expand "root?")
                  (("" (lemma "deg_1_sing")
                    (("" (inst?)
                      (("" (inst - "v!1")
                        (("" (assert)
                          (("" (expand "in?")
                            (("" (expand "empty?")
                              (("" (inst?)
                                (("" (expand "member") (("" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((empty? const-decl "bool" digraphs_ nil)
    (deg_1_sing formula-decl nil digraph_deg nil)
    (in? const-decl "bool" pairs structures)
    (predigraph type-eq-decl nil digraph_def nil)
    (digraph type-eq-decl nil digraph_def nil)
    (digraph_verts const-decl "[digraph -> [T -> bool]]" digraphs_imp nil))
   shostak)
  (tree_nonempty-3 "" 3300462180
   ("" (skosimp*)
    (("" (expand "empty?")
      (("" (use "card_empty?[T]")
        (("" (iff)
          (("" (assert)
            (("" (expand "tree?")
              (("" (split)
                (("1" (flatten)
                  (("1" (use "nonempty_singleton[T]")
                    (("1" (assert)
                      (("1" (expand "nonempty?") (("1" (propax) nil nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (skosimp*)
                  (("2" (expand "tree?")
                    (("2" (split)
                      (("1" (flatten)
                        (("1" (use "nonempty_singleton[T]")
                          (("1" (assert)
                            (("1" (expand "nonempty?")
                              (("1" (expand "del_vert")
                                (("1" (expand "remove")
                                  (("1" (expand "member")
                                    (("1" (use "nonempty_singleton[T]")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "nonempty?")
                                          (("1"
                                            (expand "empty?")
                                            (("1"
                                              (skosimp*)
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (expand "member")
                                                  (("1" (flatten) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (expand "empty?")
                        (("2" (skosimp*)
                          (("2" (inst?)
                            (("2" (expand "member") (("2" (postpone) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((deg_1_sing formula-decl nil digraph_deg nil)
    (in? const-decl "bool" pairs structures))
   shostak)
  (tree_nonempty-2 "" 3300130046
   ("" (induct "G" 1 "tree?_induction[T]")
    (("" (skosimp*)
      (("" (split)
        (("1" (flatten)
          (("1" (assert)
            (("1" (expand "empty?")
              (("1" (expand "singleton?")
                (("1" (skosimp* t)
                  (("1" (expand "empty?")
                    (("1" (expand "member")
                      (("1" (inst?) (("1" (inst?) nil nil)) nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (skosimp*)
          (("2" (assert)
            (("2" (expand "empty?")
              (("2" (expand "empty?")
                (("2" (expand "member")
                  (("2" (skosimp*)
                    (("2" (inst - "x!1")
                      (("2" (expand "del_vert")
                        (("2" (expand "remove")
                          (("2" (expand "member") (("2" (flatten) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((in? const-decl "bool" pairs structures)
    (deg_1_sing formula-decl nil digraph_deg nil))
   shostak)
  (tree_nonempty-1 nil 3300116030
   ("" (skosimp*)
    (("" (expand "empty?")
      (("" (use "card_empty?[T]")
        (("" (iff)
          (("" (assert)
            (("" (expand "tree?")
              (("" (skosimp*)
                (("" (lemma "deg_1_sing")
                  (("" (inst?)
                    (("" (inst - "v!1")
                      (("" (assert)
                        (("" (expand "in?")
                          (("" (expand "empty?")
                            (("" (inst?)
                              (("" (expand "member") (("" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((del_vert const-decl "digraph[T]" digraph_ops nil)) nil)))

