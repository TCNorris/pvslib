(c_weighted_digraphs
 (IMP_weighted_digraphs__TCC1 0
  (IMP_weighted_digraphs__TCC1-1 nil 3656960608
   ("" (expand "digraph_edges") (("" (grind) nil nil)) nil)
   ((wgd_dg const-decl "[wgd_type -> digraph_type]" c_weighted_digraphs_def
     nil)
    (Weight formal-type-decl nil c_weighted_digraphs nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (associative? const-decl "bool" operator_defs nil)
    (+ formal-const-decl "{f: [[Weight, Weight] -> Weight] | associative?(f)}"
       c_weighted_digraphs nil)
    (identity? const-decl "bool" operator_defs nil)
    (zero_ct formal-const-decl "{zero: Weight | identity?(+)(zero)}"
     c_weighted_digraphs nil)
    (edges const-decl "bool" c_digraphs_def nil)
    (vert const-decl "bool" c_digraphs_def nil)
    (T formal-type-decl nil c_weighted_digraphs nil)
    (digraph_edges const-decl "[digraph_type -> [T, T -> bool]]"
     c_digraphs_imp nil))
   nil
   (IMP_weighted_digraphs_ subtype
    "c_weighted_digraphs_def[c_weighted_digraphs.T, c_weighted_digraphs.Weight, c_weighted_digraphs.+, c_weighted_digraphs.zero_ct].get_wgt"
    "[[W: wgd_type[T, Weight, +, zero_ct], (c_digraphs_imp[c_weighted_digraphs.T].digraph_edges(c_weighted_digraphs_def[c_weighted_digraphs.T, c_weighted_digraphs.Weight, c_weighted_digraphs.+, c_weighted_digraphs.zero_ct].wgd_dg(W)))] -> c_weighted_digraphs.Weight]")))
 (IMP_weighted_digraphs__TCC2 0
  (IMP_weighted_digraphs__TCC2-1 nil 3657991166
   ("" (use "cdigraphs_implement_digraphs_") nil nil)
   ((T formal-type-decl nil c_weighted_digraphs nil)
    (cdigraphs_implement_digraphs_ formula-decl nil c_digraphs_imp nil))
   nil
   (IMP_weighted_digraphs_ assuming
    "weighted_digraphs_[c_weighted_digraphs.T, c_weighted_digraphs.Weight, c_weighted_digraphs.+, c_weighted_digraphs.zero_ct, digraph_type[T], c_digraphs_imp[c_weighted_digraphs.T].digraph_verts, c_digraphs_imp[c_weighted_digraphs.T].digraph_edges, c_digraphs_imp[c_weighted_digraphs.T].digraph_size, c_digraphs_imp[c_weighted_digraphs.T].digraph_make, wgd_type[T, Weight, +, zero_ct], c_weighted_digraphs_def[c_weighted_digraphs.T, c_weighted_digraphs.Weight, c_weighted_digraphs.+, c_weighted_digraphs.zero_ct].wgd_dg, c_weighted_digraphs_def[c_weighted_digraphs.T, c_weighted_digraphs.Weight, c_weighted_digraphs.+, c_weighted_digraphs.zero_ct].get_wgt, list_adt[[c_weighted_digraphs.T, c_weighted_digraphs.T, c_weighted_digraphs.Weight]].list, c_weighted_digraphs_def[c_weighted_digraphs.T, c_weighted_digraphs.Weight, c_weighted_digraphs.+, c_weighted_digraphs.zero_ct].has_key?, c_weighted_digraphs_def[c_weighted_digraphs.T, c_weighted_digraphs.Weight, c_weighted_digraphs.+, c_weighted_digraphs.zero_ct].get_value, c_weighted_digraphs_def[c_weighted_digraphs.T, c_weighted_digraphs.Weight, c_weighted_digraphs.+, c_weighted_digraphs.zero_ct].all_edges_in_map?, c_weighted_digraphs_def[c_weighted_digraphs.T, c_weighted_digraphs.Weight, c_weighted_digraphs.+, c_weighted_digraphs.zero_ct].make_c_wdg].weighted_digraphs_"
    "concretedigraph_implements_abstractdigraph: ASSUMPTION digraphs_abs[weighted_digraphs_.T, weighted_digraphs_.ConcreteDigraph, weighted_digraphs_.vert, weighted_digraphs_.edges, weighted_digraphs_.size, weighted_digraphs_.make].correct_implementation")))
 (IMP_weighted_digraphs__TCC3 0
  (IMP_weighted_digraphs__TCC3-1 nil 3658089688
   ("" (use "cwdigraphs_implement_wdigraphs_") nil nil)
   ((zero_ct formal-const-decl "{zero: Weight | identity?(+)(zero)}"
     c_weighted_digraphs nil)
    (identity? const-decl "bool" operator_defs nil)
    (+ formal-const-decl "{f: [[Weight, Weight] -> Weight] | associative?(f)}"
       c_weighted_digraphs nil)
    (associative? const-decl "bool" operator_defs nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Weight formal-type-decl nil c_weighted_digraphs nil)
    (T formal-type-decl nil c_weighted_digraphs nil)
    (cwdigraphs_implement_wdigraphs_ formula-decl nil c_weighted_digraphs_imp
     nil))
   nil
   (IMP_weighted_digraphs_ assuming
    "weighted_digraphs_[c_weighted_digraphs.T, c_weighted_digraphs.Weight, c_weighted_digraphs.+, c_weighted_digraphs.zero_ct, digraph_type[T], c_digraphs_imp[c_weighted_digraphs.T].digraph_verts, c_digraphs_imp[c_weighted_digraphs.T].digraph_edges, c_digraphs_imp[c_weighted_digraphs.T].digraph_size, c_digraphs_imp[c_weighted_digraphs.T].digraph_make, wgd_type[T, Weight, +, zero_ct], c_weighted_digraphs_def[c_weighted_digraphs.T, c_weighted_digraphs.Weight, c_weighted_digraphs.+, c_weighted_digraphs.zero_ct].wgd_dg, c_weighted_digraphs_def[c_weighted_digraphs.T, c_weighted_digraphs.Weight, c_weighted_digraphs.+, c_weighted_digraphs.zero_ct].get_wgt, list_adt[[c_weighted_digraphs.T, c_weighted_digraphs.T, c_weighted_digraphs.Weight]].list, c_weighted_digraphs_def[c_weighted_digraphs.T, c_weighted_digraphs.Weight, c_weighted_digraphs.+, c_weighted_digraphs.zero_ct].has_key?, c_weighted_digraphs_def[c_weighted_digraphs.T, c_weighted_digraphs.Weight, c_weighted_digraphs.+, c_weighted_digraphs.zero_ct].get_value, c_weighted_digraphs_def[c_weighted_digraphs.T, c_weighted_digraphs.Weight, c_weighted_digraphs.+, c_weighted_digraphs.zero_ct].all_edges_in_map?, c_weighted_digraphs_def[c_weighted_digraphs.T, c_weighted_digraphs.Weight, c_weighted_digraphs.+, c_weighted_digraphs.zero_ct].make_c_wdg].weighted_digraphs_"
    "concretewd_implements_abstractwd: ASSUMPTION weighted_digraphs_abs[weighted_digraphs_.T, weighted_digraphs_.Weight, weighted_digraphs_.add_w, weighted_digraphs_.zero_w, weighted_digraphs_.ConcreteDigraph, weighted_digraphs_.vert, weighted_digraphs_.edges, weighted_digraphs_.size, weighted_digraphs_.make, weighted_digraphs_.wdg, weighted_digraphs_.dg, weighted_digraphs_.get_wgt, weighted_digraphs_.WeightsMap, weighted_digraphs_.weighted_edge?, weighted_digraphs_.get_weight, weighted_digraphs_.weight_map?, weighted_digraphs_.make_wdg].correct_implementation"))))

