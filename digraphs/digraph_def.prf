(digraph_def
 (make_TCC1 0
  (make_TCC1-1 nil 3657965491 ("" (subtype-tcc) nil nil)
   ((AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil) (T formal-type-decl nil digraph_def nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   nil
   (make subtype "(# vert := digraph_def.vert, edges := digraph_def.edges #)"
    "digraph"))))

