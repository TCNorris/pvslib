
homomorphisms_def
         [T: TYPE+, s:[T,T -> T],
          U: TYPE+, p:[U,U -> U]] : THEORY
BEGIN


 	IMPORTING algebra@groupoid_def[T,s],
	          algebra@groupoid_def[U,p]

       R:  VAR (groupoid?[T,s])
       S:  VAR (groupoid?[U,p])

%-------------------------------------------------------------------------------

   homomorphism?(R, S)(phi: [(R) -> (S)]): bool =
      FORALL(a,b: (R)): phi(s(a,b)) = p(phi(a),phi(b))

   monomorphism?(R, S)(phi: [(R) -> (S)]): bool = 
            injective?(phi) AND homomorphism?(R,S)(phi)

   epimorphism?(R, S)(phi: [(R) -> (S)]): bool = 
            surjective?(phi) AND homomorphism?(R,S)(phi)

   isomorphism?(R, S)(phi: [(R) -> (S)]): bool = 
            monomorphism?(R, S)(phi) AND epimorphism?(R, S)(phi)

%-------------------------------------------------------------------------------

   homomorphism(R,S) : TYPE = (homomorphism?(R,S))
   monomorphism(R,S) : TYPE = (monomorphism?(R,S))
   epimorphism(R,S)  : TYPE = (epimorphism?(R,S))
   isomorphism(R,S)  : TYPE = (isomorphism?(R,S))

%-------------------------------------------------------------------------------

END homomorphisms_def
%-------------------------------------------------------------------------------
