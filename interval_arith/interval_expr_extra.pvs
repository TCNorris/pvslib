interval_expr_extra: THEORY
BEGIN

  IMPORTING interval_expr,
            interval_sqrt

  FLOOR(expr:RealExpr): RealExpr =
    FUN(Any?,floor,Floor,expr)

  MAX(expr1,expr2:RealExpr) : RealExpr =
    FUN2(Any?,Any2?,
    LAMBDA(x,y:real):max(x,y),
    LAMBDA(X,Y:Interval):[| max(lb(X),lb(Y)), max(ub(X),ub(Y)) |],
    expr1,expr2)

  MIN(expr1,expr2:RealExpr) : RealExpr =
    FUN2(Any?,Any2?,
    LAMBDA(x,y:real):min(x,y),
    LAMBDA(X,Y:Interval):[| min(lb(X),lb(Y)), min(ub(X),ub(Y)) |],
    expr1,expr2)

  IMPORTING reals@reals_safe_ops
  AUTO_REWRITE+ sqrt_safe_eq
  n   : VAR nat
  
  Sqrt_Inclusion : JUDGEMENT
    Sqrt(n) HAS_TYPE (Inclusion?(NonNeg?,sqrt_safe))

  Sqrt_Fundamental : JUDGEMENT
    Sqrt(n) HAS_TYPE (Fundamental?(NonNeg?))

  SQRT_n(n)(expr:RealExpr): RealExpr =
    FUN(NonNeg?,sqrt_safe,Sqrt(n),expr)

END interval_expr_extra
