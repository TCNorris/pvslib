interval_ulp: THEORY
BEGIN


  %% This theory should be called interval_Sulp

  %% the theories to use are the instantiated ones.

  IMPORTING interval_expr,
  	    float@ieee754sp,
  	    lnexp@ln_approx

  n: VAR nat
  I: VAR Interval
  x: VAR real

  Ulp_sp(I): Interval =
    IF NonNeg?(I) THEN [| ulp_sp(lb(I)) , ulp_sp(ub(I)) |]
    ELSIF Neg?(I) THEN [| ulp_sp(ub(I)) , ulp_sp(lb(I)) |]
    ELSE  [| ieee754radix ^ Sminexp, max(ulp_sp(ub(I)) , ulp_sp(lb(I))) |] ENDIF

  X,Y: VAR Interval

  Ulp_sp_inclusion : LEMMA
    x ## X IMPLIES 
    ulp_sp(x) ## Ulp_sp(X)

  Ulp_sp_fundamental : LEMMA
    Proper?(X) AND
    X << Y IMPLIES
    Ulp_sp(X) << Ulp_sp(Y)

  Ulp_sp_Inclusion : JUDGEMENT
    Ulp_sp HAS_TYPE (Inclusion?(PreTrue,ulp_sp))

  Ulp_sp_Fundamental : JUDGEMENT
    Ulp_sp HAS_TYPE (Fundamental?(PreTrue))

    
  IMPORTING interval_expr
 
  ULP(expr: RealExpr): MACRO RealExpr = FUN(PreTrue,ulp_sp,Ulp_sp,expr)

END interval_ulp
